{
  "hash": "431586cf1f269e466fcd93b749ec3c75",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data, DataViz, and Stats with the Stars\"\nformat: \n  revealjs: \n    chalkboard: false\n    incremental: false\n    preview-links: true\n    scrollable: true\n    slide-number: true\n    show-slide-number: print\n    embed-resources: true\n    touch: true\n    controls: true\n    controls-layout: bottom-right\n    footer: \"Arvind V.| VizChitra2025 | June 2025\"\n    html-math-method: katex\n    include-in-header: \n      - text: '<script src=\"https://cdn.jsdelivr.net/npm/d3@7\"></script>'\n###\n    webcam: \n      toggleKey: \"W\" # Change the key to toggle the video\n      enabled: false # Enable the video stream directly at startup. Pressing [W] will still allow you to toggle it.\n      persistent: false # Keep the stream open (the camera active) after opening it once. If it is enabled the plugin will keep the camera on even if the video is not used. This avoids repeat permission request dialogs.\n\n###\n    pointer:\n      key: \"q\"\n      color: \"green\"\n      pointerSize: 48\n      alwaysVisible: false\n\n###\nrevealjs-plugins:\n  - animate-graph\n  - revealjs-text-resizer\n  - pointer\n  - excalidraw\n  - webcam\n#  - drop # console drop-down # not working at all\n#  - spotlight\n#  - subtitles # works, but not needed\n\nfilters: \n   - highlight-text #colour #bg-colour #fg\n   - gadenbuie/tachyons\n---\n\n## Agenda!\n\n-   Orange? What is this Orange stuff, anyhow?\n-   Throwing it All Away with Brad Pitt: Data Summaries\n-   Counting Letters with Sherlock Holmes: Bar Charts\n-   Nursery Rhymes with Ben Affleck: Line Charts\n-   Being a Mermaid with Katie Ledecky: Box Plots\n-   Jack and Rose lived happily ever after: Mosaic Plots\n-   The Art of Surprise with Gabbar Singh: Permutation Tests\n\n::: notes\n{{< downloadthis data/penguins.csv dname=\"penguins.csv\" label=\"Download the Penguins data\" icon=\"database-fill-down\" type=\"info\" >}}\n\ndatasaurus_dozen %>% download_this(output_name = \"datasaurus\", output_extension = \".csv\", button_label = \"DataSaurus Dirty Dozen\", button_type = \"default\", icon = \"fa fa-save\",   class = \"hvr-sweep-to-left\")\n\n:::\n\n---\n\n\n## Setup {visibility=\"hidden\"}\n\n::: {.cell}\n\n:::\n\n\n---\n\n## Orange? What is this Orange stuff, anyhow? {.center}\n\n---\n\n## Installing and Getting Used to Orange\n\nsome stuff here\n\n---\n\n## Brad Pitt: Throwing it All Away {.center}\n\n---\n\n## Brad Pitt: Throwing it All Away\n\n<center>\n{{< video https://youtu.be/PlKDQqKh03Y height=540 width=760 title='None of them!'>}}\n</center>\n\n::: notes\nWhat was Brad Pitt throwing away? He was throwing away the individuality of the measures, subsuming them to one summary. This is a big idea in statistics, and it is called aggregation.\n:::\n\n---\n\n## Brad Pitt: Throwing it All Away{.smaller}\n\n:::: {.columns}\n\n::: {.column width=\"65%\"}\n\nSteven Stigler (2016) in “The Seven Pillars of Statistical Wisdom”:\n\n-   One of the Big Ideas in Statistics is: ***Aggregation***\n-   How is it revolutionary? \n- By stipulating that, given a number of observations, [you can actually gain information by throwing information away]{.bg-light-red .black}\n-   In taking a simple arithmetic mean, we discard the individuality of the measures, subsuming them to one summary.\n\n:::\n\n::: {.column width=\"30%\"}\n![](../../../../materials/images/SevenPillarsStigler.jpeg){width=300}\n:::\n\n::::\n\n\n------------------------------------------------------------------------\n\n## Brad Pitt: Throwing it All Away\n\n### What was he throwing away?\n\n::::: columns\n::: {.column width=\"45%\"}\ndata table here\n:::\n\n::: {.column width=\"45%\"}\n\"OBP\" as aggregate column explanation here\n:::\n:::::\n\n------------------------------------------------------------------------\n\n## Counting Letters with Sherlock Holmes {.center}\n\n------------------------------------------------------------------------\n\n## Sherlock Holmes: The Adventure of the Dancing Men\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\nIn the Sherlock Holmes story, [The Adventure of the Dancing Men](https://www.gutenberg.org/files/108/108-h/108-h.htm#chap03), a criminal known to one of the characters communicates with her using a childish/child-like drawing which looks like this:\n:::\n\n::: {.column width=\"60%\"}\n![Am Here, Abe Slaney](../../../../materials/images/holmes-message-1.jpg)\n\nHow would Holmes decipher this message?\n:::\n\n::::\n\n\n------------------------------------------------------------------------\n\n## Sherlock Holmes: The Adventure of the Dancing Men\n\n:::: {.columns}\n\n::: {.column width=\"55%\"}\n- Using Conjectures: Symbols -> Letters\n  - Holmes deduces that the most common letter in the message is \"E\"\n  - He then deduces that the second most common letter is \"T\"\n\n:::\n::: {.column width=\"40%\"}\n![Zipf's Law](../../../../materials/images/zipf.png){height=200}\n\n- Based on well-known ***Counts*** of letters (Zipf's Law)\n\n:::\n\n::::\n---\n\n## What Charts work for counting?\n \n| Variable #1 | Variable #2 | Chart Names |              Chart Shape              |\n|:-----------:|:-----------:|:-----------:|:-------------------------------------:|\n|    Qual    |    None     |  Bar Chart  | {{< iconify ion bar-chart size=4x >}} |\n\n::: {.smaller}\nBar are used to show \"counts\" and \"tallies\" with respect to Qual variables. For instance, in a survey, how many people vs Gender? In a Target Audience survey on *Weekly Consumption*, how many low, medium, or high expenditure people?\n:::\n\n---\n\n## Where's our Data?\n\nOK,\nLet's get some data to count: \n\n::: {.cell}\n\n:::\n\n\n<a href=\"./data/penguins.csv\"><i class=\"fas fa-save\"></i> Penguins Data </a>\n\nAnd let's for now use a pre-set Workflow in Orange\n\n<a href=\"./Orange/barchart.ows\"><i class=\"fas fa-save\"></i> Barchart Workflow </a>\n\n\n\n---\n\n## Workflow#1: Bar Charts\n\n- We will look at the data\n- Make a Data dictionary\n- Identify the Qual and Quant variables\n- Prepare Counts and Bar Charts wrt Qual variables\n- In Orange! Point, Click, and See!\n\n---\n\n### {{< iconify streamline dictionary-language-book-solid >}} Data Dictionary\n\n- `species`: Species of the penguin (Qual)\n- `island`: Island where the penguin was observed (Qual)\n- `bill_length_mm`: Length of the penguin's bill in millimeters (Quant)\n- `bill_depth_mm`: Depth of the penguin's bill in millimeters (Quant)\n- `flipper_length_mm`: Length of the penguin's flipper in millimeters (Quant)\n- `body_mass_g`: Mass of the penguin in grams (Quant)\n\n\n---\n\n## {{< iconify material-symbols query-stats >}} Counting our Data\n\n\n\n:::: {.columns}\n\n::: {.column width=\"55%\"}\n::: callout-note\n### Research Question\nHow many penguins of different `species` are there in the dataset?\n:::\n:::\n::: {.column width=\"55%\"}\n\n:::\n::::\n\n---\n\n## {{< iconify mingcute thought-line >}} Wait, But Why?{.smaller}\n\n-   Always ~~count your chickens~~ count your data before you model or infer!\n-   Counts first give you an absolute sense of how much data you have.\n-   Counts by different Qual variables give you a sense of the **combinations** you have in your data: $(Male/Female) * (Species) * (Island)$ (Say 2 \\* 3 \\* 3 = 18 combinations in the data)\n-   Counts then give an idea whether your data is lop-sided: do you have too many observations of one category(level) and too few of another category(level) in a given Qual variable?\n-   Balance is important in order to draw decent inferences\n-   And for ML algorithms, to train them properly.\n-   Since the X-axis in bar charts is *Qualitative* (the bars don't touch, remember!) it is possible to sort the bars at will.\n\n\n\n\n---\n\n\n\n\n## Nursery Rhymes with Ben Affleck {.center}\n\n---\n\n## Who was Solomon Grundy?\n\n{{< downloadthis data/US_births_2000-2014_SSA.csv dname=\"US_births_2000-2014_SSA\" label=\"Download the US Births data\" icon=\"database-fill-down\" type=\"info\" >}}\n---\n\n## Who was Solomon Grundy?\n\n---\n\n## Being a Mermaid with Katie Ledecky {.center}\n\n---\n\n## Being a Mermaid with Katie Ledecky\n\n---\n\n## Jack and Rose lived happily ever after {.center}\n\n---\n\n## Jack and Rose lived happily ever after\n\n---\n\n## The Art of Surprise with Gabbar Singh {.center}\n\n\n---\n\n## The Art of Surprise with Gabbar Singh\nWhy is this slide always showing up?\n\n---\n\n\n---\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}