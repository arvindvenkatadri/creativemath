{
  "hash": "95e879c3d56309eb3d1c63e2bf1f2ccc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: <iconify-icon icon=\"mdi:reiterate\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> <iconify-icon icon=\"gravity-ui:function\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> Additive Sound Synthesis\nsubtitle: \"\"\nsubject: \"\"\nabstract: \"\"\ndate: 23/Jan/2025\ndate-modified: \"2025-01-25\"\norder: 12\ncategories:\n  - Component Addition\n  - Time-varying Parameters\nbibliography: \n  - grateful-refs.bib\ncitation: true\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n## Introduction\n\nSo we understand the Fourier Transform: we can express any waveform as a sum of sinusoids that are appropriately weighted and are at discrete multiples of a chosen \"fundamental frequency\".\n\nHow do we use these ideas to synthesize sound? \n\n\n\n\n\n\n\n\n\n\n\n\n{{< video https://youtu.be/Bk8rLzzSink?list=PLRqwX-V7Uu6aFcVjlDAkkGIixw70s7jpW >}}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## {{< iconify icons8 idea >}} Inspiration\n\n\n## What is Additive Synthesis?\n\nFirst we need to get used to the idea of an [**oscillator**](https://p5js.org/reference/p5.sound/p5.Oscillator/). \n\nAn *oscillator* is a source: it generates waveforms that we perceive as sound. \n\nIn Fourier series, we normally use just *sine wave oscillators*, and use many of them to add up to obtain the wave form we need. \n\nLet us play with a few waveform types here:\n\n<https://musiclab.chromeexperiments.com/Oscillators/>\n\nEach of these waveforms, by the Fourier series, is the **sum of an ( infinite) number** of **sine wave** outputs. \n\n## Design Principles for Additive Synthesis\n\n\n## Additive Synthesis with Code\n\n::: {.panel-tabset .nav-pills style=\"background: whitesmoke; \"}\n\n### Using p5.js\n\n### Using R\n\n:::\n\n\n\n## {{< iconify mingcute thought-line >}} Wait, But Why?\nTo be Written Up.\n\n\n## {{< iconify ooui references-ltr >}} References\n\n1. James Moorer. (Nov 1976) *The Synthesis of Complex Audio Spectra by Means of Discrete Summation Formulae*. Journal of the Audio Society. [PDF](../../../../../materials/pdfs/Moorer-Sine-Summation.pdf)\n1. Jean-Claude Risset, Max V. Matthews. (Feb 1969). *Analysis of Musical Instrument Tones*. Physics Today. <https://sci-hub.se/https://doi.org/10.1063/1.3035399>\n1. p5.Sound Tutorial.<https://pdm.lsupathways.org/6_resources/7_soundandmusic/p5.sound/>\n1. Sound in p5.js Playlist. <https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aFcVjlDAkkGIixw70s7jpW>\n1. *Sounds with Tone.js*. <https://pdm.lsupathways.org/3_audio/>\n1. Mister Bomb. *p5.Sound project tutorials* <https://www.youtube.com/playlist?list=PLIsdHp2z9wFl7A1wWb2VmQUUojEGsKELE>\n1. *R package `gm`: the grammar of Music*. <https://cran.r-project.org/web/packages/gm/vignettes/gm.html>\n1. Phil Burk,Larry Polansky, Douglas Repetto, Mary Roberts\nDan Rockmore. *Music and Computers: A Theoretical and Historical Approach* <https://musicandcomputersbook.com>\n\n\n::: {#refs style=\"font-size: 60%;\"}\n###### {{< iconify lucide package-check >}} R Package Citations\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nPackage      Version   Citation    \n-----------  --------  ------------\nambient      1.0.2     @ambient    \ngm           2.0.0     @gm         \nmosaicCalc   0.6.4     @mosaicCalc \nplot3D       1.4.1     @plot3D     \n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}