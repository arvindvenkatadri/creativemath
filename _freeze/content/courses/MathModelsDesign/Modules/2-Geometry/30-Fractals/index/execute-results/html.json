{
  "hash": "083a29ffbee3bfb13bd01e4edfa3a619",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Fractals\nsubtitle: \"\"\nsubject: \"Shapes and Code\"\nabstract: \"A Geometric Jewellery Store\"\ndate: 02/May/2024\ndate-modified: \"2024-12-18\"\norder: 100\ncategories:\n- Iterated Functions\n- Fractals\n- Mandelbrot\n- Julia\nbibliography: \n  - grateful-refs.bib\ncitation: true\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n\n:::: pa4\n::: {.athelas .ml0 .mt0 .pl4 .black-90 .bl .bw2 .b--blue}\n[\"Write Something interesting here\"]]{.f5 .f4-m .f3-l .lh-copy .measure .mt0}\n\n[---]{.f6 .ttu .tracked .fs-normal}\n:::\n::::\n\n\n## {{< iconify icons8 idea >}} Inspiration: A Geometric Jewellery Store\n\n![Photo by\n<a href=\"https://unsplash.com/@kolyakorzh?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Mykola/Kolya\nKorzh</a> on\n<a href=\"https://unsplash.com/photos/brown-wooden-bird-house-ornament-HFogW6fHv4E?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>](images/featured.jpg)\n\n\n## An Introduction to Fractals\n\nLet us listen to the late great Benoit Mandelbrot, on the **Art of\nRoughness**.\n\n\n\n\n\n{{< video https://youtu.be/wQTnVEXAtBY >}}\n\n\n\n\n\n\n\n\n\n### Julia, and Julia, and still more Julia....\n\n\n\n\n\n{{< video https://youtu.be/2AZYZ-L8m9Q >}}\n\n\n\n\n\n\n\n\n\n\n### Jewellery Shopping with Mandelbrot\n\nEver gone shopping for jewellery? How is the place organized? That is a\ngood metaphor for how Mandelbrot Set is generated!!\n\n\n\n\n\n{{< video https://youtu.be/8ma6cV6fw24 >}}\n\n\n\n\n\n\n\n\n<iframe width=\"100%\" height=\"640\" frameborder=\"0\" src=\"https://observablehq.com/embed/@mcmcclur/julia-sets-and-the-mandelbrot-set?cells=topmatter%2Cwidget%2Cjulia_svg\">\n\n</iframe>\n\n## Fractals with Code\n\n::: {.panel-tabset .nav-pills style=\"background: whitesmoke;\"}\n\n### Using p5.js\n\nFollowing the development at [Koch Curve](https://natureofcode.com/fractals/#the-koch-curve):\n\n\n### Using R\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(blogdown)\nlibrary(tidyverse)\nlibrary(ggformula)\n###\nlibrary(LindenmayeR)\nlibrary(LearnGeom)\nlibrary(TurtleGraphics)\n###\nlibrary(mosaicCalc) # Analytic Calculus\nlibrary(ambient) # Noise generation in R\nlibrary(plot3D) # 3D plots for explanation\nlibrary(caracas)\nlibrary(downloadthis)\nlibrary(knitr)\nlibrary(kableExtra)\n## Markdown boiler plate stuff!!\n# ![An Elephant](elephant.png){#fig-elephant}\n# This is illustrated well by @fig-elephant.\n#\n# ### Figure Panel Divs\n#     ::: {#fig-elephants layout-ncol=2}\n#     ![Surus](surus.png){#fig-surus}\n#     ![Hanno](hanno.png){#fig-hanno}\n#      Famous Elephants\n#     :::\n#     Adding download buttons\n#     data that has been read in\n#     {{< downloadthis ../../../../materials/Data/housing_train.csv dname=\"house_prices\" label=\"Download the House Prices Dataset\" icon=\"database-fill-down\" type=\"info\" >}}\n#    existing file\n#    {{< downloadthis Orange/grouped-summaries.ows dname=\"grouped_summaries\" label=\"Download the Orange Workflow\" icon=\"database-fill-down\" type=\"info\" >}}\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n#### Koch Snowflake\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_min <- -10\nx_max <- 10\ny_min <- -12\ny_max <- 12\nCoordinatePlane(x_min, x_max, y_min, y_max)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create three points, to make a triangle\nP1 <- c(-5, 0) # points\nP2 <- c(5, 0)\nP3 <- c(0, 10)\n\n# Parameters for a Koch Fractal\n# Iterative Function\nangle <- 60 # Angle of new linesegments\ncut1 <- 1 / 3 # location along existing line segment\ncut2 <- 2 / 3 # location along existing line segment\nf <- 1 # Scale factor. Positive\nit <- 6\nFractalSegment(P1, P2, angle, cut1, cut2, f, it)\nFractalSegment(P1, P3, -60, cut1, cut2, f, it)\nFractalSegment(P3, P2, -60, cut1, cut2, f, it)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Koch-Fractals-1.png){width=2100}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Koch\nx_min <- -6\nx_max <- 6\ny_min <- -12\ny_max <- 6\nCoordinatePlane(x_min, x_max, y_min, y_max)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n\n```{.r .cell-code}\nP1 <- c(-5, 0)\nP2 <- c(5, 0)\nP3 <- c(0, -10)\nit <- 4\nKoch(P1, P2, it)\nKoch(P3, P1, it)\nKoch(P2, P3, it)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/simple-fractals-1.png){width=2100}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#########################################\n# Turtle Graphics stuff\n\nturtle_init(width = 150, height = 150, mode = \"cycle\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=2100}\n:::\n\n```{.r .cell-code}\nturtle_setpos(x = 50, y = 50)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-2.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-3.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-4.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-5.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-6.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-7.png){width=2100}\n:::\n\n```{.r .cell-code}\nturtle_do({\n  for (i in 1:180) {\n    turtle_forward(distance = 2)\n    turtle_right(angle = 2)\n  }\n})\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-8.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-9.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-10.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-11.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-12.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-13.png){width=2100}\n:::\n:::\n\n\n\n\n\n\n#### Fractal Tree with Turtle Graphics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfractal_tree <- function(s = 100, n = 2) {\n  if (n <= 1) {\n    turtle_forward(s)\n    turtle_up()\n    turtle_backward(s)\n    turtle_down()\n  } else {\n    turtle_forward(s)\n\n    a1 <- runif(1, 10, 60)\n    turtle_left(a1)\n    fractal_tree(s * runif(1, 0.25, 1), n - 1)\n    turtle_right(a1)\n\n    a2 <- runif(1, 10, 60)\n    turtle_right(a2)\n    fractal_tree(s * runif(1, 0.25, 1), n - 1)\n    turtle_left(a2)\n\n    turtle_up()\n    turtle_backward(s)\n    turtle_down()\n  }\n}\n\nset.seed(123)\nturtle_init(500, 600, \"clip\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=2100}\n:::\n\n```{.r .cell-code}\nturtle_do({\n  turtle_up()\n  turtle_backward(250)\n  turtle_down()\n  turtle_col(\"darkgreen\")\n  fractal_tree(100, 12)\n})\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-2.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-3.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-4.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-5.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-6.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-7.png){width=2100}\n:::\n:::\n\n\n\n\n\n\n### Using XaOS\n\nLet us use the XaOS software to make different kinds of fractals. A\nsample screen to explore the Mandelbrot fractal is here:\n\n<iframe width=\"100%\" height=\"1048\" frameborder=\"0\" src=\"https://xaos-project.github.io/XaoSjs/\">\n\n</iframe>\n\n\n:::\n\n\n\n## {{< iconify mingcute thought-line >}} <u>[Wait, But Why?](https://waitbutwhy.com)</u>\n\nTo be Written Up.\n\n## {{< iconify ooui references-ltr >}} References\n\n1.  Batty, M. and Longley, P. A. (1994) “Fractal Cities: A Geometry of\n    Form and Function”, London: Academic Press, 1994.\n1.  Wang H, Luo S, Luo T. Fractal characteristics of urban surface\n    transit and road networks: Case study of Strasbourg, France.\n    Advances in Mechanical Engineering. 2017;9(2).\n    <doi:10.1177/1687814017692289>\n1. Turtle Graphics in R: <https://cran.r-project.org/web/packages/TurtleGraphics/vignettes/TurtleGraphics.pdf> \n1.  <https://www.reddit.com/r/CitiesSkylines/comments/9r0y4e/grid_idea_im_working_on_fractal_squares/>\n1.  Menger Sponge:\n    <https://blogs.scientificamerican.com/roots-of-unity/a-few-of-my-favorite-spaces-the-menger-sponge/>\n1.  <http://fractalfoundation.org/resources/fractal-software/>\n\n\n::: {#refs style=\"font-size: 60%;\"}\n###### {{< iconify lucide package-check >}} R Package Citations\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nPackage      Version   Citation    \n-----------  --------  ------------\nambient      1.0.2     @ambient    \nmosaicCalc   0.6.4     @mosaicCalc \nplot3D       1.4.1     @plot3D     \n\n\n:::\n:::\n\n\n\n\n\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}