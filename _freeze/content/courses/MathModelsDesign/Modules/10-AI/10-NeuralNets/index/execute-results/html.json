{
  "hash": "8662b64a2cb7f0501896fbc9506f0cfd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: <iconify-icon icon=\"lucide:person-standing\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> <iconify-icon icon=\"mdi:human-female-dance\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> Working with Neural Nets\nsubtitle: \"Can you Dance?\"\nsubject: \"Using Classification to Detect Human Pose\"\nabstract: \"\"\ndate: 03/Dec/2024\ndate-modified: \"2024-12-07\"\norder: 170\ncategories:\n- Classification\n- CNN\n- ML\n- DL\nbibliography: \n  - grateful-refs.bib\ncitation: true\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n\n\n\n::: {#fig-Bharatanatyam layout-ncol=2}\n\n![](../../../../materials/images/Bharathanatyam_By_Ranjitha.jpg){#fig-pose}\n\n![](../../../../materials/images/Varnam.jpg){#fig-mudra-abhinaya}\n\n\n\nBharat Natyam Poses\n\n:::\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n#### Plot Theme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# https://stackoverflow.com/questions/74491138/ggplot-custom-fonts-not-working-in-quarto\n\n# Chunk options\nknitr::opts_chunk$set(\n  fig.width = 7,\n  fig.asp = 0.618, # Golden Ratio\n  # out.width = \"80%\",\n  fig.align = \"center\"\n)\n### Ggplot Theme\n### https://rpubs.com/mclaire19/ggplot2-custom-themes\n\ntheme_custom <- function() {\n  font <- \"Roboto Condensed\" # assign font family up front\n\n  theme_classic(base_size = 14) %+replace% # replace elements we want to change\n\n    theme(\n      panel.grid.minor = element_blank(), # strip minor gridlines\n      text = element_text(family = font),\n      # text elements\n      plot.title = element_text( # title\n        family = font, # set font family\n        # size = 20,               #set font size\n        face = \"bold\", # bold typeface\n        hjust = 0, # left align\n        # vjust = 2                #raise slightly\n        margin = margin(0, 0, 10, 0)\n      ),\n      plot.subtitle = element_text( # subtitle\n        family = font, # font family\n        # size = 14,                #font size\n        hjust = 0,\n        margin = margin(2, 0, 5, 0)\n      ),\n      plot.caption = element_text( # caption\n        family = font, # font family\n        size = 8, # font size\n        hjust = 1\n      ), # right align\n\n      axis.title = element_text( # axis titles\n        family = font, # font family\n        size = 10 # font size\n      ),\n      axis.text = element_text( # axis text\n        family = font, # axis family\n        size = 8\n      ) # font size\n    )\n}\n\n# Set graph theme\ntheme_set(new = theme_custom())\n#\n```\n:::\n\n\n\n\n\n## Introduction\n\nOne of our aims with Creative Coding is to of course make things interactive. Here we will apply the `ml5.js` library in `p5.js` to use an ML/DL algorithm called **Classification** to detect human poses in front of the camera. The code can then create unique experiences based on pose-detection with ML, and the subsequent code that responds to the user. \n\nWe will be following the ideas from here:\n\n#### Adavu Detection\n<https://docs.ml5js.org/#/reference/bodypose>\n\n#### Mudra Detection\n<https://docs.ml5js.org/#/reference/handpose>\n\n#### Bhava Detection\n<https://docs.ml5js.org/#/reference/facemesh>\n\n## But Wait! How does Classification Work?\n\nAh, peasants. Isn't it enough that you can dance?\n\nSo, we can perform Classification based on Machine Learning (ML) structured and algorithms such as:\n\n1) [Random Forests](https://arvindvenkatadri.com/teaching/5-ml-for-artists/3-classification-with-orange/). Also see [Google Decision Forests](https://developers.google.com/machine-learning/decision-forests). We will try to get an intuition into `bootstrapping` of variables in data, creating decision `trees`, and making *random selections* of variables from a dataset to create `random forests`. \n\nAnd there are Deep Learning (DL) structured and algorithms that allow us to do the same things, perhaps in a more \"black-box\" manner. We will peep into: \n\n1) [The Perceptron](../../Modules/182-Perceptron/index.qmd)\n2) [Neural Nets](../../Modules/180-NeuralNets/index.qmd)\n3) [Convolution](../../Modules/180-NeuralNets/index.qmd)\n3) [Convolutional Neural Nets](../../Modules/185-Convnet/index.qmd)\n\nHere, we will also try to build an intuitive sense of some of the technical terminology involved: `convolution`, `regression`, `activation`, `weighting`...and such terms that generally elude peasants. \n\n\n## {{< iconify icons8 idea >}} Inspiration\n\n\n\n## Convolutional Neural Networks\n\nLet us contemplate the structure of a CNN. \n\n#### Structure\n\n\n#### Convolution\n\nConsider that you life in a high rise apartment complex. Have you heard an ambulance go by? How does the sound of the siren change as the ambulance approaches towards your dwelling and then goes past it to get lost amidst the surrounding buildings again?\n\nThe siren's **emitted** sound is always the **same**. It is the local surroundings and the *geometry of the echoes* that brings the **same** sound to your ears again and again, but in altered form. The sound from the ambulance goes all around, hits on or other of the buildings, reflects, and comes back to your ears **after a delay** and **weighted** by the *strength* of the echo geometry.\n\nYou might consider that a CNN has several such *echo mechanisms* operating. Each pixel value (if you are dealing with image input) goes through a series of such *delayed weightings* which multiply the pixel input. The output of each pixel contributes in such fashion to the *activation* of that unit/layer of the CNN. \n\n\n\n{{< video https://youtu.be/vJiZqZRkIg8 >}}\n\n\n\n\n\n\n\n\n\n## Videos\n\n\n## {{< iconify mingcute thought-line >}} Wait, But Why?\n\n## {{< iconify ooui references-ltr >}} References\n\n1. *Digit Recognition with CNNs*. Interactive! <https://transcranial.github.io/keras-js/#/mnist-cnn>\n1. *CNN Convoluter*. <https://pwwang.github.io/cnn-convoluter/>\n1. *CNN Explainer: Learn Convolutional Neural Network (CNN) in your browser!*. <https://poloclub.github.io/cnn-explainer/>\n1. Deep Lizard. *Understanding Convolution Operations in Neural Networks*. <https://deeplizard.com/resource/pavq7noze2>\n1. Colah's Blog.(Apr 6, 2014). *Neural Networks, Manifolds, and Topology*. <https://colah.github.io/posts/2014-03-NN-Manifolds-Topology/>. Very simple and readable article. \n1. Andrej Karpathy. *ConvNetJS:Deep Learning in your browser*.<https://cs.stanford.edu/people/karpathy/convnetjs/>\n1. https://developers.google.com/machine-learning.<https://developers.google.com/machine-learning>\n1. Adit Deshpande. *A Beginner's Guide to CNNs*. <https://adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks/>\n1. The Neural Network Zoo - The Asimov Institute. <http://www.asimovinstitute.org/neural-network-zoo/>\n1. *Itâ€™s just a linear model:  neural  networks edition*. <https://lucy.shinyapps.io/neural-net-linear/>\n1. Machine Learning Tokyo: Interactive Tools for ML/DL, and Math. <https://github.com/Machine-Learning-Tokyo/Interactive_Tool>\n1. *Anyone Can Learn AI Using This Blog*. <https://colab.research.google.com/drive/1g5fj7W6QMER4-03jtou7k1t7zMVE9TVt#scrollTo=V8Vq_6Q3zivl>\n1. Practical Deep Learning for Coders: An Online Free Course.<https://course.fast.ai>\n1. Neural Networks Visual with [vcubingx](https://youtube.com/@vcubingx?feature=shared)\n  - Part 1. <https://youtu.be/UOvPeC8WOt8>\n  - Part 2. <https://www.youtube.com/watch?v=-at7SLoVK_I>\n\n\n#### LLMs\n1. Brendan Bycroft.*Visualizing LLMs*. <https://bbycroft.net/llm>\n1. Rohit Patel (20 Oct 2024). *Understanding LLMs from Scratch Using Middle School Math: A self-contained, full explanation to inner workings of an LLM*. <https://towardsdatascience.com/understanding-llms-from-scratch-using-middle-school-math-e602d27ec876>\n1. AI-powered reporting and annotation for radiology. <https://www.md.ai>\n\n#### Using R for DL\n\n1. Geeks for Geeks. *Convolutional Neural Nets in R*. <https://www.geeksforgeeks.org/convolutional-neural-networks-cnns-in-r/>\n1. David Selby (9 January 2018). Tea and Stats Blog. *Building a neural network from scratch in R*. <https://selbydavid.com/2018/01/09/neural-network/>\n1. *torch for R: An open source machine learning framework based on PyTorch.* <https://torch.mlverse.org>\n1. Akshaj Verma. (2020-07-24). *Building A Neural Net from Scratch Using R - Part 1 and Part 2*.\n<https://rviews.rstudio.com/2020/07/20/shallow-neural-net-from-scratch-using-r-part-1/> and \n<https://rviews.rstudio.com/2020/07/24/building-a-neural-net-from-scratch-using-r-part-2/>\n1. Ander Fernandez Jauregui. <https://anderfernandez.com/en/blog/how-to-create-neural-networks-with-torch-in-r/>\n1. <https://f0nzie.github.io/rtorch-minimal-book/>\n1.  *`torch` for R: An open source machine learning framework based on `PyTorch`*. <https://torch.mlverse.org/>\n\n## Textbooks\n\n1. Michael Nielsen. *Neural Networks and Deep Learning*. [Available Online](https://neuralnetworksanddeeplearning.com)\n1. The Little Book of Deep Learning. [Available Online](https://fleuret.org/francois/lbdl.html)\n1. Simone Scardapane. *Alice's Adventures in Diffferentiable WonderLand: A Primer on Designing Neural Networks*. <https://www.sscardapane.it/alice-book/>\n1. Parr and Howard (2018). *The Matrix Calculus You Need for Deep Learning*.<https://arxiv.org/abs/1802.01528>\n1. Zhang, Lipton, Li, Smola. *Dive into Deep Learning*. <https://www.d2l.ai/> \n\n\n::: {#refs style=\"font-size: 60%;\"}\n###### {{< iconify lucide package-check >}} R Package Citations\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nPackage       Version   Citation     \n------------  --------  -------------\nkeras         2.15.0    @keras       \nsafetensors   0.1.2     @safetensors \ntensorflow    2.16.0    @tensorflow  \n\n\n:::\n:::\n\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}