{
  "hash": "af0bcffdd762cd30c9c391d7b6f7f788",
  "result": {
    "markdown": "---\ntitle: \"Distributions in R\"\nauthor: \"Arvind Venkatadri\"\ndate: \"2023-01-12\"\noutput:\n  rmdformats::readthedown:\n    highlight: kate\n    toc: TRUE\n    toc_float: TRUE\n    toc_depth: 2\n    df_print: paged\n    number_sections: TRUE\n    code_folding: hide\n    code_download: TRUE\neditor_options: \n  markdown: \n    wrap: 72\n---\n\n\n# Introduction\n\nWe will create Distributions for data in R. As always, we will\nconsistently use the [**Project Mosaic**](https://mosaic-web.org)\necosystem of packages in R (`mosaic`, `mosaicData` and `ggformula`).\n\n\n::: {.cell}\n\n:::\n\n\n::: {#note .illustration style=\"background: beige\"}\nNote the standard method for all commands from the `mosaic` package:\n\ngoal( y \\~ x \\| z, data = mydata, ...)\n:::\n\n\n## Case Study -1: Dataset from `mosaicData`\n\nLet us inspect what datasets are available in the package `mosaicData`.\nType `data(package = \"mosaicData\")` in your Console to see what datasets\nare available.\n\nLet us choose the famous `Galton` dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"Galton\")\ninspect(Galton)\n#> \n#> categorical variables:  \n#>     name  class levels   n missing\n#> 1 family factor    197 898       0\n#> 2    sex factor      2 898       0\n#>                                    distribution\n#> 1 185 (1.7%), 166 (1.2%), 66 (1.2%) ...        \n#> 2 M (51.8%), F (48.2%)                         \n#> \n#> quantitative variables:  \n#>     name   class min Q1 median   Q3  max      mean       sd   n missing\n#> 1 father numeric  62 68   69.0 71.0 78.5 69.232851 2.470256 898       0\n#> 2 mother numeric  58 63   64.0 65.5 70.5 64.084410 2.307025 898       0\n#> 3 height numeric  56 64   66.5 69.7 79.0 66.760690 3.582918 898       0\n#> 4  nkids integer   1  4    6.0  8.0 15.0  6.135857 2.685156 898       0\n```\n:::\n\n\nThe data is described as:\n\n> A data frame with 898 observations on the following variables. \n- `family` a factor with levels for each family \n- `father` the father's height (in inches) \n- `mother` the mother's height (in inches) \n- `sex` the child's sex: F or M \n- `height` the child's height as an adult (in inches) \n- `nkids` the number of adult children in the family, or, at least, the number whose heights Galton recorded.\n\nThere is a lot of Description generated by the `mosaic::inspect()` command ! \nWhat can we say about the dataset and its variables? How big is the dataset? How many variables? What types are they, Quant or Qual? If they are Qual, what are the *levels*? Are they *ordered* levels? Discuss!\n\n\n### Stat Summaries\n\nAs Stigler said, **summaries** are the first thing to look at in data.\nLet us tabulate some quick stat summaries of the important variables in\n`Galton`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfavstats(~ father, data = Galton)\n#>  min Q1 median Q3  max     mean       sd   n missing\n#>   62 68     69 71 78.5 69.23285 2.470256 898       0\nfavstats(~ height | sex, data = Galton)\n#>   sex min   Q1 median   Q3  max     mean       sd   n missing\n#> 1   F  56 62.5   64.0 65.5 70.5 64.11016 2.370320 433       0\n#> 2   M  60 67.5   69.2 71.0 79.0 69.22882 2.631594 465       0\n```\n:::\n\n\nQ.1 How many families in the data for each value of `nkids`? \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntally(~ nkids, data = Galton)\n#> nkids\n#>   1   2   3   4   5   6   7   8   9  10  11  15 \n#>  32  40  66 116 140 114 112 128  63  40  32  15\n```\n:::\n\n\n\nQ.2. What is the break-up by `sex` of the child?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntally(~ nkids | sex, data = Galton)\n#>      sex\n#> nkids  F  M\n#>    1  15 17\n#>    2  18 22\n#>    3  31 35\n#>    4  48 68\n#>    5  61 79\n#>    6  57 57\n#>    7  61 51\n#>    8  61 67\n#>    9  32 31\n#>    10 24 16\n#>    11 17 15\n#>    15  8  7\n```\n:::\n\n\n\n### Distribution Plots\n\nWhat Questions might we have, that we could answer with a Distribution?\n\nQ.1 How many families based on the number of children?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\n# Convert the tally into a dataframe. See the difference!\nfamily_count <- tally( ~ nkids | sex, data = Galton) %>% \n  as_tibble() %>% \n  \n  # Convert nkids from char to int\n  mutate( nkids = as.integer(nkids))\nfamily_count\n#> # A tibble: 24 × 3\n#>   nkids sex       n\n#>   <int> <chr> <int>\n#> 1     1 F        15\n#> 2     2 F        18\n#> 3     3 F        31\n#> 4     4 F        48\n#> # … with 20 more rows\ngf_col(n ~ nkids | sex, data = family_count, fill = ~ sex, ylab = \"Number of Families\", xlab = \"Number of Kids / Family\")\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nQ.2: How are the children's heights distributed?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~ height, data = Galton) %>% \n  gf_vline(xintercept = mean(Galton$height))\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nQ.3: Is there a difference in height distributions between Male and Female children?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeasures <- favstats(~ height | sex, data = Galton)\nmeasures\n#>   sex min   Q1 median   Q3  max     mean       sd   n missing\n#> 1   F  56 62.5   64.0 65.5 70.5 64.11016 2.370320 433       0\n#> 2   M  60 67.5   69.2 71.0 79.0 69.22882 2.631594 465       0\n\ngf_histogram(~ height | sex, data = Galton) %>% \n  gf_vline(xintercept = ~ mean, data = measures)\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nQ.4: Are Mothers generally shorter than fathers?\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_density(~ father, data = Galton, fill = \"blue\", alpha = 0.3) %>% \n  gf_density( ~ mother, data = Galton, fill = \"red\", alpha = 0.3, xlab = \"Heights\")\n#> Warning: `stat(density)` was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `after_stat(density)` instead.\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\nQ.5: Are heights of children different based on the number of kids in the family? For Male and Female children?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_boxplot(height ~ sex | nkids, data = Galton)\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\nQ.6: Does the **mean** height of children in a family vary with the number of children in the family? ( family size) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean( height ~ sex | nkids, data = Galton) %>% as_tibble() # not very inspiring!\n#> # A tibble: 36 × 1\n#>   value\n#>   <dbl>\n#> 1  64.3\n#> 2  68.8\n#> 3  63.9\n#> 4  68.8\n#> # … with 32 more rows\nby_sex_nkids <- favstats( height ~ sex + nkids, data = Galton)\nby_sex_nkids # much better!\n#>    sex.nkids  min     Q1 median     Q3  max     mean       sd  n missing\n#> 1        F.1 60.0 62.600  64.00 65.600 69.5 64.32667 2.423535 15       0\n#> 2        M.1 64.5 67.000  69.00 70.000 75.0 68.84706 2.631330 17       0\n#> 3        F.2 57.0 62.250  64.50 65.425 68.0 63.92222 2.753726 18       0\n#> 4        M.2 66.0 67.125  68.75 70.925 73.0 68.83182 2.075798 22       0\n#> 5        F.3 60.0 63.000  64.50 67.100 70.5 64.89677 2.650344 31       0\n#> 6        M.3 64.0 68.000  70.50 71.750 73.0 69.66286 2.589354 35       0\n#> 7        F.4 60.0 63.000  64.50 66.000 69.2 64.45000 2.535703 48       0\n#> 8        M.4 63.0 67.000  69.00 71.000 73.5 69.05441 2.500115 68       0\n#> 9        F.5 60.0 62.500  64.00 65.500 68.0 63.97213 2.004173 61       0\n#> 10       M.5 64.0 68.500  70.00 71.500 78.0 69.94684 2.477428 79       0\n#> 11       F.6 60.5 63.000  64.50 66.000 70.5 64.59298 2.281906 57       0\n#> 12       M.6 62.5 67.700  69.70 72.000 76.5 69.63158 2.798479 57       0\n#> 13       F.7 56.0 62.000  64.00 65.200 69.0 63.65902 2.309933 61       0\n#> 14       M.7 60.0 68.000  70.00 70.700 79.0 69.37255 2.940141 51       0\n#> 15       F.8 57.5 62.000  63.50 66.000 70.0 63.95574 2.547190 61       0\n#> 16       M.8 64.5 67.000  69.00 70.500 74.0 69.02687 2.483923 67       0\n#> 17       F.9 59.0 62.000  64.00 65.000 69.0 63.94375 2.326140 32       0\n#> 18       M.9 63.0 68.000  69.20 70.200 73.0 68.69677 2.702281 31       0\n#> 19      F.10 61.0 63.000  65.00 65.000 66.0 64.18750 1.538015 24       0\n#> 20      M.10 63.0 64.925  67.50 69.250 75.0 67.54375 3.178672 16       0\n#> 21      F.11 62.0 63.000  63.70 66.000 69.2 64.32353 1.964857 17       0\n#> 22      M.11 66.5 68.250  69.00 70.500 73.0 69.41333 1.818110 15       0\n#> 23      F.15 57.0 59.500  61.50 63.250 65.0 61.25000 2.815772  8       0\n#> 24      M.15 65.0 65.600  66.00 66.750 68.0 66.24286 1.014655  7       0\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_col(mean ~ sex.nkids, data = by_sex_nkids)\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nHmm...not a *very* informative plot...\n\n## Case Study-2: Dataset from `NHANES`\n\nLet us try the `NHANES` dataset. Try `help(NHANES)` in your Console. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"NHANES\")\nnames(NHANES)\n#>  [1] \"ID\"               \"SurveyYr\"         \"Gender\"           \"Age\"             \n#>  [5] \"AgeDecade\"        \"AgeMonths\"        \"Race1\"            \"Race3\"           \n#>  [9] \"Education\"        \"MaritalStatus\"    \"HHIncome\"         \"HHIncomeMid\"     \n#> [13] \"Poverty\"          \"HomeRooms\"        \"HomeOwn\"          \"Work\"            \n#> [17] \"Weight\"           \"Length\"           \"HeadCirc\"         \"Height\"          \n#> [21] \"BMI\"              \"BMICatUnder20yrs\" \"BMI_WHO\"          \"Pulse\"           \n#> [25] \"BPSysAve\"         \"BPDiaAve\"         \"BPSys1\"           \"BPDia1\"          \n#> [29] \"BPSys2\"           \"BPDia2\"           \"BPSys3\"           \"BPDia3\"          \n#> [33] \"Testosterone\"     \"DirectChol\"       \"TotChol\"          \"UrineVol1\"       \n#> [37] \"UrineFlow1\"       \"UrineVol2\"        \"UrineFlow2\"       \"Diabetes\"        \n#> [41] \"DiabetesAge\"      \"HealthGen\"        \"DaysPhysHlthBad\"  \"DaysMentHlthBad\" \n#> [45] \"LittleInterest\"   \"Depressed\"        \"nPregnancies\"     \"nBabies\"         \n#> [49] \"Age1stBaby\"       \"SleepHrsNight\"    \"SleepTrouble\"     \"PhysActive\"      \n#> [53] \"PhysActiveDays\"   \"TVHrsDay\"         \"CompHrsDay\"       \"TVHrsDayChild\"   \n#> [57] \"CompHrsDayChild\"  \"Alcohol12PlusYr\"  \"AlcoholDay\"       \"AlcoholYear\"     \n#> [61] \"SmokeNow\"         \"Smoke100\"         \"Smoke100n\"        \"SmokeAge\"        \n#> [65] \"Marijuana\"        \"AgeFirstMarij\"    \"RegularMarij\"     \"AgeRegMarij\"     \n#> [69] \"HardDrugs\"        \"SexEver\"          \"SexAge\"           \"SexNumPartnLife\" \n#> [73] \"SexNumPartYear\"   \"SameSex\"          \"SexOrientation\"   \"PregnantNow\"\n```\n:::\n\n\n### Stat Summaries\n\n::: {.cell}\n\n```{.r .cell-code}\nmosaic::inspect(NHANES)\n#> \n#> categorical variables:  \n#>                name  class levels     n missing\n#> 1          SurveyYr factor      2 10000       0\n#> 2            Gender factor      2 10000       0\n#> 3         AgeDecade factor      8  9667     333\n#> 4             Race1 factor      5 10000       0\n#> 5             Race3 factor      6  5000    5000\n#> 6         Education factor      5  7221    2779\n#> 7     MaritalStatus factor      6  7231    2769\n#> 8          HHIncome factor     12  9189     811\n#> 9           HomeOwn factor      3  9937      63\n#> 10             Work factor      3  7771    2229\n#> 11 BMICatUnder20yrs factor      4  1274    8726\n#> 12          BMI_WHO factor      4  9603     397\n#> 13         Diabetes factor      2  9858     142\n#> 14        HealthGen factor      5  7539    2461\n#> 15   LittleInterest factor      3  6667    3333\n#> 16        Depressed factor      3  6673    3327\n#> 17     SleepTrouble factor      2  7772    2228\n#> 18       PhysActive factor      2  8326    1674\n#> 19         TVHrsDay factor      7  4859    5141\n#> 20       CompHrsDay factor      7  4863    5137\n#> 21  Alcohol12PlusYr factor      2  6580    3420\n#> 22         SmokeNow factor      2  3211    6789\n#> 23         Smoke100 factor      2  7235    2765\n#> 24        Smoke100n factor      2  7235    2765\n#> 25        Marijuana factor      2  4941    5059\n#> 26     RegularMarij factor      2  4941    5059\n#> 27        HardDrugs factor      2  5765    4235\n#> 28          SexEver factor      2  5767    4233\n#> 29          SameSex factor      2  5768    4232\n#> 30   SexOrientation factor      3  4842    5158\n#> 31      PregnantNow factor      3  1696    8304\n#>                                     distribution\n#> 1  2009_10 (50%), 2011_12 (50%)                 \n#> 2  female (50.2%), male (49.8%)                 \n#> 3   40-49 (14.5%),  0-9 (14.4%) ...             \n#> 4  White (63.7%), Black (12%) ...               \n#> 5  White (62.7%), Black (11.8%) ...             \n#> 6  Some College (31.4%) ...                     \n#> 7  Married (54.6%), NeverMarried (19.1%) ...    \n#> 8  more 99999 (24.2%) ...                       \n#> 9  Own (64.7%), Rent (33.1%) ...                \n#> 10 Working (59.4%), NotWorking (36.6%) ...      \n#> 11 NormWeight (63.2%), Obese (17.3%) ...        \n#> 12 18.5_to_24.9 (30.3%) ...                     \n#> 13 No (92.3%), Yes (7.7%)                       \n#> 14 Good (39.2%), Vgood (33.3%) ...              \n#> 15 None (76.5%), Several (16.9%) ...            \n#> 16 None (78.6%), Several (15.1%) ...            \n#> 17 No (74.6%), Yes (25.4%)                      \n#> 18 Yes (55.8%), No (44.2%)                      \n#> 19 2_hr (26.2%), 1_hr (18.2%) ...               \n#> 20 0_to_1_hr (29%), 0_hrs (22.1%) ...           \n#> 21 Yes (79.2%), No (20.8%)                      \n#> 22 No (54.3%), Yes (45.7%)                      \n#> 23 No (55.6%), Yes (44.4%)                      \n#> 24 Non-Smoker (55.6%), Smoker (44.4%)           \n#> 25 Yes (58.5%), No (41.5%)                      \n#> 26 No (72.4%), Yes (27.6%)                      \n#> 27 No (81.5%), Yes (18.5%)                      \n#> 28 Yes (96.1%), No (3.9%)                       \n#> 29 No (92.8%), Yes (7.2%)                       \n#> 30 Heterosexual (95.8%), Bisexual (2.5%) ...    \n#> 31 No (92.7%), Yes (4.2%) ...                   \n#> \n#> quantitative variables:  \n#>               name   class      min        Q1    median        Q3        max\n#> 1               ID integer 51624.00 56904.500 62159.500 67039.000  71915.000\n#> 2              Age integer     0.00    17.000    36.000    54.000     80.000\n#> 3        AgeMonths integer     0.00   199.000   418.000   624.000    959.000\n#> 4      HHIncomeMid integer  2500.00 30000.000 50000.000 87500.000 100000.000\n#> 5          Poverty numeric     0.00     1.240     2.700     4.710      5.000\n#> 6        HomeRooms integer     1.00     5.000     6.000     8.000     13.000\n#> 7           Weight numeric     2.80    56.100    72.700    88.900    230.700\n#> 8           Length numeric    47.10    75.700    87.000    96.100    112.200\n#> 9         HeadCirc numeric    34.20    39.575    41.450    42.925     45.400\n#> 10          Height numeric    83.60   156.800   166.000   174.500    200.400\n#> 11             BMI numeric    12.88    21.580    25.980    30.890     81.250\n#> 12           Pulse integer    40.00    64.000    72.000    82.000    136.000\n#> 13        BPSysAve integer    76.00   106.000   116.000   127.000    226.000\n#> 14        BPDiaAve integer     0.00    61.000    69.000    76.000    116.000\n#> 15          BPSys1 integer    72.00   106.000   116.000   128.000    232.000\n#> 16          BPDia1 integer     0.00    62.000    70.000    76.000    118.000\n#> 17          BPSys2 integer    76.00   106.000   116.000   128.000    226.000\n#> 18          BPDia2 integer     0.00    60.000    68.000    76.000    118.000\n#> 19          BPSys3 integer    76.00   106.000   116.000   126.000    226.000\n#> 20          BPDia3 integer     0.00    60.000    68.000    76.000    116.000\n#> 21    Testosterone numeric     0.25    17.700    43.820   362.410   1795.600\n#> 22      DirectChol numeric     0.39     1.090     1.290     1.580      4.030\n#> 23         TotChol numeric     1.53     4.110     4.780     5.530     13.650\n#> 24       UrineVol1 integer     0.00    50.000    94.000   164.000    510.000\n#> 25      UrineFlow1 numeric     0.00     0.403     0.699     1.221     17.167\n#> 26       UrineVol2 integer     0.00    52.000    95.000   171.750    409.000\n#> 27      UrineFlow2 numeric     0.00     0.475     0.760     1.513     13.692\n#> 28     DiabetesAge integer     1.00    40.000    50.000    58.000     80.000\n#> 29 DaysPhysHlthBad integer     0.00     0.000     0.000     3.000     30.000\n#> 30 DaysMentHlthBad integer     0.00     0.000     0.000     4.000     30.000\n#> 31    nPregnancies integer     1.00     2.000     3.000     4.000     32.000\n#> 32         nBabies integer     0.00     2.000     2.000     3.000     12.000\n#> 33      Age1stBaby integer    14.00    19.000    22.000    26.000     39.000\n#> 34   SleepHrsNight integer     2.00     6.000     7.000     8.000     12.000\n#> 35  PhysActiveDays integer     1.00     2.000     3.000     5.000      7.000\n#> 36   TVHrsDayChild integer     0.00     1.000     2.000     3.000      6.000\n#> 37 CompHrsDayChild integer     0.00     0.000     1.000     6.000      6.000\n#> 38      AlcoholDay integer     1.00     1.000     2.000     3.000     82.000\n#> 39     AlcoholYear integer     0.00     3.000    24.000   104.000    364.000\n#> 40        SmokeAge integer     6.00    15.000    17.000    19.000     72.000\n#> 41   AgeFirstMarij integer     1.00    15.000    16.000    19.000     48.000\n#> 42     AgeRegMarij integer     5.00    15.000    17.000    19.000     52.000\n#> 43          SexAge integer     9.00    15.000    17.000    19.000     50.000\n#> 44 SexNumPartnLife integer     0.00     2.000     5.000    12.000   2000.000\n#> 45  SexNumPartYear integer     0.00     1.000     1.000     1.000     69.000\n#>            mean           sd     n missing\n#> 1  6.194464e+04 5.871167e+03 10000       0\n#> 2  3.674210e+01 2.239757e+01 10000       0\n#> 3  4.201239e+02 2.590431e+02  4962    5038\n#> 4  5.720617e+04 3.302028e+04  9189     811\n#> 5  2.801844e+00 1.677909e+00  9274     726\n#> 6  6.248918e+00 2.277538e+00  9931      69\n#> 7  7.098180e+01 2.912536e+01  9922      78\n#> 8  8.501602e+01 1.370503e+01   543    9457\n#> 9  4.118068e+01 2.311483e+00    88    9912\n#> 10 1.618778e+02 2.018657e+01  9647     353\n#> 11 2.666014e+01 7.376579e+00  9634     366\n#> 12 7.355973e+01 1.215542e+01  8563    1437\n#> 13 1.181550e+02 1.724817e+01  8551    1449\n#> 14 6.748006e+01 1.435480e+01  8551    1449\n#> 15 1.190902e+02 1.749636e+01  8237    1763\n#> 16 6.827826e+01 1.378078e+01  8237    1763\n#> 17 1.184758e+02 1.749133e+01  8353    1647\n#> 18 6.766455e+01 1.441978e+01  8353    1647\n#> 19 1.179292e+02 1.717719e+01  8365    1635\n#> 20 6.729874e+01 1.495839e+01  8365    1635\n#> 21 1.978980e+02 2.265045e+02  4126    5874\n#> 22 1.364865e+00 3.992581e-01  8474    1526\n#> 23 4.879220e+00 1.075583e+00  8474    1526\n#> 24 1.185161e+02 9.033648e+01  9013     987\n#> 25 9.792946e-01 9.495143e-01  8397    1603\n#> 26 1.196759e+02 9.016005e+01  1478    8522\n#> 27 1.149372e+00 1.072948e+00  1476    8524\n#> 28 4.842289e+01 1.568050e+01   629    9371\n#> 29 3.334838e+00 7.400700e+00  7532    2468\n#> 30 4.126493e+00 7.832971e+00  7534    2466\n#> 31 3.026882e+00 1.795341e+00  2604    7396\n#> 32 2.456954e+00 1.315227e+00  2416    7584\n#> 33 2.264968e+01 4.772509e+00  1884    8116\n#> 34 6.927531e+00 1.346729e+00  7755    2245\n#> 35 3.743513e+00 1.836358e+00  4663    5337\n#> 36 1.938744e+00 1.434431e+00   653    9347\n#> 37 2.197550e+00 2.516667e+00   653    9347\n#> 38 2.914123e+00 3.182672e+00  4914    5086\n#> 39 7.510165e+01 1.030337e+02  5922    4078\n#> 40 1.782662e+01 5.326660e+00  3080    6920\n#> 41 1.702283e+01 3.895010e+00  2891    7109\n#> 42 1.769107e+01 4.806103e+00  1366    8634\n#> 43 1.742870e+01 3.716551e+00  5540    4460\n#> 44 1.508507e+01 5.784643e+01  5725    4275\n#> 45 1.342330e+00 2.782688e+00  4928    5072\n```\n:::\n\n\nAgain, lots of data from `inspect`, about the Quant and Qual variables. Spend a little time looking through the output of `inspect`. \nWhich variables could have been data *given* by each respondent, and which ones could have been *measured* data variables? Why do you think so?  \nWhy is there so much *missing* data?  Which variable are the most affected by this?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntally(Education ~ Work, data = NHANES)\n#>                 Work\n#> Education        Looking NotWorking Working <NA>\n#>   8th Grade           13        249     188    1\n#>   9 - 11th Grade      39        438     411    0\n#>   High School         52        579     886    0\n#>   Some College        88        792    1387    0\n#>   College Grad        72        474    1552    0\n#>   <NA>                47        315     189 2228\n```\n:::\n\n\n### Distribution Plots\nQ.1. What is the distribution of Physical Activity Days, across Gender? Across Education?\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(data = NHANES, ~ PhysActiveDays | Gender)\n#> Warning: Removed 5337 rows containing non-finite values (`stat_bin()`).\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngf_histogram(data = NHANES, ~ PhysActiveDays | Education)\n#> Warning: Removed 5337 rows containing non-finite values (`stat_bin()`).\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-16-2.png){width=672}\n:::\n:::\n\n\nQ.1. How are people Ages distributed across levels of Education?\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_boxplot(Age ~ Education, data = NHANES)\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\nQ.2. How is Education distributed over Race?\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram()\n#> gf_histogram() uses \n#>     * a formula with shape ~x or y ~ . or y ~ x. \n#>     * geom:  bar \n#>     * stat:  bin \n#>     * position:  stack \n#>     * key attributes:  bins = 25, binwidth, alpha = 0.5, color, fill, group,\n#>                    linetype, size \n#> Note:  y may be stat(density) or stat(count) or stat(ndensity) or stat(ncount), but see gf_dhistogram().\n#> \n#> For more information, try ?gf_histogram\n```\n:::\n\n\nQ.3 What is the distribution of people's BMI, split by Gender? By Race1?\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~ BMI | Gender, data = NHANES)\n#> Warning: Removed 366 rows containing non-finite values (`stat_bin()`).\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngf_histogram(~ BMI | Race1 + Race3, data = NHANES)\n#> Warning: Removed 366 rows containing non-finite values (`stat_bin()`).\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-19-2.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n## Case Study-3: A complete example\n\nHere is a dataset from Jeremy Singer-Vine's blog, [Data Is Plural](https://www.data-is-plural.com/). This is a list of all books banned in schools across the US. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nbanned <- readxl::read_xlsx(path = \"data/banned.xlsx\",\n                            sheet = \"Sorted by Author & Title\")\nbanned\n#> # A tibble: 1,586 × 10\n#>   Author     Title Type …¹ Secon…² Illus…³ Trans…⁴ State Distr…⁵ Date …⁶ Origi…⁷\n#>   <chr>      <chr> <chr>   <chr>   <chr>   <chr>   <chr> <chr>   <chr>   <chr>  \n#> 1 Àbíké-Íyí… Ace … Banned… <NA>    <NA>    <NA>    Flor… Indian… 44501   Admini…\n#> 2 Acevedo, … Clap… Banned… <NA>    <NA>    <NA>    Penn… Centra… 44440   Admini…\n#> 3 Acevedo, … The … Banned… <NA>    <NA>    <NA>    Flor… Indian… 44501   Admini…\n#> 4 Acevedo, … The … Banned… <NA>    <NA>    <NA>    New … Marlbo… 44593   Admini…\n#> # … with 1,582 more rows, and abbreviated variable names ¹​`Type of Ban`,\n#> #   ²​`Secondary Author(s)`, ³​`Illustrator(s)`, ⁴​`Translator(s)`, ⁵​District,\n#> #   ⁶​`Date of Challenge/Removal`, ⁷​`Origin of Challenge`\n\nnames(banned)\n#>  [1] \"Author\"                    \"Title\"                    \n#>  [3] \"Type of Ban\"               \"Secondary Author(s)\"      \n#>  [5] \"Illustrator(s)\"            \"Translator(s)\"            \n#>  [7] \"State\"                     \"District\"                 \n#>  [9] \"Date of Challenge/Removal\" \"Origin of Challenge\"\n```\n:::\n\nClearly the variables are *all* Qualitative, except perhaps for *Date of Challenge/Removal, (which in this case has been badly mangled by Excel)\nSo we need to make **counts** based on the *levels* of the Qual variables and plot Bar/Column charts. \n\nLet us quickly make some Stat Summaries:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmosaic::inspect(banned)\n#> \n#> categorical variables:  \n#>                         name     class levels    n missing\n#> 1                     Author character    797 1586       0\n#> 2                      Title character   1145 1586       0\n#> 3                Type of Ban character      4 1586       0\n#> 4        Secondary Author(s) character     61   98    1488\n#> 5             Illustrator(s) character    192  364    1222\n#> 6              Translator(s) character      9   10    1576\n#> 7                      State character     26 1586       0\n#> 8                   District character     86 1586       0\n#> 9  Date of Challenge/Removal character     15 1586       0\n#> 10       Origin of Challenge character      2 1586       0\n#>                                     distribution\n#> 1  Kobabe, Maia (1.9%) ...                      \n#> 2  Gender Queer: A Memoir (1.9%) ...            \n#> 3  Banned Pending Investigation (46.1%) ...     \n#> 4  Cast, Kristin (12.2%) ...                    \n#> 5  Aly, Hatem (4.7%) ...                        \n#> 6  Mlawer, Teresa (20%) ...                     \n#> 7  Texas (45%), Pennsylvania (28.8%) ...        \n#> 8  Central York (27.8%) ...                     \n#> 9  44440 (28.8%), 44531 (28.3%) ...             \n#> 10 Administrator (95.6%) ...\n```\n:::\n\n\nLet us try to answer this question: *What is the count of banned books by type and by US state?*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbanned_by_state <- banned %>% group_by(State) %>% summarise(total = n()) %>% ungroup()\nbanned_by_state\n#> # A tibble: 26 × 2\n#>   State    total\n#>   <chr>    <int>\n#> 1 Alaska       1\n#> 2 Arkansas     1\n#> 3 Florida    204\n#> 4 Georgia     13\n#> # … with 22 more rows\n\nbanned %>% group_by(State, `Type of Ban`) %>% summarise(count = n()) %>% ungroup() %>% left_join(., banned_by_state, by = c(\"State\" = \"State\")) %>% \n #  pivot_wider(.,id_cols = State,\n #              names_from = `Type of Ban`,\n #              values_from = count) %>% janitor::clean_names() %>% \n #  replace_na(list(banned_from_libraries_and_classrooms = 0,\n #                  banned_from_libraries = 0,\n #                  banned_pending_investigation = 0,\n #                  banned_from_classrooms = 0)) %>% \n # mutate(total = sum(across(where(is.integer)))) %>%\nggplot(aes(x = reorder(State, total), y = count, fill = `Type of Ban`)) + geom_col() + coord_flip()\n#> `summarise()` has grouped output by 'State'. You can override using the\n#> `.groups` argument.\n```\n\n::: {.cell-output-display}\n![](distributions_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n\n## Case Study -4: Dataset from Ragsdale's book\n\n\n\n\n### Stat Summaries\n\n\n# Conclusion\n\n\n\n# References\n\n1. A detailed analysis of the NHANES dataset, <https://awagaman.people.amherst.edu/stat230/Stat230CodeCompilationExampleCodeUsingNHANES.pdf>\n\n1. \n\n\n",
    "supporting": [
      "distributions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}