{
  "hash": "a69cdf7fcd211b852b3a0ce70f8ae981",
  "result": {
    "markdown": "---\ntitle: \"Chapter 4 Sampling Distributions\"\nauthor: \"Chihara-Hesterberg\"\ndate:  \"November 2018\"\noutput: html_document\n---\n\n\n\n\n###Example 4.2: Sampling distribution from Exp(1/15)\n\n::: {.cell}\n\n```{.r .cell-code}\nXbar <- numeric(1000)\n#set.seed(300)\nfor (i in 1:1000)\n{\n  x <- rexp(100, rate = 1/15)\n  Xbar[i] <- mean(x)\n}\n\nggplot() + geom_histogram(aes(Xbar), bins = 15) + xlab(\"means\")\n```\n\n::: {.cell-output-display}\n![](Chap4-sampling_files/figure-html/unnamed-chunk-1-1.png){width=50%}\n:::\n\n```{.r .cell-code}\ndf <- data.frame(Xbar)\nggplot(df, aes(sample=Xbar)) + stat_qq() + stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](Chap4-sampling_files/figure-html/unnamed-chunk-1-2.png){width=50%}\n:::\n\n```{.r .cell-code}\nmean(Xbar)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 15.07407\n```\n:::\n\n```{.r .cell-code}\nsd(Xbar)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.508802\n```\n:::\n:::\n\n\n###Example 4.3: Sampling Dist from Unif[0,1]\n\n::: {.cell}\n\n```{.r .cell-code}\nmaxY <- numeric(1000)\n#set.seed(100)\nfor (i in 1:1000)\n {\n   y <- runif(12)        #draw random sample of size 12\n   maxY[i] <- max(y)     #find max, save in position i\n }\n\nggplot() + geom_histogram(aes(maxY), binwidth=.05, center=.975) + xlab(\"maximums\") \n```\n\n::: {.cell-output-display}\n![](Chap4-sampling_files/figure-html/unnamed-chunk-2-1.png){width=50%}\n:::\n:::\n\n\nTo create a histogram with a density curve imposed, we will need to create a data frame that holds the <tt>'maxY'</tt> variable. We also create a function for the density curve $f(x)=12x^{11}$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(maxY)\nmyfun <- function(x){12*x^{11}}\n\nggplot(df) + geom_histogram(aes(maxY, y = stat(density)), binwidth=.05, center=.975) +xlab(\"maximums\") + stat_function(fun = myfun)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `stat(density)` was deprecated in ggplot2 3.4.0.\nâ„¹ Please use `after_stat(density)` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](Chap4-sampling_files/figure-html/unnamed-chunk-3-1.png){width=50%}\n:::\n:::\n\n\n###Example 4.6 Sum of Poisson random variables\n\n::: {.cell}\n\n```{.r .cell-code}\nX <- rpois(10^4, 5)   #Draw 10^4 values from Pois(5)\nY <- rpois(10^4, 12)   #Draw 10^4 values from Pois(12)\nW <- X + Y\n\ndf1 <- data.frame(W)\ndf2 <- data.frame(x=2:35, y = dpois(2:35,17))\nggplot(df1, aes(W)) + geom_histogram(aes(y=stat(density)), bins=12) + geom_line(data=df2, aes(x=x, y=y), colour = \"red\")\n```\n\n::: {.cell-output-display}\n![](Chap4-sampling_files/figure-html/unnamed-chunk-4-1.png){width=50%}\n:::\n\n```{.r .cell-code}\nmean(W)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17.0557\n```\n:::\n\n```{.r .cell-code}\nvar(W)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17.11891\n```\n:::\n:::\n\n\n###Example 4.7\nSampling distribution simulation\nSample of size 30 from gamma r=5, lambda=2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#set.seed(10)\nXbar <- numeric(1000)\nfor (i in 1:1000)\n  {\n    x <- rgamma(30, shape = 5, rate = 2)\n    Xbar[i] <- mean(x)\n  }\n\nggplot() + geom_histogram(aes(Xbar), bins=15) + labs(title = \"Distribution of means\")\n```\n\n::: {.cell-output-display}\n![](Chap4-sampling_files/figure-html/unnamed-chunk-5-1.png){width=50%}\n:::\n\n```{.r .cell-code}\nggplot() + stat_qq(aes(sample = Xbar)) \n```\n\n::: {.cell-output-display}\n![](Chap4-sampling_files/figure-html/unnamed-chunk-5-2.png){width=50%}\n:::\n\n```{.r .cell-code}\n#If you want a line, then\ndf <- data.frame(Xbar)\nggplot(df, aes(sample = Xbar)) + stat_qq() + stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](Chap4-sampling_files/figure-html/unnamed-chunk-5-3.png){width=50%}\n:::\n\n```{.r .cell-code}\nmean(Xbar)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.497688\n```\n:::\n\n```{.r .cell-code}\nsd(Xbar)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2116128\n```\n:::\n\n```{.r .cell-code}\nsum(Xbar > 3)/1000\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.013\n```\n:::\n\n```{.r .cell-code}\n#alternatively\nmean(Xbar > 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.013\n```\n:::\n:::\n\n\n###Example 4.11 R Note\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbinom(25, 120, .3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.006807598\n```\n:::\n\n```{.r .cell-code}\npbinom(25, 120, .3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0159137\n```\n:::\n:::",
    "supporting": [
      "Chap4-sampling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}