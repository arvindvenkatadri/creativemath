{
  "hash": "e318c33b5b24921cd85cac29b018b4f5",
  "result": {
    "markdown": "---\ntitle: \"\\U0001F409 Intro to Linear Programming\"\nauthor: \"Arvind Venkatadri\"\ndate: \"2023-01-13\"\nlinkTitle: Intro to Linear Programming\nsummary: \nview: 2\nweight: 10\n---\n\n\n\n\n## Introduction\n\nWhat is Linear Programming?\n\n## Demonstration of Level Curve\n\n<iframe src=\"https://www.geogebra.org/classic/xpdx7fae?embed\" width=\"800\" height=\"600\" allowfullscreen style=\"border: 1px solid #e4e4e4;border-radius: 4px;\" frameborder=\"0\">\n\n</iframe>\n\n## Linear Programming Solver\n\n<iframe src=\"https://www.geogebra.org/classic/xdqrtg4m?embed\" width=\"800\" height=\"600\" allowfullscreen style=\"border: 1px solid #e4e4e4;border-radius: 4px;\" frameborder=\"0\">\n\n</iframe>\n\n## Linear Programming in 3D view\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/kPOXqQhCWHs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n## Linear Programming Interactive\n\nLet us say we have a Linear Programming problem with *3* variables: We define the model:\n\n$$\nMaximise : 20x_1 + 10x_2 + 15x_3\\\\\nSubject \\ to \\\\\n\\\\\nx_1 + x_2 + x_3 <= 10\\\\\n3x_1 + x_3 <= 24 \n$$\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nHere is the interactive LP Polytope:\n\n\n::: {.cell layout-align=\"center\" webgl='true'}\n\n```{=html}\n<div id=\"rgl10859\" style=\"width:100%;height:403px;\" class=\"rglWebGL html-widget \"></div>\n<script type=\"application/json\" data-for=\"rgl10859\">{\"x\":{\"material\":{\"color\":\"#000000\",\"alpha\":1,\"lit\":true,\"ambient\":\"#000000\",\"specular\":\"#FFFFFF\",\"emission\":\"#000000\",\"shininess\":50,\"smooth\":true,\"front\":\"filled\",\"back\":\"filled\",\"size\":3,\"lwd\":1,\"fog\":true,\"point_antialias\":false,\"line_antialias\":false,\"texture\":null,\"textype\":\"rgb\",\"texmipmap\":false,\"texminfilter\":\"linear\",\"texmagfilter\":\"linear\",\"texenvmap\":false,\"depth_mask\":true,\"depth_test\":\"less\",\"isTransparent\":false,\"polygon_offset\":[0,0],\"margin\":\"\",\"floating\":false,\"tag\":\"\",\"blend\":[\"src_alpha\",\"one_minus_src_alpha\"]},\"rootSubscene\":13,\"objects\":{\"21\":{\"id\":21,\"type\":\"lines\",\"material\":{\"lit\":false},\"vertices\":\"0\",\"colors\":\"1\",\"centers\":\"2\",\"ignoreExtent\":false,\"flags\":32832},\"23\":{\"id\":23,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":0,\"floating\":true,\"edge\":[0,1,1]},\"vertices\":\"3\",\"colors\":\"4\",\"texts\":[[\"\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"5\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"24\":{\"id\":24,\"type\":\"linestrip\",\"material\":{\"lit\":false},\"vertices\":\"6\",\"colors\":\"7\",\"centers\":\"8\",\"ignoreExtent\":false,\"flags\":32832},\"25\":{\"id\":25,\"type\":\"triangles\",\"material\":{\"alpha\":0.0980392172932625,\"lwd\":2,\"isTransparent\":true},\"vertices\":\"9\",\"colors\":\"11\",\"centers\":\"12\",\"normals\":\"10\",\"ignoreExtent\":false,\"flags\":32811},\"26\":{\"id\":26,\"type\":\"linestrip\",\"material\":{\"lit\":false},\"vertices\":\"13\",\"colors\":\"14\",\"centers\":\"15\",\"ignoreExtent\":false,\"flags\":32832},\"27\":{\"id\":27,\"type\":\"quads\",\"material\":{\"alpha\":0.0980392172932625,\"lwd\":2,\"isTransparent\":true},\"vertices\":\"16\",\"colors\":\"18\",\"centers\":\"19\",\"normals\":\"17\",\"ignoreExtent\":false,\"flags\":32811},\"28\":{\"id\":28,\"type\":\"linestrip\",\"material\":{\"lit\":false},\"vertices\":\"20\",\"colors\":\"21\",\"centers\":\"22\",\"ignoreExtent\":false,\"flags\":32832},\"29\":{\"id\":29,\"type\":\"triangles\",\"material\":{\"alpha\":0.0980392172932625,\"lwd\":2,\"isTransparent\":true},\"vertices\":\"23\",\"colors\":\"25\",\"centers\":\"26\",\"normals\":\"24\",\"ignoreExtent\":false,\"flags\":32811},\"30\":{\"id\":30,\"type\":\"linestrip\",\"material\":{\"lit\":false},\"vertices\":\"27\",\"colors\":\"28\",\"centers\":\"29\",\"ignoreExtent\":false,\"flags\":32832},\"31\":{\"id\":31,\"type\":\"quads\",\"material\":{\"alpha\":0.0980392172932625,\"lwd\":2,\"isTransparent\":true},\"vertices\":\"30\",\"colors\":\"32\",\"centers\":\"33\",\"normals\":\"31\",\"ignoreExtent\":false,\"flags\":32811},\"32\":{\"id\":32,\"type\":\"linestrip\",\"material\":{\"lit\":false},\"vertices\":\"34\",\"colors\":\"35\",\"centers\":\"36\",\"ignoreExtent\":false,\"flags\":32832},\"33\":{\"id\":33,\"type\":\"quads\",\"material\":{\"alpha\":0.0980392172932625,\"lwd\":2,\"isTransparent\":true},\"vertices\":\"37\",\"colors\":\"39\",\"centers\":\"40\",\"normals\":\"38\",\"ignoreExtent\":false,\"flags\":32811},\"34\":{\"id\":34,\"type\":\"points\",\"material\":{\"lit\":false,\"size\":7},\"vertices\":\"41\",\"colors\":\"42\",\"centers\":\"43\",\"ignoreExtent\":false,\"flags\":34816},\"35\":{\"id\":35,\"type\":\"lines\",\"material\":{\"lit\":false},\"vertices\":\"44\",\"colors\":\"45\",\"centers\":\"46\",\"ignoreExtent\":true,\"flags\":32832},\"36\":{\"id\":36,\"type\":\"text\",\"material\":{\"lit\":false},\"vertices\":\"47\",\"colors\":\"48\",\"texts\":[[\"0\"],[\"2\"],[\"4\"],[\"6\"],[\"8\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"49\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"37\":{\"id\":37,\"type\":\"lines\",\"material\":{\"lit\":false},\"vertices\":\"50\",\"colors\":\"51\",\"centers\":\"52\",\"ignoreExtent\":true,\"flags\":32832},\"38\":{\"id\":38,\"type\":\"text\",\"material\":{\"lit\":false},\"vertices\":\"53\",\"colors\":\"54\",\"texts\":[[\" 0\"],[\" 2\"],[\" 4\"],[\" 6\"],[\" 8\"],[\"10\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"55\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"39\":{\"id\":39,\"type\":\"lines\",\"material\":{\"lit\":false},\"vertices\":\"56\",\"colors\":\"57\",\"centers\":\"58\",\"ignoreExtent\":true,\"flags\":32832},\"40\":{\"id\":40,\"type\":\"text\",\"material\":{\"lit\":false},\"vertices\":\"59\",\"colors\":\"60\",\"texts\":[[\" 0\"],[\" 2\"],[\" 4\"],[\" 6\"],[\" 8\"],[\"10\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"61\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"41\":{\"id\":41,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":0,\"edge\":[0,1,1]},\"vertices\":\"62\",\"colors\":\"63\",\"texts\":[[\"Polytope with LP faces\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"64\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"42\":{\"id\":42,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":0,\"floating\":true,\"edge\":[0,1,1]},\"vertices\":\"65\",\"colors\":\"66\",\"texts\":[[\"x1\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"67\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"43\":{\"id\":43,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":1,\"floating\":true,\"edge\":[1,1,1]},\"vertices\":\"68\",\"colors\":\"69\",\"texts\":[[\"x2\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"70\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"44\":{\"id\":44,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":2,\"floating\":true,\"edge\":[1,1,1]},\"vertices\":\"71\",\"colors\":\"72\",\"texts\":[[\"x3\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"73\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"17\":{\"id\":17,\"type\":\"light\",\"vertices\":[[0,0,1]],\"colors\":[[1,1,1,1],[1,1,1,1],[1,1,1,1]],\"viewpoint\":true,\"finite\":false},\"16\":{\"id\":16,\"type\":\"background\",\"material\":{},\"colors\":\"74\",\"centers\":\"75\",\"sphere\":false,\"fogtype\":\"none\",\"fogscale\":1,\"flags\":32768},\"18\":{\"id\":18,\"type\":\"background\",\"material\":{\"lit\":false,\"back\":\"lines\"},\"colors\":\"76\",\"centers\":\"77\",\"sphere\":false,\"fogtype\":\"none\",\"fogscale\":1,\"flags\":32768},\"22\":{\"id\":22,\"type\":\"bboxdeco\",\"material\":{\"front\":\"lines\",\"back\":\"lines\"},\"vertices\":\"78\",\"colors\":\"79\",\"axes\":{\"mode\":[\"pretty\",\"pretty\",\"pretty\"],\"step\":[2,2,2],\"nticks\":[5,5,5],\"marklen\":[15,15,15],\"expand\":[1.02999997138977,1.02999997138977,1.02999997138977]},\"draw_front\":false,\"flags\":32769},\"13\":{\"id\":13,\"type\":\"subscene\",\"par3d\":{\"antialias\":8,\"FOV\":60,\"ignoreExtent\":false,\"listeners\":13,\"mouseMode\":{\"none\":\"none\",\"left\":\"trackball\",\"right\":\"zoom\",\"middle\":\"fov\",\"wheel\":\"pull\"},\"observer\":[0,0,20.5808963775635],\"modelMatrix\":[[-0.812462985515594,0.579295456409454,0.0657325685024261,0.0247118771076202],[-0.029454167932272,-0.153386667370796,0.987727105617523,-4.0538854598999],[0.582268416881561,0.800555109977722,0.14168381690979,-27.6211643218994],[0,0,0,1]],\"projMatrix\":[[2.30940103530884,0,0,0],[0,2.30940103530884,0,0],[0,0,-1.99999976158142,-30.8713436126709],[0,0,-1,0]],\"skipRedraw\":false,\"userMatrix\":[[-0.812462985515594,0.579295456409454,0.0657325685024261,0],[-0.029454167932272,-0.153386667370796,0.987727105617523,0],[0.582268416881561,0.800555109977722,0.14168381690979,0],[0,0,0,1]],\"userProjection\":[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],\"scale\":[1,1,1],\"viewport\":{\"x\":0,\"y\":0,\"width\":1,\"height\":1},\"zoom\":0.75,\"bbox\":[-0,8,-0,10,-0,10],\"windowRect\":[0,0,256,256],\"family\":\"sans\",\"font\":1,\"cex\":1,\"useFreeType\":false,\"fontname\":\"NULL\",\"maxClipPlanes\":2147483647,\"glVersion\":\"NA\",\"activeSubscene\":0},\"embeddings\":{\"viewport\":\"replace\",\"projection\":\"replace\",\"model\":\"replace\",\"mouse\":\"replace\"},\"objects\":[18,22,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,17],\"subscenes\":[],\"flags\":36219}},\"crosstalk\":{\"key\":[],\"group\":[],\"id\":[],\"options\":[]},\"width\":768,\"height\":476.16,\"buffer\":{\"accessors\":[{\"bufferView\":0,\"componentType\":5121,\"count\":4,\"type\":\"VEC3\"},{\"bufferView\":1,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":2,\"componentType\":5121,\"count\":2,\"type\":\"VEC3\"},{\"bufferView\":3,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":4,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":5,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":6,\"componentType\":5126,\"count\":14,\"type\":\"VEC3\"},{\"bufferView\":7,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":8,\"componentType\":5126,\"count\":14,\"type\":\"VEC3\"},{\"bufferView\":9,\"componentType\":5121,\"count\":3,\"type\":\"VEC3\"},{\"bufferView\":10,\"componentType\":5121,\"count\":3,\"type\":\"VEC3\"},{\"bufferView\":11,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":12,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":13,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":14,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":15,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":16,\"componentType\":5121,\"count\":4,\"type\":\"VEC3\"},{\"bufferView\":17,\"componentType\":5120,\"count\":4,\"type\":\"VEC3\"},{\"bufferView\":18,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":19,\"componentType\":5121,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":20,\"componentType\":5126,\"count\":14,\"type\":\"VEC3\"},{\"bufferView\":21,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":22,\"componentType\":5126,\"count\":14,\"type\":\"VEC3\"},{\"bufferView\":23,\"componentType\":5121,\"count\":3,\"type\":\"VEC3\"},{\"bufferView\":24,\"componentType\":5126,\"count\":3,\"type\":\"VEC3\"},{\"bufferView\":25,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":26,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":27,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":28,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":29,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":30,\"componentType\":5121,\"count\":4,\"type\":\"VEC3\"},{\"bufferView\":31,\"componentType\":5126,\"count\":4,\"type\":\"VEC3\"},{\"bufferView\":32,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":33,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":34,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":35,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":36,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":37,\"componentType\":5121,\"count\":4,\"type\":\"VEC3\"},{\"bufferView\":38,\"componentType\":5121,\"count\":4,\"type\":\"VEC3\"},{\"bufferView\":39,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":40,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":41,\"componentType\":5121,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":42,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":43,\"componentType\":5121,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":44,\"componentType\":5126,\"count\":12,\"type\":\"VEC3\"},{\"bufferView\":45,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":46,\"componentType\":5126,\"count\":6,\"type\":\"VEC3\"},{\"bufferView\":47,\"componentType\":5126,\"count\":5,\"type\":\"VEC3\"},{\"bufferView\":48,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":49,\"componentType\":5126,\"count\":5,\"type\":\"VEC3\"},{\"bufferView\":50,\"componentType\":5126,\"count\":14,\"type\":\"VEC3\"},{\"bufferView\":51,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":52,\"componentType\":5126,\"count\":7,\"type\":\"VEC3\"},{\"bufferView\":53,\"componentType\":5126,\"count\":6,\"type\":\"VEC3\"},{\"bufferView\":54,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":55,\"componentType\":5126,\"count\":6,\"type\":\"VEC3\"},{\"bufferView\":56,\"componentType\":5126,\"count\":14,\"type\":\"VEC3\"},{\"bufferView\":57,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":58,\"componentType\":5126,\"count\":7,\"type\":\"VEC3\"},{\"bufferView\":59,\"componentType\":5126,\"count\":6,\"type\":\"VEC3\"},{\"bufferView\":60,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":61,\"componentType\":5126,\"count\":6,\"type\":\"VEC3\"},{\"bufferView\":62,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":63,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":64,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":65,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":66,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":67,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":68,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":69,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":70,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":71,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":72,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":73,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":74,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":75,\"componentType\":5121,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":76,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":77,\"componentType\":5121,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":78,\"componentType\":5126,\"count\":17,\"type\":\"VEC3\"},{\"bufferView\":79,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"}],\"bufferViews\":[{\"buffer\":0,\"byteLength\":12,\"byteOffset\":0},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":12},{\"buffer\":0,\"byteLength\":6,\"byteOffset\":16},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":24},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":36},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":40},{\"buffer\":0,\"byteLength\":168,\"byteOffset\":52},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":220},{\"buffer\":0,\"byteLength\":168,\"byteOffset\":236},{\"buffer\":0,\"byteLength\":9,\"byteOffset\":404},{\"buffer\":0,\"byteLength\":9,\"byteOffset\":413},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":424},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":440},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":452},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":668},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":684},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":900},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":912},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":924},{\"buffer\":0,\"byteLength\":3,\"byteOffset\":940},{\"buffer\":0,\"byteLength\":168,\"byteOffset\":944},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":1112},{\"buffer\":0,\"byteLength\":168,\"byteOffset\":1128},{\"buffer\":0,\"byteLength\":9,\"byteOffset\":1296},{\"buffer\":0,\"byteLength\":36,\"byteOffset\":1308},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":1344},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":1360},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":1372},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":1588},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":1604},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":1820},{\"buffer\":0,\"byteLength\":48,\"byteOffset\":1832},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":1880},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":1896},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":1908},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":2124},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":2140},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":2356},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":2368},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":2380},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":2396},{\"buffer\":0,\"byteLength\":3,\"byteOffset\":2408},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":2411},{\"buffer\":0,\"byteLength\":3,\"byteOffset\":2415},{\"buffer\":0,\"byteLength\":144,\"byteOffset\":2420},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":2564},{\"buffer\":0,\"byteLength\":72,\"byteOffset\":2568},{\"buffer\":0,\"byteLength\":60,\"byteOffset\":2640},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":2700},{\"buffer\":0,\"byteLength\":60,\"byteOffset\":2704},{\"buffer\":0,\"byteLength\":168,\"byteOffset\":2764},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":2932},{\"buffer\":0,\"byteLength\":84,\"byteOffset\":2936},{\"buffer\":0,\"byteLength\":72,\"byteOffset\":3020},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":3092},{\"buffer\":0,\"byteLength\":72,\"byteOffset\":3096},{\"buffer\":0,\"byteLength\":168,\"byteOffset\":3168},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":3336},{\"buffer\":0,\"byteLength\":84,\"byteOffset\":3340},{\"buffer\":0,\"byteLength\":72,\"byteOffset\":3424},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":3496},{\"buffer\":0,\"byteLength\":72,\"byteOffset\":3500},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":3572},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":3584},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":3588},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":3600},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":3612},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":3616},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":3628},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":3640},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":3644},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":3656},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":3668},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":3672},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":3684},{\"buffer\":0,\"byteLength\":3,\"byteOffset\":3700},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":3703},{\"buffer\":0,\"byteLength\":3,\"byteOffset\":3707},{\"buffer\":0,\"byteLength\":204,\"byteOffset\":3712},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":3916}],\"buffers\":[{\"byteLength\":3920,\"bytes\":\"AQEBAQEBAwMDAwMDAAAAAQEBAQMDAwAAAADAfwAAgEAAAIA/AAAAAQAAwH8AAIBAAACAPwAA\\nwH8AAMB/AADAfwAAwH8AAMB/AADAfwAAwH8AAMB/AADAfwAAAIAAAACAAAAAgAAAAAAAACBB\\nAAAAgAAAAIAAAACAAAAAgAAAwH8AAMB/AADAfwAAAAAAACBBAAAAgAAAAAAAAAAAAAAgQQAA\\nAAAAACBBAAAAgAAAwH8AAMB/AADAfwAAAIAAAACAAAAAgAAAAAAAAAAAAAAgQQAAAIAAAACA\\nAAAAgM3MzD7NzMw+zczMPgAAgD8AAMB/AADAfwAAwH8AAMB/AADAfwAAwH8AAMB/AADAfwAA\\nwH8AAAAAAAAAAAAAAAAAAAAAAAAgQQAAAAAAAAAAAAAAAAAAAAAAAMB/AADAfwAAwH8AAAAA\\nAAAgQQAAAAAAAAAAAAAAAAAAIEEAAAAAAAAgQQAAAAAAAMB/AADAfwAAwH8AAAAAAAAAAAAA\\nAAAAAAAAAAAAAAAAIEEAAAAAAAAAAAAAAAAAAAAACgAAAAoBAAABAAABAAAAAAAAgD8AAIA/\\nAACAP8nIyD0AAAAAVlVVQFZVVUAAAMB/AADAfwAAwH8AAMB/AADAfwAAwH8AAMB/AADAfwAA\\nwH8AAABBAAAAQAAAAIAAAABBAAAAgAAAAIAAAABBAAAAQAAAAIAAAMB/AADAfwAAwH8AAABB\\nAAAAgAAAAIAAAACAAAAAgAAAAIAAAABBAAAAgAAAAIAAAMB/AADAfwAAwH8AAACAAAAAgAAA\\nAIAAAAAAAAAgQQAAAIAAAACAAAAAgAAAAIAAAMB/AADAfwAAwH8AAABBAAAAQAAAAIAAAAAA\\nAAAgQQAAAIAAAABBAAAAQAAAAIDNzMw+zczMPs3MzD4AAIA/AADAfwAAwH8AAMB/AADAfwAA\\nwH8AAMB/AADAfwAAwH8AAMB/AAAAQQAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAEAAAAAA\\nAADAfwAAwH8AAMB/AAAAQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQQAAAAAAAAAAAADAfwAA\\nwH8AAMB/AAAAAAAAAAAAAAAAAAAAAAAAIEEAAAAAAAAAAAAAAAAAAAAAAADAfwAAwH8AAMB/\\nAAAAQQAAAEAAAAAAAAAAAAAAIEEAAAAAAAAAQQAAAEAAAAAACAIACAAAAAAAAAoAAAD/AAD/\\nAAD/AAD/AACAPwAAgD8AAIA/ycjIPQQDAAAAAMB/AADAfwAAwH8AAMB/AADAfwAAwH8AAMB/\\nAADAfwAAwH8AAOBAAAAAAAAAQEAAAABBAAAAgAAAAIAAAOBAAAAAAAAAQEAAAMB/AADAfwAA\\nwH8AAABBAAAAgAAAAIAAAABBAAAAQAAAAIAAAABBAAAAgAAAAIAAAMB/AADAfwAAwH8AAOBA\\nAAAAAAAAQEAAAABBAAAAQAAAAIAAAOBAAAAAAAAAQEDNzMw+zczMPs3MzD4AAIA/AADAfwAA\\nwH8AAMB/AADAfwAAwH8AAMB/AADAfwAAwH8AAMB/AADgQAAAAAAAAEBAAAAAQQAAAAAAAAAA\\nAADgQAAAAAAAAEBAAADAfwAAwH8AAMB/AAAAQQAAAAAAAAAAAAAAQQAAAEAAAAAAAAAAQQAA\\nAAAAAAAAAADAfwAAwH8AAMB/AADgQAAAAAAAAEBAAAAAQQAAAEAAAAAAAADgQAAAAAAAAEBA\\nBwADCAAACAIAAAAA6NxyPwAAAICb6KE+6NxyPwAAAICb6KE+6NxyPwAAAICb6KE+AACAPwAA\\ngD8AAIA/ycjIPVZV9UCrqio/AACAPwAAwH8AAMB/AADAfwAAwH8AAMB/AADAfwAAwH8AAMB/\\nAADAfwAAAAAAACBBAAAAgAAAAEEAAABAAAAAgAAAAAAAACBBAAAAgAAAwH8AAMB/AADAfwAA\\nAEEAAABAAAAAgAAA4EAAAAAAAABAQAAAAEEAAABAAAAAgAAAwH8AAMB/AADAfwAA4EAAAAAA\\nAABAQAAAAAAAAAAAAAAgQQAA4EAAAAAAAABAQAAAwH8AAMB/AADAfwAAAAAAACBBAAAAgAAA\\nAAAAAAAAAAAgQQAAAAAAACBBAAAAgM3MzD7NzMw+zczMPgAAgD8AAMB/AADAfwAAwH8AAMB/\\nAADAfwAAwH8AAMB/AADAfwAAwH8AAAAAAAAgQQAAAAAAAABBAAAAQAAAAAAAAAAAAAAgQQAA\\nAAAAAMB/AADAfwAAwH8AAABBAAAAQAAAAAAAAOBAAAAAAAAAQEAAAABBAAAAQAAAAAAAAMB/\\nAADAfwAAwH8AAOBAAAAAAAAAQEAAAAAAAAAAAAAAIEEAAOBAAAAAAAAAQEAAAMB/AADAfwAA\\nwH8AAAAAAAAgQQAAAAAAAAAAAAAAAAAAIEEAAAAAAAAgQQAAAAAACgAIAgAHAAMAAAo6zRO/\\n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\"}]},\"context\":{\"shiny\":false,\"rmarkdown\":null},\"vertexShader\":\"#line 2 1\\n// File 1 is the vertex shader\\n#ifdef GL_ES\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;\\n#else\\nprecision mediump float;\\n#endif\\n#endif\\n\\nattribute vec3 aPos;\\nattribute vec4 aCol;\\nuniform mat4 mvMatrix;\\nuniform mat4 prMatrix;\\nvarying vec4 vCol;\\nvarying vec4 vPosition;\\n\\n#ifdef NEEDS_VNORMAL\\nattribute vec3 aNorm;\\nuniform mat4 normMatrix;\\nvarying vec4 vNormal;\\n#endif\\n\\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\\nattribute vec2 aTexcoord;\\nvarying vec2 vTexcoord;\\n#endif\\n\\n#ifdef FIXED_SIZE\\nuniform vec3 textScale;\\n#endif\\n\\n#ifdef FIXED_QUADS\\nattribute vec3 aOfs;\\n#endif\\n\\n#ifdef IS_TWOSIDED\\n#ifdef HAS_NORMALS\\nvarying float normz;\\nuniform mat4 invPrMatrix;\\n#else\\nattribute vec3 aPos1;\\nattribute vec3 aPos2;\\nvarying float normz;\\n#endif\\n#endif // IS_TWOSIDED\\n\\n#ifdef FAT_LINES\\nattribute vec3 aNext;\\nattribute vec2 aPoint;\\nvarying vec2 vPoint;\\nvarying float vLength;\\nuniform float uAspect;\\nuniform float uLwd;\\n#endif\\n\\n\\nvoid main(void) {\\n  \\n#ifndef IS_BRUSH\\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG)\\n  vPosition = mvMatrix * vec4(aPos, 1.);\\n#endif\\n  \\n#ifndef FIXED_QUADS\\n  gl_Position = prMatrix * vPosition;\\n#endif\\n#endif // !IS_BRUSH\\n  \\n#ifdef IS_POINTS\\n  gl_PointSize = POINTSIZE;\\n#endif\\n  \\n  vCol = aCol;\\n  \\n#ifdef NEEDS_VNORMAL\\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\\n#endif\\n  \\n#ifdef IS_TWOSIDED\\n#ifdef HAS_NORMALS\\n  /* normz should be calculated *after* projection */\\n  normz = (invPrMatrix*vNormal).z;\\n#else\\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\\n#endif\\n#endif // IS_TWOSIDED\\n  \\n#ifdef NEEDS_VNORMAL\\n  vNormal = vec4(normalize(vNormal.xyz/vNormal.w), 1);\\n#endif\\n  \\n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\\n  vTexcoord = aTexcoord;\\n#endif\\n  \\n#if defined(FIXED_SIZE) && !defined(ROTATING)\\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\\n  pos = pos/pos.w;\\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\\n#endif\\n  \\n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\\n  pos = pos/pos.w + vec4(aOfs,  0.);\\n  gl_Position = prMatrix*pos;\\n#endif\\n  \\n#ifdef FAT_LINES\\n  /* This code was inspired by Matt Deslauriers' code in \\n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\\n  vec2 aspectVec = vec2(uAspect, 1.0);\\n  mat4 projViewModel = prMatrix * mvMatrix;\\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\\n  currentProjected = currentProjected/currentProjected.w;\\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\\n  vec2 currentScreen = currentProjected.xy * aspectVec;\\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\\n  float len = uLwd;\\n  vec2 dir = vec2(1.0, 0.0);\\n  vPoint = aPoint;\\n  vLength = length(nextScreen - currentScreen)/2.0;\\n  vLength = vLength/(vLength + len);\\n  if (vLength > 0.0) {\\n    dir = normalize(nextScreen - currentScreen);\\n  }\\n  vec2 normal = vec2(-dir.y, dir.x);\\n  dir.x /= uAspect;\\n  normal.x /= uAspect;\\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\\n  gl_Position = currentProjected + offset;\\n#endif\\n  \\n#ifdef IS_BRUSH\\n  gl_Position = vec4(aPos, 1.);\\n#endif\\n}\",\"fragmentShader\":\"#line 2 2\\n// File 2 is the fragment shader\\n#ifdef GL_ES\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;\\n#else\\nprecision mediump float;\\n#endif\\n#endif\\nvarying vec4 vCol; // carries alpha\\nvarying vec4 vPosition;\\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\\nvarying vec2 vTexcoord;\\nuniform sampler2D uSampler;\\n#endif\\n\\n#ifdef HAS_FOG\\nuniform int uFogMode;\\nuniform vec3 uFogColor;\\nuniform vec4 uFogParms;\\n#endif\\n\\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\\nvarying vec4 vNormal;\\n#endif\\n\\n#if NCLIPPLANES > 0\\nuniform vec4 vClipplane[NCLIPPLANES];\\n#endif\\n\\n#if NLIGHTS > 0\\nuniform mat4 mvMatrix;\\n#endif\\n\\n#ifdef IS_LIT\\nuniform vec3 emission;\\nuniform float shininess;\\n#if NLIGHTS > 0\\nuniform vec3 ambient[NLIGHTS];\\nuniform vec3 specular[NLIGHTS]; // light*material\\nuniform vec3 diffuse[NLIGHTS];\\nuniform vec3 lightDir[NLIGHTS];\\nuniform bool viewpoint[NLIGHTS];\\nuniform bool finite[NLIGHTS];\\n#endif\\n#endif // IS_LIT\\n\\n#ifdef IS_TWOSIDED\\nuniform bool front;\\nvarying float normz;\\n#endif\\n\\n#ifdef FAT_LINES\\nvarying vec2 vPoint;\\nvarying float vLength;\\n#endif\\n\\nvoid main(void) {\\n  vec4 fragColor;\\n#ifdef FAT_LINES\\n  vec2 point = vPoint;\\n  bool neg = point.y < 0.0;\\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\\n                 -(point.y - vLength)/(1.0 - vLength);\\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\\n  if (neg && length(point) <= 1.0) discard;\\n#endif\\n  point.y = min(point.y, 0.0);\\n  if (length(point) > 1.0) discard;\\n#endif // FAT_LINES\\n  \\n#ifdef ROUND_POINTS\\n  vec2 coord = gl_PointCoord - vec2(0.5);\\n  if (length(coord) > 0.5) discard;\\n#endif\\n  \\n#if NCLIPPLANES > 0\\n  for (int i = 0; i < NCLIPPLANES; i++)\\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\\n#endif\\n    \\n#ifdef FIXED_QUADS\\n    vec3 n = vec3(0., 0., 1.);\\n#elif defined(IS_LIT)\\n    vec3 n = normalize(vNormal.xyz);\\n#endif\\n    \\n#ifdef IS_TWOSIDED\\n    if ((normz <= 0.) != front) discard;\\n#endif\\n    \\n#ifdef IS_LIT\\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\\n    vec3 lightdir;\\n    vec4 colDiff;\\n    vec3 halfVec;\\n    vec4 lighteffect = vec4(emission, 0.);\\n    vec3 col;\\n    float nDotL;\\n#ifdef FIXED_QUADS\\n    n = -faceforward(n, n, eye);\\n#endif\\n    \\n#if NLIGHTS > 0\\n    for (int i=0;i<NLIGHTS;i++) {\\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\\n      lightdir = lightDir[i];\\n      if (!viewpoint[i])\\n        lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\\n      if (!finite[i]) {\\n        halfVec = normalize(lightdir + eye);\\n      } else {\\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\\n        halfVec = normalize(lightdir + eye);\\n      }\\n      col = ambient[i];\\n      nDotL = dot(n, lightdir);\\n      col = col + max(nDotL, 0.) * colDiff.rgb;\\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\\n      lighteffect = lighteffect + vec4(col, colDiff.a);\\n    }\\n#endif\\n    \\n#else // not IS_LIT\\n    vec4 colDiff = vCol;\\n    vec4 lighteffect = colDiff;\\n#endif\\n    \\n#ifdef IS_TEXT\\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\\n#endif\\n    \\n#ifdef HAS_TEXTURE\\n#ifdef TEXTURE_rgb\\n    vec4 textureColor = lighteffect*vec4(texture2D(uSampler, vTexcoord).rgb, 1.);\\n#endif\\n    \\n#ifdef TEXTURE_rgba\\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\\n#endif\\n    \\n#ifdef TEXTURE_alpha\\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\\n    float luminance = dot(vec3(1.,1.,1.), textureColor.rgb)/3.;\\n    textureColor =  vec4(lighteffect.rgb, lighteffect.a*luminance);\\n#endif\\n    \\n#ifdef TEXTURE_luminance\\n    vec4 textureColor = vec4(lighteffect.rgb*dot(texture2D(uSampler, vTexcoord).rgb, vec3(1.,1.,1.))/3., lighteffect.a);\\n#endif\\n    \\n#ifdef TEXTURE_luminance_alpha\\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\\n    textureColor = vec4(lighteffect.rgb*luminance, lighteffect.a*textureColor.a);\\n#endif\\n    \\n    fragColor = textureColor;\\n\\n#elif defined(IS_TEXT)\\n    if (textureColor.a < 0.1)\\n      discard;\\n    else\\n      fragColor = textureColor;\\n#else\\n    fragColor = lighteffect;\\n#endif // HAS_TEXTURE\\n    \\n#ifdef HAS_FOG\\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\\n    // In Exp and Exp2: use density = density/far\\n    // fogF will be the proportion of fog\\n    // Initialize it to the linear value\\n    float fogF;\\n    if (uFogMode > 0) {\\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\\n      if (uFogMode > 1)\\n        fogF = mix(uFogParms.w, 1.0, fogF);\\n      fogF = fogF*uFogParms.z;\\n      if (uFogMode == 2)\\n        fogF = 1.0 - exp(-fogF);\\n      // Docs are wrong: use (density*c)^2, not density*c^2\\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\\n      else if (uFogMode == 3)\\n        fogF = 1.0 - exp(-fogF*fogF);\\n      fogF = clamp(fogF, 0.0, 1.0);\\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\\n    } else gl_FragColor = fragColor;\\n#else\\n    gl_FragColor = fragColor;\\n#endif // HAS_FOG\\n    \\n}\",\"players\":[],\"webGLoptions\":{\"preserveDrawingBuffer\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n\n## References\n\n1.  Virginia Postrel, *Operations Everything*, Boston Globe, Hune 27, 2004. <http://archive.boston.com/news/globe/ideas/articles/2004/06/27/operation_everything?pg=full>\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../../../site_libs/htmlwidgets-1.6.1/htmlwidgets.js\"></script>\r\n<script src=\"../../../../../site_libs/rglWebGL-binding-0.111.6/rglWebGL.js\"></script>\r\n<link href=\"../../../../../site_libs/rglwidgetClass-0.111.6/rgl.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/rglClass.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/utils.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/buffer.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/subscenes.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/shaders.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/textures.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/projection.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/mouse.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/init.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/pieces.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/draw.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/controls.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/selection.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/rglTimer.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/pretty.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/axes.src.js\"></script>\r\n<script src=\"../../../../../site_libs/rglwidgetClass-0.111.6/animation.src.js\"></script>\r\n<!--html_preserve--><script type = \"text/plain\" id = \"rgl-vertex-shader\">\r\n#line 2 1\r\n// File 1 is the vertex shader\r\n#ifdef GL_ES\r\n#ifdef GL_FRAGMENT_PRECISION_HIGH\r\nprecision highp float;\r\n#else\r\nprecision mediump float;\r\n#endif\r\n#endif\r\n\r\nattribute vec3 aPos;\r\nattribute vec4 aCol;\r\nuniform mat4 mvMatrix;\r\nuniform mat4 prMatrix;\r\nvarying vec4 vCol;\r\nvarying vec4 vPosition;\r\n\r\n#ifdef NEEDS_VNORMAL\r\nattribute vec3 aNorm;\r\nuniform mat4 normMatrix;\r\nvarying vec4 vNormal;\r\n#endif\r\n\r\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\r\nattribute vec2 aTexcoord;\r\nvarying vec2 vTexcoord;\r\n#endif\r\n\r\n#ifdef FIXED_SIZE\r\nuniform vec3 textScale;\r\n#endif\r\n\r\n#ifdef FIXED_QUADS\r\nattribute vec3 aOfs;\r\n#endif\r\n\r\n#ifdef IS_TWOSIDED\r\n#ifdef HAS_NORMALS\r\nvarying float normz;\r\nuniform mat4 invPrMatrix;\r\n#else\r\nattribute vec3 aPos1;\r\nattribute vec3 aPos2;\r\nvarying float normz;\r\n#endif\r\n#endif // IS_TWOSIDED\r\n\r\n#ifdef FAT_LINES\r\nattribute vec3 aNext;\r\nattribute vec2 aPoint;\r\nvarying vec2 vPoint;\r\nvarying float vLength;\r\nuniform float uAspect;\r\nuniform float uLwd;\r\n#endif\r\n\r\n\r\nvoid main(void) {\r\n  \r\n#ifndef IS_BRUSH\r\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG)\r\n  vPosition = mvMatrix * vec4(aPos, 1.);\r\n#endif\r\n  \r\n#ifndef FIXED_QUADS\r\n  gl_Position = prMatrix * vPosition;\r\n#endif\r\n#endif // !IS_BRUSH\r\n  \r\n#ifdef IS_POINTS\r\n  gl_PointSize = POINTSIZE;\r\n#endif\r\n  \r\n  vCol = aCol;\r\n  \r\n#ifdef NEEDS_VNORMAL\r\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\r\n#endif\r\n  \r\n#ifdef IS_TWOSIDED\r\n#ifdef HAS_NORMALS\r\n  /* normz should be calculated *after* projection */\r\n  normz = (invPrMatrix*vNormal).z;\r\n#else\r\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\r\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\r\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\r\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\r\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\r\n#endif\r\n#endif // IS_TWOSIDED\r\n  \r\n#ifdef NEEDS_VNORMAL\r\n  vNormal = vec4(normalize(vNormal.xyz/vNormal.w), 1);\r\n#endif\r\n  \r\n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\r\n  vTexcoord = aTexcoord;\r\n#endif\r\n  \r\n#if defined(FIXED_SIZE) && !defined(ROTATING)\r\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\r\n  pos = pos/pos.w;\r\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\r\n#endif\r\n  \r\n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\r\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\r\n  pos = pos/pos.w + vec4(aOfs,  0.);\r\n  gl_Position = prMatrix*pos;\r\n#endif\r\n  \r\n#ifdef FAT_LINES\r\n  /* This code was inspired by Matt Deslauriers' code in \r\n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\r\n  vec2 aspectVec = vec2(uAspect, 1.0);\r\n  mat4 projViewModel = prMatrix * mvMatrix;\r\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\r\n  currentProjected = currentProjected/currentProjected.w;\r\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\r\n  vec2 currentScreen = currentProjected.xy * aspectVec;\r\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\r\n  float len = uLwd;\r\n  vec2 dir = vec2(1.0, 0.0);\r\n  vPoint = aPoint;\r\n  vLength = length(nextScreen - currentScreen)/2.0;\r\n  vLength = vLength/(vLength + len);\r\n  if (vLength > 0.0) {\r\n    dir = normalize(nextScreen - currentScreen);\r\n  }\r\n  vec2 normal = vec2(-dir.y, dir.x);\r\n  dir.x /= uAspect;\r\n  normal.x /= uAspect;\r\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\r\n  gl_Position = currentProjected + offset;\r\n#endif\r\n  \r\n#ifdef IS_BRUSH\r\n  gl_Position = vec4(aPos, 1.);\r\n#endif\r\n}\r\n</script>\r\n<script type = \"text/plain\" id = \"rgl-fragment-shader\">\r\n#line 2 2\r\n// File 2 is the fragment shader\r\n#ifdef GL_ES\r\n#ifdef GL_FRAGMENT_PRECISION_HIGH\r\nprecision highp float;\r\n#else\r\nprecision mediump float;\r\n#endif\r\n#endif\r\nvarying vec4 vCol; // carries alpha\r\nvarying vec4 vPosition;\r\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\r\nvarying vec2 vTexcoord;\r\nuniform sampler2D uSampler;\r\n#endif\r\n\r\n#ifdef HAS_FOG\r\nuniform int uFogMode;\r\nuniform vec3 uFogColor;\r\nuniform vec4 uFogParms;\r\n#endif\r\n\r\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\r\nvarying vec4 vNormal;\r\n#endif\r\n\r\n#if NCLIPPLANES > 0\r\nuniform vec4 vClipplane[NCLIPPLANES];\r\n#endif\r\n\r\n#if NLIGHTS > 0\r\nuniform mat4 mvMatrix;\r\n#endif\r\n\r\n#ifdef IS_LIT\r\nuniform vec3 emission;\r\nuniform float shininess;\r\n#if NLIGHTS > 0\r\nuniform vec3 ambient[NLIGHTS];\r\nuniform vec3 specular[NLIGHTS]; // light*material\r\nuniform vec3 diffuse[NLIGHTS];\r\nuniform vec3 lightDir[NLIGHTS];\r\nuniform bool viewpoint[NLIGHTS];\r\nuniform bool finite[NLIGHTS];\r\n#endif\r\n#endif // IS_LIT\r\n\r\n#ifdef IS_TWOSIDED\r\nuniform bool front;\r\nvarying float normz;\r\n#endif\r\n\r\n#ifdef FAT_LINES\r\nvarying vec2 vPoint;\r\nvarying float vLength;\r\n#endif\r\n\r\nvoid main(void) {\r\n  vec4 fragColor;\r\n#ifdef FAT_LINES\r\n  vec2 point = vPoint;\r\n  bool neg = point.y < 0.0;\r\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\r\n                 -(point.y - vLength)/(1.0 - vLength);\r\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\r\n  if (neg && length(point) <= 1.0) discard;\r\n#endif\r\n  point.y = min(point.y, 0.0);\r\n  if (length(point) > 1.0) discard;\r\n#endif // FAT_LINES\r\n  \r\n#ifdef ROUND_POINTS\r\n  vec2 coord = gl_PointCoord - vec2(0.5);\r\n  if (length(coord) > 0.5) discard;\r\n#endif\r\n  \r\n#if NCLIPPLANES > 0\r\n  for (int i = 0; i < NCLIPPLANES; i++)\r\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\r\n#endif\r\n    \r\n#ifdef FIXED_QUADS\r\n    vec3 n = vec3(0., 0., 1.);\r\n#elif defined(IS_LIT)\r\n    vec3 n = normalize(vNormal.xyz);\r\n#endif\r\n    \r\n#ifdef IS_TWOSIDED\r\n    if ((normz <= 0.) != front) discard;\r\n#endif\r\n    \r\n#ifdef IS_LIT\r\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\r\n    vec3 lightdir;\r\n    vec4 colDiff;\r\n    vec3 halfVec;\r\n    vec4 lighteffect = vec4(emission, 0.);\r\n    vec3 col;\r\n    float nDotL;\r\n#ifdef FIXED_QUADS\r\n    n = -faceforward(n, n, eye);\r\n#endif\r\n    \r\n#if NLIGHTS > 0\r\n    for (int i=0;i<NLIGHTS;i++) {\r\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\r\n      lightdir = lightDir[i];\r\n      if (!viewpoint[i])\r\n        lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\r\n      if (!finite[i]) {\r\n        halfVec = normalize(lightdir + eye);\r\n      } else {\r\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\r\n        halfVec = normalize(lightdir + eye);\r\n      }\r\n      col = ambient[i];\r\n      nDotL = dot(n, lightdir);\r\n      col = col + max(nDotL, 0.) * colDiff.rgb;\r\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\r\n      lighteffect = lighteffect + vec4(col, colDiff.a);\r\n    }\r\n#endif\r\n    \r\n#else // not IS_LIT\r\n    vec4 colDiff = vCol;\r\n    vec4 lighteffect = colDiff;\r\n#endif\r\n    \r\n#ifdef IS_TEXT\r\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\r\n#endif\r\n    \r\n#ifdef HAS_TEXTURE\r\n#ifdef TEXTURE_rgb\r\n    vec4 textureColor = lighteffect*vec4(texture2D(uSampler, vTexcoord).rgb, 1.);\r\n#endif\r\n    \r\n#ifdef TEXTURE_rgba\r\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\r\n#endif\r\n    \r\n#ifdef TEXTURE_alpha\r\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\r\n    float luminance = dot(vec3(1.,1.,1.), textureColor.rgb)/3.;\r\n    textureColor =  vec4(lighteffect.rgb, lighteffect.a*luminance);\r\n#endif\r\n    \r\n#ifdef TEXTURE_luminance\r\n    vec4 textureColor = vec4(lighteffect.rgb*dot(texture2D(uSampler, vTexcoord).rgb, vec3(1.,1.,1.))/3., lighteffect.a);\r\n#endif\r\n    \r\n#ifdef TEXTURE_luminance_alpha\r\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\r\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\r\n    textureColor = vec4(lighteffect.rgb*luminance, lighteffect.a*textureColor.a);\r\n#endif\r\n    \r\n    fragColor = textureColor;\r\n\r\n#elif defined(IS_TEXT)\r\n    if (textureColor.a < 0.1)\r\n      discard;\r\n    else\r\n      fragColor = textureColor;\r\n#else\r\n    fragColor = lighteffect;\r\n#endif // HAS_TEXTURE\r\n    \r\n#ifdef HAS_FOG\r\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\r\n    // In Exp and Exp2: use density = density/far\r\n    // fogF will be the proportion of fog\r\n    // Initialize it to the linear value\r\n    float fogF;\r\n    if (uFogMode > 0) {\r\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\r\n      if (uFogMode > 1)\r\n        fogF = mix(uFogParms.w, 1.0, fogF);\r\n      fogF = fogF*uFogParms.z;\r\n      if (uFogMode == 2)\r\n        fogF = 1.0 - exp(-fogF);\r\n      // Docs are wrong: use (density*c)^2, not density*c^2\r\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\r\n      else if (uFogMode == 3)\r\n        fogF = 1.0 - exp(-fogF*fogF);\r\n      fogF = clamp(fogF, 0.0, 1.0);\r\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\r\n    } else gl_FragColor = fragColor;\r\n#else\r\n    gl_FragColor = fragColor;\r\n#endif // HAS_FOG\r\n    \r\n}\r\n</script><!--/html_preserve-->\r\n<script src=\"../../../../../site_libs/CanvasMatrix4-0.111.6/CanvasMatrix.src.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}