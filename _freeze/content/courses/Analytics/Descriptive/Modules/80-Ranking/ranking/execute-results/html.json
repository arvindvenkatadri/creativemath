{
  "hash": "25b6f61ecfadb2e7b53f86e2e0e829f2",
  "result": {
    "markdown": "---\ntitle: \"\\U0001F58F Ratings and Rankings\"\nsubtitle: \"Ranking\"\nauthor: \"Arvind V.\"\ndate: 10 Feb 2023\ndate-modified: \"2023-11-09\"\norder : 80\nabstract: \"Comparisons between observations and between variables\"\nimage: preview.jpg\nimage-alt: Photo by Jonathan Chng on Unsplash\ncategories:\n- Bar Charts\n- Lollipop Charts\n- Radar Charts\n- Word Clouds\n- Bump Charts\nbibliography: \n  - grateful-refs.bib\ncitation: true\n#suppress-bibliography: true\n---\n\n\n## {{< fa folder-open >}} Slides and Tutorials\n\nTBD.\n\n## {{< iconify noto-v1 package >}} Setting up R Packages\n\n\n::: {.cell hash='ranking_cache/html/setup_b1069e7de76a1213dba50209246a1068'}\n\n````{.cell-code}\n```{{r setup, message=FALSE}}\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(tidyverse) # includes ggplot for plotting\nlibrary(mosaic)\nlibrary(ggformula)\n\nlibrary(ggbump) # Bump Charts\n\nlibrary(ggiraphExtra) # Radar, Spine, Donut and Donut-Pie combo charts !!\n\n# install.packages(\"devtools\")\n# devtools::install_github(\"ricardo-bion/ggradar\")\nlibrary(ggradar) # Radar Plots\n```\n````\n:::\n\n::: {.cell hash='ranking_cache/html/Extra Pedagogical Packages_92e36600eae08f33ee1a4255a31a690d'}\n\n:::\n\n\n## {{< iconify fxemoji japanesesymbolforbeginner >}} What graphs are we going to see today?\n\nWhen we wish to compare the size of things and rank them, there are\nquite a few ways to do it.\n\nBar Charts and Lollipop Charts are immediately obvious when we wish to\nrank things on *one* aspect or parameter.\n\nWhen we wish to rank the same set of objects against **multiple**\naspects or parameters, then we can use Bump Charts and Radar Charts.\n\n## {{< iconify openmoji poppy >}} Lollipop Charts\n\n\n::: {.cell hash='ranking_cache/html/unnamed-chunk-2_b40ea44485c9768cc25389d9a9b452fc'}\n\n````{.cell-code}\n```{{r}}\n# Sample data set\nset.seed(1)\ndf1 <- tibble(product = LETTERS[1:10],\n                 rank = sample(20:35, 10, replace = TRUE))\ndf1\n\ngf_segment(0 + rank ~ product + product, data = df1) %>% \n# A formula with shape y + yend ~ x + xend.\n  \n  gf_point(rank ~ product, colour = ~ product, \n           size = 5,\n           ylab = \"Rank\",\n           xlab = \"Product\")\n\n\n# Compare with ggplot code:\n# ggplot(df1) + \n#   geom_segment(aes(x = x, xend = x, y = 0, yend = y)) + \n#   geom_point(aes(x = x, y = y, colour = x), size = 5)\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"product\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"rank\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"A\",\"2\":\"28\"},{\"1\":\"B\",\"2\":\"23\"},{\"1\":\"C\",\"2\":\"26\"},{\"1\":\"D\",\"2\":\"20\"},{\"1\":\"E\",\"2\":\"21\"},{\"1\":\"F\",\"2\":\"32\"},{\"1\":\"G\",\"2\":\"26\"},{\"1\":\"H\",\"2\":\"30\"},{\"1\":\"I\",\"2\":\"33\"},{\"1\":\"J\",\"2\":\"21\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n::: {.cell-output-display}\n![](ranking_files/figure-html/unnamed-chunk-2-1.png){width=2100}\n:::\n:::\n\n\nWe can flip this horizontally *and* reorder the $x$ categories in order\nof decreasing ( or increasing ) $y$, using `forcats::fct_reorder`:\n\n\n::: {.cell hash='ranking_cache/html/unnamed-chunk-3_aef563dff0a289d18280fbab53410594'}\n\n````{.cell-code}\n```{{r}}\ngf_segment(0 + rank ~ fct_reorder(product, - rank) + \n             fct_reorder(product, - rank), \n           data = df1) %>%\n  # A formula with shape y + yend ~ x + xend.\n  \n  gf_point(rank ~ product, colour = ~ product, size = 5) %>%\n  \n  gf_refine(coord_flip()) %>%\n  gf_labs(x = \"Product\", y = \"Rank\") %>%\n  gf_theme(theme_minimal())\n\n\n# Compare with ggplot code\n# ggplot(df1) + \n#   geom_segment(aes(x = fct_reorder(x, -y), # in decreasing order of y\n#                    xend = fct_reorder(x, -y), \n#                    y = 0, \n#                    yend = y)) + \n#   geom_point(aes(x = x, y = y, colour = x), size = 5) +\n#   coord_flip() + \n#   xlab(\"Group\") +\n#   ylab(\"\") +\n#   theme_minimal()\n```\n````\n\n::: {.cell-output-display}\n![](ranking_files/figure-html/unnamed-chunk-3-1.png){width=2100}\n:::\n:::\n\n\n## {{< iconify teenyicons curved-connector-outline >}} Bump Charts\n\nBump Charts track the ranking of several objects based on *other*\nparameters, such as time/month or even category. For instance, what is\nthe opinion score of a set of products across various categories of\nusers?\n\n\n::: {.cell hash='ranking_cache/html/unnamed-chunk-4_66902b1b479fd5d9e5741cf4a445ef62'}\n\n````{.cell-code}\n```{{r}}\nyear <- rep(2019:2021, 4)\nposition <- c(4, 2, 2, 3, 1, 4, 2, 3, 1, 1, 4, 3)\nproduct <- c(\"A\", \"A\", \"A\",\n            \"B\", \"B\", \"B\", \n            \"C\", \"C\", \"C\",\n            \"D\", \"D\", \"D\")\n\ndf2 <- tibble(year,position,product)\n\ndf2\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"year\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"position\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"product\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"2019\",\"2\":\"4\",\"3\":\"A\"},{\"1\":\"2020\",\"2\":\"2\",\"3\":\"A\"},{\"1\":\"2021\",\"2\":\"2\",\"3\":\"A\"},{\"1\":\"2019\",\"2\":\"3\",\"3\":\"B\"},{\"1\":\"2020\",\"2\":\"1\",\"3\":\"B\"},{\"1\":\"2021\",\"2\":\"4\",\"3\":\"B\"},{\"1\":\"2019\",\"2\":\"2\",\"3\":\"C\"},{\"1\":\"2020\",\"2\":\"3\",\"3\":\"C\"},{\"1\":\"2021\",\"2\":\"1\",\"3\":\"C\"},{\"1\":\"2019\",\"2\":\"1\",\"3\":\"D\"},{\"1\":\"2020\",\"2\":\"4\",\"3\":\"D\"},{\"1\":\"2021\",\"2\":\"3\",\"3\":\"D\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n::: callout-note\n## `ggbump` uses `ggplot` syntax\n\nWe need to use a new package called, what else, `ggbump` to create our\n`Bump Charts`: Here again we do not yet have a `ggformula` equivalent .\nNote the `+` syntax with ggplot code!!\n:::\n\n\n::: {.cell hash='ranking_cache/html/bump-1_3f27f2981b494b07c76075b6ee080ab2'}\n\n````{.cell-code}\n```{{r}}\n#| label: bump-1\nlibrary(ggbump)\n\nggplot(df2) +\n  geom_bump(aes(x = year, y = position, color = product)) +\n  geom_point(aes(x = year, y = position, color = product),\n             size = 6) +\n    theme_minimal() +\n    xlab(\"Year\") +\n    ylab(\"Rank\") +\n    scale_color_brewer(palette = \"RdBu\") # Change Colour Scale\n```\n````\n\n::: {.cell-output-display}\n![](ranking_files/figure-html/bump-1-1.png){width=2100}\n:::\n:::\n\n\nWe can add labels along the \"bump lines\" and remove the legend\naltogether:\n\n\n::: {.cell hash='ranking_cache/html/bump-2_70329c02fc4ebd078aee2e8f7cbc93ce'}\n\n````{.cell-code}\n```{{r}}\n#| label: bump-2\n\nggplot(df2) +\n  geom_bump(aes(x = year, y = position, color = product)) +\n  geom_point(aes(x = year, y = position, color = product),\n             size = 6) +\n  theme_minimal() +\n  scale_color_brewer(palette = \"RdBu\") + # Change Colour Scale\n# Same as before up to here\n# Add the labels at start and finish\n\n  geom_text(data = df2 %>% filter(year == min(year)),\n            aes(x = year - 0.1, label = product, y = position),\n            size = 5, hjust = 1) +\n  geom_text(data = df2 %>% filter(year == max(year)),\n            aes(x = year + 0.1, label = product, y = position),\n            size = 5, hjust = 0) +\n  xlab(\"Year\") +\n  ylab(\"Rank\") +\n  theme(legend.position = \"none\")\n```\n````\n\n::: {.cell-output-display}\n![](ranking_files/figure-html/bump-2-1.png){width=2100}\n:::\n:::\n\n\n## {{< iconify ant-design radar-chart-outlined >}} Radar Charts\n\nWhat if your marketing folks had rated some products along several\ndifferent desirable criteria? Such data, where a certain set of items\n(Qualitative!!) are **rated** (Quantitative !!) against another set\n(Qualitative again!!) can be plotted on a roughly circular set of axes,\nwith the radial distance defining the rank against each axes.\n\nOf course, we will use the aptly named `ggradar`, which is at this time\n(Feb 2023) a development version and not yet part of CRAN. We will still\ntry it, and another package `ggiraphExtra` which IS a part of CRAN ( and\nhas some other capabilities too, which are worth exploring!)\n\n\n::: {.cell hash='ranking_cache/html/using ggradar_a8f2dd952704918ec4d699ba62cb8bca'}\n\n````{.cell-code}\n```{{r using ggradar}}\n#library(ggradar)\n\nset.seed(4)\ndf3 <- tibble(Product = c(\"G1\", \"G2\", \"G3\"),\n              Power = runif(3), \n              Cost = runif(3),\n              Harmony = runif(3),\n              Style = runif(3),\n              Size = runif(3),\n              Manufacturability = runif(3),\n              Durability = runif(3),\n              Universality = runif(3))\ndf3\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Product\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Power\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Cost\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Harmony\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Style\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Size\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Manufacturability\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Durability\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Universality\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"G1\",\"2\":\"0.585800305\",\"3\":\"0.2773750\",\"4\":\"0.7244059\",\"5\":\"0.07314447\",\"6\":\"0.1000535\",\"7\":\"0.4551024\",\"8\":\"0.9622046\",\"9\":\"0.9966129\"},{\"1\":\"G2\",\"2\":\"0.008945796\",\"3\":\"0.8135742\",\"4\":\"0.9060922\",\"5\":\"0.75467503\",\"6\":\"0.9540688\",\"7\":\"0.9710557\",\"8\":\"0.7617024\",\"9\":\"0.5062709\"},{\"1\":\"G3\",\"2\":\"0.293739612\",\"3\":\"0.2604278\",\"4\":\"0.9490402\",\"5\":\"0.28600062\",\"6\":\"0.4156071\",\"7\":\"0.5839880\",\"8\":\"0.7145085\",\"9\":\"0.4899432\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n::: callout-note\n### Wide Form Data\n\nLook at the data: this is **wide form data**. The columns pertaining to each of the Product-Features would normally be stacked into two columns, one with the Feature and the other with the score. Note the trio: Qual(Product) + Quant(Scores) + Qual(Criteria, multi-column)\n\n![](https://github.com/gadenbuie/tidyexplain/raw/main/images/tidyr-pivoting.gif)\n:::\n\n::: column-margin\n#### {{< iconify icon-park pivot-table >}} Data: Wide to Long\n\n\n::: {.cell .column-margin hash='ranking_cache/html/unnamed-chunk-7_916d9737db3bab4e93bb68bbbf5fdded'}\n\n````{.cell-code}\n```{{r}}\n#| column: margin\ndf3 %>% \n  pivot_longer(cols = c(-Product), \n               names_to = \"Feature\", \n               values_to = \"Score\") %>% \n  arrange(Product)\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Product\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Feature\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Score\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"G1\",\"2\":\"Power\",\"3\":\"0.585800305\"},{\"1\":\"G1\",\"2\":\"Cost\",\"3\":\"0.277374958\"},{\"1\":\"G1\",\"2\":\"Harmony\",\"3\":\"0.724405893\"},{\"1\":\"G1\",\"2\":\"Style\",\"3\":\"0.073144469\"},{\"1\":\"G1\",\"2\":\"Size\",\"3\":\"0.100053522\"},{\"1\":\"G1\",\"2\":\"Manufacturability\",\"3\":\"0.455102418\"},{\"1\":\"G1\",\"2\":\"Durability\",\"3\":\"0.962204624\"},{\"1\":\"G1\",\"2\":\"Universality\",\"3\":\"0.996612857\"},{\"1\":\"G2\",\"2\":\"Power\",\"3\":\"0.008945796\"},{\"1\":\"G2\",\"2\":\"Cost\",\"3\":\"0.813574215\"},{\"1\":\"G2\",\"2\":\"Harmony\",\"3\":\"0.906092151\"},{\"1\":\"G2\",\"2\":\"Style\",\"3\":\"0.754675027\"},{\"1\":\"G2\",\"2\":\"Size\",\"3\":\"0.954068775\"},{\"1\":\"G2\",\"2\":\"Manufacturability\",\"3\":\"0.971055656\"},{\"1\":\"G2\",\"2\":\"Durability\",\"3\":\"0.761702403\"},{\"1\":\"G2\",\"2\":\"Universality\",\"3\":\"0.506270894\"},{\"1\":\"G3\",\"2\":\"Power\",\"3\":\"0.293739612\"},{\"1\":\"G3\",\"2\":\"Cost\",\"3\":\"0.260427771\"},{\"1\":\"G3\",\"2\":\"Harmony\",\"3\":\"0.949040221\"},{\"1\":\"G3\",\"2\":\"Style\",\"3\":\"0.286000621\"},{\"1\":\"G3\",\"2\":\"Size\",\"3\":\"0.415607119\"},{\"1\":\"G3\",\"2\":\"Manufacturability\",\"3\":\"0.583987980\"},{\"1\":\"G3\",\"2\":\"Durability\",\"3\":\"0.714508535\"},{\"1\":\"G3\",\"2\":\"Universality\",\"3\":\"0.489943238\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n:::\n\n### {{< iconify icon-park radar-chart >}} Using `ggradar`\n\n\n::: {.cell hash='ranking_cache/html/unnamed-chunk-8_b501bb7b1a2737e8200586d0ccbb49ec'}\n\n````{.cell-code}\n```{{r}}\nggradar::ggradar(plot.data = df3,\n                 axis.label.size = 3, # Titles of Params\n                 grid.label.size = 4, # Score Values/Circles\n                 group.point.size = 3,# Product Points Sizes\n                 group.line.width = 1, # Product Line Widths\n                 fill = TRUE, # fill the radar polygons\n                 fill.alpha = 0.3, # Not too dark, Arvind\n                 legend.title = \"Product\") +\n  theme_void()\n```\n````\n\n::: {.cell-output-display}\n![](ranking_files/figure-html/unnamed-chunk-8-1.png){width=2100}\n:::\n:::\n\n\n### {{< iconify flat-color-icons radar-plot >}} Using `ggiraphExtra`\n\nFrom the `ggiraphExtra` website:\n\n> Package `ggiraphExtra` contains many useful functions for exploratory\n> plots. These functions are made by both 'ggplot2' and 'ggiraph'\n> packages. You can make a static ggplot or an interactive ggplot by\n> setting the parameter interactive=TRUE.\n\n\n::: {.cell hash='ranking_cache/html/using ggiraphExtra_6341123411b9b831469d7e24a86091c6'}\n\n````{.cell-code}\n```{{r using ggiraphExtra}}\n# library(ggiraphExtra)\n\nggiraphExtra::ggRadar(data = df3,\n        aes(colour = Product),\n        rescale = FALSE,\n        title = \"Using ggiraphExtra\"\n          )  + # recale = TRUE makes it look different...try!!\n  theme_minimal()\n```\n````\n\n::: {.cell-output-display}\n![](ranking_files/figure-html/using ggiraphExtra-1.png){width=2100}\n:::\n:::\n\n\nBoth render very similar-looking radar charts and the syntax is not too\nintimidating!!\n\n## {{< iconify icon-park me >}} Your Turn\n\n1.  Take the `HELPrct` dataset from our well used `mosaicData` package.\n    Plot ranking charts using each of the public health issues that you\n    can see in that dataset. What choice will you make for the the axes?\n2.  Try the `SaratogaHouses` dataset also from `mosaicData`.\n\n## {{< iconify ooui references-ltr >}} References\n::: {#refs style=\"font-size: 60%;\"}\n\n\n::: {.cell hash='ranking_cache/html/unnamed-chunk-9_7e3484b2c32ef6f7b29f80755692feca'}\n::: {.cell-output-display}\nPackage        Version   Citation      \n-------------  --------  --------------\nggbump         0.1.0     @ggbump       \nggiraphExtra   0.3.0     @ggiraphExtra \nggradar        0.2       @ggradar\n:::\n:::\n\n\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}