{
  "hash": "a0e072c93bcdadc1f0ec0095ae7e97ca",
  "result": {
    "markdown": "---\ntitle: \"\\U0001F409 Visualizing Categorical Data\"\nauthor: \"Arvind Venkatadri\"\ndate: 27/Dec/2022\ndate-modified: \"2023-10-18\"\nabstract: Types, Categories, and Counts\norder: 40\ncategories:\n- Proportions\n- Frequency Tables\n- Contingency Tables\n- Numerical Data in Groups\n- Margins\n- Likert Scale data\n- Bar Plots (for Contingency Tables)\n- Mosaic Plots\n- Balloon Plots\n- Pie Charts\n- Correspondence Analysis\ncitation: true\n---\n\n\n## {{< iconify noto-v1 package >}} Setting up R Packages {#sec-setting-up-r-packages}\n\n\n::: {.cell hash='index_cache/html/setup_f60b09c6db74a07d48a6296db4821a98'}\n\n````{.cell-code}\n```{{r}}\n#| label: setup\n#| include: true\n#| message: false\n\nlibrary(tidyverse)\nlibrary(mosaic) # Our trusted friend\nlibrary(GGally) \nlibrary(skimr)\nlibrary(vcd) # Michael Friendly's package, Visualizing Categorical Data\nlibrary(vcdExtra) # Categorical Data Sets\nlibrary(ggmosaic) # Mosaic Plots\nlibrary(resampledata) # More datasets\n\nlibrary(sjPlot) # Likert Scale Plots\nlibrary(sjlabelled) # Creating Labelled Data for Likert Plots\n\nlibrary(ggpubr) # Colours, Themes and new geometries in ggplot\nlibrary(ca) # Correspondence Analysis, for use some day\n\n## Making Tables\nlibrary(kableExtra) # html styled tables\nlibrary(gt) # Making Cool Tables\nlibrary(patchwork) # To arrange plots on a grid and other things\n\n## Plot Theme\ntheme_set(new = theme_classic())\n```\n````\n:::\n\n\n## {{< iconify openmoji japanese-symbol-for-beginner >}} Introduction\n\nTo recall, a categorical **variable** is one for which the possible\nmeasured or assigned values consist of a discrete set of categories,\nwhich may be `ordered` or `unordered`. Some typical examples are:\n\n-   Gender, with categories \"Male,\" \"Female.\"\n-   Marital status, with categories \"Never married,\" \"Married,\"\n    \"Separated,\" \"Divorced,\" \"Widowed.\"\n-   Fielding position (in ~~baseball~~ cricket), with categories\n    \"Slips,\"Cover \",\"Mid-off \"Deep Fine Leg\", \"Close-in\", \"Deep\"...\n-   Side effects (in a pharmacological study), with categories \"None,\"\n    \"Skin rash,\" \"Sleep disorder,\" \"Anxiety,\" . . ..\n-   Political attitude, with categories \"Left,\" \"Center,\" \"Right.\"\n-   Party preference (in India), with categories \"BJP\" \"Congress,\"\n    \"AAP,\" \"TMC\"...\n-   Treatment outcome, with categories \"no improvement,\" \"some\n    improvement,\" or \"marked improvement.\"\n-   Age, with categories \"0--9,\" \"10--19,\" \"20--29,\" \"30--39,\" . . . .\n-   Number of children, with categories 0, 1, 2, . . . .\n\nAs these examples suggest, categorical variables differ in the number of\ncategories: we often distinguish binary variables (or dichotomous\nvariables) such as Gender from those with more than two categories\n(called *polytomous* variables).\n\n\n{{< video https://www.youtube.com/embed/7NhNeADL8fA >}}\n\n\n\n## {{< iconify mdi category-plus-outline >}} Categorical Data\n\nFrom the `{vcd package}` vignette:\n\n> The first thing you need to know is that categorical data can be\n> represented in **three different forms in R**, and it is sometimes\n> necessary to convert from one form to another, for carrying out\n> statistical tests, fitting models or visualizing the results.\n\n-   Case Data\n-   Frequency Data\n-   Cross-Tabular Count Data\n\nLet us first see examples of each.\n\n::: {.panel-tabset .nav-pills style=\"background: whitesmoke;\"}\n### Case Form\n\nFrom Michael Friendly [Discrete Data Analysis and\nVisualization](http://ddar.datavis.ca/pages/home) :\n\n> In many circumstances, data is recorded on each individual or\n> experimental unit. Data in this form is called case data, or data in\n> case form. Containing *individual observations* with one or more\n> **categorical** factors, used as classifying variables. The total\n> number of observations is `nrow(X)`, and the number of variables is\n> `ncol(X)`.\n\n\n::: {.cell layout-ncol=\"2\" hash='index_cache/html/case-form-data_da64a1b8b9973d3623c08efc1a5382bc'}\n\n````{.cell-code}\n```{{r}}\n#| label: case-form-data\n#| layout-ncol: 2\n\nclass(Arthritis)\n\n# Tibble as HTML for presentation\nArthritis %>%  \n  head(10) %>% \n  kbl(caption = \"Arthritis Treatments and Effects<br> First 10 Observations\",centering = TRUE) %>%\n  kable_classic_2(html_font = \"Cambria\", full_width = F)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"data.frame\"\n```\n:::\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic-2\" style=\"font-family: Cambria; width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Arthritis Treatments and Effects<br> First 10 Observations</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> ID </th>\n   <th style=\"text-align:left;\"> Treatment </th>\n   <th style=\"text-align:left;\"> Sex </th>\n   <th style=\"text-align:right;\"> Age </th>\n   <th style=\"text-align:left;\"> Improved </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 57 </td>\n   <td style=\"text-align:left;\"> Treated </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 27 </td>\n   <td style=\"text-align:left;\"> Some </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 46 </td>\n   <td style=\"text-align:left;\"> Treated </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 29 </td>\n   <td style=\"text-align:left;\"> None </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 77 </td>\n   <td style=\"text-align:left;\"> Treated </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:left;\"> None </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:left;\"> Treated </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 32 </td>\n   <td style=\"text-align:left;\"> Marked </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 36 </td>\n   <td style=\"text-align:left;\"> Treated </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 46 </td>\n   <td style=\"text-align:left;\"> Marked </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:left;\"> Treated </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 58 </td>\n   <td style=\"text-align:left;\"> Marked </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 75 </td>\n   <td style=\"text-align:left;\"> Treated </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 59 </td>\n   <td style=\"text-align:left;\"> None </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 39 </td>\n   <td style=\"text-align:left;\"> Treated </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 59 </td>\n   <td style=\"text-align:left;\"> Marked </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 33 </td>\n   <td style=\"text-align:left;\"> Treated </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 63 </td>\n   <td style=\"text-align:left;\"> None </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 55 </td>\n   <td style=\"text-align:left;\"> Treated </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 63 </td>\n   <td style=\"text-align:left;\"> None </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nThe `Arthritis` data set has three factors and two *integer* variables.\nOne of the three factors `Improved` is an **ordered factor**.\n\n1)  ID\n2)  Treatment: a factor; Placebo or Treated\n3)  Sex: a factor, M / F\n4)  Age: integer\n5)  Improved: **Ordinal factor**; None \\< Some \\< Marked\n\nEach row in the `Arthritis` dataset is a separate case or observation.\n\n### Frequency Data Form\n\nData in frequency form has already been tabulated and *aggregated* by\n**counting** over the (combinations of ) categories of the table\nvariables. When the data are in **case form**, we can always trace any\nobservation back to its individual identifier or data record, since each\nrow is a unique observation or *case*; the reverse, with the **Frequency\nForm** is rarely possible.\n\nFrequency Data is usually a data frame, with columns of categorical\nvariables and at least one column containing `frequency` or `count`\ninformation.\n\n\n::: {.cell .column-body-outset-right layout-ncol=\"2\" hash='index_cache/html/unnamed-chunk-3_b9b7f43b1ce1b89bc8886c3014ddfcc1'}\n\n````{.cell-code}\n```{{r}}\n#| layout-ncol: 2\n#| column: body-outset-right\nstr(GSS)\n\n# Tibble as HTML for presentation\nGSS %>%\n  kbl(caption = \"General Social Survey\",centering = TRUE) %>%\n  kable_classic_2(html_font = \"Cambria\", full_width = F)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t6 obs. of  3 variables:\n $ sex  : Factor w/ 2 levels \"female\",\"male\": 1 2 1 2 1 2\n $ party: Factor w/ 3 levels \"dem\",\"indep\",..: 1 1 2 2 3 3\n $ count: num  279 165 73 47 225 191\n```\n:::\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic-2\" style=\"font-family: Cambria; width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>General Social Survey</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> sex </th>\n   <th style=\"text-align:left;\"> party </th>\n   <th style=\"text-align:right;\"> count </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> female </td>\n   <td style=\"text-align:left;\"> dem </td>\n   <td style=\"text-align:right;\"> 279 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> male </td>\n   <td style=\"text-align:left;\"> dem </td>\n   <td style=\"text-align:right;\"> 165 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> female </td>\n   <td style=\"text-align:left;\"> indep </td>\n   <td style=\"text-align:right;\"> 73 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> male </td>\n   <td style=\"text-align:left;\"> indep </td>\n   <td style=\"text-align:right;\"> 47 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> female </td>\n   <td style=\"text-align:left;\"> rep </td>\n   <td style=\"text-align:right;\"> 225 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> male </td>\n   <td style=\"text-align:left;\"> rep </td>\n   <td style=\"text-align:right;\"> 191 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nRespondents in the GSS survey were classified by `sex` and `party`\nidentification. As can be seen, there is a **count** for every\ncombination of the two *categorical* variables, `sex` and `party`.\n\n### Table form\n\nTable Form Data can be a `matrix`, `array` or `table object`, whose\nelements are the frequencies in an **n-way table**. The variable names\n(factors) and their levels are given by `dimnames(X)`.\n\n\n::: {.cell hash='index_cache/html/Table-Form_15f9e2489e22e627e720500d52ee3655'}\n\n````{.cell-code}\n```{{r}}\n#| label:  Table-Form\n\nHairEyeColor\nclass(HairEyeColor)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n, , Sex = Male\n\n       Eye\nHair    Brown Blue Hazel Green\n  Black    32   11    10     3\n  Brown    53   50    25    15\n  Red      10   10     7     7\n  Blond     3   30     5     8\n\n, , Sex = Female\n\n       Eye\nHair    Brown Blue Hazel Green\n  Black    36    9     5     2\n  Brown    66   34    29    14\n  Red      16    7     7     7\n  Blond     4   64     5     8\n\n[1] \"table\"\n```\n:::\n:::\n\n\n`HairEyeColor` is a \"two-way\" table, consisting of **two tables**, one\nfor `Sex = Female` and the other for `Sex = Male`. The total number of\nobservations is `sum(X)`. The number of dimensions of the table is\n`length(dimnames(X))`, and the table sizes are given by\n`sapply(dimnames(X), length)`. The data looks like a n-dimensional cube\nand needs n-way tables to represent.\n\n\n::: {.cell hash='index_cache/html/exploring-tables_0498dba17b14a8b635189f443ad0c70b'}\n\n````{.cell-code}\n```{{r}}\n#| label: exploring-tables\nsum(HairEyeColor)\ndimnames(HairEyeColor)\nsapply(dimnames(HairEyeColor), length)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 592\n$Hair\n[1] \"Black\" \"Brown\" \"Red\"   \"Blond\"\n\n$Eye\n[1] \"Brown\" \"Blue\"  \"Hazel\" \"Green\"\n\n$Sex\n[1] \"Male\"   \"Female\"\n\nHair  Eye  Sex \n   4    4    2 \n```\n:::\n:::\n\n\nA good way to think of **tabular data** is to think of a Rubik's Cube.\n\n![Rubik's Cube model for Multi-Table\nData](cube.jpg){fig-alt=\"Rubik's Cube model for Multi-Table Data\"\nfig-align=\"center\" width=\"352\"}\n\n::: callout-tip\n#### Rubik's Cube and Categorical Data Tables\n\nEach of the edges is an *Ordinal Variable*, each segment represents a\n*level* in the variable. So each face of the Cube represents *two*\nordinal variables. Any segment is at the intersection of two\n(independent) levels of two variables, and the colour may be visualized\nas a *count*. This array of counts on a face is a 2D or **2-Way Table**.\n( More on this later )\n:::\n\nSince we can only print 2D tables, we hold one face in front and the\nimage we see is a 2-Way Table. Turning the Cube by 90 degrees gives us\nanother face with 2 variables, with one variable in common with the\nprevious face. If we consider two faces together, we get two 2-way\ntables, effectively allowing us to contemplate 3 categorical variables.\n\nMultiple 2-Way tables can be **flattened** into a single long table that\ncontains all counts for all combinations of categorical variables. This\ncan be visualized as \"opening up\" and laying flat the Rubik's cube, as\nwith a cardboard model of it.\n\n\n::: {.cell hash='index_cache/html/flattened-table_d85832a306dcec727ddef2a9beb2b99a'}\n\n````{.cell-code}\n```{{r}}\n#| label: flattened-table\nftable(HairEyeColor)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n            Sex Male Female\nHair  Eye                  \nBlack Brown       32     36\n      Blue        11      9\n      Hazel       10      5\n      Green        3      2\nBrown Brown       53     66\n      Blue        50     34\n      Hazel       25     29\n      Green       15     14\nRed   Brown       10     16\n      Blue        10      7\n      Hazel        7      7\n      Green        7      7\nBlond Brown        3      4\n      Blue        30     64\n      Hazel        5      5\n      Green        8      8\n```\n:::\n:::\n\n\nFinally, we may need to convert the (multiple) tables into a data frame\nor tibble:\n\n\n::: {.cell layout-ncol=\"2\" hash='index_cache/html/tables-to-data-frame_4572deab1be53b43ff4df83c79685ac7'}\n\n````{.cell-code}\n```{{r}}\n#| label: tables-to-data-frame\n#| layout-ncol: 2\n## Convert the two tables into a data frame\nHairEyeColor %>% \n  as_tibble() \n\n# Tibble as HTML for presentation\nHairEyeColor %>% \n  as_tibble() %>%  # Convert\n  kbl(caption = \"Hair Eye and Color\") %>% \n  kable_classic_2(html_font = \"Cambria\", full_width = F)\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Hair\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Eye\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Sex\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Black\",\"2\":\"Brown\",\"3\":\"Male\",\"4\":\"32\"},{\"1\":\"Brown\",\"2\":\"Brown\",\"3\":\"Male\",\"4\":\"53\"},{\"1\":\"Red\",\"2\":\"Brown\",\"3\":\"Male\",\"4\":\"10\"},{\"1\":\"Blond\",\"2\":\"Brown\",\"3\":\"Male\",\"4\":\"3\"},{\"1\":\"Black\",\"2\":\"Blue\",\"3\":\"Male\",\"4\":\"11\"},{\"1\":\"Brown\",\"2\":\"Blue\",\"3\":\"Male\",\"4\":\"50\"},{\"1\":\"Red\",\"2\":\"Blue\",\"3\":\"Male\",\"4\":\"10\"},{\"1\":\"Blond\",\"2\":\"Blue\",\"3\":\"Male\",\"4\":\"30\"},{\"1\":\"Black\",\"2\":\"Hazel\",\"3\":\"Male\",\"4\":\"10\"},{\"1\":\"Brown\",\"2\":\"Hazel\",\"3\":\"Male\",\"4\":\"25\"},{\"1\":\"Red\",\"2\":\"Hazel\",\"3\":\"Male\",\"4\":\"7\"},{\"1\":\"Blond\",\"2\":\"Hazel\",\"3\":\"Male\",\"4\":\"5\"},{\"1\":\"Black\",\"2\":\"Green\",\"3\":\"Male\",\"4\":\"3\"},{\"1\":\"Brown\",\"2\":\"Green\",\"3\":\"Male\",\"4\":\"15\"},{\"1\":\"Red\",\"2\":\"Green\",\"3\":\"Male\",\"4\":\"7\"},{\"1\":\"Blond\",\"2\":\"Green\",\"3\":\"Male\",\"4\":\"8\"},{\"1\":\"Black\",\"2\":\"Brown\",\"3\":\"Female\",\"4\":\"36\"},{\"1\":\"Brown\",\"2\":\"Brown\",\"3\":\"Female\",\"4\":\"66\"},{\"1\":\"Red\",\"2\":\"Brown\",\"3\":\"Female\",\"4\":\"16\"},{\"1\":\"Blond\",\"2\":\"Brown\",\"3\":\"Female\",\"4\":\"4\"},{\"1\":\"Black\",\"2\":\"Blue\",\"3\":\"Female\",\"4\":\"9\"},{\"1\":\"Brown\",\"2\":\"Blue\",\"3\":\"Female\",\"4\":\"34\"},{\"1\":\"Red\",\"2\":\"Blue\",\"3\":\"Female\",\"4\":\"7\"},{\"1\":\"Blond\",\"2\":\"Blue\",\"3\":\"Female\",\"4\":\"64\"},{\"1\":\"Black\",\"2\":\"Hazel\",\"3\":\"Female\",\"4\":\"5\"},{\"1\":\"Brown\",\"2\":\"Hazel\",\"3\":\"Female\",\"4\":\"29\"},{\"1\":\"Red\",\"2\":\"Hazel\",\"3\":\"Female\",\"4\":\"7\"},{\"1\":\"Blond\",\"2\":\"Hazel\",\"3\":\"Female\",\"4\":\"5\"},{\"1\":\"Black\",\"2\":\"Green\",\"3\":\"Female\",\"4\":\"2\"},{\"1\":\"Brown\",\"2\":\"Green\",\"3\":\"Female\",\"4\":\"14\"},{\"1\":\"Red\",\"2\":\"Green\",\"3\":\"Female\",\"4\":\"7\"},{\"1\":\"Blond\",\"2\":\"Green\",\"3\":\"Female\",\"4\":\"8\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div><table class=\" lightable-classic-2\" style=\"font-family: Cambria; width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Hair Eye and Color</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Hair </th>\n   <th style=\"text-align:left;\"> Eye </th>\n   <th style=\"text-align:left;\"> Sex </th>\n   <th style=\"text-align:right;\"> n </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Black </td>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 32 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 53 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Red </td>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 10 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Blond </td>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Black </td>\n   <td style=\"text-align:left;\"> Blue </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Blue </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 50 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Red </td>\n   <td style=\"text-align:left;\"> Blue </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 10 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Blond </td>\n   <td style=\"text-align:left;\"> Blue </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 30 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Black </td>\n   <td style=\"text-align:left;\"> Hazel </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 10 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Hazel </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 25 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Red </td>\n   <td style=\"text-align:left;\"> Hazel </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Blond </td>\n   <td style=\"text-align:left;\"> Hazel </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Black </td>\n   <td style=\"text-align:left;\"> Green </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Green </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 15 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Red </td>\n   <td style=\"text-align:left;\"> Green </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Blond </td>\n   <td style=\"text-align:left;\"> Green </td>\n   <td style=\"text-align:left;\"> Male </td>\n   <td style=\"text-align:right;\"> 8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Black </td>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 36 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 66 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Red </td>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 16 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Blond </td>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Black </td>\n   <td style=\"text-align:left;\"> Blue </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Blue </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 34 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Red </td>\n   <td style=\"text-align:left;\"> Blue </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Blond </td>\n   <td style=\"text-align:left;\"> Blue </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 64 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Black </td>\n   <td style=\"text-align:left;\"> Hazel </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Hazel </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 29 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Red </td>\n   <td style=\"text-align:left;\"> Hazel </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Blond </td>\n   <td style=\"text-align:left;\"> Hazel </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Black </td>\n   <td style=\"text-align:left;\"> Green </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Brown </td>\n   <td style=\"text-align:left;\"> Green </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 14 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Red </td>\n   <td style=\"text-align:left;\"> Green </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Blond </td>\n   <td style=\"text-align:left;\"> Green </td>\n   <td style=\"text-align:left;\"> Female </td>\n   <td style=\"text-align:right;\"> 8 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n:::\n\n## {{< iconify grommet-icons table-add >}} Creating Contingency Tables {#sec-creating-contingency-tables}\n\nMost plots for Categorical Data ( as we shall see ) require that the\ndata be converted into a ***Contingency Table*** ; even Statistical\ntests for Proportions ( the $\\chi^2$ test ) need Contingency Tables. The\n*Frequency Table* we encountered earlier is very close to being a\nfull-fledged Contingency Table.\n\nFrom [Wolfram\nAlpha](https://www.wolframalpha.com/input/?i=contingency+table):\n\n> A contingency table, sometimes called a **two-way frequency table**,\n> is a tabular mechanism with at least two rows and two columns used in\n> statistics to present categorical data in terms of frequency counts.\n> More precisely, an $r \\times c$ contingency table shows the observed\n> frequency of two variables the observed frequencies of which are\n> arranged into $r$ rows and $c$ columns. The intersection of a row and\n> a column of a contingency table is called a cell.\n\nIn this section we understand how to make Contingency Tables from each\nof the three forms. We will use `vcd`, `mosaic` and the `tidyverse`\npackages for our purposes. Then we will see how it can be visualized.\n\n::: {.panel-tabset .nav-pills style=\"background: whitesmoke;\"}\n### Using base R\n\n\n::: {.cell hash='index_cache/html/base-R-one-way-two-way_57a50e284a1b2206a8193f2890cf8447'}\n\n````{.cell-code}\n```{{r}}\n#| label: base-R-one-way-two-way\n\n# One Way Table ( one variable )\ntable(Arthritis$Treatment) # Contingency Table\n\n# 1-way Contingency Table\ntable(Arthritis$Treatment) %>% addmargins() # Contingency Table with margins\n###\n\n# 2-Way Contingency Tables\n# Choosing Treatment and Improved\ntable(Arthritis$Treatment, Arthritis$Improved) %>% addmargins() \n# Choosing Treatment and Sex\ntable(Arthritis$Sex, Arthritis$Improved) %>% addmargins()\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n\nPlacebo Treated \n     43      41 \n\nPlacebo Treated     Sum \n     43      41      84 \n         \n          None Some Marked Sum\n  Placebo   29    7      7  43\n  Treated   13    7     21  41\n  Sum       42   14     28  84\n        \n         None Some Marked Sum\n  Female   25   12     22  59\n  Male     17    2      6  25\n  Sum      42   14     28  84\n```\n:::\n:::\n\n\nWe can use `table()` ( and also `xtabs()` ) to generate\nmulti-dimensional tables too (More than 2-way) These will be printed out\nas a series of 2D tables, one for each value of the \"third\" parameter.\nWe can then *flatten* this set of tables using **ftable()** and add\nmargins to convert into a Contingency Table:\n\n\n::: {.cell hash='index_cache/html/r-base-three-way-table_e774fb6179aa1b3fcb28cb26a1fd9a21'}\n\n````{.cell-code}\n```{{r}}\n#| label: r-base-three-way-table\nmytable <- table(Arthritis$Treatment, Arthritis$Sex, Arthritis$Improved)\nmytable\n\n\n# Now flatten \nftable(mytable) \nftable(mytable) %>% addmargins()\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n, ,  = None\n\n         \n          Female Male\n  Placebo     19   10\n  Treated      6    7\n\n, ,  = Some\n\n         \n          Female Male\n  Placebo      7    0\n  Treated      5    2\n\n, ,  = Marked\n\n         \n          Female Male\n  Placebo      6    1\n  Treated     16    5\n\n                None Some Marked\n                                \nPlacebo Female    19    7      6\n        Male      10    0      1\nTreated Female     6    5     16\n        Male       7    2      5\n             Sum\n    19  7  6  32\n    10  0  1  11\n     6  5 16  27\n     7  2  5  14\nSum 42 14 28  84\n```\n:::\n:::\n\n\nA bit strange that the column labels disappear in the ftable when\nmargins are added...\n\n### Using the vcd package\n\nThe `vcd` ( Visualize Categorical Data ) package by Michael Friendly has\na convenient function to create Contingency Tables: `structable()`; this\nfunction produces a 'flat' representation of a high-dimensional\ncontingency table constructed by recursive splits (similar to the\nconstruction of mosaic charts/graphs). `structable` tends to render flat\ntables, of the kind that can be thought of as a \"text representation\" of\nthe `vcd::mosaic` plot:\n\nThe arguments of `structable` are:\n\n-   a formula $y + p \\sim x + z$ which shows which variables are to be\n    included as *columns* and *rows* respectively on a table\n-   a `data` argument, which can indicate a `data frame`\n\n\n::: {.cell layout-ncol=\"2\" hash='index_cache/html/vcd-data-frame-to-contingency-table_59fe0107647312b12712f4066bfca88f'}\n\n````{.cell-code}\n```{{r}}\n#| label: vcd-data-frame-to-contingency-table\n#| results: hold\n#| layout-ncol: 2\n\n# Three Way!!\narth_vcd <- vcd::structable(data = Arthritis, Treatment ~ Improved + Sex)\narth_vcd\nclass(arth_vcd)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n                Treatment Placebo Treated\nImproved Sex                             \nNone     Female                19       6\n         Male                  10       7\nSome     Female                 7       5\n         Male                   0       2\nMarked   Female                 6      16\n         Male                   1       5\n[1] \"structable\" \"ftable\"    \n```\n:::\n:::\n\n::: {.cell layout-ncol=\"2\" hash='index_cache/html/unnamed-chunk-11_e406be5d47ed9d5b301210f201126920'}\n\n````{.cell-code}\n```{{r}}\n#| layout-ncol: 2\n#| results: hold\n# With Margins\narth_vcd %>% as.matrix() %>% addmargins()\n\n# We can convert this to a tibble, unlike the `table` earlier!\narth_vcd %>% as.matrix() %>% addmargins() %>% as_tibble()\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n               Treatment\nImproved_Sex    Placebo Treated Sum\n  None_Female        19       6  25\n  None_Male          10       7  17\n  Some_Female         7       5  12\n  Some_Male           0       2   2\n  Marked_Female       6      16  22\n  Marked_Male         1       5   6\n  Sum                43      41  84\n```\n:::\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Placebo\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Treated\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sum\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"19\",\"2\":\"6\",\"3\":\"25\"},{\"1\":\"10\",\"2\":\"7\",\"3\":\"17\"},{\"1\":\"7\",\"2\":\"5\",\"3\":\"12\"},{\"1\":\"0\",\"2\":\"2\",\"3\":\"2\"},{\"1\":\"6\",\"2\":\"16\",\"3\":\"22\"},{\"1\":\"1\",\"2\":\"5\",\"3\":\"6\"},{\"1\":\"43\",\"2\":\"41\",\"3\":\"84\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell .column-body-outset-right layout-ncol=\"2\" hash='index_cache/html/vcd-multitable-to-contingency-table_5e5988ec573dbd3cbfb9d4f8e659f2f7'}\n\n````{.cell-code}\n```{{r}}\n#| label: vcd-multitable-to-contingency-table\n#| layout-ncol: 2\n#| column: body-outset-right\n# HairEyeColor is in multiple table form\n# structable flattens these into one, as for a mosaic chart\n\nHairEyeColor\nvcd::structable(HairEyeColor)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n, , Sex = Male\n\n       Eye\nHair    Brown Blue Hazel Green\n  Black    32   11    10     3\n  Brown    53   50    25    15\n  Red      10   10     7     7\n  Blond     3   30     5     8\n\n, , Sex = Female\n\n       Eye\nHair    Brown Blue Hazel Green\n  Black    36    9     5     2\n  Brown    66   34    29    14\n  Red      16    7     7     7\n  Blond     4   64     5     8\n\n             Eye Brown Blue Hazel Green\nHair  Sex                              \nBlack Male          32   11    10     3\n      Female        36    9     5     2\nBrown Male          53   50    25    15\n      Female        66   34    29    14\nRed   Male          10   10     7     7\n      Female        16    7     7     7\nBlond Male           3   30     5     8\n      Female         4   64     5     8\n```\n:::\n:::\n\n\n`UCBAdmissions` is already in Frequency Form i.e. a Contingency Table.\nBut it is a **set** of (two-way) Contingency Tables:\n\n\n::: {.cell .column-body-outset-right layout-ncol=\"3\" hash='index_cache/html/unnamed-chunk-13_6247877923676419c5037c05d994ad8d'}\n\n````{.cell-code}\n```{{r}}\n#| layout-ncol: 3\n#| column: body-outset-right\nUCBAdmissions\nvcd::structable(UCBAdmissions)\n\nstructable(UCBAdmissions) %>% as.matrix() %>% addmargins()\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n, , Dept = A\n\n          Gender\nAdmit      Male Female\n  Admitted  512     89\n  Rejected  313     19\n\n, , Dept = B\n\n          Gender\nAdmit      Male Female\n  Admitted  353     17\n  Rejected  207      8\n\n, , Dept = C\n\n          Gender\nAdmit      Male Female\n  Admitted  120    202\n  Rejected  205    391\n\n, , Dept = D\n\n          Gender\nAdmit      Male Female\n  Admitted  138    131\n  Rejected  279    244\n\n, , Dept = E\n\n          Gender\nAdmit      Male Female\n  Admitted   53     94\n  Rejected  138    299\n\n, , Dept = F\n\n          Gender\nAdmit      Male Female\n  Admitted   22     24\n  Rejected  351    317\n\n              Gender Male Female\nAdmit    Dept                   \nAdmitted A            512     89\n         B            353     17\n         C            120    202\n         D            138    131\n         E             53     94\n         F             22     24\nRejected A            313     19\n         B            207      8\n         C            205    391\n         D            279    244\n         E            138    299\n         F            351    317\n            Gender\nAdmit_Dept   Male Female  Sum\n  Admitted_A  512     89  601\n  Admitted_B  353     17  370\n  Admitted_C  120    202  322\n  Admitted_D  138    131  269\n  Admitted_E   53     94  147\n  Admitted_F   22     24   46\n  Rejected_A  313     19  332\n  Rejected_B  207      8  215\n  Rejected_C  205    391  596\n  Rejected_D  279    244  523\n  Rejected_E  138    299  437\n  Rejected_F  351    317  668\n  Sum        2691   1835 4526\n```\n:::\n:::\n\n\nNote that `structable` does not permit the adding of margins directly;\nit needs to be converted to a matrix for `addmargins()` to do its work.\n\n### Using the mosaic package\n\nI think this is the **simplest and most elegant way** of obtaining\nContingency Tables:\n\n\n::: {.cell layout-ncol=\"3\" hash='index_cache/html/using-mosaic_29bac6a0d2d29bdc29c34bffa92a9538'}\n\n````{.cell-code}\n```{{r}}\n#| label: using-mosaic\n#| layout-ncol: 3\n# One Way Table\nmosaicCore::tally( ~ substance, data = HELPrct, margins = TRUE)\n\n\n# Two-Way Tables\n# Two ways of producing the same result\ntally( sex ~ substance, data = HELPrct, margins = TRUE)\ntally(~ sex | substance, data = HELPrct, margins = TRUE)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\nsubstance\nalcohol cocaine  heroin   Total \n    177     152     124     453 \n        substance\nsex      alcohol cocaine heroin\n  female      36      41     30\n  male       141     111     94\n  Total      177     152    124\n        substance\nsex      alcohol cocaine heroin\n  female      36      41     30\n  male       141     111     94\n  Total      177     152    124\n```\n:::\n:::\n\n\nSo far these packages give Contingency Tables that are easy to see for\nhumans; some of these structures are also capable being passed directly\nto commands such as `stats::chisq.test()` or `janitor::chisq.test()`.\n\nOften we need Contingency Tables that are in `tibble` form and we need\nto perform some data processing using `dplyr` to get there.\n\n### Using the tidyverse\n\nDoing this with the `tidyverse` set of packages may seem\ncounter-intuitively long-winded, but the workflow is easily\nunderstandable.\n\nFirst we develop the counts:\n\n\n::: {.cell .column-page-inset-right layout-ncol=\"3\" hash='index_cache/html/tidyverse-for-Contingency-Tables_7e2f766e1b8171b61e6801db1ca9ab81'}\n\n````{.cell-code}\n```{{r}}\n#| label: tidyverse-for-Contingency-Tables\n#| layout-ncol: 3\n#| column: page-inset-right\n#| message: false\ndiamonds %>% count(cut)\ndiamonds %>% count(clarity)\n\ndiamonds %>% \n  group_by(cut, clarity) %>% \n  dplyr::summarise( count = n())\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"cut\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Fair\",\"2\":\"1610\"},{\"1\":\"Good\",\"2\":\"4906\"},{\"1\":\"Very Good\",\"2\":\"12082\"},{\"1\":\"Premium\",\"2\":\"13791\"},{\"1\":\"Ideal\",\"2\":\"21551\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div><div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"clarity\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"I1\",\"2\":\"741\"},{\"1\":\"SI2\",\"2\":\"9194\"},{\"1\":\"SI1\",\"2\":\"13065\"},{\"1\":\"VS2\",\"2\":\"12258\"},{\"1\":\"VS1\",\"2\":\"8171\"},{\"1\":\"VVS2\",\"2\":\"5066\"},{\"1\":\"VVS1\",\"2\":\"3655\"},{\"1\":\"IF\",\"2\":\"1790\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div><div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"cut\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"clarity\"],\"name\":[2],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"count\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Fair\",\"2\":\"I1\",\"3\":\"210\"},{\"1\":\"Fair\",\"2\":\"SI2\",\"3\":\"466\"},{\"1\":\"Fair\",\"2\":\"SI1\",\"3\":\"408\"},{\"1\":\"Fair\",\"2\":\"VS2\",\"3\":\"261\"},{\"1\":\"Fair\",\"2\":\"VS1\",\"3\":\"170\"},{\"1\":\"Fair\",\"2\":\"VVS2\",\"3\":\"69\"},{\"1\":\"Fair\",\"2\":\"VVS1\",\"3\":\"17\"},{\"1\":\"Fair\",\"2\":\"IF\",\"3\":\"9\"},{\"1\":\"Good\",\"2\":\"I1\",\"3\":\"96\"},{\"1\":\"Good\",\"2\":\"SI2\",\"3\":\"1081\"},{\"1\":\"Good\",\"2\":\"SI1\",\"3\":\"1560\"},{\"1\":\"Good\",\"2\":\"VS2\",\"3\":\"978\"},{\"1\":\"Good\",\"2\":\"VS1\",\"3\":\"648\"},{\"1\":\"Good\",\"2\":\"VVS2\",\"3\":\"286\"},{\"1\":\"Good\",\"2\":\"VVS1\",\"3\":\"186\"},{\"1\":\"Good\",\"2\":\"IF\",\"3\":\"71\"},{\"1\":\"Very Good\",\"2\":\"I1\",\"3\":\"84\"},{\"1\":\"Very Good\",\"2\":\"SI2\",\"3\":\"2100\"},{\"1\":\"Very Good\",\"2\":\"SI1\",\"3\":\"3240\"},{\"1\":\"Very Good\",\"2\":\"VS2\",\"3\":\"2591\"},{\"1\":\"Very Good\",\"2\":\"VS1\",\"3\":\"1775\"},{\"1\":\"Very Good\",\"2\":\"VVS2\",\"3\":\"1235\"},{\"1\":\"Very Good\",\"2\":\"VVS1\",\"3\":\"789\"},{\"1\":\"Very Good\",\"2\":\"IF\",\"3\":\"268\"},{\"1\":\"Premium\",\"2\":\"I1\",\"3\":\"205\"},{\"1\":\"Premium\",\"2\":\"SI2\",\"3\":\"2949\"},{\"1\":\"Premium\",\"2\":\"SI1\",\"3\":\"3575\"},{\"1\":\"Premium\",\"2\":\"VS2\",\"3\":\"3357\"},{\"1\":\"Premium\",\"2\":\"VS1\",\"3\":\"1989\"},{\"1\":\"Premium\",\"2\":\"VVS2\",\"3\":\"870\"},{\"1\":\"Premium\",\"2\":\"VVS1\",\"3\":\"616\"},{\"1\":\"Premium\",\"2\":\"IF\",\"3\":\"230\"},{\"1\":\"Ideal\",\"2\":\"I1\",\"3\":\"146\"},{\"1\":\"Ideal\",\"2\":\"SI2\",\"3\":\"2598\"},{\"1\":\"Ideal\",\"2\":\"SI1\",\"3\":\"4282\"},{\"1\":\"Ideal\",\"2\":\"VS2\",\"3\":\"5071\"},{\"1\":\"Ideal\",\"2\":\"VS1\",\"3\":\"3589\"},{\"1\":\"Ideal\",\"2\":\"VVS2\",\"3\":\"2606\"},{\"1\":\"Ideal\",\"2\":\"VVS1\",\"3\":\"2047\"},{\"1\":\"Ideal\",\"2\":\"IF\",\"3\":\"1212\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nWe need to have the individual levels of `cut` as rows and the\nindividual levels of `clarity` as columns. This means that we need to\npivot this from \"long\" to wide\" to obtain a Contingency Table:\n\n\n::: {.cell hash='index_cache/html/pivoting-long-to-wide_771e9ad4223f3c5d3ecc87d105fb8732'}\n\n````{.cell-code}\n```{{r}}\n#| message: false\n#| label: pivoting-long-to-wide\ndiamonds %>% \n  group_by(cut, clarity) %>% \n  dplyr::summarise( count = n()) %>% \n  \n  pivot_wider(id_cols = cut, \n              names_from = clarity, \n              values_from = count) %>% \n  \n  # Now add the row and column totals using the `janitor` package\n  janitor::adorn_totals(where = c(\"row\", \"col\")) %>%\n  \n  # Recover to tibble since janitor gives a \"tabyl\" format ( which can be useful too !)\n  as_tibble()\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"cut\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"I1\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"SI2\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"SI1\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"VS2\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"VS1\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"VVS2\"],\"name\":[7],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"VVS1\"],\"name\":[8],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"IF\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Total\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Fair\",\"2\":\"210\",\"3\":\"466\",\"4\":\"408\",\"5\":\"261\",\"6\":\"170\",\"7\":\"69\",\"8\":\"17\",\"9\":\"9\",\"10\":\"1610\"},{\"1\":\"Good\",\"2\":\"96\",\"3\":\"1081\",\"4\":\"1560\",\"5\":\"978\",\"6\":\"648\",\"7\":\"286\",\"8\":\"186\",\"9\":\"71\",\"10\":\"4906\"},{\"1\":\"Very Good\",\"2\":\"84\",\"3\":\"2100\",\"4\":\"3240\",\"5\":\"2591\",\"6\":\"1775\",\"7\":\"1235\",\"8\":\"789\",\"9\":\"268\",\"10\":\"12082\"},{\"1\":\"Premium\",\"2\":\"205\",\"3\":\"2949\",\"4\":\"3575\",\"5\":\"3357\",\"6\":\"1989\",\"7\":\"870\",\"8\":\"616\",\"9\":\"230\",\"10\":\"13791\"},{\"1\":\"Ideal\",\"2\":\"146\",\"3\":\"2598\",\"4\":\"4282\",\"5\":\"5071\",\"6\":\"3589\",\"7\":\"2606\",\"8\":\"2047\",\"9\":\"1212\",\"10\":\"21551\"},{\"1\":\"Total\",\"2\":\"741\",\"3\":\"9194\",\"4\":\"13065\",\"5\":\"12258\",\"6\":\"8171\",\"7\":\"5066\",\"8\":\"3655\",\"9\":\"1790\",\"10\":\"53940\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n:::\n\n## {{< iconify carbon chart-3d >}} Plots for Categorical Data\n\nLet us now examine the various kinds of plots we can make with\nCategorical Data. We will start with simple Bar plots, then move to\nplotting entire Contingency Tables, and then look Balloon Plots as an\nalternative. Finally we will look at a special case of **survey data**\nand look at Likert Plots.\n\n### Simple Bar Plots\n\n### {{< iconify material-symbols auto-awesome-mosaic-outline-sharp >}} Plotting Contingency Tables with Mosaic Plots\n\nWe have already seen **bar plots**, which allow us to plot counts of\ncategorical data. These can be used for say 2 or 3 Categorical\nvariables, with not too many *levels*. However, for more complex data,\nif there are a large number of categorical variables, or if the\ncategorical variables have many levels, the bar plot is not adequate.\nNow that we know how to create Contingency Tables, we can use these to\ncreate plots for such complex data.\n\nFrom Michael Friendly:\n\n> The familiar techniques for displaying raw data are often\n> disappointing when applied to categorical data. The simple\n> scatterplot, for example, widely used to show the relation between\n> quantitative response and predictors, when applied to discrete\n> variables, gives a display of the category combinations, with all\n> identical values overplotted, and **no representation of their\n> frequency**. (AV: Scatter plots do not do counting internally!)\n\n> Instead, frequencies of categorical variables are often best\n> represented graphically using **areas** rather than as **position\n> along a scale**. Using the visual attribute:\n\n$$\\pmb{area \\sim frequency}$$\n\n> allows creating novel graphical displays of frequency data for special\n> circumstances.\n\nLet us not look at some sample plots that embody this *area-frequency*\nprinciple. A **mosaic plot** is basically an area-proportional\nvisualization of (typically observed) frequencies, consisting of tiles\n(corresponding to the cells) created by vertically and horizontally\nsplitting a rectangle recursively. Thus, the area of each tile is\nproportional to the corresponding cell entry given the dimensions of\nprevious splits.\n\n::: {.panel-tabset .nav-pills style=\"background: whitesmoke;\"}\n#### Using vcd\n\nThe `vcd::mosaic()` function needs the data in *contingency table* form.\nWe will use our `vcd::structable()` function to construct one:\n\n\n::: {.cell layout-ncol=\"2\" hash='index_cache/html/mosaic-plot-using-vcd_02c8f34a8a8e6b036dfc05273eade6b7'}\n\n````{.cell-code}\n```{{r}}\n#| label:  mosaic-plot-using-vcd\n#| layout-ncol: 2\n\narthritis_table <- vcd::structable(~ Treatment + Improved, data = Arthritis)\narthritis_table\n\nvcd::mosaic(arthritis_table, \n            gp = shading_max, \n            main = \"Arthritis Treatment Dataset\")\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n          Improved None Some Marked\nTreatment                          \nPlacebo              29    7      7\nTreated              13    7     21\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/mosaic-plot-using-vcd-1.png){width=2100}\n:::\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-18_8b43b82472bfdc10fbcf5caa939a46be'}\n\n````{.cell-code}\n```{{r}}\ndata(\"GSS2002\", package = \"resampledata\")\n\ngss2002 <- GSS2002 %>% \n  # select two categorical variables from the dataset\n  dplyr::select(Education, DeathPenalty) %>% \n  drop_na(Education, DeathPenalty)\n\ngss_table <- tally(DeathPenalty ~ Education, data = gss2002)\ngss_table %>% addmargins()\n\nvcd::mosaic(gss_table, gp = shading_hsv)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n            Education\nDeathPenalty Left HS   HS Jr Col Bachelors Graduate  Sum\n      Favor      117  511     71       135       64  898\n      Oppose      72  200     16        71       50  409\n      Sum        189  711     87       206      114 1307\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=2100}\n:::\n:::\n\n\n#### Using ggmosaic\n\nThis is perhaps the simplest way, but does use a different package and\nalso does *not* use the formula notation: there is no `gf_mosaic`\ncommand yet!\n\n\n::: {.cell hash='index_cache/html/mosaic-plot_664efeb5d149fa532225c0fc1bfdb499'}\n\n````{.cell-code}\n```{{r mosaic-plot,warning=FALSE}}\n#library(ggmosaic)\n\nggplot(data = gss2002) +\n  geom_mosaic(aes(x = product(DeathPenalty, Education), \n                  fill = DeathPenalty))\n```\n````\n\n::: {.cell-output-display}\n![](index_files/figure-html/mosaic-plot-1.png){width=2100}\n:::\n:::\n\n\n#### Using ggformula\n\nThis needs quite some work, to convert the Contingency Table into a\nmosaic plot; perhaps not the most intuitive of methods either. This code\nhas been developed using this [Stackoverflow\npost](https://stackoverflow.com/questions/19233365/how-to-create-a-marimekko-mosaic-plot-in-ggplot2).\n\n\n::: {.cell hash='index_cache/html/marimekko_6d06263893a31518987d0950bd7338ee'}\n\n````{.cell-code}\n```{{r}}\n#| label: marimekko\n#| message: false\n#| warning: false\n\n# Reference\n# https://stackoverflow.com/questions/19233365/how-to-create-a-marimekko-mosaic-plot-in-ggplot2\n\ngss_summary <- gss2002 %>% \n  dplyr::group_by(Education, DeathPenalty) %>%\n  dplyr::summarise(count = n()) %>% # This is good for a chisq test\n  \n  # Data is still grouped by `Education`\n  # Add two more columns to facilitate mosaic Plot\n  # These two columns are quite unusual...\n  mutate(edu_count = sum(count), \n         edu_prop = count / sum(count)) %>%\n  ungroup()\ngss_summary\n\n# This works but is not very intuitive...\ngf_col(edu_prop ~ Education, data = gss_summary,\n       width = ~ edu_count, # Not typically used in a column chart\n       fill = ~ DeathPenalty,\n       stat = \"identity\", \n       position = \"fill\", \n       color = \"black\") %>% \n  \n  gf_text(edu_prop ~ Education, \n          label = ~ scales::percent(edu_prop),\n          position = position_stack(vjust = 0.5)) %>% \n  \n  gf_facet_grid(~ Education, \n                scales = \"free_x\", \n                space = \"free_x\") %>% \n  \n  gf_theme(scale_fill_manual(values = c(\"orangered\", \"palegreen3\"))) %>% \n  gf_theme(theme_void())\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Education\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"DeathPenalty\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"count\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"edu_count\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"edu_prop\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Left HS\",\"2\":\"Favor\",\"3\":\"117\",\"4\":\"189\",\"5\":\"0.6190476\"},{\"1\":\"Left HS\",\"2\":\"Oppose\",\"3\":\"72\",\"4\":\"189\",\"5\":\"0.3809524\"},{\"1\":\"HS\",\"2\":\"Favor\",\"3\":\"511\",\"4\":\"711\",\"5\":\"0.7187060\"},{\"1\":\"HS\",\"2\":\"Oppose\",\"3\":\"200\",\"4\":\"711\",\"5\":\"0.2812940\"},{\"1\":\"Jr Col\",\"2\":\"Favor\",\"3\":\"71\",\"4\":\"87\",\"5\":\"0.8160920\"},{\"1\":\"Jr Col\",\"2\":\"Oppose\",\"3\":\"16\",\"4\":\"87\",\"5\":\"0.1839080\"},{\"1\":\"Bachelors\",\"2\":\"Favor\",\"3\":\"135\",\"4\":\"206\",\"5\":\"0.6553398\"},{\"1\":\"Bachelors\",\"2\":\"Oppose\",\"3\":\"71\",\"4\":\"206\",\"5\":\"0.3446602\"},{\"1\":\"Graduate\",\"2\":\"Favor\",\"3\":\"64\",\"4\":\"114\",\"5\":\"0.5614035\"},{\"1\":\"Graduate\",\"2\":\"Oppose\",\"3\":\"50\",\"4\":\"114\",\"5\":\"0.4385965\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/marimekko-1.png){width=2100}\n:::\n:::\n\n:::\n\n## {{< iconify fluent-mdl2 balloons >}} Balloon Plots\n\nThere is another visualization of Categorical Data, called a Balloon\nPlot. We will use the `housetasks` dataset from the package `ggpubr`.\nThis data is already in Contingency Table form (without the margin\ntotals)!\n\n\n::: {.cell .column-page-inset-right layout-ncol=\"2\" hash='index_cache/html/balloon-plot-using-ggpubr_8f605a0fd61ad9ca10d69613bedfaa15'}\n\n````{.cell-code}\n```{{r}}\n#| label: balloon-plot-using-ggpubr\n#| layout-ncol: 2\n#| column: page-inset-right\n\nhousetasks <- read.delim(\n  system.file(\"demo-data/housetasks.txt\", \n              package = \"ggpubr\"), row.names = 1)\nhead(housetasks, 4)\n\nggpubr::ggballoonplot(housetasks, fill = \"value\") +\n  scale_fill_viridis_c(option = \"C\") +\n  labs(title = \"A Balloon Plot for Categorical Data\")\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Wife\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Alternating\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Husband\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Jointly\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"156\",\"2\":\"14\",\"3\":\"2\",\"4\":\"4\",\"_rn_\":\"Laundry\"},{\"1\":\"124\",\"2\":\"20\",\"3\":\"5\",\"4\":\"4\",\"_rn_\":\"Main_meal\"},{\"1\":\"77\",\"2\":\"11\",\"3\":\"7\",\"4\":\"13\",\"_rn_\":\"Dinner\"},{\"1\":\"82\",\"2\":\"36\",\"3\":\"15\",\"4\":\"7\",\"_rn_\":\"Breakfeast\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/balloon-plot-using-ggpubr-1.png){width=2100}\n:::\n:::\n\n\nAnd repeat with the familiar `HairEyeColor` dataset:\n\n\n::: {.cell .column-page-inset-right layout-ncol=\"3\" hash='index_cache/html/Balloon-Plots-2_b75be7d2a29dd268fa6139c52b7f00ea'}\n\n````{.cell-code}\n```{{r}}\n#| label: Balloon-Plots-2\n#| layout-ncol: 3\n#| column: page-inset-right\n\ndf <- as_tibble(HairEyeColor)\ndf\nggballoonplot(df, x = \"Hair\", y = \"Eye\", size = \"n\",\n              fill = \"n\",\n              ggtheme = theme_bw()) +\n  scale_fill_viridis_c(option = \"C\") + \n  labs(title = \"Balloon Plot\")\n\n# Balloon Plot with facetting\nggballoonplot(df, x = \"Hair\", y = \"Eye\", size = \"n\",\n              fill = \"n\", facet.by = \"Sex\",\n              ggtheme = theme_bw()) +\n  scale_fill_viridis_c(option = \"C\") + \n  labs(title = \"Balloon Plot with Facetting\", \n       subtitle = \"Hair and Eye Color\")\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Hair\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Eye\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Sex\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Black\",\"2\":\"Brown\",\"3\":\"Male\",\"4\":\"32\"},{\"1\":\"Brown\",\"2\":\"Brown\",\"3\":\"Male\",\"4\":\"53\"},{\"1\":\"Red\",\"2\":\"Brown\",\"3\":\"Male\",\"4\":\"10\"},{\"1\":\"Blond\",\"2\":\"Brown\",\"3\":\"Male\",\"4\":\"3\"},{\"1\":\"Black\",\"2\":\"Blue\",\"3\":\"Male\",\"4\":\"11\"},{\"1\":\"Brown\",\"2\":\"Blue\",\"3\":\"Male\",\"4\":\"50\"},{\"1\":\"Red\",\"2\":\"Blue\",\"3\":\"Male\",\"4\":\"10\"},{\"1\":\"Blond\",\"2\":\"Blue\",\"3\":\"Male\",\"4\":\"30\"},{\"1\":\"Black\",\"2\":\"Hazel\",\"3\":\"Male\",\"4\":\"10\"},{\"1\":\"Brown\",\"2\":\"Hazel\",\"3\":\"Male\",\"4\":\"25\"},{\"1\":\"Red\",\"2\":\"Hazel\",\"3\":\"Male\",\"4\":\"7\"},{\"1\":\"Blond\",\"2\":\"Hazel\",\"3\":\"Male\",\"4\":\"5\"},{\"1\":\"Black\",\"2\":\"Green\",\"3\":\"Male\",\"4\":\"3\"},{\"1\":\"Brown\",\"2\":\"Green\",\"3\":\"Male\",\"4\":\"15\"},{\"1\":\"Red\",\"2\":\"Green\",\"3\":\"Male\",\"4\":\"7\"},{\"1\":\"Blond\",\"2\":\"Green\",\"3\":\"Male\",\"4\":\"8\"},{\"1\":\"Black\",\"2\":\"Brown\",\"3\":\"Female\",\"4\":\"36\"},{\"1\":\"Brown\",\"2\":\"Brown\",\"3\":\"Female\",\"4\":\"66\"},{\"1\":\"Red\",\"2\":\"Brown\",\"3\":\"Female\",\"4\":\"16\"},{\"1\":\"Blond\",\"2\":\"Brown\",\"3\":\"Female\",\"4\":\"4\"},{\"1\":\"Black\",\"2\":\"Blue\",\"3\":\"Female\",\"4\":\"9\"},{\"1\":\"Brown\",\"2\":\"Blue\",\"3\":\"Female\",\"4\":\"34\"},{\"1\":\"Red\",\"2\":\"Blue\",\"3\":\"Female\",\"4\":\"7\"},{\"1\":\"Blond\",\"2\":\"Blue\",\"3\":\"Female\",\"4\":\"64\"},{\"1\":\"Black\",\"2\":\"Hazel\",\"3\":\"Female\",\"4\":\"5\"},{\"1\":\"Brown\",\"2\":\"Hazel\",\"3\":\"Female\",\"4\":\"29\"},{\"1\":\"Red\",\"2\":\"Hazel\",\"3\":\"Female\",\"4\":\"7\"},{\"1\":\"Blond\",\"2\":\"Hazel\",\"3\":\"Female\",\"4\":\"5\"},{\"1\":\"Black\",\"2\":\"Green\",\"3\":\"Female\",\"4\":\"2\"},{\"1\":\"Brown\",\"2\":\"Green\",\"3\":\"Female\",\"4\":\"14\"},{\"1\":\"Red\",\"2\":\"Green\",\"3\":\"Female\",\"4\":\"7\"},{\"1\":\"Blond\",\"2\":\"Green\",\"3\":\"Female\",\"4\":\"8\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/Balloon-Plots-2-1.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/Balloon-Plots-2-2.png){width=2100}\n:::\n:::\n\n\nNote the somewhat different syntax with `ggballoonplot`: the variable\nnames are enclosed in quotes.\n\nBalloon Plots work because they use color and size aesthetics to\nrepresent categories and counts respectively.\n\n## {{< iconify fluent likert-16-regular >}} Plots for Survey Data\n\nIn many business situations, we perform say *customer surveys* to get\n[Likert Scale](https://www.simplypsychology.org/likert-scale.html) data,\nwhere several respondents rate a product or a service on a scale of\n`Very much like`, `somewhat like`, `neutral`, `Dislike` and\n`Very much dislike,` for example. \n\n:::callout-note\n## A fictitious QuickEZ app\nWe are a startup that has an app called **QuickEZ** for delivery of\ngroceries. We conduct a survey of 200 people at a local store.\n\n1.  \"Have your heard of the QuickEZ app?\"\n2.  \"Do you use the QuickEZ app?\"\n3.  \"Do you find it easy to use the QuickEZ app?\"\n4.  \"Will you continue to use the QuickEZ app?\"\n\neach to be answered on a scale of : \"always\", \"often\", \"never\",\n\"sometimes\".\n\n:::\n\nSuch data may look for example as follows:\n\n\n::: {.cell .column-body-outset-right layout-ncol=\"2\" hash='index_cache/html/Demoing_labelled_data_c35650ab0042c489aa54dcc7d2dce293'}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"q1\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"q2\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"q3\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"q4\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"4\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"3\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"4\",\"3\":\"2\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"2\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"2\",\"4\":\"1\"},{\"1\":\"4\",\"2\":\"4\",\"3\":\"3\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"4\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"1\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"2\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"1\",\"2\":\"3\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"2\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"4\",\"2\":\"1\",\"3\":\"3\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"3\",\"4\":\"1\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"1\",\"4\":\"3\"},{\"1\":\"1\",\"2\":\"4\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"1\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"1\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"3\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"2\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"4\",\"2\":\"1\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"3\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"4\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"1\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"4\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"3\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"2\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"2\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"2\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"3\",\"4\":\"2\"},{\"1\":\"1\",\"2\":\"4\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"3\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"3\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"2\",\"3\":\"2\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"3\",\"4\":\"2\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"2\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"3\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"3\",\"4\":\"2\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"4\",\"2\":\"4\",\"3\":\"3\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"3\",\"3\":\"2\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"4\",\"3\":\"1\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"1\",\"2\":\"4\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"4\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"4\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"3\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"2\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"3\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"1\",\"4\":\"2\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"2\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"4\",\"2\":\"4\",\"3\":\"3\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"1\",\"4\":\"3\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"1\",\"4\":\"3\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"1\",\"4\":\"3\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"2\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"1\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"2\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"2\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"2\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"3\",\"4\":\"3\"},{\"1\":\"1\",\"2\":\"3\",\"3\":\"1\",\"4\":\"3\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"1\",\"4\":\"3\"},{\"1\":\"1\",\"2\":\"2\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"3\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"1\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"1\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"2\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"1\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"4\",\"4\":\"3\"},{\"1\":\"4\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"2\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"4\",\"2\":\"1\",\"3\":\"2\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"4\",\"3\":\"2\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"3\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"1\",\"3\":\"2\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"1\",\"2\":\"4\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"4\",\"4\":\"1\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"2\"},{\"1\":\"2\",\"2\":\"1\",\"3\":\"4\",\"4\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [200 × 4] (S3: tbl_df/tbl/data.frame)\n $ q1: int [1:200] 4 4 3 2 1 1 2 3 1 2 ...\n  ..- attr(*, \"label\")= Named chr \"Have your heard of the QuickEZ app?\"\n  .. ..- attr(*, \"names\")= chr \"q1\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"always\" \"often\" \"never\" \"sometimes\"\n $ q2: int [1:200] 2 3 2 3 1 3 4 3 1 1 ...\n  ..- attr(*, \"label\")= Named chr \"Do you use the QuickEZ app?\"\n  .. ..- attr(*, \"names\")= chr \"q2\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"always\" \"often\" \"never\" \"sometimes\"\n $ q3: int [1:200] 4 4 1 4 3 4 2 4 4 4 ...\n  ..- attr(*, \"label\")= Named chr \"Do you find it easy to use the QuickEZ app?\"\n  .. ..- attr(*, \"names\")= chr \"q3\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"always\" \"often\" \"never\" \"sometimes\"\n $ q4: int [1:200] 4 1 2 1 4 4 2 1 4 4 ...\n  ..- attr(*, \"label\")= Named chr \"Will you continue to use the QuickEZ app?\"\n  .. ..- attr(*, \"names\")= chr \"q4\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"always\" \"often\" \"never\" \"sometimes\"\n```\n:::\n:::\n\n\nSuch data is also a form of *Categorical data* and we need to count\nand plot counts for each of the survey questions. Such a plot is called\na **Likert plot** and it looks like this:\n\n\n::: {.cell hash='index_cache/html/Likert-Plot-1_8f2d2ca42d72078dd5f82ccec2eee767'}\n::: {.cell-output-display}\n![](index_files/figure-html/Likert-Plot-1-1.png){width=2100}\n:::\n:::\n\n\n\nBased on this chart, since it looks like about half the survey\nrespondents have not heard of our app, we need more publicity, and many\ndo not find it easy to use 😿, so we have serious re-design and user\ntesting to do !! But at least those who have managed to get past the\nhurdles are stating they will continue to use the app, so it does the\njob, but we can make it easier to use.\n\nHere is another example of Likert data from the *healthcare industry*.\n\n`efc` is a German data set from a European study titled [**EUROFAM\nstudy**](https://doi.org/10.1093/geront/48.6.752), on *family care of\nolder people*. Following a common protocol, data were collected from\nnational samples of approximately 1,000 family carers (i.e. caregivers)\nper country and clustered into comparable subgroups to facilitate\ncross-national analysis. The *research questions* in [**this EUROFAM\nstudy**](https://doi.org/10.1093/geront/48.6.752) were:\n\n> 1.  To what extent do family carers of older people use support\n>     services or receive financial allowances across Europe? What kind\n>     of supports and allowances do they mainly use?\n>\n> 2.  What are the main difficulties carers experience accessing the\n>     services used? What prevents carers from accessing unused supports\n>     that they need? What causes them to stop using still-needed\n>     services?\n>\n> 3.  In order to improve support provision, what can be understood\n>     about the service characteristics considered crucial by carers,\n>     and how far are these needs met? and,\n>\n> 4.  Which channels or actors can provide the greatest help in\n>     underpinning future policy efforts to improve access to\n>     services/supports?\n\nWe will select the variables from the `efc` data set that related to\n*coping* (on part of care-givers) and plot their responses after\ninspecting them:\n\n\n::: {.cell .column-body-outset-right layout-nrow=\"2\" hash='index_cache/html/efc_data_e5aa490fd9954b024e9a343324eef3f1'}\n\n````{.cell-code}\n```{{r}}\n#| label: efc_data\n#| layout-nrow: 2\n#| column: body-outset-right\ndata(efc,package = \"sjPlot\")\n\nefc %>% \n  select(dplyr::contains(\"cop\")) %>% \n  head(20)\nefc %>% \n  select(dplyr::contains(\"cop\")) %>% \n  str()\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"c82cop1\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c83cop2\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c84cop3\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c85cop4\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c86cop5\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c87cop6\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c88cop7\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c89cop8\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"c90cop9\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"3\",\"2\":\"2\",\"3\":\"2\",\"4\":\"2\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"3\",\"9\":\"3\",\"_rn_\":\"1\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"3\",\"4\":\"3\",\"5\":\"4\",\"6\":\"1\",\"7\":\"3\",\"8\":\"2\",\"9\":\"2\",\"_rn_\":\"2\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"1\",\"4\":\"4\",\"5\":\"1\",\"6\":\"1\",\"7\":\"1\",\"8\":\"4\",\"9\":\"3\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"1\",\"3\":\"3\",\"4\":\"1\",\"5\":\"1\",\"6\":\"1\",\"7\":\"1\",\"8\":\"2\",\"9\":\"4\",\"_rn_\":\"4\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"2\",\"6\":\"2\",\"7\":\"1\",\"8\":\"4\",\"9\":\"4\",\"_rn_\":\"5\"},{\"1\":\"2\",\"2\":\"2\",\"3\":\"3\",\"4\":\"3\",\"5\":\"3\",\"6\":\"2\",\"7\":\"2\",\"8\":\"1\",\"9\":\"1\",\"_rn_\":\"6\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"4\",\"4\":\"1\",\"5\":\"1\",\"6\":\"2\",\"7\":\"4\",\"8\":\"1\",\"9\":\"4\",\"_rn_\":\"7\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"2\",\"4\":\"1\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"3\",\"9\":\"3\",\"_rn_\":\"8\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"3\",\"4\":\"2\",\"5\":\"2\",\"6\":\"1\",\"7\":\"3\",\"8\":\"1\",\"9\":\"3\",\"_rn_\":\"9\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"1\",\"6\":\"1\",\"7\":\"1\",\"8\":\"1\",\"9\":\"3\",\"_rn_\":\"10\"},{\"1\":\"3\",\"2\":\"4\",\"3\":\"4\",\"4\":\"4\",\"5\":\"4\",\"6\":\"4\",\"7\":\"4\",\"8\":\"1\",\"9\":\"1\",\"_rn_\":\"11\"},{\"1\":\"3\",\"2\":\"3\",\"3\":\"3\",\"4\":\"1\",\"5\":\"3\",\"6\":\"1\",\"7\":\"4\",\"8\":\"3\",\"9\":\"1\",\"_rn_\":\"12\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"2\",\"4\":\"2\",\"5\":\"2\",\"6\":\"1\",\"7\":\"2\",\"8\":\"4\",\"9\":\"4\",\"_rn_\":\"13\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"4\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"4\",\"9\":\"4\",\"_rn_\":\"14\"},{\"1\":\"2\",\"2\":\"3\",\"3\":\"3\",\"4\":\"3\",\"5\":\"2\",\"6\":\"2\",\"7\":\"1\",\"8\":\"1\",\"9\":\"1\",\"_rn_\":\"15\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"1\",\"4\":\"3\",\"5\":\"3\",\"6\":\"1\",\"7\":\"2\",\"8\":\"1\",\"9\":\"3\",\"_rn_\":\"16\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"4\",\"9\":\"4\",\"_rn_\":\"17\"},{\"1\":\"4\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"1\",\"6\":\"1\",\"7\":\"2\",\"8\":\"3\",\"9\":\"3\",\"_rn_\":\"18\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"1\",\"4\":\"2\",\"5\":\"2\",\"6\":\"1\",\"7\":\"3\",\"8\":\"1\",\"9\":\"4\",\"_rn_\":\"19\"},{\"1\":\"3\",\"2\":\"2\",\"3\":\"4\",\"4\":\"2\",\"5\":\"1\",\"6\":\"3\",\"7\":\"3\",\"8\":\"2\",\"9\":\"2\",\"_rn_\":\"20\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t908 obs. of  9 variables:\n $ c82cop1: num  3 3 2 4 3 2 4 3 3 3 ...\n  ..- attr(*, \"label\")= chr \"do you feel you cope well as caregiver?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n $ c83cop2: num  2 3 2 1 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"do you find caregiving too demanding?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c84cop3: num  2 3 1 3 1 3 4 2 3 1 ...\n  ..- attr(*, \"label\")= chr \"does caregiving cause difficulties in your relationship with your friends?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c85cop4: num  2 3 4 1 2 3 1 1 2 2 ...\n  ..- attr(*, \"label\")= chr \"does caregiving have negative effect on your physical health?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c86cop5: num  1 4 1 1 2 3 1 1 2 1 ...\n  ..- attr(*, \"label\")= chr \"does caregiving cause difficulties in your relationship with your family?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c87cop6: num  1 1 1 1 2 2 2 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"does caregiving cause financial difficulties?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c88cop7: num  2 3 1 1 1 2 4 2 3 1 ...\n  ..- attr(*, \"label\")= chr \"do you feel trapped in your role as caregiver?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"Never\" \"Sometimes\" \"Often\" \"Always\"\n $ c89cop8: num  3 2 4 2 4 1 1 3 1 1 ...\n  ..- attr(*, \"label\")= chr \"do you feel supported by friends/neighbours?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n $ c90cop9: num  3 2 3 4 4 1 4 3 3 3 ...\n  ..- attr(*, \"label\")= chr \"do you feel caregiving worthwhile?\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n```\n:::\n:::\n\n\nThe `cop`ing related variables have responses on the Likert Scale\n`(1,2,3,4)` which correspond to `(never, sometimes, often, always)`,\n**and** each variable also has a `label` defining each variable. The\nlabels are actually ( and perhaps usually ) the *questions* in the\nsurvey.\n\nWe can plot this data using the `plot_likert` function from package\n`sjPlot`:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-25_1ffa584192cdc6b92abd632c1f6be667'}\n\n````{.cell-code}\n```{{r}}\nefc %>% select(dplyr::contains(\"cop\")) %>% \n  sjPlot::plot_likert(title = \"Caregiver Survey from EUROFAM\")\n```\n````\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-1.png){width=2100}\n:::\n:::\n\n\nMany questions here have strong *negative* responses. This may indicate\nthat policy and publicity related efforts may be required.\n\n::: callout-note\n## Colours and Orientation in the Likert Plot\n\nOne could prefer (as I do) that \"often\" and \"always\" scores should be\ntoward the right and \"sometimes\" and \"never\" scores towards the left.\nOne can do this within the `plot_likert` command using:\n\n`plot_likert(..., reverse.scale = TRUE)`\n\nIf you want the colours to be reversed, then...\n\n`plot_likert(..., reverse.colors = TRUE)`\n\nTry these options now in your Console! (Note the American spelling\n`color`)\n:::\n\n#### {{< iconify fluent-emoji label >}} Labelled Data\n\nNote how the y-axis has been populated with **Survey Questions**: this\nis an example of a *labelled dataset*, where not only do the variables\nhave *names* i.e. column names, but also have longish text **labels**\nthat add information to the data variables. The **data values** ( i.e\nscores) in the columns is also **labelled** as per the the Likert scale\n(`Like/Dislike/Strongly Dislike` OR `never/sometimes/often/always`) etc.\nThese **Likert scores** are usually a set of contiguous integers.\n\n::: callout-note\n## Variable Labels and Value Labels\n\n**Variable label** is human readable description of the variable. R\nsupports rather long variable names and these names can contain even\nspaces and punctuation but short variables names make coding easier.\nVariable label can give a nice, long description of variable. With this\ndescription it is easier to remember what those variable names refer\nto.\\\n**Value labels** are similar to variable labels, but value labels are\ndescriptions of the values a variable can take. Labeling values means we\ndon't have to remember if `1=Extremely poor` and `7=Excellent` or\nvice-versa. We can easily get dataset description and variables summary\nwith info function.\n:::\n\nLet us manually create one such dataset, since this is a common-enough\nsituation[^1] that we have survey data and then have to label the\nvariables and the values before plotting. We will use the R package\n`sjlabelled` to label our data.[^2].\n\n\n::: {.cell layout-nrow=\"2\" hash='index_cache/html/Creating_labelled_data_ac079f3122784501bad11befba2715bb'}\n\n````{.cell-code}\n```{{r}}\n#| label: Creating_labelled_data\n#| layout-nrow: 2\n\n#library(sjlabelled)\n\nvariable_labels <- c(\"Do you practice Analytics?\",\n                     \"Do you code in R?\",\n                     \"Have you published your R Code?\",\n                     \"Do you use Quarto as your Workflow in R?\",\n                     \"Will you use R at Work?\")\nvalue_labels = c(\"never\", \"sometimes\",\"often\",\"always\") #numerically 1:4\n\nmy_survey_data <- \n  # Create toy survey data\n  # 200 responses to 5 questions\n  # responses on Likert Scale\n  # 1:4 = \"never\", \"sometimes\",\"often\",\"always\")\n\n  tibble(q1 = mosaic::sample(1:4, replace = TRUE, size = 200,\n                             prob = c(0.2, 0.2, 0.5, 0.1)),\n         q2 = mosaic::sample(1:4, replace = TRUE, size = 200,\n                             prob = c(0.3, 0.3, 0.3, 0.1)),\n         q3 = mosaic::sample(1:4, replace = TRUE, size = 200,\n                             prob = c(0.2, 0.1, 0.1, 0.6)),\n         q4 = mosaic::sample(1:4, replace = TRUE, size = 200,\n                             prob = c(0.4, 0.2, 0.1, 0.3)),\n         q5 = mosaic::sample(1:4, replace = TRUE, size = 200,\n                             prob = c(0.1, 0.2, 0.5, 0.2))) %>%\n  \n  # Set VARIABLE labels\n  sjlabelled::set_label(x = .,\n                        label = variable_labels) %>%\n  \n  # Now set VALUE labels\n  sjlabelled::set_labels(x = ., labels = value_labels)\n\nstr(my_survey_data)\n\nplot_likert(my_survey_data, \n            title = \"Summary of Analytics Questionnaire\",\n            reverse.scale = TRUE,# Reverse score values on plot\n            reverse.colors = FALSE, # let the colors be\n            show.prc.sign = TRUE, # Show percentage sign\n            legend.pos = \"bottom\")\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [200 × 5] (S3: tbl_df/tbl/data.frame)\n $ q1: int [1:200] 3 1 3 3 3 4 3 3 3 3 ...\n  ..- attr(*, \"label\")= Named chr \"Do you practice Analytics?\"\n  .. ..- attr(*, \"names\")= chr \"q1\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n $ q2: int [1:200] 2 1 3 3 1 3 3 1 4 4 ...\n  ..- attr(*, \"label\")= Named chr \"Do you code in R?\"\n  .. ..- attr(*, \"names\")= chr \"q2\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n $ q3: int [1:200] 4 1 4 4 2 3 1 4 3 4 ...\n  ..- attr(*, \"label\")= Named chr \"Have you published your R Code?\"\n  .. ..- attr(*, \"names\")= chr \"q3\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n $ q4: int [1:200] 1 4 3 2 4 3 1 1 2 2 ...\n  ..- attr(*, \"label\")= Named chr \"Do you use Quarto as your Workflow in R?\"\n  .. ..- attr(*, \"names\")= chr \"q4\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n $ q5: int [1:200] 3 1 1 3 4 4 2 3 3 3 ...\n  ..- attr(*, \"label\")= Named chr \"Will you use R at Work?\"\n  .. ..- attr(*, \"names\")= chr \"q5\"\n  ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4\n  .. ..- attr(*, \"names\")= chr [1:4] \"never\" \"sometimes\" \"often\" \"always\"\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/Creating_labelled_data-1.png){width=2100}\n:::\n:::\n\n\nIt seems many people in the survey plan to use R at work!! And have\npublished R code as well. But Quarto seems to have mixed results! But of\ncourse this is a toy dataset!!\n\nSo there we are with Categorical data analysis and plots!\n\nThere are a few other plots with this type of data, which are useful in\nvery specialized circumstances. One example of this is the\n`agreement plot` which captures the agreement between two (sets) of\nevaluators, on ratings given on a shared ordinal scale to a set of\nitems. An example from the field of medical diagnosis is the opinions of\ntwo specialists on a common set of patients. However, that is for a more\nadvanced course!\n\n## {{< iconify fluent-mdl2 decision-solid >}} Conclusion\n\nHow are the bar plots for categorical data different from histograms?\nWhy don't \"regular\" scatter plots simply work for Categorical data?\nDiscuss!\n\nThere are quite a few things we can do with Qualitative/Categorical\ndata:\n\n1)  Make simple bar charts with colours and facetting\n2)  Make Contingency Tables for a $X^2$-test\n3)  Make Mosaic Plots to show how the categories stack up\n4)  Make Balloon Charts as an alternative\n5)  Make Likert Charts for Survey Questionnaire Data\n6)  Then, draw your inferences and tell the story!\n\n## {{< iconify openmoji person >}}Your Turn\n\n1.  Take some of the categorical datasets from the `vcd` and `vcdExtra`\n    packages and recreate the plots from this module.\n\n## {{< iconify ooui references-ltr >}} References\n\n1.  Chapter 4,\n    <https://openintro-ims.netlify.app/explore-categorical.html> from\n    *An Introduction to Modern Statistics by Mine Cetinkaya-Rundel and\n    Johanna Hardin*.\n\n2.  Using the `strcplot` command from `vcd`,\n    <https://cran.r-project.org/web/packages/vcd/vignettes/strucplot.pdf>\n\n3.  Creating Frequency Tables with `vcd`,\n    <https://cran.r-project.org/web/packages/vcdExtra/vignettes/A_creating.html>\n\n4.  Creating mosaic plots with `vcd`,\n    <https://cran.r-project.org/web/packages/vcdExtra/vignettes/D_mosaics.html>\n\n5.  Michael Friendly, *Corrgrams: Exploratory displays for correlation\n    matrices*. The American Statistician August 19, 2002 (v1.5).\n    <https://www.datavis.ca/papers/corrgram.pdf>\n\n6.  [Visualizing Categorical Data in\n    R](https://homepage.divms.uiowa.edu/~luke/classes/STAT4580/catone.html)\n\n[^1]: Piping Hot Data: Leveraging Labelled Data in R,\n    https://www.pipinghotdata.com/posts/2020-12-23-leveraging-labelled-data-in-r/\\>\n\n[^2]: Label Support in\n    R:<https://cran.r-project.org/web/packages/sjlabelled/index.html>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../../../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"../../../../../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}