{
  "hash": "258d446b4334c9ba3550c8fff36582b5",
  "result": {
    "markdown": "---\ntitle: \"\\U0001F4CA Descriptive Statistics \"\nsubtitle: \"Mirror, mirror on the wall...\"\nauthor: \"Arvind Venkatadri\"\ndate: 15/Oct/2023\ndate-modified: \"2023-10-15\"\nabstract: \"Who is the Fairest of them All?\"\norder: 20\nimage: preview.jpg\nimage-alt: Image by rawpixel.com\ncategories:\n- Qual Variables\n- Quant Variables\n- Mean\n- Median\n- Standard Deviation\n- Quartiles\ncitation: true\n---\n\n\n## {{< iconify noto-v1 package >}} Setting up R Packages\n\n\n::: {.cell hash='intro-favstats_cache/html/setup_771224c097de479354007b98f84fc3b5'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(mosaic)\nlibrary(palmerpenguins) # dataset \"penguins\"\nlibrary(skimr)\nlibrary(explore)\nlibrary(easystats)\nlibrary(easyanova)\n```\n:::\n\n::: {.cell hash='intro-favstats_cache/html/Themes and Extra Packages_3a6842d8b6646c54760f9ffbf159fc71'}\n\n:::\n\n\n## {{< iconify fxemoji japanesesymbolforbeginner >}} How do we Grasp Data?\n\nWe spoke of Experiments and Data Gathering in the first module [Nature of Data](/content/courses/Analytics/Descriptive/Modules/05-NatureData/nature-data.qmd#sec-where-data). This helped us to **obtain** data. \n\nAs we discussed in that same Module, for us to grasp the significance of the data, we need to **describe** it; the actual data is usually too vast for us to comprehend in its entirety. Anything more than a handful of observations in a dataset is enough for us to require other ways of grasping it. \n\nThe first thing we need to do, therefore, is to reduce it to a few salient numbers that allow us to summarize the data. \n\n:::callout-important\n\n## Reduction is Addition\nSuch a **reduction** may seem paradoxical but is one of the important tenets of statistics: reduction, while taking away information, ends up *adding* to insight.\n\nSteven Stigler[@stigler2016] is the author of the book \"*The Seven\nPillars of Statistical Wisdom*\". One of the *Big Ideas in Statistics* from that\nbook is:\n\n##### Aggregation\n\n> The first pillar I will call Aggregation, although it could just as\n> well be given the nineteenth-century name, \"The Combination of\n> Observations,\" or even reduced to the simplest example, taking a mean.\n> Those simple names are misleading, in that I refer to an idea that is\n> now old but was truly revolutionary in an earlier day---and it still\n> is so today, whenever it reaches into a new area of application. How\n> is it revolutionary? By stipulating that, given a number of\n> observations, you can actually gain information by **throwing\n> information away**! In taking a simple arithmetic mean, we discard the\n> individuality of the measures, subsuming them to one summary.\n\n:::\n\n\n\n## {{< iconify file-icons influxdata >}} Examine the Data\n\nSo in this module we will look at a few *favourite statistics* or \"favstats\" that we can derive from data. R is full of packages that can provide very evocative and effective summaries of data. We will first start with the `skimr` package, then the `mosaic` package, and finally the `Hmisc` package. We will look at the summary outputs from these and learn how to interpret them.\n\n::: {.panel-tabset .nav-pills style=\"background: whitesmoke;\"}\n\n### Using skimr\n\nLet us look at the popular `mpg` dataset ( from R ) using\n`skimr::skim()`. \n\nFrom the output of `?skimr`:\n\n> The format of the results are a single wide data frame combining the results, with some additional attributes and two metadata columns:\n\n- `skim_variable`: name of the original variable\n- `skim_type`: class of the variable\n\nWe can use `skim(dataset)` directly as shown below:\n\n\n::: {.cell hash='intro-favstats_cache/html/unnamed-chunk-3_7f46e437ab2e6d72a96b5add56dc6793'}\n\n```{.r .cell-code}\nskimr::skim(mpg)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |mpg  |\n|Number of rows           |234  |\n|Number of columns        |11   |\n|_______________________  |     |\n|Column type frequency:   |     |\n|character                |6    |\n|numeric                  |5    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|manufacturer  |         0|             1|   4|  10|     0|       15|          0|\n|model         |         0|             1|   2|  22|     0|       38|          0|\n|trans         |         0|             1|   8|  10|     0|       10|          0|\n|drv           |         0|             1|   1|   1|     0|        3|          0|\n|fl            |         0|             1|   1|   1|     0|        5|          0|\n|class         |         0|             1|   3|  10|     0|        7|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|    mean|   sd|     p0|    p25|    p50|    p75| p100|hist  |\n|:-------------|---------:|-------------:|-------:|----:|------:|------:|------:|------:|----:|:-----|\n|displ         |         0|             1|    3.47| 1.29|    1.6|    2.4|    3.3|    4.6|    7|▇▆▆▃▁ |\n|year          |         0|             1| 2003.50| 4.51| 1999.0| 1999.0| 2003.5| 2008.0| 2008|▇▁▁▁▇ |\n|cyl           |         0|             1|    5.89| 1.61|    4.0|    4.0|    6.0|    8.0|    8|▇▁▇▁▇ |\n|cty           |         0|             1|   16.86| 4.26|    9.0|   14.0|   17.0|   19.0|   35|▆▇▃▁▁ |\n|hwy           |         0|             1|   23.44| 5.95|   12.0|   18.0|   24.0|   27.0|   44|▅▅▇▁▁ |\n:::\n:::\n\n\nTaken together, we have the following:\n\n:::callout-note\n\n## Descriptive Stat Summary\n- A *Data Summary*: it lists the dimensions of the `mpg` dataset: 234 rows and 11 columns. 6 columns are character formatted, the remaining 5 are numeric. The dataset is not \"grouped\" (more on this later).\n\n- The second part of the output shows a table with the `character` variables which are therefore `factor` variables with `levels`. \n\n- The third part shows a table listing the names and summary stats for the `numerical` variables. We have `mean`, `sd`, all the quantiles (0, 25, 50(median), 75 and 100 percentiles) and a neat little histogram for each. From the histogram we can see that `year` is two-valued, `cyl` is three-valued, and `cty` and `hwy` are continuous...\n\n:::\n\n### Using mosaic\n\nLet us look at the popular `mpg` dataset ( from R ) using\n`mosaic::inspect()`. We get very similar output from `mosaic`\n\n\n::: {.cell hash='intro-favstats_cache/html/inspect-penguins_e5ea85cb08ad1c5100604184c28cb4d3'}\n\n```{.r .cell-code}\ninspect(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\ncategorical variables:  \n     name  class levels   n missing\n1 species factor      3 344       0\n2  island factor      3 344       0\n3     sex factor      2 333      11\n                                   distribution\n1 Adelie (44.2%), Gentoo (36%) ...             \n2 Biscoe (48.8%), Dream (36%) ...              \n3 male (50.5%), female (49.5%)                 \n\nquantitative variables:  \n               name   class    min       Q1  median     Q3    max       mean\n1    bill_length_mm numeric   32.1   39.225   44.45   48.5   59.6   43.92193\n2     bill_depth_mm numeric   13.1   15.600   17.30   18.7   21.5   17.15117\n3 flipper_length_mm integer  172.0  190.000  197.00  213.0  231.0  200.91520\n4       body_mass_g integer 2700.0 3550.000 4050.00 4750.0 6300.0 4201.75439\n5              year integer 2007.0 2007.000 2008.00 2009.0 2009.0 2008.02907\n           sd   n missing\n1   5.4595837 342       2\n2   1.9747932 342       2\n3  14.0617137 342       2\n4 801.9545357 342       2\n5   0.8183559 344       0\n```\n:::\n:::\n\n\n::: column-margin\nWe can save and see the outputs separately:\n\n\n::: {.cell hash='intro-favstats_cache/html/mpg-inspect-2_f5205709857dd70341fc2cd9e336bc91'}\n\n```{.r .cell-code}\npenguins_describe <- inspect(penguins)\npenguins_describe$categorical\npenguins_describe$quantitative\n```\n:::\n\n:::\n\nWe see that the output of `mosaic::inspect()` is organized as follows:\n\n- There are two dataframes/tables in the output, one describing the *Qualitative Variables* and the other describing the *Quantitative Variables*. \n- In the table describing the Qual variables, we have:\n  - `name`: Name of the variable in the (parent) dataset. i.e Column Names\n  - `class`: format of that column\n  - `levels`: All these variables are factors, with levels shown here. Some for example, `manufacturer` has 15 levels, and there are 234 rows\n\n\nThere is a lot of Description generated by the `mosaic::inspect()`\ncommand ! What can we say about the dataset and its variables? How big\nis the dataset? How many variables? What types are they, Quant or Qual?\nIf they are Qual, what are the *levels*? Are they *ordered* levels?\n\n### Using Hmisc\n\n:::\n\n\n### Your Turn\n\n-   What is the number of *qualitative/categorical* variables in the\n    `mpg` data?\n    `<form name=\"form_39305\" onsubmit=\"return validate_form_39305()\" method=\"post\">\n<input type=\"text\" placeholder=\"enter a number\" name=\"answer_39305\"/>\n<input type=\"submit\" value=\"check\"/>\n<div id=\"result_39305\"></div>\n</form>\n<script>function validate_form_39305() {var x, text; var x = document.forms['form_39305']['answer_39305'].value;if (x == '6'){text = 'correct';} else {text = 'not correct';} document.getElementById('result_39305').innerHTML = text; return false;}</script>`{=html}\n    <br>\n-   How many manufacturers are named in this dataset?\n    `<form name=\"form_50573\" onsubmit=\"return validate_form_50573()\" method=\"post\">\n<input type=\"text\" placeholder=\"enter a number\" name=\"answer_50573\"/>\n<input type=\"submit\" value=\"check\"/>\n<div id=\"result_50573\"></div>\n</form>\n<script>function validate_form_50573() {var x, text; var x = document.forms['form_50573']['answer_50573'].value;if (x == '15'){text = 'correct';} else {text = 'not correct';} document.getElementById('result_50573').innerHTML = text; return false;}</script>`{=html}\n    <br>\n-   How many levels does the variable `drv` have?\n    `<form name=\"form_92326\" onsubmit=\"return validate_form_92326()\" method=\"post\">\n<input type=\"text\" placeholder=\"enter a number\" name=\"answer_92326\"/>\n<input type=\"submit\" value=\"check\"/>\n<div id=\"result_92326\"></div>\n</form>\n<script>function validate_form_92326() {var x, text; var x = document.forms['form_92326']['answer_92326'].value;if (x == '3'){text = 'correct';} else {text = 'not correct';} document.getElementById('result_92326').innerHTML = text; return false;}</script>`{=html}\n    <br>\n-   How many *quantitative/numerical* variables **shown** in the `mpg`\n    data?\n    `<form name=\"form_70875\" onsubmit=\"return validate_form_70875()\" method=\"post\">\n<input type=\"text\" placeholder=\"enter a number\" name=\"answer_70875\"/>\n<input type=\"submit\" value=\"check\"/>\n<div id=\"result_70875\"></div>\n</form>\n<script>function validate_form_70875() {var x, text; var x = document.forms['form_70875']['answer_70875'].value;if (x == '5'){text = 'correct';} else {text = 'not correct';} document.getElementById('result_70875').innerHTML = text; return false;}</script>`{=html}\n    <br>\n-   But the\n    variable`<form name=\"form_33637\" onsubmit=\"return validate_form_33637()\" method=\"post\">\n<select name=\"answer_33637\">\n<option>hwy</option>\n<option>cty</option>\n<option>cyl</option>\n<option>displ</option>\n</select>\n<input type=\"submit\" value=\"check\"/>\n<div id=\"result_33637\"></div>\n</form>\n<script>function validate_form_33637() {var x, text; var x = document.forms['form_33637']['answer_33637'].value;if (x == 'cyl'){text = 'correct';} else {text = 'not correct';} document.getElementById('result_33637').innerHTML = text; return false;}</script>`{=html}\n    is actually a **qualitative variable**.\n\n### {{< iconify ic round-addchart >}} Graphing Packages in R\n\n::: callout-tip\nNote the standard method for all commands from the `mosaic` package:\n\n`goal( y ~ x | z, data = mydata, …)`\n\nWith `ggformula`, one can create any graph/chart using:\n\n`gf_***(y ~ x | z, data = mydata)`\n\nThe \"\\*\\*\\*\" indicates what kind of graph you desire: histogram, bar,\nscatter, density..etc.\n:::\n\n## {{< iconify icon-park-outline chart-histogram >}} Histograms and Bar Charts\n\n::: callout-note\n## \n:::\n\n::: callout-important\n:::\n\n::: callout-note\n## \n:::\n\n::: callout-important\n## \n:::\n\n## {{< iconify mdi chart-bell-curve >}} Densities\n\n::: callout-note\n## \n:::\n\n## {{< iconify carbon box-plot >}} Box Plots\n\n::: callout-note\n## Business Insights from Boxplots\n:::\n\n## {{< iconify streamline nature-ecology-rainbow-arch-rain-colorful-rainbow-curve-half-circle >}} Ridge Plots\n\n::: callout-note\n## \n:::\n\n## {{< iconify entypo new >}}Distributions and Densities in the Wild\n\n## {{< iconify fluent-mdl2 decision-solid >}} Conclusion\n\n## {{< iconify openmoji person >}}Your Turn\n\n`inspect` the dataset in each case and develop a set of Questions, that\ncan be answered by appropriate stat measures, or by using a chart to\nshow the distribution.\n\n## {{< iconify ooui references-rtl >}} References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}