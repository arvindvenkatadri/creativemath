{
  "hash": "20dfc92b34352e85255983c63b936b14",
  "result": {
    "markdown": "---\ntitle: \"\\U0001F0CF Testing a Single Proportion\"\nauthor: \"Arvind V.\"\ndate: 10/Nov/2022\ndate-modified: \"2023-11-09\"\nabstract: \"Inference Tests for the significance of a Proportion\"\norder: 180\nimage: preview.jpg\nimage-alt: From The Internet Archive\ncategories:\n- Permutation\n- Monte Carlo Simulation\n- Random Number Generation\n- Distributions\n- Generating Parallel Worlds\nbibliography: \n  - grateful-refs.bib\ncitation: true\n---\n\n\n## {{< iconify noto-v1 package >}} Setting up R packages\n\n\n::: {.cell hash='single-prop_cache/html/setup_ad16550177a1ce0a2e8090e0f9681134'}\n\n````{.cell-code}\n```{{r}}\n#| label: setup\n#| include: true\n#| message: false\n#| warning: false\nknitr::opts_chunk$set(echo = TRUE,message = TRUE,warning = TRUE, fig.align = \"center\")\noptions(digits=2)\nlibrary(tidyverse)\nlibrary(mosaic)\nlibrary(ggformula)\n\n\n## Datasets from Chihara and Hesterberg's book (Second Edition)\nlibrary(resampledata)\n\n## Datasets from Cetinkaya-Rundel and Hardin's book (First Edition)\nlibrary(openintro)\n```\n````\n:::\n\n::: {.cell hash='single-prop_cache/html/Extra Pedagogical Packages_5aba39b61b3a4838dfe9f6a703895532'}\n\n:::\n\n\n## {{< iconify openmoji japanese-symbol-for-beginner >}} Introduction\n\nWe saw from the diagram created by Allen Downey that [there is only\none test](http://allendowney.blogspot.com/2016/06/there-is-still-only-one-test.html)!\nWe will now use this philosophy to develop a technique that allows us to\nmechanize several *Statistical Models* in that way, with nearly\nidentical code.\n\nWe will use two packages in R, `mosaic` to develop our intuition for\nwhat are called **permutation** based statistical tests. (There is also\na more recent package called `infer` in R which can do pretty much all\nof this, including visualization. In my opinion, the code is a little\ntoo high-level and does not offer quite the detailed insight that the\n`mosaic` package does).\n\n## {{< iconify svg-spinners blocks-shuffle-3 >}} Permutation Visually Demonstrated\n\nWe will look visually at a permutation exercise. We will create dummy\ndata that contains the following case study:\n\n> A set of identical resumes was sent to male and female evaluators. The\n> candidates in the resumes were of both genders. We wish to see if\n> there was difference in the way resumes were evaluated, by male and\n> female evaluators. (We use just *one* male and *one* female evaluator\n> here, to keep things simple!)\n\n\n::: {.cell layout=\"[[30,40,10,40]]\" hash='single-prop_cache/html/Artificial Data_dbf3d8cd07d8790d0dceb98c8bb8b797'}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"evaluator\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"candidate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"0\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"0\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"0\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"1\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"0\"},{\"1\":\"M\",\"2\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div><div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"evaluator\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"selection_ratio\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"count\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"F\",\"2\":\"0.1250000\",\"3\":\"3\",\"4\":\"24\"},{\"1\":\"M\",\"2\":\"0.4583333\",\"3\":\"11\",\"4\":\"24\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n         M \n-0.3333333 \n```\n:::\n\n::: {.cell-output-display}\n![](single-prop_files/figure-html/Artificial Data-1.png){width=2100}\n:::\n:::\n\n\nSo, we have a solid disparity in percentage of selection between the two\nevaluators!\n\n### {{< iconify mdi cards-playing-outline >}} Permutation\n\nNow we pretend that *there is no difference between the selections made\nby either set of evaluators*. So we can just:\n\n-   Pool up all the evaluations\\\n-   Arbitrarily re-assign a given candidate(selected or rejected) to\n    either of the two sets of evaluators, by permutation.\\\n\nHow would that pooled shuffled set of evaluations look like?\n\n\n::: {.cell hash='single-prop_cache/html/Shuffle the data once_af561b1a67e993d53479c72f7cafb982'}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"evaluator\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"selection_ratio\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"count\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"F\",\"2\":\"0.2500000\",\"3\":\"6\",\"4\":\"24\"},{\"1\":\"M\",\"2\":\"0.3333333\",\"3\":\"8\",\"4\":\"24\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell layout=\"[[45,-10,45]]\" hash='single-prop_cache/html/unnamed-chunk-5_28874958177286f98bf10e81d34d3dc1'}\n::: {.cell-output-display}\n![](single-prop_files/figure-html/unnamed-chunk-5-1.png){width=2100}\n:::\n\n::: {.cell-output-display}\n![](single-prop_files/figure-html/unnamed-chunk-5-2.png){width=2100}\n:::\n:::\n\n::: {.cell hash='single-prop_cache/html/Old code retained_5d04f6b0a19c5bb0229f82df232ba7be'}\n\n:::\n\n\nAs can be seen, the ratio is different! \n\nWe can now check out our Hypothesis that there is *no* bias. We can shuffle the data many many times, calculating the ratio each time, and plot the *distribution of the differences in selection ratio* and see how that artificially created distribution compares with the originally observed figure from Mother Nature.\n\n\n::: {.cell layout=\"[[60,-10,30]]\" hash='single-prop_cache/html/unnamed-chunk-7_2faf418ce79b7cb187ce9cb8ebad5cc8'}\n\n````{.cell-code}\n```{{r}}\n#| layout: [[60, -10, 30]]\nnull_dist <- do(5000) * diff(mean(candidate ~ shuffle(evaluator), \n                                   data = data))\n# null_dist %>% names()\nnull_dist %>% gf_histogram( ~ M, \n                  fill = ~ (M <= obs_difference), \n                  bins = 25,show.legend = FALSE,\n                  xlab = \"Bias Proportion\", \n                  ylab = \"How Often?\",\n                  title = \"Permutation Test on Diffence between Groups\",\n                  subtitle = \"\") %>% \n  gf_vline(xintercept = ~ obs_difference, color = \"red\" ) %>% \n  gf_label(500 ~ obs_difference, label = \"Observed\\n Bias\", \n           show.legend = FALSE) %>% \n  gf_theme(theme_classic())\n\nmean(~ M<= obs_difference, data = null_dist)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0146\n```\n:::\n\n::: {.cell-output-display}\n![](single-prop_files/figure-html/unnamed-chunk-7-1.png){width=2100}\n:::\n:::\n\n\nWe see that the artificial data can hardly ever ($p = 0.012$) mimic what\nthe real world experiment is showing. Hence we had good reason to reject\nour NULL Hypothesis that there is no bias.\n\n# {{< iconify pajamas issue-type-test-case >}} Case Study #1: TBD\n\n# {{< lordicons hbjlznlo >}} Case Study #2: Weight vs Exercise in the YRBSS Survey\n\n## {{< iconify fluent-mdl2 decision-solid >}} Conclusion\n\n## {{< iconify ooui references-ltr >}} References\n\n1.  [OpenIntro Modern Statistics: Chapter\n    17](https://openintro-ims.netlify.app/inference-one-prop.html)\n2.  Chihara and Hesterberg\n\n## Package Citations\n\n::: {.cell hash='single-prop_cache/html/unnamed-chunk-8_a243d0b0b492f487ed06f4a8ce27da1f'}\n::: {.cell-output-display}\n|Package       |Version |Citation                                       |\n|:-------------|:-------|:----------------------------------------------|\n|base          |4.3.2   |@base                                          |\n|checkdown     |0.0.12  |@checkdown                                     |\n|epoxy         |1.0.0   |@epoxy                                         |\n|ggbrace       |0.1.0   |@ggbrace                                       |\n|ggformula     |0.10.4  |@ggformula                                     |\n|knitr         |1.45    |@knitr2014; @knitr2015; @knitr2023             |\n|mosaic        |1.8.4.2 |@mosaic                                        |\n|openintro     |2.4.0   |@openintro                                     |\n|resampledata  |0.3.1   |@resampledata                                  |\n|rmarkdown     |2.25    |@rmarkdown2018; @rmarkdown2020; @rmarkdown2023 |\n|TeachHist     |0.2.1   |@TeachHist                                     |\n|TeachingDemos |2.12    |@TeachingDemos                                 |\n|tidyverse     |2.0.0   |@tidyverse                                     |\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}