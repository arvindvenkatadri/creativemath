{
  "hash": "90c4d88bcc3ff827da71af87c3f59ae4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: <iconify-icon icon=\"guidance:falling-rocks\" width=\"1.2em\" height=\"1.2em\"></iconify-icon><iconify-icon icon=\"game-icons:falling\" width=\"1.2em\" height=\"1.2em\"></iconify-icon> Facing the Abyss\nauthor: \"Arvind V\"\ndate: 21/Oct/2023\ndate-modified: \"2024-10-06\"\nabstract-title: \"Abstract\"\nabstract: \"A complete EDA Workflow\"\norder: 200\nimage: preview.jpeg\nimage-alt: Image by rawpixel.com\ncode-tools: true\ncategories:\n- EDA\n- Workflow\n- Descriptive\n\n---\n\n\n\n\n\n## A Data Analytics Process\n\nSo you have your shiny new R skills and you’ve successfully loaded a cool dataframe into R… Now what?\n\nThe best charts come from understanding your data, asking good questions from it, and displaying the answers to those questions as clearly as possible.\n\n## {{< iconify noto-v1 package >}} Setting up R Packages\n\n1. Install packages using `install.packages()` in your Console. \n1. Load up your libraries in a `setup` chunk: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(dev = \"ragg_png\")\n\nlibrary(tidyverse)\nlibrary(mosaic)\nlibrary(palmerpenguins)\nlibrary(ggformula)\nlibrary(ggridges)\nlibrary(skimr)\n##\nlibrary(GGally)\nlibrary(corrplot)\nlibrary(corrgram)\n```\n:::\n\n\n\n\nGo to <https://fonts.google.com/> and choose some professional looking, or funky looking, fonts. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(extrafont)\nextrafont::loadfonts(quiet = TRUE)\n##\nlibrary(showtext)\n## Loading Google fonts (https://fonts.google.com/)\nfont_add_google(name = \"Fira Sans Condensed\", family = \"fira\")\nfont_add_google(\"Gochi Hand\", \"gochi\")\nfont_add_google(\"Schoolbell\", \"bell\")\nfont_add_google(\"Montserrat Alternates\", \"montserrat\")\nfont_add_google(\"Roboto Condensed\", \"roboto\")\n### Automatically use showtext to render text\nshowtext_auto()\n```\n:::\n\n\n\n\n\n## {{< iconify ic baseline-input >}} Read Data\n- Use `readr::read_csv()`\n\n## {{< iconify file-icons influxdata >}} Examine Data\n\n- Use `dplyr::glimpse()`\n- Use `mosaic::inspect()` or `skimr::skim()`\n- Use `dplyr::summarise()` and `crosstable::crosstable()`\n- Format your tables with `knitr::kable()`\n- Highlight any interesting summary stats or data imbalances\n\n## {{< iconify streamline dictionary-language-book-solid >}} Data Dictionary and Experiment Description\n\n- A table containing the variable names, their interpretation, and their nature(Qual/Quant/Ord...)\n- If there are *wrongly coded* variables in the original data, state them in their correct form, so you can munge the in the next step\n- Declare what might be *target* and *predictor* variables, based on available information of the **experiment**, or a description of the data\n\n## {{< iconify carbon clean >}} Data Munging\n\n- Convert variables to factors as needed\n- Reformat / Rename other variables as needed\n- Clean badly formatted columns (e.g. text + numbers) using `tidyr::separate_**_**()`\n- **Save the data as a modified file**\n- **Do not mess up the original data file**\n\n## {{< iconify  material-symbols lab-research >}} Form Hypotheses\n\n\n### Question-1\n- State the Question or Hypothesis\n- (Temporarily) Drop variables using `dplyr::select()`\n- Create new variables if needed with `dplyr::mutate()`\n- Filter the data set using `dplyr::filter()`\n- Reformat data if needed with `tidyr::pivot_longer()` or `tidyr::pivot_wider()`\n- Answer the Question with a Table, a Chart, a Test, using an appropriate Model for Statistical Inference\n- Use `title`, `subtitle`, `legend` and `scales` appropriately in your chart\n- Prefer `ggformula` unless you are using a chart that is not yet supported therein (eg. `ggbump()` or `plot_likert()`)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Set graph theme\n## Idotic that we have to repeat this every chunk\n## Open issue in Quarto\n\npenguins %>%\n  drop_na() %>%\n  gf_point(body_mass_g ~ flipper_length_mm,\n    colour = ~species\n  ) %>%\n  gf_labs(\n    title = \"My First Penguins Plot\",\n    subtitle = \"Using ggformula with fonts\",\n    x = \"Flipper Length mm\", y = \"Body Mass gms\",\n    caption = \"I love penguins, and R\"\n  ) %>%\n  gf_theme(theme_classic()) %>%\n  gf_theme(theme(\n    panel.grid.minor = element_blank(),\n    ###\n    text = element_text(family = \"fira\", size = 14),\n    ###\n    plot.title = element_text(\n      family = \"roboto\",\n      face = \"bold\",\n      size = 28, hjust = 0\n    ),\n    plot.subtitle = element_text(\n      family = \"montserrat\",\n      face = \"bold\",\n      size = 18, hjust = 0\n    ),\n    plot.margin = margin(2, 2, 2, 2, unit = \"pt\"),\n    axis.title = element_text(size = 20),\n    plot.caption = element_text(family = \"gochi\", size = 14),\n    legend.title = element_text(\n      family = \"bell\",\n      face = \"bold\",\n      size = 20\n    ),\n    legend.text = element_text(\n      family = \"fira\",\n      size = 12\n    ),\n    legend.background = element_rect(\n      fill = \"cornsilk\",\n      colour = \"black\"\n    ),\n    legend.margin = margin(\n      t = 2,\n      r = 2,\n      b = 2,\n      l = 2,\n      unit = \"pt\"\n    )\n  ))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/figure-1-1.png){width=2100}\n:::\n:::\n\n\n\n\n\n### Inference-1\n\n.\n.\n.\n.\n\n\n### Question-n\n....\n\n### Inference-n\n....\n\n\n\n\n## {{< iconify ic outline-interests >}}{{< iconify carbon chart-3d >}} One Most Interesting Graph\n\n\n## {{< iconify fluent-mdl2 decision-solid >}} Conclusion\nDescribe what the graph shows and why it so interesting. What could be done next?\n\n## {{< iconify ooui references-rtl >}} References\n\n1. <https://shancarter.github.io/ucb-dataviz-fall-2013/classes/facing-the-abyss/>\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}