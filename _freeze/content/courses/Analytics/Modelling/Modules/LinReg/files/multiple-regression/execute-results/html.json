{
  "hash": "ba86418cf9b13a62ce2f06d1aadde441",
  "result": {
    "markdown": "---\ntitle: \"Tutorial: Multiple Linear Regression\"\nauthor: \"Arvind Venkatadri\"\ndate: 03/May/2023\ndate-modified: \"2023-05-04\"\ncategories: \n  - Linear Regression\n  - Quantitative Predictor\n  - Quantitative Response\n  - Sum of Squares\n  - Residuals\nabstract: \"Using Multiple Regression to predict Quantitative Target Variables\"\nfilters:\n  - nutshell\n---\n\n\n## {{< iconify noto-v1 package >}} Setting up R Packages\n\n\n::: {.cell hash='multiple-regression_cache/html/setup_b36ea5d2cfc746d666409755be230503'}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE,warning = FALSE,message = FALSE)\nlibrary(tidyverse)\nlibrary(ggformula)\nlibrary(mosaic)\nlibrary(infer)\n```\n:::\n\n::: {.cell hash='multiple-regression_cache/html/plot theme_0fc30d1088da54b2d536c4435e505493'}\n\n```{.r .cell-code}\n# Let us set a plot theme for Data visualisation\n\nmy_theme <- function(){  # Creating a function\n  theme_classic() +  # Using pre-defined theme as base\n  theme(axis.text.x = element_text(size = 12, face = \"bold\"),  # Customizing axes text      \n        axis.text.y = element_text(size = 12, face = \"bold\"),\n        axis.title = element_text(size = 14, face = \"bold\"),  # Customizing axis title\n        panel.grid = element_blank(),  # Taking off the default grid\n        plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), units = , \"cm\"),\n        legend.text = element_text(size = 12, face = \"italic\"),  # Customizing legend text\n        legend.title = element_text(size = 12, face = \"bold\"),  # Customizing legend title\n        legend.position = \"right\",  # Customizing legend position\n        plot.caption = element_text(size = 12))  # Customizing plot caption\n}   \n```\n:::\n\n\nIn this tutorial, we will use the Boston housing dataset. Our research\nquestion is:\n\n::: callout-note\n## Research Question\n\nHow do we predict the price of a house in Boston, based on other\nparameters Quantitative parameters such as area, location, rooms, and\ncrime-rate in the neighbourhood?\n\nAnd how do we choose the \"best\" model, based on a tradeoff between Model\nComplexity and Model Accuracy?\n:::\n\n### Read the Data\n\n\n::: {.cell hash='multiple-regression_cache/html/unnamed-chunk-3_68e503c61ea74d6693acab5f70a0bdb5'}\n\n```{.r .cell-code}\ndata(\"BostonHousing2\", package = \"mlbench\")\nhousing <- BostonHousing2\ninspect(housing)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\ncategorical variables:  \n  name  class levels   n missing                                  distribution\n1 town factor     92 506       0 Cambridge (5.9%) ...                         \n2 chas factor      2 506       0 0 (93.1%), 1 (6.9%)                          \n\nquantitative variables:  \n      name   class       min          Q1     median          Q3       max\n1    tract integer   1.00000 1303.250000 3393.50000 3739.750000 5082.0000\n2      lon numeric -71.28950  -71.093225  -71.05290  -71.019625  -70.8100\n3      lat numeric  42.03000   42.180775   42.21810   42.252250   42.3810\n4     medv numeric   5.00000   17.025000   21.20000   25.000000   50.0000\n5    cmedv numeric   5.00000   17.025000   21.20000   25.000000   50.0000\n6     crim numeric   0.00632    0.082045    0.25651    3.677083   88.9762\n7       zn numeric   0.00000    0.000000    0.00000   12.500000  100.0000\n8    indus numeric   0.46000    5.190000    9.69000   18.100000   27.7400\n9      nox numeric   0.38500    0.449000    0.53800    0.624000    0.8710\n10      rm numeric   3.56100    5.885500    6.20850    6.623500    8.7800\n11     age numeric   2.90000   45.025000   77.50000   94.075000  100.0000\n12     dis numeric   1.12960    2.100175    3.20745    5.188425   12.1265\n13     rad integer   1.00000    4.000000    5.00000   24.000000   24.0000\n14     tax integer 187.00000  279.000000  330.00000  666.000000  711.0000\n15 ptratio numeric  12.60000   17.400000   19.05000   20.200000   22.0000\n16       b numeric   0.32000  375.377500  391.44000  396.225000  396.9000\n17   lstat numeric   1.73000    6.950000   11.36000   16.955000   37.9700\n           mean           sd   n missing\n1  2700.3557312 1.380037e+03 506       0\n2   -71.0563887 7.540535e-02 506       0\n3    42.2164403 6.177718e-02 506       0\n4    22.5328063 9.197104e+00 506       0\n5    22.5288538 9.182176e+00 506       0\n6     3.6135236 8.601545e+00 506       0\n7    11.3636364 2.332245e+01 506       0\n8    11.1367787 6.860353e+00 506       0\n9     0.5546951 1.158777e-01 506       0\n10    6.2846344 7.026171e-01 506       0\n11   68.5749012 2.814886e+01 506       0\n12    3.7950427 2.105710e+00 506       0\n13    9.5494071 8.707259e+00 506       0\n14  408.2371542 1.685371e+02 506       0\n15   18.4555336 2.164946e+00 506       0\n16  356.6740316 9.129486e+01 506       0\n17   12.6530632 7.141062e+00 506       0\n```\n:::\n:::\n\n\nThe original data are 506 observations on 14 variables, `medv` being the\ntarget variable:\n\n|         |                                                                       |\n|:--------|:----------------------------------------------------------------------|\n| crim    | per capita crime rate by town                                         |\n| zn      | proportion of residential land zoned for lots over 25,000 sq.ft       |\n| indus   | proportion of non-retail business acres per town                      |\n| chas    | Charles River dummy variable (= 1 if tract bounds river; 0 otherwise) |\n| nox     | nitric oxides concentration (parts per 10 million)                    |\n| rm      | average number of rooms per dwelling                                  |\n| age     | proportion of owner-occupied units built prior to 1940                |\n| dis     | weighted distances to five Boston employment centres                  |\n| rad     | index of accessibility to radial highways                             |\n| tax     | full-value property-tax rate per USD 10,000                           |\n| ptratio | pupil-teacher ratio by town                                           |\n| b       | $1000(B - 0.63)^2$ where B is the proportion of Blacks by town        |\n| lstat   | percentage of lower status of the population                          |\n| medv    | median value of owner-occupied homes in USD 1000's                    |\n\nThe corrected data set has the following additional columns:\n\n|       |                                                              |\n|:------|:-------------------------------------------------------------|\n| cmedv | corrected median value of owner-occupied homes in USD 1000's |\n| town  | name of town                                                 |\n| tract | census tract                                                 |\n| lon   | longitude of census tract                                    |\n| lat   | latitude of census tract                                     |\n\nOur response variable is `cmedv`, the *corrected median value of\nowner-occupied homes in USD 1000'*s. Their are many Quantitative feature\nvariables that we can use to predict `cmedv`. And there are two\nQualitative features, `chas` and `tax`.\n\n## Workflow: Maximal Multiple Regression Model\n\nWe will create a regression model for `cmedv` using all the other\nnumerical predictor features in the dataset.\n\n\n::: {.cell hash='multiple-regression_cache/html/maximal model_d138cc2284908a2acc9d55e6a73f96e0'}\n\n```{.r .cell-code}\nhousing_numeric <- housing %>% select(where(is.numeric), \n                                      \n                    # remove medv\n                    # an older version of cmedv\n                                      -c(medv))\nnames(housing_numeric) # 16 variables, one target, 15 predictors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"tract\"   \"lon\"     \"lat\"     \"cmedv\"   \"crim\"    \"zn\"      \"indus\"  \n [8] \"nox\"     \"rm\"      \"age\"     \"dis\"     \"rad\"     \"tax\"     \"ptratio\"\n[15] \"b\"       \"lstat\"  \n```\n:::\n\n```{.r .cell-code}\nhousing_maximal <- lm(cmedv ~ ., data = housing_numeric)\nsummary(housing_maximal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = cmedv ~ ., data = housing_numeric)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-13.9343  -2.7517  -0.6188   1.7107  26.1195 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -3.446e+02  3.235e+02  -1.065 0.287338    \ntract       -7.517e-04  4.457e-04  -1.687 0.092311 .  \nlon         -6.789e+00  3.436e+00  -1.976 0.048700 *  \nlat         -2.354e+00  5.361e+00  -0.439 0.660740    \ncrim        -1.089e-01  3.279e-02  -3.320 0.000967 ***\nzn           4.397e-02  1.388e-02   3.167 0.001636 ** \nindus        2.754e-02  6.197e-02   0.444 0.656919    \nnox         -1.551e+01  4.033e+00  -3.845 0.000136 ***\nrm           3.809e+00  4.198e-01   9.075  < 2e-16 ***\nage          5.816e-03  1.339e-02   0.434 0.664163    \ndis         -1.384e+00  2.100e-01  -6.591 1.13e-10 ***\nrad          2.357e-01  8.466e-02   2.784 0.005583 ** \ntax         -1.481e-02  3.737e-03  -3.962 8.54e-05 ***\nptratio     -9.489e-01  1.410e-01  -6.730 4.74e-11 ***\nb            9.548e-03  2.675e-03   3.569 0.000394 ***\nlstat       -5.464e-01  5.062e-02 -10.795  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.729 on 490 degrees of freedom\nMultiple R-squared:  0.7426,\tAdjusted R-squared:  0.7348 \nF-statistic: 94.27 on 15 and 490 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\nThe maximal model has an R.squared of $0.7426$ which is much better than\nthat we obtained for a simple model based on `rm` alone. How much can we\nsimplify this maximal model, without losing out on `R.squared`?\n\n## Workflow: Model Reduction\n\nWe now proceed naively by removing [one predictor after\nanother.]{.underline} We will resort to what may amount to **p-hacking**\nby sorting the predictors based on their p-value in the maximal model\nand removing them in decreasing order of their p-value.\n\nWe will also use some powerful features from the `purrr` package (also\npart of the `tidyverse`), to create **all** these models all at once.\nThen we will be able to plot their `R.squared` values together and\ndecide where we wish to trade off Explanability vs Complexity for our\nmodel.\n\n\n::: {.cell hash='multiple-regression_cache/html/Maximal Model and p-hacking_d58082221eeeab5beeb06e7d68d43115'}\n\n```{.r .cell-code}\n# No of Quant predictor variables in the dataset\nn_vars <- housing %>%\n  select(where(is.numeric), -c(cmedv, medv)) %>%\n  length()\n\n# Maximal Model, now tidied\nhousing_maximal_tidy <- \n  housing_maximal %>% \n  broom::tidy() %>% \n  \n  # Obviously remove \"Intercept\" ;-D\n  filter(term != \"(Intercept)\") %>% \n  \n  # And horrors! Sort variables by p.value\n  arrange(p.value)\nhousing_maximal_tidy\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"term\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"lstat\",\"2\":\"-5.464398e-01\",\"3\":\"0.050618742\",\"4\":\"-10.7952062\",\"5\":\"1.619106e-24\"},{\"1\":\"rm\",\"2\":\"3.809475e+00\",\"3\":\"0.419779424\",\"4\":\"9.0749437\",\"5\":\"2.770619e-18\"},{\"1\":\"ptratio\",\"2\":\"-9.489414e-01\",\"3\":\"0.140991493\",\"4\":\"-6.7304870\",\"5\":\"4.738282e-11\"},{\"1\":\"dis\",\"2\":\"-1.384370e+00\",\"3\":\"0.210040970\",\"4\":\"-6.5909526\",\"5\":\"1.131653e-10\"},{\"1\":\"tax\",\"2\":\"-1.480679e-02\",\"3\":\"0.003737228\",\"4\":\"-3.9619704\",\"5\":\"8.537821e-05\"},{\"1\":\"nox\",\"2\":\"-1.550638e+01\",\"3\":\"4.032785904\",\"4\":\"-3.8450787\",\"5\":\"1.364052e-04\"},{\"1\":\"b\",\"2\":\"9.547859e-03\",\"3\":\"0.002675276\",\"4\":\"3.5689241\",\"5\":\"3.937358e-04\"},{\"1\":\"crim\",\"2\":\"-1.088614e-01\",\"3\":\"0.032788971\",\"4\":\"-3.3200617\",\"5\":\"9.670782e-04\"},{\"1\":\"zn\",\"2\":\"4.396790e-02\",\"3\":\"0.013883050\",\"4\":\"3.1670203\",\"5\":\"1.636138e-03\"},{\"1\":\"rad\",\"2\":\"2.356740e-01\",\"3\":\"0.084664664\",\"4\":\"2.7836173\",\"5\":\"5.583405e-03\"},{\"1\":\"lon\",\"2\":\"-6.789354e+00\",\"3\":\"3.435669521\",\"4\":\"-1.9761372\",\"5\":\"4.869969e-02\"},{\"1\":\"tract\",\"2\":\"-7.517349e-04\",\"3\":\"0.000445702\",\"4\":\"-1.6866314\",\"5\":\"9.231074e-02\"},{\"1\":\"indus\",\"2\":\"2.754057e-02\",\"3\":\"0.061966549\",\"4\":\"0.4444425\",\"5\":\"6.569189e-01\"},{\"1\":\"lat\",\"2\":\"-2.354361e+00\",\"3\":\"5.361064291\",\"4\":\"-0.4391592\",\"5\":\"6.607398e-01\"},{\"1\":\"age\",\"2\":\"5.816235e-03\",\"3\":\"0.013388012\",\"4\":\"0.4344360\",\"5\":\"6.641631e-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nAnd now we unleash the `purrr` package to create all the simplified\nmodels at once. We will construct a dataset containing three columns:\n\n-   A list of all quantitative predictor variables\n-   A sequence of numbers from 1 to `N(predictor)`\n-   A \"list\" column containing the `housing` data frame itself\n\nWe will use the iteration capability of `purrr` to sequentially dropping\none variable at a time from the maximal(15 predictor) model, build a new\nreduced model and compute the `r.squared`:\n\n\n::: {.cell hash='multiple-regression_cache/html/All models at once_501e7c0b3294471bc2765095c447a68c'}\n\n```{.r .cell-code}\nhousing_model_set <- tibble(all_vars = list(housing_maximal_tidy$term),\n                            keep_vars = seq(1, n_vars),\n                            data = list(housing_numeric))\nhousing_model_set\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"all_vars\"],\"name\":[1],\"type\":[\"list\"],\"align\":[\"right\"]},{\"label\":[\"keep_vars\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"data\"],\"name\":[3],\"type\":[\"list\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"<chr [15]>\",\"2\":\"1\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"2\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"3\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"4\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"5\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"6\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"7\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"8\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"9\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"10\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"11\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"12\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"13\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"14\",\"3\":\"<df[,16] [506 × 16]>\"},{\"1\":\"<chr [15]>\",\"2\":\"15\",\"3\":\"<df[,16] [506 × 16]>\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# Unleash purrr in a series of mutates\nhousing_model_set <- housing_model_set %>%\n  \n  # list of predictor variables for each model\n  mutate(mod_vars =\n           pmap(\n             .l = list(all_vars, keep_vars, data),\n             .f = \\(all_vars, keep_vars, data) all_vars[1:keep_vars]\n           )) %>%\n  \n  # build a formula with these for linear regression\n  mutate(formula = map(.x = mod_vars,\n                       .f = \\(mod_vars) as.formula(paste(\n                         \"cmedv ~\", paste(mod_vars, collapse = \"+\")\n                       )))) %>%\n  \n  # use the formulae to build multiple linear models\n  mutate(models =\n           pmap(\n             .l = list(data, formula),\n             .f = \\(data, formula) lm(formula, data = data)\n           ))\n# Check everything after the operation\nhousing_model_set\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"all_vars\"],\"name\":[1],\"type\":[\"list\"],\"align\":[\"right\"]},{\"label\":[\"keep_vars\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"data\"],\"name\":[3],\"type\":[\"list\"],\"align\":[\"right\"]},{\"label\":[\"mod_vars\"],\"name\":[4],\"type\":[\"list\"],\"align\":[\"right\"]},{\"label\":[\"formula\"],\"name\":[5],\"type\":[\"list\"],\"align\":[\"right\"]},{\"label\":[\"models\"],\"name\":[6],\"type\":[\"list\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"<chr [15]>\",\"2\":\"1\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [1]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"2\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [2]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"3\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [3]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"4\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [4]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"5\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [5]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"6\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [6]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"7\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [7]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"8\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [8]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"9\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [9]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"10\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [10]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"11\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [11]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"12\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [12]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"13\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [13]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"14\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [14]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"},{\"1\":\"<chr [15]>\",\"2\":\"15\",\"3\":\"<df[,16] [506 × 16]>\",\"4\":\"<chr [15]>\",\"5\":\"<S3: formula>\",\"6\":\"<S3: lm>\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# Tidy up the models using broom to expose their metrics\nhousing_model_set %>% \n  mutate(tidy_models =\n           map(\n             .x = models,\n             .f = \\(x) broom::glance(x,\n                                     conf.int = TRUE,\n                                     conf.lvel = 0.95)\n           )) %>% \n\n  # Remove unwanted columns, keep model and predictor count\n  select(keep_vars, tidy_models) %>%\n  unnest(tidy_models) %>%\n  \n  # Plot r.squared vs predictor count\n  gf_point(1 - r.squared ~ keep_vars) %>%\n  gf_line(ylab = \"Loss of R.Squared\",\n          xlab = \"No. params in the Linear Model\") %>%\n  gf_theme(my_theme())\n```\n\n::: {.cell-output-display}\n![](multiple-regression_files/figure-html/All models at once-1.png){width=672}\n:::\n:::\n\n\nAt the loss of some 4% in the `r.squared`, we can drop our model\ncomplexity from 15 predictors to say 4! Our final model will then be:\n\n\n::: {.cell hash='multiple-regression_cache/html/Final Model_11f7366d398f4d979984f00ab76cbd9b'}\n\n```{.r .cell-code}\nhousing_model_final <- \n  housing_model_set %>% \n  \n  # filter for best model, with 4 variables\n  filter(keep_vars == 4) %>% \n  \n  # tidy up the model\n  mutate(tidy_models =\n           map(\n             .x = models,\n             .f = \\(x) broom::tidy(x,\n                                     conf.int = TRUE,\n                                     conf.lvel = 0.95)\n           )) %>% \n  \n  # Remove unwanted columns, keep model and predictor count\n  select(keep_vars, tidy_models) %>%\n  unnest(tidy_models)\nhousing_model_final\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"keep_vars\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"term\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"std.error\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.value\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"conf.low\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"conf.high\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"4\",\"2\":\"(Intercept)\",\"3\":\"24.4593215\",\"4\":\"4.05100419\",\"5\":\"6.037842\",\"6\":\"3.044311e-09\",\"7\":\"16.5002717\",\"8\":\"32.4183712\"},{\"1\":\"4\",\"2\":\"lstat\",\"3\":\"-0.6730337\",\"4\":\"0.04644289\",\"5\":\"-14.491640\",\"6\":\"5.363328e-40\",\"7\":\"-0.7642805\",\"8\":\"-0.5817869\"},{\"1\":\"4\",\"2\":\"rm\",\"3\":\"4.1991211\",\"4\":\"0.42100994\",\"5\":\"9.973924\",\"6\":\"1.712219e-21\",\"7\":\"3.3719586\",\"8\":\"5.0262837\"},{\"1\":\"4\",\"2\":\"ptratio\",\"3\":\"-0.9572051\",\"4\":\"0.11526258\",\"5\":\"-8.304561\",\"6\":\"9.410039e-16\",\"7\":\"-1.1836627\",\"8\":\"-0.7307475\"},{\"1\":\"4\",\"2\":\"dis\",\"3\":\"-0.5635616\",\"4\":\"0.12611111\",\"5\":\"-4.468770\",\"6\":\"9.735101e-06\",\"7\":\"-0.8113334\",\"8\":\"-0.3157898\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nhousing_model_final %>%  \n  # And plot the model\n  # Remove the intercept term\n  filter(term != \"(Intercept)\") %>% \n  gf_col(estimate ~ term, fill = ~ term, width = 0.25) %>% \n  gf_hline(yintercept = 0) %>% \n  gf_errorbar(conf.low + conf.high ~ term, linewidth = 1, \n              title = \"Multiple Regression\",\n              subtitle = \"Model Estimates with Confidence Intervals\") %>% \n  gf_theme(my_theme())\n```\n\n::: {.cell-output-display}\n![](multiple-regression_files/figure-html/Final Model-1.png){width=672}\n:::\n:::\n\n\n## Workflow: Diagnostics\n\n## Conclusion\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}