{
  "hash": "a043a181829abba6da41cbf4bd9042d2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Legionnaire's Disease in the USA\norder: 350\n---\n\n\n\n## Setting up R Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(mosaic)\nlibrary(skimr)\nlibrary(ggformula)\nlibrary(patchwork)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n#### Plot Theme\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# https://stackoverflow.com/questions/74491138/ggplot-custom-fonts-not-working-in-quarto\n\n# Chunk options\nknitr::opts_chunk$set(\n  fig.width = 7,\n  fig.asp = 0.618, # Golden Ratio\n  # out.width = \"80%\",\n  fig.align = \"center\"\n)\n### Ggplot Theme\n### https://rpubs.com/mclaire19/ggplot2-custom-themes\n\ntheme_custom <- function() {\n  font <- \"Roboto Condensed\" # assign font family up front\n\n  theme_classic(base_size = 14) %+replace% # replace elements we want to change\n\n    theme(\n      panel.grid.minor = element_blank(), # strip minor gridlines\n      text = element_text(family = font),\n      # text elements\n      plot.title = element_text( # title\n        family = font, # set font family\n        size = 20, # set font size\n        face = \"bold\", # bold typeface\n        hjust = 0, # left align\n        # vjust = 2                #raise slightly\n        margin = margin(0, 0, 10, 0)\n      ),\n      plot.subtitle = element_text( # subtitle\n        family = font, # font family\n        size = 14, # font size\n        hjust = 0,\n        margin = margin(2, 0, 5, 0)\n      ),\n      plot.caption = element_text( # caption\n        family = font, # font family\n        size = 8, # font size\n        hjust = 1\n      ), # right align\n\n      axis.title = element_text( # axis titles\n        family = font, # font family\n        size = 10 # font size\n      ),\n      axis.text = element_text( # axis text\n        family = font, # axis family\n        size = 8\n      ) # font size\n    )\n}\n\n# Set graph theme\ntheme_set(new = theme_custom())\n#\n```\n:::\n\n\n\n## Introduction\n\nLegionnaires’ disease (LD) is a severe form of pneumonia (∼10–25% fatality rate) caused by inhalation of aerosols containing `Legionella`, a pathogenic gram-negative bacteria. These bacteria can grow, spread, and aerosolize through building water systems. A recent dramatic increase in LD incidence has been observed globally, with a 9-fold increase in the United States from 2000 to 2018, \n\nRecords were also maintained of atmospheric Sulphur Dioxide (SO2) and the acidity i.e. pH of the atmosphere around building water systems such as Cooling Towers (CT) and in Rainwater. \n\nThis data is from this paper: Yu F, Nair AA, Lauper U (2024), <https://doi.org/10.6084/m9.figshare.25157852.v2>\n\n## Read the Modified Data\n\n\n\n::: {.cell}\n\n:::\n\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<button class=\"btn btn-warning\" onclick=\"&#10;    async function downloadFile(event) {&#10;      event.preventDefault();&#10;      try {&#10;        const response = await fetch(&#39;data:text/csv;base64,eWVhcjtsZAoxOTkyOzEsMDYKMTk5MzswLDg0CjE5OTQ7MCw2NwoxOTk1OzAsNjUKMTk5NjswLDkwCjE5OTc7MCw5NwoxOTk4OzEsMzcKMTk5OTsxLDA4CjIwMDA7MSwzNAoyMDAxOzEsMTQKMjAwMjsxLDY4CjIwMDM7MiwyNQoyMDA0OzEsODAKMjAwNTszLDI3CjIwMDY7NCw4MwoyMDA3OzMsODEKMjAwODs0LDU5CjIwMDk7NSw0MgoyMDEwOzQsMjMKMjAxMTs1LDYyCjIwMTI7NCw1OAoyMDEzOzYsODkKMjAxNDs1LDkzCjIwMTU7Nyw5MwoyMDE2OzYsNjYKMjAxNzs5LDMyCjIwMTg7MTIsOTgKMjAxOTs5LDU5Cg==&#39;);&#10;        if (!response.ok) throw new Error(&#39;Network response failed&#39;);&#10;        const blob = await response.blob();&#10;        const blobUrl = window.URL.createObjectURL(blob);&#10;        const a = document.createElement(&#39;a&#39;);&#10;        a.href = blobUrl;&#10;        a.download = &#39;Disease.csv&#39;;&#10;        a.style.display = &#39;none&#39;;&#10;        document.body.appendChild(a);&#10;        a.dispatchEvent(new MouseEvent(&#39;click&#39;));&#10;        document.body.removeChild(a);&#10;        setTimeout(() =&gt; {&#10;          window.URL.revokeObjectURL(blobUrl);&#10;        }, 100);&#10;        return false;&#10;      } catch (error) {&#10;        console.error(&#39;Download failed:&#39;, error);&#10;        alert(&#39;Download failed. Please try again.&#39;);&#10;      }&#10;    }&#10;    downloadFile(event);&#10;  \" has_icon=\"TRUE\"><i class=\"fa fa-save\"></i> Download LD prevalence data</button>\n```\n\n:::\n:::\n\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<button class=\"btn btn-warning\" onclick=\"&#10;    async function downloadFile(event) {&#10;      event.preventDefault();&#10;      try {&#10;        const response = await fetch(&#39;data:text/csv;base64,eWVhcjtzbzJfTmFzc2F1X0VyaWUKMTk5Mjs4LDkwCjE5OTM7OCwwNQoxOTk0OzgsNDAKMTk5NTs2LDQ5CjE5OTY7Niw4NQoxOTk3OzUsOTEKMTk5ODs1LDc2CjE5OTk7NiwzOAoyMDAwOzYsMjQKMjAwMTs2LDE4CjIwMDI7NCw4OAoyMDAzOzQsOTUKMjAwNDszLDg2CjIwMDU7Myw5MwoyMDA2OzMsMjcKMjAwNzszLDIzCjIwMDg7Myw1MwoyMDA5OzIsNjkKMjAxMDsxLDgwCjIwMTE7MiwwMAoyMDEyOzIsMTIKMjAxMzsxLDc1CjIwMTQ7MSw0NQoyMDE1OzEsMTIKMjAxNjswLDUwCjIwMTc7MCwzNAoyMDE4OzAsMzQKMjAxOTswLDM0Cg==&#39;);&#10;        if (!response.ok) throw new Error(&#39;Network response failed&#39;);&#10;        const blob = await response.blob();&#10;        const blobUrl = window.URL.createObjectURL(blob);&#10;        const a = document.createElement(&#39;a&#39;);&#10;        a.href = blobUrl;&#10;        a.download = &#39;SO2_Nassau.csv&#39;;&#10;        a.style.display = &#39;none&#39;;&#10;        document.body.appendChild(a);&#10;        a.dispatchEvent(new MouseEvent(&#39;click&#39;));&#10;        document.body.removeChild(a);&#10;        setTimeout(() =&gt; {&#10;          window.URL.revokeObjectURL(blobUrl);&#10;        }, 100);&#10;        return false;&#10;      } catch (error) {&#10;        console.error(&#39;Download failed:&#39;, error);&#10;        alert(&#39;Download failed. Please try again.&#39;);&#10;      }&#10;    }&#10;    downloadFile(event);&#10;  \" has_icon=\"TRUE\"><i class=\"fa fa-save\"></i> Download SO2 in Nassau data</button>\n```\n\n:::\n:::\n\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<button class=\"btn btn-warning\" onclick=\"&#10;    async function downloadFile(event) {&#10;      event.preventDefault();&#10;      try {&#10;        const response = await fetch(&#39;data:text/csv;base64,eWVhcjtzbzJfVVMKMTk5MjsxMSwxMjk4NjcwCjE5OTM7MTAsOTc0MTI0MAoxOTk0OzEwLDc1ODkwNTAKMTk5NTs5LDM4NDQzMDUKMTk5Njs5LDI2NjYyNDEKMTk5Nzs5LDQ5NTc1MjAKMTk5ODs5LDU0ODQ0NDEKMTk5OTs4LDg0MzM1MzAKMjAwMDs4LDIzOTI4NjEKMjAwMTs4LDAyOTk0MzQKMjAwMjs3LDU3NjUyNzcKMjAwMzs3LDQ2MzU2NTMKMjAwNDs3LDM0NDM2MzAKMjAwNTs3LDMzMTQxMjMKMjAwNjs2LDYxNDA4ODYKMjAwNzs1LDg5Njc2NDkKMjAwODs1LDIwMzM3NTYKMjAwOTs0LDU4MTE5NzcKMjAxMDszLDg5NzIyMTgKMjAxMTszLDI2NTQ5MzEKMjAxMjsyLDU2MDA4NzYKMjAxMzsyLDQ1NjMyMTcKMjAxNDsyLDM1NjA0MDIKMjAxNTsxLDk4ODM5MDcKMjAxNjsxLDYxNDkyODMKMjAxNzsxLDI3OTk2OTUKMjAxODsxLDIyOTA1OTYKMjAxOTsxLDAwMDAwMDAK&#39;);&#10;        if (!response.ok) throw new Error(&#39;Network response failed&#39;);&#10;        const blob = await response.blob();&#10;        const blobUrl = window.URL.createObjectURL(blob);&#10;        const a = document.createElement(&#39;a&#39;);&#10;        a.href = blobUrl;&#10;        a.download = &#39;SO2_US.csv&#39;;&#10;        a.style.display = &#39;none&#39;;&#10;        document.body.appendChild(a);&#10;        a.dispatchEvent(new MouseEvent(&#39;click&#39;));&#10;        document.body.removeChild(a);&#10;        setTimeout(() =&gt; {&#10;          window.URL.revokeObjectURL(blobUrl);&#10;        }, 100);&#10;        return false;&#10;      } catch (error) {&#10;        console.error(&#39;Download failed:&#39;, error);&#10;        alert(&#39;Download failed. Please try again.&#39;);&#10;      }&#10;    }&#10;    downloadFile(event);&#10;  \" has_icon=\"TRUE\"><i class=\"fa fa-save\"></i> Download SO2 in mainland US data</button>\n```\n\n:::\n:::\n\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<button class=\"btn btn-warning\" onclick=\"&#10;    async function downloadFile(event) {&#10;      event.preventDefault();&#10;      try {&#10;        const response = await fetch(&#39;data:text/csv;base64,eWVhcjtwSF9DVAoxOTkyOzMsOTEKMTk5MzszLDk1CjE5OTQ7Myw5MwoxOTk1OzQsMDQKMTk5Njs0LDAyCjE5OTc7NCwwOAoxOTk4OzQsMDkKMTk5OTs0LDA1CjIwMDA7NCwwNgoyMDAxOzQsMDYKMjAwMjs0LDE2CjIwMDM7NCwxNgoyMDA0OzQsMjYKMjAwNTs0LDI1CjIwMDY7NCwzMwoyMDA3OzQsMzQKMjAwODs0LDMwCjIwMDk7NCw0MQoyMDEwOzQsNTcKMjAxMTs0LDUzCjIwMTI7NCw1MQoyMDEzOzQsNTgKMjAxNDs0LDY2CjIwMTU7NCw3NgoyMDE2OzUsMDMKMjAxNzs1LDE1CjIwMTg7NSwxNQoyMDE5OzUsMTUK&#39;);&#10;        if (!response.ok) throw new Error(&#39;Network response failed&#39;);&#10;        const blob = await response.blob();&#10;        const blobUrl = window.URL.createObjectURL(blob);&#10;        const a = document.createElement(&#39;a&#39;);&#10;        a.href = blobUrl;&#10;        a.download = &#39;pH_ct.csv&#39;;&#10;        a.style.display = &#39;none&#39;;&#10;        document.body.appendChild(a);&#10;        a.dispatchEvent(new MouseEvent(&#39;click&#39;));&#10;        document.body.removeChild(a);&#10;        setTimeout(() =&gt; {&#10;          window.URL.revokeObjectURL(blobUrl);&#10;        }, 100);&#10;        return false;&#10;      } catch (error) {&#10;        console.error(&#39;Download failed:&#39;, error);&#10;        alert(&#39;Download failed. Please try again.&#39;);&#10;      }&#10;    }&#10;    downloadFile(event);&#10;  \" has_icon=\"TRUE\"><i class=\"fa fa-save\"></i> Download pH Cooling Tower</button>\n```\n\n:::\n:::\n\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<button class=\"btn btn-warning\" onclick=\"&#10;    async function downloadFile(event) {&#10;      event.preventDefault();&#10;      try {&#10;        const response = await fetch(&#39;data:text/csv;base64,eWVhcjtwSF9yYWlud2F0ZXI7dXBwZXI7bG93ZXIKMTk5Mjs0LDMzOzAsMTg7MCwwOAoxOTkzOzQsMzE7MCwxMDswLDA3CjE5OTQ7NCwzMjswLDE1OzAsMDkKMTk5NTs0LDQxOzAsMTQ7MCwwOQoxOTk2OzQsNDM7MCwyMTswLDE1CjE5OTc7NCwzOTswLDExOzAsMDcKMTk5ODs0LDM5OzAsMDk7MCwwOAoxOTk5OzQsNDg7MCwxNTswLDEzCjIwMDA7NCw0MTswLDE2OzAsMTQKMjAwMTs0LDQyOzAsMTg7MCwwOQoyMDAyOzQsNDk7MCwwOTswLDExCjIwMDM7NCw1NzswLDMxOzAsMTcKMjAwNDs0LDUyOzAsMTg7MCwxNAoyMDA1OzQsNjI7MCwxMjswLDExCjIwMDY7NCw2MDswLDE1OzAsMTQKMjAwNzs0LDU5OzAsMTI7MCwwNQoyMDA4OzQsNjM7MCwxMDswLDA2CjIwMDk7NCw3OTswLDExOzAsMTEKMjAxMDs0LDkwOzAsMTc7MCwxMgoyMDExOzQsOTE7MCwxMjswLDE4CjIwMTI7NCw5OTswLDEzOzAsMTEKMjAxMzs1LDAwOzAsMTQ7MCwxMwoyMDE0OzUsMDQ7MCwxODswLDE0CjIwMTU7NSwxMTswLDE5OzAsMTcKMjAxNjs1LDE5OzAsMzM7MCwxOAoyMDE3OzUsMTk7MCwzMTswLDE4CjIwMTg7NSwyMjswLDM0OzAsMjAKMjAxOTs1LDI3OzAsMzM7MCwyMgo=&#39;);&#10;        if (!response.ok) throw new Error(&#39;Network response failed&#39;);&#10;        const blob = await response.blob();&#10;        const blobUrl = window.URL.createObjectURL(blob);&#10;        const a = document.createElement(&#39;a&#39;);&#10;        a.href = blobUrl;&#10;        a.download = &#39;pH_rainwater.csv&#39;;&#10;        a.style.display = &#39;none&#39;;&#10;        document.body.appendChild(a);&#10;        a.dispatchEvent(new MouseEvent(&#39;click&#39;));&#10;        document.body.removeChild(a);&#10;        setTimeout(() =&gt; {&#10;          window.URL.revokeObjectURL(blobUrl);&#10;        }, 100);&#10;        return false;&#10;      } catch (error) {&#10;        console.error(&#39;Download failed:&#39;, error);&#10;        alert(&#39;Download failed. Please try again.&#39;);&#10;      }&#10;    }&#10;    downloadFile(event);&#10;  \" has_icon=\"TRUE\"><i class=\"fa fa-save\"></i> Download pH Rainwater</button>\n```\n\n:::\n:::\n\n\n\n\n## Inspect the Data\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: inspect-skim-glimpse\n\n# Write in\n```\n````\n:::\n\n\n\n\n## Data Dictionary\n::: callout-note\n### Quantitative Variables\nWrite in.\n\n:::\n\n::: callout-note\n### Qualitative Variables\nWrite in.\n\n:::\n\n::: callout-note\n### Observations\nWrite in.\n\n:::\n\nDescribe how you may plan to transform the data.\n\n\n## Research Question\n::: callout-note\nWrite in!\n:::\n\n## Analyse/Transform/Combine the Data\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: data-preprocessing\n#\n# Write in your code here\n# to prepare this data as shown below\n# to generate the plot that follows\n```\n````\n:::\n\n\n\n\n\n## Plot the Data\n\nTwo plots were generated by the researchers with this data. Can you reproduce these? Do these graphs prove/disprove any of your hypotheses? What might have been the Hypotheses that led the creating of these graphs?\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/ld-so2-1.png){width=2100}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/ld-ph-1.png){width=2100}\n:::\n:::\n\n\n\n\n\n\n## Tasks and Discussion\n\n- Complete the Data Dictionary.\n- Select and Transform the variables as shown. Combine the multiple datasets into one if needed!\n- Create the graphs shown and discuss the following questions:\n  -   Identify the type of charts\n  -   Identify the variables used for various geometrical aspects (x, y,\n    fill...). Name the variables appropriately.\n  - What is a peculiar feature of these graphs?\n- What might have been the Hypothesis/Research Question to which the response was Chart?\n- What data gathering / research activity might have been carried out to obtain the data graphed here? Provide some details.\n- Write a short story based on the chart, describing your inference/surprise. \n- Is there a paradox in this case study? Hint: SO2 is caused by cars/busses running on fossil fuels.\n- What Statistical Tests might you run to confirm what the charts are saying?\n\n\n\n\n\n    \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../../../../site_libs/font-awesome-6.5.2/js/script.js\"></script>\n<link href=\"../../../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}