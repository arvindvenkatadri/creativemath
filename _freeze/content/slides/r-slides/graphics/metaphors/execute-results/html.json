{
  "hash": "6eb2a0e88045db82fce9dcc2b489a622",
  "result": {
    "markdown": "---\ntitle: \"Metaphors with Graphics\"\nsubtitle: \"From Code to Geometry\"\nauthor: \"Arvind Venkatadri\"\ndate-modified: \"(2023-12-21)\"\nformat: revealjs\n---\n\n\n\n\n\n## How does one read Shakespeare? \n\n![shakespeare](https://media.giphy.com/media/oveqQA2LxpwYg/giphy.gif)\n\n~~To code or not to code, that is the question...~~\n\n---\n\n## What is a Grammar of Graphics?  \n\n- Code looks and reads like **English**.   \n- Has **verbs**, **nouns**, some **adjectives**....\n\n--\n\n- Describes Information/ideas/concepts from *any* **source domain**.\n\n--\n\n- **GEOMETRY** as the *target domain* : What comes out of R is predominantly \"geometry\"\n\n---\n\n\n## How do we express visuals in words?\n\n.font120[\n- **Data** to be visualized\n]\n\n--\n.font120[\n- **.hlb[Geom]etric objects** that appear on the plot\n]\n\n--\n.font120[\n- **.hlb[Aes]thetic mappings** from data to visual component\n]\n\n--\n.font120[\n- **.hlb[Stat]istics** transform data on the way to visualization\n]\n\n--\n.font120[\n- **.hlb[Coord]inates** organize location of geometric objects\n]\n\n--\n.font120[\n- **.hlb[Scale]s** define the range of values for aesthetics\n]\n\n--\n.font120[\n- **.hlb[Facet]s** group into subplots\n]\n\n---\n\n\n\n## The Essence of ggplot\n\nall `ggplot2`\n\n- `aes(x = , y = )` (aesthetics)\n- `aes(x = , y = , color = )` (add color)\n- `aes(x = , y = , size = )` (add size)\n- `+ facet_wrap(~ )` (facetting)\n- `+ scale_` ( add a scale)\n\n---\n\n## gg is for Grammar of Graphics\n\n.left-column[\n### Data\n### Aesthetics\n### Geoms\n\n```r\n+ geom_*()\n```\n]\n\n.right-column[\n\n\n::: {.cell hash='metaphors_cache/revealjs/geom_demo_ce279a99bc9510a9375bd2e67cfa8bf8'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/geom_demo-1.png){width=850px height=350px}\n:::\n:::\n\n]\n\n\n\n---\n\n\n## [The Five-Named Graphs](http://moderndive.com/3-viz.html#FiveNG)\n\n\n- Scatterplot: `geom_point()`\n- Line graph: `geom_line()`\n- Histogram: `geom_histogram()`\n- Boxplot: `geom_boxplot()`\n- Bar graph: `geom_bar()` or `geom_col` (see [Lab 02](../02-Pronouns-and-Data.html))\n\n---\n\n\n## Chunk : penguins\n\n\n\n::: {.cell highlight.output='[4,5,6]' hash='metaphors_cache/revealjs/penguins-1_882f5f5bc1d0faafdccd21c66c410170'}\n\n````{.cell-code}\n```{{r penguins-1, highlight.output=c(4:6)}}\nhead(penguins)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 Ã— 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# â„¹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\nWe see the first few rows of the dataset `penguins`. We see that there are a few **NA** data observations too. Let us remove them for now.\n\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-2_01526e5e219fbc30d09051ce266462aa'}\n\n````{.cell-code}\n```{{r}}\npenguins <- penguins %>% drop_na()\n```\n````\n:::\n\n\n\n---\n\n## Chunk: Mapping\n\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/plot1a_35e09c98d4a99f4d0593b42ddd95b0e7'}\n\n````{.cell-code}\n```{{r plot1a, eval= FALSE, message=FALSE, warning=FALSE}}\nggplot(penguins) \n```\n````\n:::\n\n]\n\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/first-plot1a-out_f0681153e994b151e12e5937bf22c59f'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/first-plot1a-out-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n## Chunk: Mapping\n\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/plot1b_56e9ac962b37413d0cffe5bdbcdf82c3'}\n\n````{.cell-code}\n```{{r plot1b, eval= FALSE, message=FALSE, warning=FALSE}}\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm,\n           y = body_mass_g))\n```\n````\n:::\n\n]\n\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/first-plot1b-out_43b2fe9e700b4e674e1c23b847c9066c'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/first-plot1b-out-1.png){width=960}\n:::\n:::\n\n]\n\n\n---\n\n## Chunk: Mapping\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/plot1c_54aa334e6712f0f6b44bab63024fb605'}\n\n````{.cell-code}\n```{{r plot1c, eval= FALSE, message=FALSE,warning=FALSE}}\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, \n           y = body_mass_g)) +\n  geom_point() \n```\n````\n:::\n\n]\n\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/first-plot1c-out_4e75d95c17474743abdf4fce5b5552a6'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/first-plot1c-out-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n## Chunk: Mapping\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/plot1d_a658636416b91c95c9b5fd6b1130bf5e'}\n\n````{.cell-code}\n```{{r plot1d, eval= FALSE, message=FALSE,warning=FALSE}}\nggplot(data = penguins, \n       mapping = aes(x = bill_length_mm, \n           y = body_mass_g)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n````\n:::\n\n]\n\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/first-plot1d-out_4b56ae5005d79401e6340abcfe6f0c8e'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/first-plot1d-out-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n## Chunk: Geom_Point_Position_Colour\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/2a_8f086e202a8b85c79114d14d8fe2ea9f'}\n\n````{.cell-code}\n```{{r 2a, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(data = penguins) \n```\n````\n:::\n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-3_3bdcc34119e5ac4aeb6d660b7364bc7c'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n## Chunk: Geom_Point_Position_Colour\n\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/2b_863be5891a044f1b9b448609bd29f2c5'}\n\n````{.cell-code}\n```{{r 2b, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = body_mass_g,\n           color = island))\n```\n````\n:::\n\nWe can leave out the \"mapping\" word and just use **aes** .\n\nWhy is there no plot?\n\n\nðŸ¤” ðŸ’­\n\nRight !! We have not used a `geom` command yet!!\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-4_ccf4968b12c29529c1513481ab847b7c'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n## Chunk: Geom_Point_Position_Colour\n\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/2c_3951a4359fe722b9b6e68c71dc60ee40'}\n\n````{.cell-code}\n```{{r 2c, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(data = penguins,\n  aes(x = bill_length_mm,\n      y = body_mass_g,\n      color = island)) +  \n geom_point() +\n  ggtitle(\"A point geom with position, color aesthetics\")\n```\n````\n:::\n\nNote that the points are located by **position** coordinates on both x and y axis, and **coloured** by the island variable.\n\n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-5_589e940dc7ed5944d41b45874488e28d'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n## Chunk: Geom_Point_Position_Colour\n\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/2d_2b350280177ea4fb9b11bf1cd8651e9d'}\n\n````{.cell-code}\n```{{r 2d, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(data = penguins,\n  aes(x = bill_length_mm,\n      y = body_mass_g,\n      color = island)) +  \n geom_point(size = 4) +\n  ggtitle(\"A point geom with position color and size aesthetics\")\n```\n````\n:::\n\nNote that the points are located by **position** coordinates on both x and y axis, and **coloured** by the island variable.\n\nAnd we've fixed size = 4!\n\n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-6_2d99be3689f6702e1fcdf09a61c90ca8'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n## Alpha\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/7a_c9a8b0fb1eab2bee7519742ade2776a9'}\n\n````{.cell-code}\n```{{r 7a, eval=FALSE, message=FALSE, warning=FALSE}}\ndiamonds %>% \n  # Sample some 20% of the data\n  slice_sample(prop = 0.2) %>% \n  ggplot(.) +\n  geom_point(aes(x = carat, \n                 y = price))\n```\n````\n:::\n\n\nAre the points all overlapping?\nCan we see them better?\n]\n\n\n\n.pull-right[\n  \n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-7_9e8df17e3008ea7298bc1b1737d0d4b2'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n## Alpha\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/7b_fb421121c88fd36b854eaec89a821c52'}\n\n````{.cell-code}\n```{{r 7b, eval=FALSE, message=FALSE, warning=FALSE}}\ndiamonds %>% \n  # Sample some 20% of the data\n  slice_sample(prop = 0.2) %>% \n  ggplot(.) +\n  geom_point(aes(x = carat, y = price),\n             # alpha outside the aes() !!!\n             alpha = 0.2) +  \n  labs(title = \"Points plotted with Alpha\")\n```\n````\n:::\n\n\nAre the points all overlapping?\nCan we see them better?\n\n]\n\n\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-8_f5ae84c24af550335e6eb9c1262a7519'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-8-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Chunk: Box Plot\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/bp1_8f6f97318c0190f832fd5722a0de93b3'}\n\n````{.cell-code}\n```{{r bp1, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(diamonds) + \n  geom_boxplot(aes(x = cut, y = price)) +\n  labs(title = \"Box Plot\")\n```\n````\n:::\n\n\n]\n\n\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-9_581dcc6dce874f80cc7dc9aaec7e7a32'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-9-1.png){width=90%}\n:::\n:::\n\n]\n\n\n---\n\n## Chunk: Box Plot\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/bp2_6a1d6f19651b938714d763ad4b8a1fd8'}\n\n````{.cell-code}\n```{{r bp2, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(diamonds) + \n  geom_boxplot(aes(x = cut,       \n                   y = price,     \n                   fill = cut)) + \n  labs(title = \"Box Plot\")\n```\n````\n:::\n\n\n]\n\n\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-10_7cf4b99301d906f04ef4b70148deeb5e'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-10-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Chunk: Geom_Bar_1\n\n.pull-left[\n::: {.cell hash='metaphors_cache/revealjs/3a_05e62e84a18a91028aaa281ae1a6142a'}\n\n````{.cell-code}\n```{{r 3a, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(data = penguins) \n```\n````\n:::\n]\n.pull-right[\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-11_7b0eeb81c163e7e03738835f40032563'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-11-1.png){width=90%}\n:::\n:::\n]\n\n---\n\n\n## Chunk: Geom_Bar_1\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/3b_38f238891947068425e1078b314b16b4'}\n\n````{.cell-code}\n```{{r 3b, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(data = penguins) +  \n       aes(x = species)\n```\n````\n:::\n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-12_e07ce77c11da9c2989afb10a0c49a0a9'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-12-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Chunk: Geom_Bar_1\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/3c_8d3b39207e444d9e1269c7669b018fe5'}\n\n````{.cell-code}\n```{{r 3c, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(data = penguins) +  \n       aes(x = species) +\n  geom_bar() +\n  ggtitle(\"A bar geom with position and height aesthetics\")\n```\n````\n:::\n\n\nThe bars are plotted with **positions** on the x-axis, defined by the `species` variable,  and **heights** mapped to the y-axis. \n\nHow did the graph \"know\" the heights of the bars?\n\n`geom_bar` has an internal `count` statistic computation. \nMany `geom_s` have internal computation that are accessible to programmers. \n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-13_a9d05bfe025d4f20144c4ee25c333aa1'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-13-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Geom_Bar_Position_Stack_and_Dodge\n\n\n.pull-left[\nWhen using more than a pair of variables with a bar chart, we have a few more **position** options:\n\n::: {.cell hash='metaphors_cache/revealjs/4b_9f84736d1726c07bee4be155020694b5'}\n\n````{.cell-code}\n```{{r 4b, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(penguins,\n           aes(x = species,\n               fill = island))\n```\n````\n:::\n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-14_600ca015cbde622e00b98757865e6c91'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-14-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Geom_Bar_Position_Stack_and_Dodge\n\n.pull-left[\nWhen using more than a pair of variables with a bar chart, we have a few more **position** options:\n\n::: {.cell hash='metaphors_cache/revealjs/4c_32448b3f61e111a321829ea3b998798c'}\n\n````{.cell-code}\n```{{r 4c, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(penguins,\n           aes(x = species,\n               fill = island)) + \n  geom_bar() + \n  ggtitle(label = \"A stacked bar chart\")\n```\n````\n:::\n\n\nThe bars are coloured by the `island` variable and are **stacked** in **position**.\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-15_426272415a9152ea1ea687eacfb39cea'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-15-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Geom_Bar_Position_Stack_and_Dodge\n\n.pull-left[\nAnd here we use the `dodge` option:\n::: {.cell hash='metaphors_cache/revealjs/5c_4c72d3456d0e1e13b0c40ac0452f6eae'}\n\n````{.cell-code}\n```{{r 5c, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(penguins,\n           aes(x = species,\n               fill = island)) + \n  geom_bar(position =\"dodge\") + \n  ggtitle(label =   \n            \"A dodged bar chart\")\n```\n````\n:::\n]\n\n.pull-right[\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-16_68700288d8e0d172217c7e53d704e250'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-16-1.png){width=90%}\n:::\n:::\n]\n\n---\n\n\n## Facetting\n\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/6a_ca3a6d11fdd4803baae7fe5779bd44de'}\n\n````{.cell-code}\n```{{r 6a, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(penguins)\n```\n````\n:::\n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-17_35c56ed1b442e5584d34e797cdda701c'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-17-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Facetting\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/6b_627fa1543b68e4f9479c2b93a6271aba'}\n\n````{.cell-code}\n```{{r 6b, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(penguins) +\n  aes(x = flipper_length_mm,\n      y = body_mass_g)\n```\n````\n:::\n\n]\n\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-18_ba511328ce9b927233219bb772c9d0f9'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-18-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Facetting\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/6c_444654aed25d98fe816015eee14da6b9'}\n\n````{.cell-code}\n```{{r 6c, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(penguins) +\n  aes(x = flipper_length_mm,\n      y = body_mass_g) +\n  geom_point()\n```\n````\n:::\n\n]\n\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-19_e2a3350822828300c616385ba77fffa5'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-19-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Facetting\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/6d_eda2cf1f51f564ceaee1e9ee7043792d'}\n\n````{.cell-code}\n```{{r 6d, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(penguins) +\n  aes(x = flipper_length_mm,\n      y = body_mass_g) +\n  geom_point() +\n  facet_wrap(~island) + \n  ggtitle(\"A point geom graph with facets\")\n```\n````\n:::\n\n\n\nThe graph has **split** into small multiples, based on the **number** of islands. \n]\n\n\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-20_1b26c9a5773ec873b7451784b3fa9dc4'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-20-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Still more Facetting\n\n.pull-left[\n::: {.cell hash='metaphors_cache/revealjs/6e_688001933ee6f9fdbce3a06829d6e718'}\n\n````{.cell-code}\n```{{r 6e, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(penguins) +\n  aes(x = flipper_length_mm,\n      y = body_mass_g) +\n  geom_point()\n```\n````\n:::\n\nWhat if we have even more \"factor\" variables?\nWe have `island` and `species`...can we split further?\n\n]\n\n\n.pull-right[\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-21_a18739185ce75c29724333e78b180c4f'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-21-1.png){width=90%}\n:::\n:::\n]\n\n---\n\n\n## Still more Facetting\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/6f_bb885b325d1d1da2b1c568540632578b'}\n\n````{.cell-code}\n```{{r 6f, eval=FALSE, message=FALSE, warning=FALSE}}\nggplot(penguins) +\n  aes(x = flipper_length_mm,\n      y = body_mass_g) +\n  geom_point() +\n  facet_grid(species~island) +\n  ggtitle(\"A point geom graph with grid facets\")\n```\n````\n:::\n\n\nThe graph has **split** into multiples, based on the **number** of islands **and** the number of species. \n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-22_b5cca947c12125cd00af20d1ea12d221'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-22-1.png){width=90%}\n:::\n:::\n\n]\n\n\n---\n\n\n## And shall we look briefly at colour?\n\n---\n\n## Finally...Colour !! ( Just a bit )\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/8a_e9413a7fc47cabccb7853a8cb20bb28f'}\n\n````{.cell-code}\n```{{r 8a, eval=FALSE, message=FALSE, warning=FALSE}}\ndiamonds %>% \n  slice_sample(prop = 0.2) %>% \n  ggplot(.) +\n  geom_point(aes(x = carat, y = price))\n```\n````\n:::\n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-23_d5a27c33913d4f4718208269728f1087'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-23-1.png){width=90%}\n:::\n:::\n\n]\n\n---\n\n## Finally...Colour !! ( Just a bit )\n\n.pull-left[\n::: {.cell hash='metaphors_cache/revealjs/8b_5fca5053ccf9cc356ce67014ea494193'}\n\n````{.cell-code}\n```{{r 8b, eval=FALSE, message=FALSE, warning=FALSE}}\ndiamonds %>% \n  slice_sample(prop = 0.2) %>% \n  ggplot(.) +\n  geom_point(aes(x = carat, y = price, colour = cut), size = 3) +\n  scale_colour_brewer(palette = \"Set3\") + \n  labs(title = \"Brewer Colour Pallette (Set3)\")\n```\n````\n:::\nWe are using the `RColorBrewer` package here. \nType `RColorBrewer::display.brewer.all()` in your Console and see what palettes are available.\n\n]\n.pull-right[\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-24_c9c4940ea1357e56745f5cf9c251848f'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-24-1.png){width=90%}\n:::\n:::\n]\n\n\n---\n\n\n## Chunk: Colour !! ( Just a bit )\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/8c_4ba785f7bb06e6fdf884b008277475d8'}\n\n````{.cell-code}\n```{{r 8c, eval=FALSE, message=FALSE, warning=FALSE}}\ndiamonds %>% \n  slice_sample(prop = 0.2) %>% \n  ggplot(.) +\n  geom_point(aes(x = carat, y = price, colour = cut), size = 3) +\n               scale_colour_viridis_d() +\n  labs(title = \"Viridis Palette\",\n       subtitle = \"The Default in ggplot\")\n```\n````\n:::\n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-25_e333c0c03e3895e6d662d1d8695a7f81'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n\n## Chunk: Colour !! ( Just a bit )\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/8d_333f5adc446d05ea0a6fcaf10a948b61'}\n\n````{.cell-code}\n```{{r 8d, eval=FALSE, message=FALSE, warning=FALSE}}\ndiamonds %>% \n  slice_sample(prop = 0.2) %>% \n  ggplot(.) +\n  geom_point(aes(x = carat, y = price, colour = cut), size = 3) +\n               scale_colour_viridis_d(option = \"magma\") + \n  labs(title = \"Viridis Palette, Option Magma\")\n```\n````\n:::\n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-26_ce12b956db00e211e2f9d407ca564044'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n\n\n## Chunk: Colour !! ( Just a bit )\n\n.pull-left[\n\n::: {.cell hash='metaphors_cache/revealjs/8e_df02592ad77e49fa56f3e643336e5f13'}\n\n````{.cell-code}\n```{{r 8e, eval=FALSE, message=FALSE, warning=FALSE}}\ndiamonds %>% \n  slice_sample(prop = 0.2) %>% \n  ggplot(.) +\n  geom_point(aes(x = carat, y = price, colour = cut), size = 3) +\n               scale_colour_viridis_d(option = \"inferno\") +\n  labs(title = \"Viridis Palette, Option Inferno\")\n```\n````\n:::\n\n]\n.pull-right[\n\n::: {.cell hash='metaphors_cache/revealjs/unnamed-chunk-27_c2285f883d4e574a5c7f61c1bae04b3f'}\n::: {.cell-output-display}\n![](metaphors_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n]\n\n---\n\n\n## Conclusion\n- `ggplot` takes a dataframe/tibble as the data argument\n- The `aes`-thetic arguments can be `x`, `y`, `colour`, `shape`, `alpha` for example...\n- The `geom_*()` commands specify the kind of plot, from a geometric perspective\n- Together, the `ggplot` package offers a **Grammar** of near-English commands which allow us to plot data in various ways. \n\n---\n\n## References\n\n\n1. [Wickham, Hadley. (2010) \"A Layered Grammar of Graphics\". *Journal of Computational and Graphical Statistics*, 19(1).](http://www.jstor.org.proxy.uchicago.edu/stable/25651297)\n\n2. [Wilkinson, Leland. (2005). *The Grammar of Graphics*. (UChicago authentication required)](http://link.springer.com.proxy.uchicago.edu/book/10.1007%2F0-387-28695-0)\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}