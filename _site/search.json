[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "This is my Quarto website. And I cannot get finally got listings and menus going !!!!\nI am going to systematically convert all my Posts and Course materials into .qmd files and also make them into Tufte-style articles. And then I will copy them over the actual website, after I have played with Pandoc and divs and stuff….what fun !!!\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "courses/courses.html",
    "href": "courses/courses.html",
    "title": "Courses",
    "section": "",
    "text": "Course: Data Analytics\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCourse: R for Artists\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 07 - The Grammar of Networks\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-10: An Invitation from the Queen…to play Croquet\n\n\nThe Grammar of Networks\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-11: The Queen of Hearts, She Made some Tarts\n\n\nThe Grammar of Diagrams\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-12: Time is a Him!!\n\n\nTime Series in R\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-14: You’re are Nothing but a Pack of Cards!!\n\n\nMaking a website to show it all\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLab-1: Science, Human Experience, Experiments, and Data\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-2: Down the R-abbit Hole…\n\n\nWelcome ! Introduce Yourself to R, RStudio, and to all of Us!\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-3: Drink Me!\n\n\nWorking with R Markdown\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-4: I say what I mean and I mean what I say\n\n\nGetting started with Data in R\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-5: Twas brillig, and the slithy toves…\n\n\nTidy Data at the wabe MoMA\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-6: These Roses have been Painted !!\n\n\nWhy is a Raven like a Writing Desk?\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-7: The Lobster Quadrille\n\n\nFonts and other Wizardy in ggplot\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-9: If you please sir…which way to the Secret Garden?\n\n\nThe Grammar of Maps\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Grammar of Diagrams\n\n\nConverting Text to Diagrams in R\n\n\nPart of the R for Artists and Designers workshop course at the School of Foundation Studies, Srishti Manipal Institute of Art, Design, and Technology, Bangalore.\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "courses/Data-Analytics/data-analytics.html",
    "href": "courses/Data-Analytics/data-analytics.html",
    "title": "Course: Data Analytics",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#where-does-data-come-from",
    "href": "courses/R-for-Artists/10-Basics/index.html#where-does-data-come-from",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "Where does Data come from?",
    "text": "Where does Data come from?\nLet us look at the slides. Click on the slides icon above."
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#why-visualize",
    "href": "courses/R-for-Artists/10-Basics/index.html#why-visualize",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "Why Visualize?",
    "text": "Why Visualize?\n\nWe can digest information more easily when it is pictorial\nOur Working Memories are both short-term and limited in capacity. So a picture abstracts the details and presents us with an overall summary, an insight, or a story that is both easy to recall and easy on retention.\n\nData Viz includes shapes that carry strong cultural memories and impressions for us. These cultural memories help us to use data viz in a universal way to appeal to a wide variety of audiences. (Do humans have a gene for geometry?)\nIt helps sift facts and mere statements: for example:\n\n\n\n\n\nSource https://www.deccanherald.com/national/india-is-known-as-the-rape-capital-of-the-world-rahul-783495.html\n\n\n\n\n\n\n\n\nSource https://datareveals.org/crime-data/"
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#what-are-data-types",
    "href": "courses/R-for-Artists/10-Basics/index.html#what-are-data-types",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "What are Data Types??",
    "text": "What are Data Types??\nhttps://www.youtube.com/watch?v=dwFsRZv4oHA\n{{% youtube \"dwFsRZv4oHA\" %}}\nIn more detail:"
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#how-do-we-spot-data-variable-types",
    "href": "courses/R-for-Artists/10-Basics/index.html#how-do-we-spot-data-variable-types",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "How do we Spot Data Variable Types?",
    "text": "How do we Spot Data Variable Types?\nBy asking questions!\n\n\n\n\n\n\n\n\n\nPronoun\nAnswer\nVariable / Scale\nExample\nWhat Ope rations?\n\n\n\nWhat, Who, Where, Whom, Which\nName, Place, Animal, Thing\nQua litative / N ominal\n\nName\n\n\nCount no. of\ncases\n\nMode\n\n\n\nHow, What Kind, What Sort\nA Manner / Method, Type or Attribute from a list, with list items in some ” order**” ( e.g. good, better, improved, best..)\nQua litative / O rdinal\n\n\n\nSocio\n\n-economic status (“low income, middle income, high income)\n\n\neducation level\n(“high\nschool”, “B S”,” M\nS”,“PhD”)\n\n\nincome level\n(“less than 50K”,\n\n\n“50K-100K”, “over 100K”)\n\nS atisfaction rating (\n\n“extremely\ndislike”,\n“dislike”,\n“neutral”, “like”,\n“extremely like”).\n\n\nMedian\nPer centiles\n\n\n\nHow Many / Much / Heavy? Few? Seldom? Often? When?\n\nQuantities with Scale.\nDifferences are meaningful, but not products or ratios\n\nQuan titative / In terval\n\n\n\npH\nSAT score\n\n(200-800), - Credit score\n(300-850). - Year of\nStarting in College\n\n\nMean\nStandard D eviation\n\n\n\nHow Many / Much / Heavy? Few? Seldom? Often? When?\n\nQuantities, with Scale and a Zero Value.\nDifferences and Ratios /Products are meaningful. (e.g Weight )\n\nQuan titative / R atio**\n\n\nWeight,le ngth,Height\nTemperature in Kelvin\nEnzyme\n\nactivity, dose amount,\nreaction rate, flow rate,co ncentration\n\nPulse\nSurvival time\n\n\n\nCor relation\nCoeff of V ariation\n\n\n\n\nAs you go from Qualitative to Quantitative data types in the table, I hope you can detect a movement from fuzzy groups/categories to more and more crystallized numbers. Each variable/scale can be subjected to the operations of the previous group. In the words of S.S. Stevens ,\n\nthe basic operations needed to create each type of scale is cumulative: to an operation listed opposite a particular scale must be added all those operations preceding it."
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#what-are-the-parts-of-a-data-viz",
    "href": "courses/R-for-Artists/10-Basics/index.html#what-are-the-parts-of-a-data-viz",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "What Are the Parts of a Data Viz?",
    "text": "What Are the Parts of a Data Viz?"
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#how-to-pick-a-data-viz",
    "href": "courses/R-for-Artists/10-Basics/index.html#how-to-pick-a-data-viz",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "How to pick a Data Viz?",
    "text": "How to pick a Data Viz?\nMost Data Visualizations use one or more of the following geometric attributes or aesthetics. These geometric aesthetics are used to represent qualitative or quantitative variables from your data.\n\n\n\n\nFrom Claus Wilke, Fundamentals of Data Visualization\n\n\n\n\nWhat does that mean? We can think of simple visualizations as combinations of these aesthetics. Some examples:\n\n\n\n\n\n\n\n\nAesthetic #1\nAesthetic #2\nShape\nChart Picture\n\n\n\nPosition X = Quant Variable\nPosition Y = Quant Variable\nPoints/Circles with Fixed Size\n[] (https://img.icons8.c om/ios-filled/100/000 000/scatter-plot.png)\n\n\nPosition X = Qual Variable\nPosition Y = Count of Qual var)\nColumns\n\n\n\nPosition X = Qual Variable\nPosition Y = Qual Variable\nRectangles, with area proportional to joint(X,Y) count\n\n\n\n\nPosition X = Qu alitative Variable\nPosition Y = Rank Ordered Quant Variable\nBox + Whisker, Box length proportional to Inter-Quartile Range, whisker-length proportional to upper and lower quartile resp.\n\n\n\nPosition X = Quant Variable\nPostion Y = Quant V ariable + Qual Var\n\n\n\n\nQuant Variable\nShape = Line with Quant Variable"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "",
    "text": "This RMarkdown document is part of the Generic Skills Component (GSK) of the Course of the Foundation Studies Programme at Srishti Manipal Institute of Art, Design, and Technology, Bangalore India. The material is based on A Layered Grammar of Graphics by Hadley Wickham. The course is meant for First Year students pursuing a Degree in Art and Design.\nThe intent of this GSK part is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll RMarkdown files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#using-tidygraph-and-ggraph",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#using-tidygraph-and-ggraph",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Using tidygraph and ggraph\n",
    "text": "Using tidygraph and ggraph\n\ntidygraph and ggraph are modern R packages for network data. Graph Data setup and manipulation is done in tidygraph and graph visualization with ggraph.\n\n\ntidygraph Data -> “Network Object” in R.\n\nggraph Network Object -> Plots using a chosen layout/algo.\n\nBoth leverage the power of igraph, which is the Big Daddy of all network packages. We will be using the Grey’s Anatomy dataset in our first foray into networks."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step1.-read-the-data",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step1.-read-the-data",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Step1. Read the data",
    "text": "Step1. Read the data\n\nCodegrey_nodes <- read_csv(\"Data/greys-nodes.csv\")\ngrey_edges <- read_csv(\"Data/greys-edges.csv\")\n\n\n# grey_nodes <- read_delim(\"./Data/greys-nodes.csv\", delim = \";\")\n# ger_edges <- read_delim(\"~/Downloads/grey-edges.csv\", \n#     delim = \";\", escape_double = FALSE, trim_ws = TRUE)\n\ngrey_nodes\n\n# A tibble: 54 × 7\n   name               sex   race  birthyear position  season sign    \n   <chr>              <chr> <chr>     <dbl> <chr>      <dbl> <chr>   \n 1 Addison Montgomery F     White      1967 Attending      1 Libra   \n 2 Adele Webber       F     Black      1949 Non-Staff      2 Leo     \n 3 Teddy Altman       F     White      1969 Attending      6 Pisces  \n 4 Amelia Shepherd    F     White      1981 Attending      7 Libra   \n 5 Arizona Robbins    F     White      1976 Attending      5 Leo     \n 6 Rebecca Pope       F     White      1975 Non-Staff      3 Gemini  \n 7 Jackson Avery      M     Black      1981 Resident       6 Leo     \n 8 Miranda Bailey     F     Black      1969 Attending      1 Virgo   \n 9 Ben Warren         M     Black      1972 Other          6 Aquarius\n10 Henry Burton       M     White      1972 Non-Staff      7 Cancer  \n# … with 44 more rows\n\nCodegrey_edges\n\n# A tibble: 57 × 4\n   from            to              weight type        \n   <chr>           <chr>            <dbl> <chr>       \n 1 Leah Murphy     Arizona Robbins      2 friends     \n 2 Leah Murphy     Alex Karev           4 benefits    \n 3 Lauren Boswell  Arizona Robbins      1 friends     \n 4 Arizona Robbins Callie Torres        1 friends     \n 5 Callie Torres   Erica Hahn           6 friends     \n 6 Callie Torres   Alex Karev          12 benefits    \n 7 Callie Torres   Mark Sloan           5 professional\n 8 Callie Torres   George O'Malley      2 professional\n 9 George O'Malley Izzie Stevens        3 professional\n10 George O'Malley Meredith Grey        4 friends     \n# … with 47 more rows\n\n\n\n\n\n Download Grey Nodes as csv\n\n\n\n\n Download Grey Edges data as csv\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #1:\n\n\n\nLook at the console output thumbnail.\n\nWhat does for example name = col_character mean?\nWhat attributes (i.e. extra information) are seen for Nodes and Edges?\nUnderstand the data in both nodes and edges as shown in the second and third thumbnails. Write some comments and inferences here."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step-2.create-a-network-object-using-tidygraph",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step-2.create-a-network-object-using-tidygraph",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Step 2.Create a network object using tidygraph:",
    "text": "Step 2.Create a network object using tidygraph:\nKey function:\n\n\ntbl_graph(): (aka “tibble graph”). Key arguments: nodes, edges and directed. Note this is a very versatile command and can take many input forms, such as data structures that result from other packages. Type ?tbl_graph in the Console and see the Usage section.\n\n\nCodega <- tbl_graph(nodes = grey_nodes, \n                edges = grey_edges, \n                directed = FALSE)\nga\n\n# A tbl_graph: 54 nodes and 57 edges\n#\n# An undirected simple graph with 4 components\n#\n# Node Data: 54 × 7 (active)\n  name               sex   race  birthyear position  season sign  \n  <chr>              <chr> <chr>     <dbl> <chr>      <dbl> <chr> \n1 Addison Montgomery F     White      1967 Attending      1 Libra \n2 Adele Webber       F     Black      1949 Non-Staff      2 Leo   \n3 Teddy Altman       F     White      1969 Attending      6 Pisces\n4 Amelia Shepherd    F     White      1981 Attending      7 Libra \n5 Arizona Robbins    F     White      1976 Attending      5 Leo   \n6 Rebecca Pope       F     White      1975 Non-Staff      3 Gemini\n# … with 48 more rows\n#\n# Edge Data: 57 × 4\n   from    to weight type    \n  <int> <int>  <dbl> <chr>   \n1     5    47      2 friends \n2    21    47      4 benefits\n3     5    46      1 friends \n# … with 54 more rows\n\n\n\n\n\n\n\n\nQuestions and Inferences #2:\n\n\n\n\nWhat information does the graph object contain?\nWhat attributes do the nodes have? What about the edges?"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step-3.-plot-using-ggraph",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step-3.-plot-using-ggraph",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Step 3. Plot using ggraph\n",
    "text": "Step 3. Plot using ggraph\n\n3a. Quick Plot: autograph() This is to check quickly is the data is imported properly and to decide upon going on to a more elaborate plotting.\n\nCodeautograph(ga)\n\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #3:\n\n\n\n\nDescribe this graph, in simple words here.\nTry to use some of the new domain words we have just acquired: nodes/edges, connected/disconnected, directed/undirected.\n\n\n\n3b. More elaborate plot\nKey functions:\n\n\nggraph(layout = \"......\"): Create classic node-edge diagrams; i.e. Sets up the graph. Rather like ggplot for networks!\n\nTwo kinds of geom: one set for nodes, and another for edges\n\ngeom_node_point(aes(.....)): Draws node as “points”. Alternatives are circle / arc_bar / tile / voronoi. Remember the geoms that we have seen before in Grammar of Graphics!\ngeom_edge_link(aes(.....)): Draws edges as “links”. Alternatives are arc / bend / elbow / hive / loop / parallel / diagonal / point / span /tile.\ngeom_node_text(aes(label = ......), repel = TRUE): Adds text labels (non-overlapping). Alternatives are label /...\nlabs(title = \"....\", subtitle = \"....\", caption = \"....\"): Change main titles, axis labels and legend titles. We know this from our work with ggplot.\n\n\nCode# Write Comments next to each line \n# About what that line does for the overall graph\n\nggraph(graph = ga,  layout = \"kk\") +\n  #\n  \n  geom_edge_link(width = 2, color = \"pink\") +\n  #\n  \n  geom_node_point(\n    shape = 21,\n    size = 8,\n    fill = \"blue\",\n    color = \"green\",\n    stroke = 2\n  ) +\n  #\n  \n  labs(title = \"Whoo Hoo! My first silly Grey's Anatomy graph in R!\",\n       subtitle = \"Why did Ramesh put me in this course...\",\n       caption = \"Bro, they are doing **cool** things in the other\n       classes...\")\n\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #4:\n\n\n\n\nWhat parameters have been changed here, compared to the earlier graph?\nWhere do you see these changes in the code above?\n\n\n\nLet us Play with this graph and see if we can make some small changes. Colour? Fill? Width? Size? Stroke? Labs? Of course!\n\nCode# Change the parameters in each of the commands here to new ones\n# Use fixed values for colours or sizes...etc. \n\nggraph(graph = ga,  layout = \"kk\") + \n  geom_edge_link(width = 2) + \n  geom_node_point(shape = 21, size = 8, \n                  fill = \"blue\", \n                  color = \"green\", \n                  stroke = 2) +\n  labs(title = \"Whoo Hoo! My next silly Grey's Anatomy graph in R!\",\n       subtitle = \"Why did Ramesh put me in this course...\",\n       caption = \"Bro, they are doing cool things in the other \n       classes...\")\n\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #5:\n\n\n\n\nWhat did the shape parameter achieve?\nWhat are the possibilities with shape?\nHow about including alpha?\n\n\n\n3c. Aesthetic Mapping from Node and Edge attribute columns\nUp to now, we have assigned specific numbers to geometric aesthetics such as shape and size. Now we are ready ( maybe ?) change the meaning and significance of the entire graph and each element within it, and use aesthetics / metaphoric mappings to achieve new meanings or insights. Let us try using aes() inside each geom to map a variable to a geometric aspect.\nDon’t try to use more than 2 aesthetic mappings simultaneously!!\nThe node elements we can tweak are:\n\nTypes of Nodes: geom_node_****()\n\nNode Parameters: inside geom_node_****(aes(...............))\n\naes(alpha  = node-variable) : opacity; a value between 0 and 1\naes(shape  = node-variable) : node shape\naes(colour = node-variable) : node colour\naes(fill   = node-variable) : fill colour for node\naes(size   = node-variable) : size of node\n\n\n\nThe edge elements we can tweak are:\n\nType of Edges” geom_edge_****()\n\nEdge Parameters: inside geom_edge_****(aes(...............))\n\naes(colour = edge-variable) : colour of the edge\naes(width  = edge-variable) : width of the edge\naes(label  = some_variable) : labels for the edge\n\n\n\nType ?geom_node_point and ?geom-edge_link in your Console for more information.\n\nCodeggraph(graph = ga, layout = \"fr\") +\n  geom_edge_link0(aes(width = weight)) + # add mapping here\n  \n  geom_node_point(aes(color = race), size = 6) + # add mapping here\n\n  # geom_node_label(aes(label = name), # modify this mapping\n  #                 repel = TRUE, max.overlaps = 20,\n  #                 alpha = 0.6,\n  #                 size = 3) +\n\n  labs(title = \"Whoo Hoo! Yet another Grey's Anatomy graph in R!\")\n\n\n\n\nQuestions and Inferences: What did the shape parameter achieve? What are the possibilities with shape? How about including alpha?\n\n\n\n\n\n\nQuestions and Inferences #6:\n\n\n\n\nDescribe some of the changes here.\nWhat types of edges worked?\nWhich variables were you able to use for nodes and edges and how?\ndid not work with either of the two?"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#network-centrality",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#network-centrality",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Network Centrality",
    "text": "Network Centrality\nCentrality is a an “ill-defined” metric of node and edge importance in a network. It is therefore calculated in many ways. Type ?centrality in your Console.\n\n\nStandards\n\n\nLet’s add a few columns to the nodes and edges based on network centrality measures:\n\nCodega %>% \n  activate(nodes) %>% \n  \n  # Most connections?\n  mutate(degree = centrality_degree(mode = c(\"in\"))) %>% \n  filter(degree > 0) %>% \n  \n  activate(edges) %>% \n  # \"Busiest\" edge?\n  mutate(betweenness = centrality_edge_betweenness())\n\n# A tbl_graph: 54 nodes and 57 edges\n#\n# An undirected simple graph with 4 components\n#\n# Edge Data: 57 × 5 (active)\n   from    to weight type     betweenness\n  <int> <int>  <dbl> <chr>          <dbl>\n1     5    47      2 friends         20.3\n2    21    47      4 benefits        44.7\n3     5    46      1 friends         39  \n4     5    41      1 friends         66.3\n5    18    41      6 friends         39  \n6    21    41     12 benefits        91.5\n# … with 51 more rows\n#\n# Node Data: 54 × 8\n  name               sex   race  birthyear position  season sign   degree\n  <chr>              <chr> <chr>     <dbl> <chr>      <dbl> <chr>   <dbl>\n1 Addison Montgomery F     White      1967 Attending      1 Libra       3\n2 Adele Webber       F     Black      1949 Non-Staff      2 Leo         1\n3 Teddy Altman       F     White      1969 Attending      6 Pisces      4\n# … with 51 more rows\n\n\nPackages tidygraph and ggraph can be pipelined to perform analysis and visualization tasks in one go.\n\nCode# setting theme_graph \nset_graph_style()\n\nga %>% \n  activate(nodes) %>% \n  \n  # Who has the most connections?\n  mutate(degree = centrality_degree()) %>% \n  \n  activate(edges) %>% \n  # Who is the go-through person?\n  mutate(betweenness = centrality_edge_betweenness()) %>%\n  \n  # Now to continue with plotting\n  ggraph(layout = \"nicely\") +\n  geom_edge_link(aes(alpha = betweenness)) +\n  geom_node_point(aes(size = degree, colour = degree)) + \n  \n  # discrete colour legend\n  scale_color_gradient(guide = \"legend\")\n\n\n\nCode# or even less typing\n  ggraph(ga,layout = \"nicely\") +\n  geom_edge_link(aes(alpha = centrality_edge_betweenness())) +\n  geom_node_point(aes(colour = centrality_degree(), \n                      size = centrality_degree())) + \n  scale_color_gradient(guide = \"legend\",\n                       low = \"green\",\n                       high = \"red\")\n\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #11:\n\n\n\n\nHow do the Centrality Measures show up in the graph?\nWould you “agree” with the way we have done it?\nTry to modify the aesthetics by copy-pasting this chunk below and see how you can make an alternative representation."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#analyse-and-visualize-network-communities",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#analyse-and-visualize-network-communities",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Analyse and visualize network: communities",
    "text": "Analyse and visualize network: communities\nWho is close to whom? Which are the groups you can see?\n\nCode# setting theme_graph \nset_graph_style()\n\n\n# visualize communities of nodes\nga %>% \n  activate(nodes) %>%\n  mutate(community = as.factor(group_louvain())) %>% \n  ggraph(layout = \"graphopt\") + \n  geom_edge_link() + \n  geom_node_point(aes(color = community), size = 5)\n\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #12:\n\n\n\n\nIs the Community depiction clear?\nHow would you do it, with which aesthetic?\nCopy Paste this chunk below and try an alternative representation."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make-1-with-a-ready-made-dataset",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make-1-with-a-ready-made-dataset",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Make-1 : With a ready made dataset",
    "text": "Make-1 : With a ready made dataset\nStep 1. Fire up a new RMarkdown. Write your name, file_name and date.\nStep 2. Take any one of the “Make1-Datasets” datasets decribed below.\nStep 3. RMarkdown contents:\n\nIntroduce / Inspect in R your data and describe\nIntroduce your Purpose\nCreate graph objects.\nWrite comments in the code\nWrite narrative in text with sections, bold ,italic etc.\n\nStep 4. Knit before you submit. Submit only your knittable .Rmd file."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make1---datasets",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make1---datasets",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Make1 - Datasets:",
    "text": "Make1 - Datasets:\n\nAirline Data:\n\n\nStart with this bit of code in your second chunk, after set up\n\n\n\nCodeairline_nodes <- read_csv(\"./Data/AIRLINES-NODES.csv\") %>% mutate(Id = Id + 1)\nairline_edges <- read_csv(\"./Data/AIRLINES-EDGES.csv\") %>%\nmutate(Source = Source + 1, Target = Target + 1)\n\n\n\n\n\n Download data as csv\n\n\n\n\n Download data as csv\n\n\n\n\nThe Famous Zachary Karate Club dataset\n\n\nStart with pulling this data into your Rmarkdown:\n\ndata(\"karate\",package= \"igraphdata\")\nkarate\n\nTry ?karate in the console\nNote that this is not a set of nodes, nor edges, but already a graph-object!\nSo no need to create a graph object using tbl_graph.\nYou will need to just go ahead and plot using ggraph.\n\n\nGame of Thrones:\n\n\nStart with pulling this data into your Rmarkdown:\n\n\nCodeGoT <- read_rds(\"./Data/GoT.RDS\")\n\n\n\n\n\n Download data as RDS\n\n\n\n\nNote that this is a list of 7 graphs from Game of Thrones.\nSelect one using GoT[[index]] where index = 1…7 and then plot directly.\nTry to access the nodes and edges and modify them using any attribute data\n\n\nAny other graph dataset from igraphdata (type ?igraphdata in console)\n\n\nAsk me for help if you need any"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make-2-literary-network-with-tv-show-book-story-play",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make-2-literary-network-with-tv-show-book-story-play",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Make-2: Literary Network with TV Show / Book / Story / Play",
    "text": "Make-2: Literary Network with TV Show / Book / Story / Play\nThis is in groups. Groups of 4. To be announced\nYou need to create a Network Graph for your favourite Book, play, TV serial or Show. (E.g. Friends, BBT, or LB or HIMYM…or Hamlet, Little Women , Pride and Prejudice, or LoTR)\nStep 1. Go to: Literary Networks for instructions. (Instructions are on also Teams -> Files.)\nStep 2. Make your data using the instructions.\n\nIn the nodes excel, use id and names as your columns. Any other details in other columns to the right.\nIn your edges excel, use from and to are your first columns. Entries in these columns can be names or ids but be consistent and don’t mix.\n\nStep 3. Decide on 3 answers that you to seek and plan to make graphs for.\nStep 4. Create graph objects. Say 3 visualizations.\nStep 5. Write comments/answers in the code and narrative text. Add pictures from the web using Markdown syntax.\nStep 6. Write Reflection ( ok, a short one!) inside your RMarkdown. Make sure it knits!!\nStep 7. Group Submission: Submit the knittable .Rmd file AND the data. RMarkdown with joint authorship. Each person submits on their Assignments. All get the same grade on this one.\nAsk me for clarifications on what to do after you have read the Instructions in your group."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/index.html#introduction",
    "href": "courses/R-for-Artists/100-GoN/index.html#introduction",
    "title": "Lab-10: An Invitation from the Queen…to play Croquet",
    "section": "Introduction",
    "text": "Introduction\nNetwork Diagrams are important in data visualization to bring out relationships between diverse entities. They are used in ecology, biology, transportation, and even history!\nAnd hey, whom did Jon Snow marry?"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/index.html#references",
    "href": "courses/R-for-Artists/100-GoN/index.html#references",
    "title": "Lab-10: An Invitation from the Queen…to play Croquet",
    "section": "References",
    "text": "References\n\nMichael Gastner, Data Analysis and Visualisation with R, Chapter 23: Networks\nDavid Schoch, Network Visualizations in R using ggraph and graphlayouts\nKonrad M. Lawson, Toilers and Gangsters:Simple Network Visualization with R for Historians"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html",
    "title": "The Grammar of Diagrams",
    "section": "",
    "text": "There are many presentation and drawing tools out there. And these allow the user full control over the diagram so generally result in prettier diagrams that can convey more information to the audience at that point in time.\nBut that point in time passes, and pretty pictures can quickly become out-of-date and, ironically, misinforming if they don’t match the reality of the system they are describing. This is especially so if one team is drawing the pretty pictures, and another team is writing the software/implementing the system.\nHaving diagrams as code that can live beside the system design/code, that the stakeholders are equally comfortable editing and viewing,reduces the gap i.e. “Where system diagrams meet system reality”.\nWe will “explore” two packages to do this: DiagrammeR and nomnoml. Each of these follows a specific grammar so that sets of “sentences” will morph into very different kinds of diagrams."
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram",
    "text": "Sequence Diagram\nLook at the code below: What do you think it represents?\n\nCodeDiagrammeR(\"\nsequenceDiagram\nArvind ->> Anamika: Why are you late today?\nAnamika ->> Anamika: Ulp...\nAnamika ->> Arvind: I am sorry... <br> may I come in please?\n\nArvind ->> Komal: And you? What kept you?\nKomal ->> Anamika: (Quietly) He's having a bad day, dude...\nAnamika ->> Komal: (Whisper) Boomer...\n\")\n\n\n\n\n\nThis is a simple Sequence Diagram! Shows a strictly imaginary exchange between a pair of students and an unknown Faculty Member.\nLet us now see how we can embellish this kind of diagram. Can we have a Garden of Forking Paths?\n\nCodeDiagrammeR(\"\n  graph LR\n    A-->B\n    A-->C\n    C-->E\n    B-->D\n    C-->D\n    D-->F\n    E-->F\n\")\n\n\n\n\n\n\nCodeDiagrammeR(\"\n        sequenceDiagram\n        \n        alt Anamika is always punctual\n        Arvind ->> Anamika: Why haven't you put up your Daily Reflection?\n        Anamika ->> Anamika: Ulp...\n        Note right of Anamika : I have had it today..\n        Anamika ->> Arvind: I am sorry... \n        Arvind ->> Anamika: Ok write it today\n        \n        else Anamika is usually tardy\n        Arvind ->> Anamika: Why haven't you put up your Daily Reflection?\n        Anamika ->> Anamika: Ulp...\n        Anamika ->> Arvind: I am sorry... \n        Arvind ->> Anamika: This is not acceptable and will reflect in your grade\n        end\n        \n        Arvind ->> Komal: And you? What kept you?\n        Komal ->> Anamika: (Quietly) He's having a bad day, dude...\n        Anamika ->> Komal: (Whisper) Boomer...\n        Note over Anamika,Komal: Giggle...\n\")\n\n\n\n\n\n\nFrom here: https://cyberhelp.sesync.org/blog/visualization-with-diagrammeR.html\n\nCodegrViz(\"digraph{\n\n      graph[rankdir = LR]\n  \n      node[shape = rectangle, style = filled]\n  \n      node[fillcolor = Coral, margin = 0.2]\n      A[label = 'Figure 1: Map']\n      B[label = 'Figure 2: Metrics']\n  \n      node[fillcolor = Cyan, margin = 0.2]\n      C[label = 'Figures.Rmd']\n  \n      node[fillcolor = Violet, margin = 0.2]\n      D[label = 'Analysis_1.R']\n      E[label = 'Analysis_2.R']\n  \n      subgraph cluster_0 {\n        graph[shape = rectangle]\n        style = rounded\n        bgcolor = Gold\n    \n        label = 'Data Source 1'\n        node[shape = rectangle, fillcolor = LemonChiffon, margin = 0.25]\n        F[label = 'my_dataframe_1.csv']\n        G[label = 'my_dataframe_2.csv']\n      }\n  \n      subgraph cluster_1 {\n         graph[shape = rectangle]\n         style = rounded\n         bgcolor = Gold\n    \n         label = 'Data Source 2'\n         node[shape = rectangle, fillcolor = LemonChiffon, margin = 0.25]\n         H[label = 'my_dataframe_3.csv']\n         I[label = 'my_dataframe_4.csv']\n      }\n  \n      edge[color = black, arrowhead = vee, arrowsize = 1.25]\n      C -> {A B}\n      D -> C\n      E -> C\n      F -> D\n      G -> D\n      H -> E\n      I -> E\n      \n      }\")\n\n\n\n\n\n\nCodemermaid(\"\n        graph BT\n        A((Salinity))\n        A-->B(Barnacles)\n        B-.->|-0.10|B1{Mussels}\n        A-- 0.30 -->B1\n\n        C[Air Temp]\n        C-->B\n        C-.->E(Macroalgae)\n        E-->B1\n        C== 0.89 ==>B1\n\n        style A fill:#FFF, stroke:#333, stroke-width:4px\n        style B fill:#9AA, stroke:#9AA, stroke-width:2px\n        style B1 fill:#879, stroke:#333, stroke-width:1px\n        style C fill:#ADF, stroke:#333, stroke-width:2px\n        style E fill:#9C2, stroke:#9C2, stroke-width:2px\n\n        \")\n\n\n\n\n\n\nCodeDiagrammeR(\"\nsequenceDiagram\n  Arvind ->>ticket seller: ask ticket\n  ticket seller->>database: seats\n  alt tickets available\n    database->>ticket seller: ok\n    ticket seller->>customer: confirm\n    Arvind ->>ticket seller: ok\n    ticket seller->>database: book a seat\n    ticket seller->>printer: print ticket\n  else sold out\n    database->>ticket seller: none left\n    ticket seller->>customer: sorry\n  end\n\")\n\n\n\n\n\n\nCodeDiagrammeR(\n\"graph TB;\nA(Rounded)-->B[Squared];\nB-->C{A Decision};\nC-->D[Square One];\nC-->E[Square Two];\n\n%% Now styling these blocks\nstyle A fill:#E5E25F;  \nstyle B fill:#87AB51; \nstyle C fill:#3C8937;\nstyle D fill:#23772C;  \nstyle E fill:#B6E6E6;\n\"\n)\n\n\n\n\n\n\nCode  grViz(\"\ndigraph boxes_and_circles {\n\n  # a 'graph' statement\n  graph [overlap = true, fontsize = 10,forcelabels = true]\n\n  # several 'node' statements\n  node [shape = box,fontname = Helvetica, color = red, style = filled]\n  A[label = 'This is \\\\n an internal \\\\n label', xlabel = 'This is \\\\nan external \\\\nlabel']; B; C; D; E; F\n\n  node [shape = circle, fixedsize = true, color = palegreen, width = 0.9] // sets as circles\n  1; 2; 3; 4; 5; 6; 7; 8\n\n  # several 'edge' statements\n  A->{1,2,3,4} B->2 B->3 B->4 C->A\n  1->D E->A 2->4 1->5 1->F\n  E->6 4->6 5->7 6->7 3->8 3->1\n}\n\")"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-2",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-2",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram-2",
    "text": "Sequence Diagram-2"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-3",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-3",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram 3",
    "text": "Sequence Diagram 3"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#mindmap",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#mindmap",
    "title": "The Grammar of Diagrams",
    "section": "Mindmap",
    "text": "Mindmap"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#gantt-chart",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#gantt-chart",
    "title": "The Grammar of Diagrams",
    "section": "Gantt Chart",
    "text": "Gantt Chart"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#flow-chart",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#flow-chart",
    "title": "The Grammar of Diagrams",
    "section": "Flow chart",
    "text": "Flow chart"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#some-definitions-on-the-grammar-of-shapes-in-nomnoml",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#some-definitions-on-the-grammar-of-shapes-in-nomnoml",
    "title": "The Grammar of Diagrams",
    "section": "Some definitions on the “grammar of shapes” in nomnoml\n",
    "text": "Some definitions on the “grammar of shapes” in nomnoml\n\n\nAssociation Types: Connectors between blocks( i.e. Classifiers)\nClassifier Types: Kinds of blocks.\nDirective Types: Directives change the nature of the diagram rendered, by affective parameters like colour, direction and margins. ( Ha! VC people!!)\n\nCSS colours https://www.w3schools.com/cssref/css_colors.asp Only these colours are permitted, so use either the names or these specific colour hash codes. Any general hash code will not render.\n\nCode//association-1\n[a] - [b] \n\n//association-2\n[b] -> [c] \n\n//association_3\n[c] <-> [a]\n\n//dependency-1\n[a] <-->[d]\n\n//dependency-2\n#.ell: visual=ellipse fill=#fbfb09 bold\n#.arvind: visual=rhomb fill=#ff2234 bold\n[<ell>e]-->[a]\n//generalization-1\n[c]-:>[<arvind>k]\n\n//implementation --:>\n[k]--:>[d]\n\n\n\n\n\n\nCode//composition +-\n[a]+-[b]\n//composition +->\n[b]-+[c]\n//aggregation o-\n[c]o->[d]\n//aggregation o->\n[d]o->[a]\n//note --\n[d]--[everything happens;here]\n//hidden -/-\n[d]-/-[f]\n////////////////////////\n//weightless edge _>\n//[k]_>[d] //not working\n//weightless dashed__\n//[d]__[j] //not working\n\n\n\n\n\nClassifier Types\nThese are different kinds of blocks.\n\nCode[class]->[<abstract> abstract]\n[<abstract> abstract]-:>[<instance> instance]\n[<instance> instance]-:>[<note> note]\n[<note> note]-->[<reference> reference]\n\n\n\n\n\n\nCode[<package> package|components]-->[<frame> frame|]\n[<database> database]-->[<start> start]\n[<end> end]-o>[<state> state]\n\n\n\n\n\n\nCode[<choice> choice]--->[<sync> sync]\n[<input> input]->[<sender> sender]\n[<receiver> receiver]o-[<transceiver> transceiver]\n\n\n\n\n\n\nCode#direction:down\n#background:lightgrey\n#fill: fuchsia; green; purple\n#fillArrows: false\n#font: Courier\n[class]->[<abstract> abstract]\n[<abstract> abstract]-:>[<instance> instance]\n[<instance> instance]-:>[<note> note]\n[<note> note]-->[<reference> reference]\n\n\n\n\n\n\nCode#font: CenturySchoolbook\n#fill: lightyellow\n#stroke: green\n\n[<actor> actor]---[<usecase> usecase]\n[<usecase> usecase]<-->[<label> label]\n[<usecase> usecase]-/-[<hidden> hidden]\n\n\n\n\n\n\nCode[<table> table| a | 5 || b | 7]\n\n\n\n\n\n\n\nCode[<table> table| c | 9 ]"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#directives",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#directives",
    "title": "The Grammar of Diagrams",
    "section": "Directives",
    "text": "Directives\nDirectives change the nature of the diagram rendered, by affective parameters like colour, direction and margins."
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#custom-classifier-styles",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#custom-classifier-styles",
    "title": "The Grammar of Diagrams",
    "section": "Custom classifier styles",
    "text": "Custom classifier styles\nA directive that starts with “.” define a classifier’s style. The style is written as a space separated list of modifiers and key/value pairs.\n\nCode#.box: fill=#8f8 dashed\n#.blob: visual=ellipse title=bold\n#.arvind: visual=rhomb title=bold dashed fill=CornFlowerBlue\n[<box> GreenBox]\n[<blob> Blobby]\n[<arvind> Someone]"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#nomnoml-keyvalue-pairs",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#nomnoml-keyvalue-pairs",
    "title": "The Grammar of Diagrams",
    "section": "\nnomnoml Key/value pairs",
    "text": "nomnoml Key/value pairs\n\nfill=(any css color)\nstroke=(any css color)\nalign=center align=left\ndirection=right direction=down\nvisual=actor\nvisual=class\nvisual=database\nvisual=ellipse\nvisual=end\nvisual=frame\nvisual=hidden\nvisual=input\nvisual=none\nvisual=note\nvisual=package\nvisual=receiver\nvisual=rhomb\nvisual=roundrect\nvisual=sender\nvisual=start\nvisual=sync\nvisual=table\nvisual=transceiver"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#text-modifiers",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#text-modifiers",
    "title": "The Grammar of Diagrams",
    "section": "Text modifiers",
    "text": "Text modifiers\nbold center italic left underline\n\nCode# .box: fill=#8f8 dashed\n# .blob: visual=rhomb title=bold fill=#8f8 dashed\n\n[A]-[B]\n[B]--[<usecase>C]\n[C]-[<box> D]\n[B]--[<blob> Jabba;TheHut]\n\n\n\n\n\n\nCode[a] ->[b]\n[b] -:> [c]\n[c]o->[d]\n[d]-/-[e]\n\n\n\n\n\n\nCode#fill: lightgreen; lightblue; lightyellow; grey; white\n\n[<table> table | c | 9 ]\n\n[R | [<table> Packages |\n         Base R |\n         [ <table> tidyverse| ggplot | tidyr | readr |\n             [<table> dplyr|\n                 magrittr | Others]]]]\n\n\n\n\n\n\n\nCode#fill: lightgreen; lightblue; lightyellow; pink; white\n\n[RStudio | [R | [<table> Packages |\n                   Base R | [ tidyverse |\n                               ggplot | tidyr | readr |\n                               [dplyr]--[magrittr]\n                               [dplyr]--[Others]\n                             | tibble\n                             ]\n                 | lubridate | DiagrammeR | Lattice]]]\n\n\n\n\n\n\n\nCode[Linux]+-[Ubuntu]\n[Linux]+-[Mint]\n[Ubuntu]--[Mint]\n[Linux]+-[Rosa Linux]\n[Linux]+-[Mx Linux]\n[Debian]-+[Linux]\n\n\n[Fedora]-+[Linux]\n[Puppy Linux]-+[Linux]\n[Personal Pups]-+[Puppy Linux]"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/index.html#introduction",
    "href": "courses/R-for-Artists/110-GoD/index.html#introduction",
    "title": "Lab-11: The Queen of Hearts, She Made some Tarts",
    "section": "Introduction",
    "text": "Introduction\nWe can use R to create complicated diagrams too ! Flow charts, Gantt charts, Org charts…all with R. We will use packages such as nomnoml and DiagrammeR to achieve these ends."
  },
  {
    "objectID": "courses/R-for-Artists/120-time/index.html#introduction",
    "href": "courses/R-for-Artists/120-time/index.html#introduction",
    "title": "Lab-12: Time is a Him!!",
    "section": "Introduction",
    "text": "Introduction\nTime Series data are important in data visualization where events have a temporal dimension, such as with finance, transportation, music, telecommunications for example."
  },
  {
    "objectID": "courses/R-for-Artists/120-time/index.html#creating-a-time-series",
    "href": "courses/R-for-Artists/120-time/index.html#creating-a-time-series",
    "title": "Lab-12: Time is a Him!!",
    "section": "Creating a time series",
    "text": "Creating a time series\nIn this first example, we will use simple ts data, and then do another with a tibble dataset, and then a third example with an tsibble formatted dataset.\n\nts format data\nThere are a few datasets in base R that are in ts format already.\n\nCodeAirPassengers\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n1949 112 118 132 129 121 135 148 148 136 119 104 118\n1950 115 126 141 135 125 149 170 170 158 133 114 140\n1951 145 150 178 163 172 178 199 199 184 162 146 166\n1952 171 180 193 181 183 218 230 242 209 191 172 194\n1953 196 196 236 235 229 243 264 272 237 211 180 201\n1954 204 188 235 227 234 264 302 293 259 229 203 229\n1955 242 233 267 269 270 315 364 347 312 274 237 278\n1956 284 277 317 313 318 374 413 405 355 306 271 306\n1957 315 301 356 348 355 422 465 467 404 347 305 336\n1958 340 318 362 348 363 435 491 505 404 359 310 337\n1959 360 342 406 396 420 472 548 559 463 407 362 405\n1960 417 391 419 461 472 535 622 606 508 461 390 432\n\nCodestr(AirPassengers)\n\n Time-Series [1:144] from 1949 to 1961: 112 118 132 129 121 135 148 148 136 119 ...\n\n\nThis can be easily plotted using base R:\n\nCodeplot(AirPassengers)\n\n\n\n\nLet us take data that is “time oriented” but not in ts format, and convert it to ts: the syntax of ts() is:\nSyntax:  objectName <- ts(data, start, end, frequency)\n\nwhere,\n\n    `data` represents the data vector\n    `start` represents the first observation in time series\n    `end` represents the last observation in time series\n    frequency represents number of observations per unit time. For \n    example, frequency=1 for monthly data.\nWe will pick simple numerical vector data ChickWeight:\n\nCodeChickWeight %>% head()\n\n\n\n  \n\n\nCodeChickWeight_ts <- ts(ChickWeight$weight, frequency = 2)\nplot(ChickWeight_ts)\n\n\n\n\nThe ts format is not recommended for new analysis since it does not permit inclusion of multiple time series in one dataset, nor other categorical variables for grouping etc.\n\ntibble format data\nSome “time-oriented” datasets are available in tibble form. Let us try to plot one, the walmart_sales_weekly dataset from the timetk package:\n\nCodedata(walmart_sales_weekly, package = \"timetk\")\nwalmart_sales_weekly %>% head()\n\n\n\n  \n\n\n\nThis dataset is a tibble with a Date column. Let us plot the data using this column on the time/X-axis:\n\nCodewalmart_sales_weekly %>% \n  # convert Dept number to a **categorical factor**\n  mutate(Dept = forcats::as_factor(Dept)) %>% \n  ggplot(aes(x = Date, y = Weekly_Sales, group = Dept)) + \n  geom_point(aes(colour = Dept)) +\n  geom_line(aes(colour = Dept))\n\n\n\n\n\ntsibble format data\nFor more analysis and forecasting etc., it is useful to convert this tibble into a tsibble:\n\nCodewalmart_tsibble <- as_tsibble(walmart_sales_weekly,\n                         index = Date,\n                         key = c(id, Dept))\nwalmart_tsibble\n\n\n\n  \n\n\n\nThe 7D states the data is weekly. There is a Date column and all the other numerical variables are time-varying quantities. The categorical variables such as id, and Dept allow us to identify separate time series in the data, and these have 7 combinations hence are 7 time series in this data, as indicated.\nLet us plot Weekly_Sales, colouring the time series by Dept:\n\nCodewalmart_tsibble %>% \n  ggplot(aes( x = Date, y = Weekly_Sales, colour = Dept)) + \n           geom_line() + \n           geom_point() + \n           labs(title = \"Weekly Sales by Dept at Walmart\")\n\n\n\nFigure 1: Walmart Time Series\n\n\n\n\nThis first plot is that of all series together. There does seem to be an annual variation, which we should investigate later.\nNote the blue trend lines that are automatically plotted in the second graph. This is caused by the argument .smooth = TRUE.\n⊕We can also do a quick autoplot that seems to offer less control and is also not interactive.\n\n\n\nCodewalmart_tsibble %>% \n  dplyr::group_by(Dept) %>% \n  autoplot(Weekly_Sales)\n\n`mutate_if()` ignored the following grouping variables:\n• Column `Dept`"
  },
  {
    "objectID": "courses/R-for-Artists/120-time/index.html#one-more-example",
    "href": "courses/R-for-Artists/120-time/index.html#one-more-example",
    "title": "Lab-12: Time is a Him!!",
    "section": "One more example",
    "text": "One more example\nOften we have data in table form, that is time-oriented, with a date like column, and we need to convert it into a tsibble for analysis:\n\nCodeprison <- readr::read_csv(\"https://OTexts.com/fpp3/extrafiles/prison_population.csv\")\n\nRows: 3072 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): State, Gender, Legal, Indigenous\ndbl  (1): Count\ndate (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodeglimpse(prison)\n\nRows: 3,072\nColumns: 6\n$ Date       <date> 2005-03-01, 2005-03-01, 2005-03-01, 2005-03-01, 2005-03-01…\n$ State      <chr> \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"NS…\n$ Gender     <chr> \"Female\", \"Female\", \"Female\", \"Female\", \"Male\", \"Male\", \"Ma…\n$ Legal      <chr> \"Remanded\", \"Remanded\", \"Sentenced\", \"Sentenced\", \"Remanded…\n$ Indigenous <chr> \"ATSI\", \"Non-ATSI\", \"ATSI\", \"Non-ATSI\", \"ATSI\", \"Non-ATSI\",…\n$ Count      <dbl> 0, 2, 0, 5, 7, 58, 5, 101, 51, 131, 145, 323, 355, 1617, 12…\n\n\nWe have a Date column for the time index, and we have unique key variables like State, Gender, Legal and Indigenous. Count is the value that is variable over time. It also appears that the data is quarterly, since mosaic::inspect reports the max_diff in the Date column as \\(92\\). (Run mosaic::inspect(prison) in your Console).\n\nCodeprison_tsibble <- prison %>% \n  mutate(quarter = yearquarter(Date)) %>% \n  select(-Date) %>% # Remove the Date column now that we have quarters\n  as_tsibble(index = quarter, key = c(State, Gender, Legal, Indigenous))\n\nprison_tsibble\n\n\n\n  \n\n\n\n(Here, ATSI stands for Aboriginal or Torres Strait Islander.). We have \\(64\\) time series here, organized quarterly.\nLet us examine the key variables:\n\nCodeprison_tsibble %>% distinct(Indigenous)\n\n\n\n  \n\n\nCodeprison_tsibble %>% distinct(State)\n\n\n\n  \n\n\n\nSo we can plot the time series, faceted by / coloured by State:\n\nCodeprison_tsibble %>% \n  tsibble::index_by() %>% \n  group_by(Indigenous, State) %>% \n  #filter(State == \"NSW\") %>% \n  summarise(Total = sum(Count))  %>%\n  ggplot(aes(x = quarter, y = Total, colour = Indigenous, \n             shape = Indigenous)) + \n  geom_point() +\n  geom_line()  + \n  facet_wrap(~ State)\n\n\n\n\nHmm…looks like New South Wales(NSW) as something different going on compared to the rest of the states in Aus."
  },
  {
    "objectID": "courses/R-for-Artists/120-time/index.html#decomposing-time-series",
    "href": "courses/R-for-Artists/120-time/index.html#decomposing-time-series",
    "title": "Lab-12: Time is a Him!!",
    "section": "Decomposing Time Series",
    "text": "Decomposing Time Series\nWe can decompose the Weekly_Sales into components representing trends, seasonal events that repeat, and irregular noise. Since each Dept could have a different set of trends, we will do this first for one Dept, say Dept #95:\n\nCodewalmart_decomposed_season <- walmart_tsibble %>% \n  dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n  #\n  # feasts depends upon fabletools.\n  # \n  fabletools::model(\n    season = STL(Weekly_Sales ~ season(window = \"periodic\"))) \n\nwalmart_decomposed_ets <- walmart_tsibble %>% \n  dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n  #\n  # feasts depends upon fabletools.\n  # \n  fabletools::model(\n    ets = ETS(box_cox(Weekly_Sales, 0.3)))\n\nwalmart_decomposed_season %>% fabletools::components()\n\n\n\n  \n\n\nCodewalmart_decomposed_ets %>% fabletools::components()\n\n\n\n  \n\n\nCode# walmart_decomposed_arima <- walmart_tsibble %>% \n#   dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n#     arima = ARIMA(log(Weekly_Sales))\n\n\n\nCodewalmart_decomposed_season %>% \n  components() %>% \n  autoplot() + \n  labs( title = \"Seasonal Variations in Weekly Sales, Dept #95\")\n\n\n\nCodewalmart_decomposed_ets %>% \n  components() %>% \n  autoplot() + \n  labs( title = \"ETS Variations in Weekly Sales, Dept #95\")\n\nWarning: Removed 1 row containing missing values (`geom_line()`)."
  },
  {
    "objectID": "courses/R-for-Artists/120-time/index.html#references",
    "href": "courses/R-for-Artists/120-time/index.html#references",
    "title": "Lab-12: Time is a Him!!",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "courses/R-for-Artists/140-website/index.html#introduction",
    "href": "courses/R-for-Artists/140-website/index.html#introduction",
    "title": "Lab-14: You’re are Nothing but a Pack of Cards!!",
    "section": "Introduction",
    "text": "Introduction\nLet’s make a website in RStudio to show off our data viz portfolio, and to share with friends, parents, prospective employers…\nWe will encounter a new package called blogdown and use workflows with github and a free web hosting service called Netlify to create a website where all our RMarkdowns become individual blog posts, complete with Titles, Sections, Text, Diagrams and Links!"
  },
  {
    "objectID": "courses/R-for-Artists/140-website/index.html#references",
    "href": "courses/R-for-Artists/140-website/index.html#references",
    "title": "Lab-14: You’re are Nothing but a Pack of Cards!!",
    "section": "References",
    "text": "References\n\nAllison Hill\nSharon Macliss\nYihui Xie"
  },
  {
    "objectID": "courses/R-for-Artists/20-intro/index.html#introduction",
    "href": "courses/R-for-Artists/20-intro/index.html#introduction",
    "title": "Lab-2: Down the R-abbit Hole…",
    "section": "Introduction",
    "text": "Introduction\nWelcome!\nLet’s start our journey to the Garden of Data Visualization, with this terrific presentation by the great ( and sadly late..) Hans Rosling.\nThe best stats you’ve ever seen by Hans Rosling:\n{{% youtube \"hVimVzgtD6w\" %}}\n\nWe will run some boiler-plate R code today! Nothing ( almost! ) to code! We will get used to the tools and words of the trade: R, RStudio, installation, packages, libraries…."
  },
  {
    "objectID": "courses/R-for-Artists/30-rmd/index.html#introduction",
    "href": "courses/R-for-Artists/30-rmd/index.html#introduction",
    "title": "Lab-3: Drink Me!",
    "section": "Introduction",
    "text": "Introduction\nWe will get acquainted with the RMarkdown format, which allows us to mix text narrative, code, code-developed figures and items from the web in a seamless document.\nThen we can try to create something in the lines of what Hans Rosling did.\nSomething that can:\n- provide a visualization\n- provide insight\n- tell a story\n- is reproducible"
  },
  {
    "objectID": "courses/R-for-Artists/30-rmd/index.html#references",
    "href": "courses/R-for-Artists/30-rmd/index.html#references",
    "title": "Lab-3: Drink Me!",
    "section": "References:",
    "text": "References:\n\nhttps://ysc-rmarkdown.netlify.app/slides/01-basics.html Nice RMarkdown presentation and “code movies” !\nhttps://rmarkdown.rstudio.com/index.html\nhttps://www.markdowntutorial.com\nhttps://andrewbtran.github.io/NICAR/2018/workflow/docs/02-rmarkdown.html\nhttps://yihui.name/tinytex/ (install!)\nhttps://github.com/rstudio/cheatsheets/blob/master/rmarkdown-2.0.pdf\nhttps://rmarkdown.rstudio.com/html_document_format.html\nhttps://rmarkdown.rstudio.com/pdf_document_format.html"
  },
  {
    "objectID": "courses/R-for-Artists/30-rmd/index.html#assignments",
    "href": "courses/R-for-Artists/30-rmd/index.html#assignments",
    "title": "Lab-3: Drink Me!",
    "section": "Assignment(s)",
    "text": "Assignment(s)\n\nComplete the markdowntutorial in [reference 1]\nCreate a fresh RMarkdown document and use as many as possible of the RMarkdown constructs from the Cheatsheet [reference 4]"
  },
  {
    "objectID": "courses/R-for-Artists/30-rmd/index.html#optional",
    "href": "courses/R-for-Artists/30-rmd/index.html#optional",
    "title": "Lab-3: Drink Me!",
    "section": "Optional",
    "text": "Optional\n\nGo to reference 3 and install tinytex. Try to knit your document into PDF also, using tinytex."
  },
  {
    "objectID": "courses/R-for-Artists/30-rmd/index.html#fun-stuff",
    "href": "courses/R-for-Artists/30-rmd/index.html#fun-stuff",
    "title": "Lab-3: Drink Me!",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nDesirée De Leon, Alison Hill: rstudio4edu: A Handbook for Teaching and Learning with R and RStudio, https://rstudio4edu.github.io/rstudio4edu-book/"
  },
  {
    "objectID": "courses/R-for-Artists/40-working-in-r/index.html#introduction",
    "href": "courses/R-for-Artists/40-working-in-r/index.html#introduction",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "Introduction",
    "text": "Introduction\nWe will get acquainted with data and its representations in R! We will also form a view of how English Grammar ( pronouns, verbs, adjectives, figures of speech..) get metaphorized into the R World!!"
  },
  {
    "objectID": "courses/R-for-Artists/40-working-in-r/index.html#readings",
    "href": "courses/R-for-Artists/40-working-in-r/index.html#readings",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "Readings",
    "text": "Readings\n\nR for Data Science, Workflow: Basics Chapter: http://r4ds.had.co.nz/workflow-basics.html\nModern Dive, Getting Started Chapter: http://moderndive.com/2-getting-started.html\nR & RStudio Basics: https://bookdown.org/chesterismay/rbasics/3-rstudiobasics.html\nRStudio IDE Cheatsheet: https://github.com/rstudio/cheatsheets/blob/master/rstudio-ide.pdf"
  },
  {
    "objectID": "courses/R-for-Artists/50-working-in-tidyverse/index.html#introduction",
    "href": "courses/R-for-Artists/50-working-in-tidyverse/index.html#introduction",
    "title": "Lab-5: Twas brillig, and the slithy toves…",
    "section": "Introduction",
    "text": "Introduction\nWe meet the most important idea in R: tidy data. Once data is tidy, there is a great deal of insight to be obtained from it, by way of tables, graphs and explorations!\nWe will get hands on with dplyr, the R-package that belongs in the tidyverse and is a terrific toolbox to clean, transform, reorder, and summarize your data. And we will be ready to ask Questions of our data and embark on anlayzing it."
  },
  {
    "objectID": "courses/R-for-Artists/50-working-in-tidyverse/index.html#readings",
    "href": "courses/R-for-Artists/50-working-in-tidyverse/index.html#readings",
    "title": "Lab-5: Twas brillig, and the slithy toves…",
    "section": "Readings",
    "text": "Readings\n\nR4DS dplyr chapter\nModernDive dplyr chapter\nRStudio dplyr Cheatsheet"
  },
  {
    "objectID": "courses/R-for-Artists/60-GoG/index.html#introduction",
    "href": "courses/R-for-Artists/60-GoG/index.html#introduction",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "Introduction",
    "text": "Introduction\nAh…ggplot ! All those wonderful pictures and graphs, that Alice might have relished!\nMetaphors, aesthetics, geometries…and pictures !! ggplot seems to equate ravens to writing desks in its syntax…and out come graphs!!\nAnd colours: Wes Anderson! Tim Burton! The Economist… and many others!!"
  },
  {
    "objectID": "courses/R-for-Artists/60-GoG/index.html#references",
    "href": "courses/R-for-Artists/60-GoG/index.html#references",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "References",
    "text": "References\n\nGeorge Lakoff and Mark Johnson, Metaphors We Live By, https://www.youtube.com/watch?v=lYcQcwUfo8c\nWickham and Grolemund, R for Data Science, ggplot chapter: https://r4ds.had.co.nz/data-visualisation.html\nCMDLineTips, 10 Tips to Customize Text Color, Font, Size in ggplot2 with element_text(), https://cmdlinetips.com/2021/05/tips-to-customize-text-color-font-size-in-ggplot2-with-element_text/\nCMDLineTips, How to write a simple custom ggplot theme from scratch, https://cmdlinetips.com/2022/05/how-to-write-a-simple-custom-ggplot-theme-from-scratch/\nAsha Hill @ mode.com, 12 Extensions to ggplot2 for More Powerful R Visualizations, https://mode.com/blog/r-ggplot-extension-packages/\nEmil Hvitfeldt, ggplot Trial and Error, https://www.emilhvitfeldt.com/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/"
  },
  {
    "objectID": "courses/R-for-Artists/60-GoG/index.html#fun-stuff",
    "href": "courses/R-for-Artists/60-GoG/index.html#fun-stuff",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nYihan Wu, Mapping ggplot geoms and aesthetic parameters, ( An interactive view of which aesthetic parameters work with which ggplot geom!! ) https://www.yihanwu.ca/post/geoms-and-aesthetic-parameters/\nhttps://www.theartstory.org/artist/kandinsky-wassily/"
  },
  {
    "objectID": "courses/R-for-Artists/70-wizardy/index.html#introduction",
    "href": "courses/R-for-Artists/70-wizardy/index.html#introduction",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Introduction",
    "text": "Introduction\nWe will hear at icing and froth to our vanilla ggplots:\n\n\nfonts, annotations, highlights and even pictures!!"
  },
  {
    "objectID": "courses/R-for-Artists/70-wizardy/index.html#references",
    "href": "courses/R-for-Artists/70-wizardy/index.html#references",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "References",
    "text": "References\n\nThomas Lin Pedersen, https://www.data-imaginist.com/. The creator of ggforce, and patchwork packages.\nClaus Wilke, cowplot – Streamlined plot theme and plot annotations for ggplot2, https://wilkelab.org/cowplot/index.html\nClaus Wilke, Spruce up your ggplot2 visualizations with formatted text, https://clauswilke.com/talk/rstudio_conf_2020/. Slides, Code, and Video !\nRobert Kabacoff, ggplot theme cheatsheet, https://rkabacoff.github.io/datavis/modifyingthemes.pdf"
  },
  {
    "objectID": "courses/R-for-Artists/70-wizardy/index.html#fun-stuff",
    "href": "courses/R-for-Artists/70-wizardy/index.html#fun-stuff",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nZuguang Gu, Circular Visualization in R,\n\n\n\n\n\n\n\n\n\nhttps://jokergoo.github.io/circlize_book/book/"
  },
  {
    "objectID": "courses/R-for-Artists/90-GoM/index.html#introduction",
    "href": "courses/R-for-Artists/90-GoM/index.html#introduction",
    "title": "Lab-9: If you please sir…which way to the Secret Garden?",
    "section": "Introduction",
    "text": "Introduction\nWhat is there to not like about maps!!!\nWe will learn to make static and interactive maps and to show off different kinds of data on them, data that have an inherently “spatial” spread or significance!\nTrade Routes? Populations? Street Crime hotspots? Theatre and Food districts and popular Restaurants? Literary Paris, London and Barcelona?\nAll possible !!"
  },
  {
    "objectID": "courses/R-for-Artists/r-for-artists.html",
    "href": "courses/R-for-Artists/r-for-artists.html",
    "title": "Course: R for Artists",
    "section": "",
    "text": "Lab 07 - The Grammar of Networks\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-10: An Invitation from the Queen…to play Croquet\n\n\nThe Grammar of Networks\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-11: The Queen of Hearts, She Made some Tarts\n\n\nThe Grammar of Diagrams\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-12: Time is a Him!!\n\n\nTime Series in R\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-14: You’re are Nothing but a Pack of Cards!!\n\n\nMaking a website to show it all\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLab-1: Science, Human Experience, Experiments, and Data\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-2: Down the R-abbit Hole…\n\n\nWelcome ! Introduce Yourself to R, RStudio, and to all of Us!\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-3: Drink Me!\n\n\nWorking with R Markdown\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-4: I say what I mean and I mean what I say\n\n\nGetting started with Data in R\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-5: Twas brillig, and the slithy toves…\n\n\nTidy Data at the wabe MoMA\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-6: These Roses have been Painted !!\n\n\nWhy is a Raven like a Writing Desk?\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-7: The Lobster Quadrille\n\n\nFonts and other Wizardy in ggplot\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-9: If you please sir…which way to the Secret Garden?\n\n\nThe Grammar of Maps\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Grammar of Diagrams\n\n\nConverting Text to Diagrams in R\n\n\nPart of the R for Artists and Designers workshop course at the School of Foundation Studies, Srishti Manipal Institute of Art, Design, and Technology, Bangalore.\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied Metaphorics",
    "section": "",
    "text": "Hi, I’m Arvind Venkatadri.\nI’m an Adjunct Professor at DSU, Bangalore, INDIA, with a passion for R, data visualization, and Creative Thinking and Problem Solving with TRIZ. On this blog, I share and teach what I learn.\nTo get started, you can check out my courses. You can find me on Twitter or GitHub and YouTube. Feel free to reach out to me via mail !"
  },
  {
    "objectID": "posts/authoring.html",
    "href": "posts/authoring.html",
    "title": "Housing Prices",
    "section": "",
    "text": "In this analysis, we build a model predicting sale prices of houses based on data on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020. Let’s start by loading the packages we’ll use for the analysis.\n\nPackageslibrary(openintro)  # for data\nlibrary(tidyverse)  # for data wrangling and visualization\nlibrary(knitr)      # for tables\nlibrary(broom)      # for model summary\n\n\nWe present the results of exploratory data analysis in Section 2 and the regression model in Section 3."
  },
  {
    "objectID": "posts/authoring.html#sec-eda",
    "href": "posts/authoring.html#sec-eda",
    "title": "Housing Prices",
    "section": "\n2 Exploratory data analysis",
    "text": "2 Exploratory data analysis\nThe data contains 98 houses. As part of the exploratory analysis let’s visualize and summarize the relationship between areas and prices of these houses.\n\n2.1 Data visualization\nFigure 1 shows two histograms displaying the distributions of price and area individually.\n\nCodeggplot(duke_forest, aes(x = price)) +\n  geom_histogram(binwidth = 50000) +\n  labs(title = \"Histogram of prices\")\n\nggplot(duke_forest, aes(x = area)) +\n  geom_histogram(binwidth = 250) +\n  labs(title = \"Histogram of areas\")\n\n\n\n\n\n(a) Histogram of prices\n\n\n\n\n\n\n(b) Histogram of areas\n\n\n\n\nFigure 1: Histograms of individual variables\n\n\n\nFigure 2 displays the relationship between these two variables in a scatterplot.\n\nCodeggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point() +\n  labs(title = \"Price and area of houses in Duke Forest\")\n\n\n\nFigure 2: Scatterplot of price vs. area of houses in Duke Forest\n\n\n\n\n\n2.2 Summary statistics\nTable 1 displays basic summary statistics for these two variables.\n\nCodeduke_forest %>%\n  summarise(\n    `Median price` = median(price),\n    `IQR price` = IQR(price),\n    `Median area` = median(area),\n    `IQR area` = IQR(area),\n    `Correlation, r` = cor(price, area)\n    ) %>%\n  kable(digits = c(0, 0, 0, 0, 2))\n\n\n\nTable 1: Summary statistics for price and area of houses in Duke Forest\n\nMedian price\nIQR price\nMedian area\nIQR area\nCorrelation, r\n\n\n540000\n193125\n2623\n1121\n0.67"
  },
  {
    "objectID": "posts/authoring.html#sec-model",
    "href": "posts/authoring.html#sec-model",
    "title": "Housing Prices",
    "section": "\n3 Modeling",
    "text": "3 Modeling\nWe can fit a simple linear regression model of the form shown in Equation 1.\n\nprice = \\hat{\\beta}_0 + \\hat{\\beta}_1 \\times area + \\epsilon\n\\tag{1}\nTable 2 shows the regression output for this model.\n\nCodeprice_fit <- lm(price ~ area, data = duke_forest)\n  \nprice_fit %>%\n  tidy() %>%\n  kable(digits = c(0, 0, 2, 2, 2))\n\n\n\nTable 2: Linear regression model for predicting price from area\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n(Intercept)\n116652\n53302.46\n2.19\n0.03\n\n\narea\n159\n18.17\n8.78\n0.00"
  },
  {
    "objectID": "posts/auto-complete.html",
    "href": "posts/auto-complete.html",
    "title": "Autocomplete",
    "section": "",
    "text": "In the above YAML section, try out tab-autocompletion.\n\nWe want format of html\nadd a theme\nadd a table of contents and position on left\nAdd a title and author\nIn the below code-chunk\n\nUse the hashpipe\nAdd an echo with fenced code\nMake the chunk not evaluate\nSet the figure width to 6\nSet the figure height to 4\nRemember there is tab-completion AND ctrl + space for “search”"
  },
  {
    "objectID": "posts/bootswatch-themed.html",
    "href": "posts/bootswatch-themed.html",
    "title": "Bootswatch Themed QMD",
    "section": "",
    "text": "Plots\nThis is the world’s most amazing plot. Everyone loves penguins.\nPenguins are fancy.\nThere are 344 in the dataset of interest.\n\nShow the codepenguins %>% \n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point()\n\n\n\n\nYou can also include tables. Tables are super cool. I love tables and I love penguins. I am subject to oversight by the penguin overlords. The eternals are friends with the penguins.\n\nShow the codepenguins %>% \n  na.omit() %>% \n  group_by(species, sex) %>% \n  rename(\n    body_mass = body_mass_g, bill_length = bill_length_mm, \n    bill_depth = bill_depth_mm\n    ) %>% \n  summarise(\n    n = n(),\n    across(\n      .cols = c(body_mass, bill_length, bill_depth),\n      .fns = list(mean = mean, sd = sd)\n    ),\n    .groups = \"drop\"\n  ) %>% \n  gt(rowname_col = \"sex\") %>% \n  cols_label(\n    n = \"N\", body_mass_mean = \"Mean\", body_mass_sd = \"SD\", \n    bill_length_mean= \"Mean\", bill_length_sd = \"SD\",\n    bill_depth_mean = \"Mean\", bill_depth_sd = \"SD\"\n    ) %>% \n  gt::tab_spanner(\n    label = \"Body Mass (g)\",\n    columns = 4:5\n  ) %>% \n  gt::tab_spanner(\n    label = \"Bill Length (mm)\",\n    columns = 6:7\n  ) %>% \n  gt::tab_spanner(\n    label = \"Bill Depth (mm)\",\n    columns = 8:9\n  ) %>% \n  fmt_number(\n    columns = c(where(is.numeric), -n)\n  )\n\n\n\n\n\n\n\n\n      species\n      N\n      \n        Body Mass (g)\n      \n      \n        Bill Length (mm)\n      \n      \n        Bill Depth (mm)\n      \n    \n\nMean\n      SD\n      Mean\n      SD\n      Mean\n      SD\n    \n\n\n\nfemale\nAdelie\n73\n3,368.84\n269.38\n37.26\n2.03\n17.62\n0.94\n\n\nmale\nAdelie\n73\n4,043.49\n346.81\n40.39\n2.28\n19.07\n1.02\n\n\nfemale\nChinstrap\n34\n3,527.21\n285.33\n46.57\n3.11\n17.59\n0.78\n\n\nmale\nChinstrap\n34\n3,938.97\n362.14\n51.09\n1.56\n19.25\n0.76\n\n\nfemale\nGentoo\n58\n4,679.74\n281.58\n45.56\n2.05\n14.24\n0.54\n\n\nmale\nGentoo\n61\n5,484.84\n313.16\n49.47\n2.72\n15.72\n0.74"
  },
  {
    "objectID": "posts/callout-boxes.html",
    "href": "posts/callout-boxes.html",
    "title": "An Idle Mind",
    "section": "",
    "text": ":::{.callout-note}\nNote that there are five types of callouts, including:\n`note`, `warning`, `important`, `tip`, and `caution`.\n:::\n\n:::{.callout-tip}\n## Tip With Caption\n\nThis is an example of a callout with a caption.\n:::\n\n:::{.callout-caution collapse=\"true\"}\n## Expand To Learn About Collapse\n\nThis is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make a collapsible callout that is expanded by default.\n:::"
  },
  {
    "objectID": "posts/fa-example.html",
    "href": "posts/fa-example.html",
    "title": "Font Awesome Quarto Extension",
    "section": "",
    "text": "This extension allows you to use font-awesome icons in your Quarto HTML and PDF documents. It provides an {{< fa >}} shortcode:\n{{< fa icon-name >}}\nFor example:\n\n\n\nShortcode\nIcon\n\n\n\n\n{{< fa thumbs-up >}}\n\n\n\n{{< fa folder >}}\n\n\n\n{{< fa chess-pawn >}}\n\n\n\n{{< fa brands bluetooth >}}"
  },
  {
    "objectID": "posts/figure-layout-2.html",
    "href": "posts/figure-layout-2.html",
    "title": "An Idle Mind",
    "section": "",
    "text": "::: {#fig-bostons layout-nrow=2}\n\n![Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\n![Still Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Still sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard, twice\n\n:::"
  },
  {
    "objectID": "posts/figure-layout-2.html#subfigures-1",
    "href": "posts/figure-layout-2.html#subfigures-1",
    "title": "An Idle Mind",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\nFigure 1: Excited\n\n\n\n\n\nFigure 2: Sleeping\n\n\n\n\n\nStill Excited\n\n\n\n\n\nStill sleeping\n\n\nTwo states of Howard, twice"
  },
  {
    "objectID": "posts/figure-layout-2.html#subfigures-2",
    "href": "posts/figure-layout-2.html#subfigures-2",
    "title": "An Idle Mind",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n\n\nExcited\n\n\n\n\n\n\n\nSleeping\n\n\n\n\n\n\n\n\n\nStill Excited\n\n\n\n\n\n\n\nStill sleeping\n\n\n\n\nFigure 3: Two states of Howard, twice"
  },
  {
    "objectID": "posts/figure-layout.html",
    "href": "posts/figure-layout.html",
    "title": "An Idle Mind",
    "section": "",
    "text": "# returns a tibble of the files\nfs::dir_info(here::here(\"materials/images\"))\n\n# A tibble: 7 × 18\n  path             type     size permi…¹ modification_time   user  group devic…²\n  <fs::path>       <fct> <fs::b> <fs::p> <dttm>              <chr> <chr>   <dbl>\n1 …Terrier001.jpeg file   31.11K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n2 …en_Forever.jpeg file   18.72K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n3 …rrier_male.jpeg file   54.81K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n4 …ages/avatar.jpg file    8.73K rw-     2022-09-17 06:19:54 <NA>  <NA>   2.93e9\n5 …oston-sleep.png file  101.59K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n6 …ton-terrier.png file   72.69K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n7 …c_Library).jpeg file   32.09K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n# … with 10 more variables: hard_links <dbl>, special_device_id <dbl>,\n#   inode <dbl>, block_size <dbl>, blocks <dbl>, flags <int>, generation <dbl>,\n#   access_time <dttm>, change_time <dttm>, birth_time <dttm>, and abbreviated\n#   variable names ¹​permissions, ²​device_id\n\n\n\n# returns paths/files\nfs::dir_ls(here::here(\"materials/images\"))\n\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/330px-BostonTerrier001.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/330px-Boston_Terrier_Eden_Forever.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/330px-Boston_Terrier_male.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/avatar.jpg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/boston-sleep.png\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/boston-terrier.png\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/Terrier_Seated_(Boston_Public_Library).jpeg"
  },
  {
    "objectID": "posts/figure-layout.html#figures",
    "href": "posts/figure-layout.html#figures",
    "title": "An Idle Mind",
    "section": "Figures",
    "text": "Figures\nBasic markdown syntax:\n![Boston Terrier](materials/images/boston-terrier.png)\n\n\nBoston Terrier"
  },
  {
    "objectID": "posts/figure-layout.html#fragments",
    "href": "posts/figure-layout.html#fragments",
    "title": "An Idle Mind",
    "section": "Fragments",
    "text": "Fragments\n\n\n![Boston terrier](images/boston-terrier.png){fig-align=\"left\"}\n\n\n![](images/boston-terrier.png){fig-align=\"right\" fig-alt=\"A photo a Boston Terrier.\"}"
  },
  {
    "objectID": "posts/figure-layout.html#subfigures",
    "href": "posts/figure-layout.html#subfigures",
    "title": "An Idle Mind",
    "section": "Subfigures",
    "text": "Subfigures\n::: {#fig-bostons layout-ncol=2}\n\n![Excited](images/boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](images/boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard\n\n:::"
  },
  {
    "objectID": "posts/figure-layout.html#subfigures-1",
    "href": "posts/figure-layout.html#subfigures-1",
    "title": "An Idle Mind",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\nFigure 1: Two states of Howard"
  },
  {
    "objectID": "posts/fragments.html#make-these-columns-appear-in-order",
    "href": "posts/fragments.html#make-these-columns-appear-in-order",
    "title": "An Idle Mind",
    "section": "Make these columns appear in order",
    "text": "Make these columns appear in order\n\n\nThese appear first\n\nMake\nYour\nList\n\n\nThen this\n\n```{r}\nhead(mtcars)\n```\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"
  },
  {
    "objectID": "posts/gt-summary.html#introduction",
    "href": "posts/gt-summary.html#introduction",
    "title": "Overview of using gtsummary\n",
    "section": "Introduction",
    "text": "Introduction\nReproducible reports are an important part of good practices. We often need to report the results from a table in the text of an Quarto report. Inline reporting has been made simple with inline_text(). The inline_text() function reports statistics from {gtsummary} tables inline in an Quarto report."
  },
  {
    "objectID": "posts/gt-summary.html#setup",
    "href": "posts/gt-summary.html#setup",
    "title": "Overview of using gtsummary\n",
    "section": "Setup",
    "text": "Setup\nBefore going through the tutorial, install and load {gtsummary}.\n\n# install.packages(\"gtsummary\")\nlibrary(gtsummary)"
  },
  {
    "objectID": "posts/gt-summary.html#example-data-set",
    "href": "posts/gt-summary.html#example-data-set",
    "title": "Overview of using gtsummary\n",
    "section": "Example data set",
    "text": "Example data set\nWe’ll be using the trial data set throughout this example.\n\nThis set contains data from 200 patients who received one of two types of chemotherapy (Drug A or Drug B). The outcomes are tumor response and death.\n\nFor brevity in the tutorial, let’s keep a subset of the variables from the trial data set.\n\ntrial2 <-\n  trial %>%\n  select(trt, marker, stage)"
  },
  {
    "objectID": "posts/gt-summary.html#inline_text_tbl_summary",
    "href": "posts/gt-summary.html#inline_text_tbl_summary",
    "title": "Overview of using gtsummary\n",
    "section": "Inline results from tbl_summary()",
    "text": "Inline results from tbl_summary()\nFirst create a basic summary table using tbl_summary() (review tbl_summary() vignette for detailed overview of this function if needed).\n\ntab1 <- tbl_summary(trial2, by = trt)\ntab1\n\n\n\n\n\n\nCharacteristic\n      \nDrug A, N = 981\n\n      \nDrug B, N = 1021\n\n    \n\n\nMarker Level (ng/mL)\n0.84 (0.24, 1.57)\n0.52 (0.19, 1.20)\n\n\n    Unknown\n6\n4\n\n\nT Stage\n\n\n\n\n    T1\n28 (29%)\n25 (25%)\n\n\n    T2\n25 (26%)\n29 (28%)\n\n\n    T3\n22 (22%)\n21 (21%)\n\n\n    T4\n23 (23%)\n27 (26%)\n\n\n\n\n1 Median (IQR); n (%)\n    \n\n\n\n\nTo report the median (IQR) of the marker levels in each group, use the following commands inline.\n\nThe median (IQR) marker level in the Drug A and Drug B groups are 0.84 (0.24, 1.57) and 0.52 (0.19, 1.20), respectively. Here’s how the line will appear in your report.\n\n\nThe median (IQR) marker level in the Drug A and Drug B groups are 0.84 (0.24, 1.57) and 0.52 (0.19, 1.20), respectively. If you display a statistic from a categorical variable, include the level argument.\n\n\n25 (25%) resolves to “25 (25%)”"
  },
  {
    "objectID": "posts/gt-summary.html#inline_text_tbl_regression",
    "href": "posts/gt-summary.html#inline_text_tbl_regression",
    "title": "Overview of using gtsummary\n",
    "section": "Inline results from tbl_regression()",
    "text": "Inline results from tbl_regression()\nSimilar syntax is used to report results from tbl_regression() and tbl_uvregression() tables. Refer to the tbl_regression() vignette if you need detailed guidance on using these functions.\nLet’s first create a regression model.\n\n# build logistic regression model\nm1 <- glm(response ~ age + stage, trial, family = binomial(link = \"logit\"))\n\nNow summarize the results with tbl_regression(); exponentiate to get the odds ratios.\n\ntbl_m1 <- tbl_regression(m1, exponentiate = TRUE)\ntbl_m1\n\n\n\n\n\n\nCharacteristic\n      \nOR1\n\n      \n95% CI1\n\n      p-value\n    \n\n\nAge\n1.02\n1.00, 1.04\n0.091\n\n\nT Stage\n\n\n\n\n\n    T1\n—\n—\n\n\n\n    T2\n0.58\n0.24, 1.37\n0.2\n\n\n    T3\n0.94\n0.39, 2.28\n0.9\n\n\n    T4\n0.79\n0.33, 1.90\n0.6\n\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval\n    \n\n\n\n\nTo report the result for age, use the following commands inline.\n\n1.02 (95% CI 1.00, 1.04; p=0.091) Here’s how the line will appear in your report.\n\n\n1.02 (95% CI 1.00, 1.04; p=0.091) It is reasonable that you’ll need to modify the text. To do this, use the pattern argument. The pattern argument syntax follows glue::glue() format with referenced R objects being inserted between curly brackets. The default is pattern = \"{estimate} ({conf.level*100}% CI {conf.low}, {conf.high}; {p.value})\". You have access the to following fields within the pattern argument.\n\n\n\n\n\n\n\n\nParameter\n      Description\n    \n\n\n\n{estimate}\n\nprimary estimate (e.g. model coefficient, odds ratio)\n\n\n\n{conf.low}\n\nlower limit of confidence interval\n\n\n\n{conf.high}\n\nupper limit of confidence interval\n\n\n\n{p.value}\n\np-value\n\n\n\n{conf.level}\n\nconfidence level of interval\n\n\n\n{N}\n\nnumber of observations\n\n\n\n\n\n\n\nAge was not significantly associated with tumor response (OR 1.02; 95% CI 1.00, 1.04; p=0.091). Age was not significantly associated with tumor response (OR 1.02; 95% CI 1.00, 1.04; p=0.091). If you’re printing results from a categorical variable, include the level argument, e.g. inline_text(tbl_m1, variable = stage, level = \"T3\") resolves to “0.94 (95% CI 0.39, 2.28; p=0.9)”.\n\nThe inline_text function has arguments for rounding the p-value (pvalue_fun) and the coefficients and confidence interval (estimate_fun). These default to the same rounding performed in the table, but can be modified when reporting inline.\nFor more details about inline code, review to the RStudio documentation page."
  },
  {
    "objectID": "posts/history.html",
    "href": "posts/history.html",
    "title": "Boston Terrier",
    "section": "",
    "text": "The Boston Terrier is a breed of dog originating in the United States of America. This “American Gentleman” was accepted in 1893 by the American Kennel Club as a non-sporting breed.1 Color and markings are important when distinguishing this breed from the AKC standard. They should be either black, brindle or seal with white markings.2 Boston Terriers are small and compact with a short tail and erect ears. The AKC says they are highly intelligent and very easily trained.3 They are friendly and can be stubborn at times. The average life span of a Boston Terrier is around 11 to 13 years.4 The American Kennel Club ranked the Boston Terrier as the 21st most popular breed in 2019.5"
  },
  {
    "objectID": "posts/history.html#history",
    "href": "posts/history.html#history",
    "title": "Boston Terrier",
    "section": "History",
    "text": "History\n\n\n\n\n\n\nTerrier Seated\n\n\n\n\nThe Boston terrier breed originated around 1875, when Robert C. Hooper of Boston purchased from Edward Burnett a dog named Judge (known later as Hooper’s Judge), which was of a bull and terrier type lineage. Hooper’s Judge is directly related to the original bull and terrier breeds of the 19th and early 20th centuries. The American Kennel Club cites Hooper’s Judge as the ancestor of all true modern Boston Terriers. Judge weighed about 32 pounds (15 kg).\n\n\n\n\nJudge was bred to Burnett’s Gyp (or Kate). Gyp was a white bulldog-type female, owned by Edward Burnett, of Southboro, Massachusetts. She weighed about 20 pounds (9.1 kg), was stocky and strong and had the typical blocky head now shown in Bostons. From this foundation of the breed, subsequent breeders refined the breed into its modern day presentation. Bred down in size from fighting dogs of the bull and terrier types, the Boston Terrier originally weighed up to 44 pounds (20 kg) (Old Boston Bulldogs).\n\n\n\n\n\n\n\nA young male Boston Terrier with a Brown brindle coat\n\nThe breed was first shown in Boston in 1870. By 1889 the breed had become sufficiently popular in Boston that fanciers formed the American Bull Terrier Club, the breed’s nickname, “roundheads”. Shortly after, at the suggestion of James Watson (a noted writer and authority), the club changed its name to the Boston Terrier Club and in 1893 it was admitted to membership in the American Kennel Club, thus making it the first US breed to be recognized. It is one of a small number of breeds to have originated in the United States. The Boston Terrier was the first non-sporting dog breed in the US.\nIn the early years, the color and markings were not very important to the breed’s standard. By the 20th century the breed’s distinctive markings and color were written into the standard, becoming an essential feature. The Boston Terrier has lost most of its aggressive nature, preferring the company of humans, although some males will still challenge other dogs if they feel their territory is being invaded. Boston University has used Rhett the Boston Terrier as their mascot since 1922. Wofford College in Spartanburg, SC has had a live Boston Terrier mascot named Blitz since 2003 that attends home football games. The Boston Terrier has also been the official state dog of Massachusetts since 1979."
  },
  {
    "objectID": "posts/history.html#description",
    "href": "posts/history.html#description",
    "title": "Boston Terrier",
    "section": "Description",
    "text": "Description\nThe Boston Terrier is a compactly built, well-proportioned dog. It has a square-looking head with erect ears and a slightly arched neck. The muzzle is short and generally wrinkle-free, with an even or a slightly undershot bite. The chest is broad and the tail is short. According to international breed standards, the dog should weigh no more than 25 pounds (11 kg). Boston Terriers usually stand up to 15–17 inches (380–430 mm) at the withers.\nThe American Kennel Club divides the breed into three classes: under 15 pounds, 15 pounds and under 20 pounds, 20 pounds and not exceeding 25 pounds.\n\nCoat and color\nThe Boston Terrier is characteristically marked with white in proportion to either black, brindle, seal (color of a wet seal, a very dark brown that looks black except in the bright sun), or a combination of the three. Any other color is not accepted as a Boston Terrier by the American Kennel Club, as they are usually obtained by crossbreeding with other breeds and the dog loses its characteristic “tuxedo” appearance.6 Any Boston Terrier from AKC parentage regardless of the color, or if it is a splash or has a blue eye or weak ears, can be and are registered by the AKC and participate in any AKC sporting events.\n\n\n\n\nA female Boston Terrier with a black coat\n\nAccording to the American Kennel Club, the Boston Terrier’s markings are broken down into two categories: Required, which consists of a white chest, white muzzle band, and a white band between the eyes; and Desired, which includes the Required markings plus a white collar, white on the forelegs, forelegs, up to the hocks on the rear legs. For conformation showing, symmetrical markings are preferred. Due to the Boston Terrier’s markings resembling formal wear, in addition to its refined and pleasant personality, the breed is commonly referred to as “the American Gentleman.”\n\n\n\n\nAn adult male Boston Terrier with a black coat"
  },
  {
    "objectID": "posts/history.html#temperment",
    "href": "posts/history.html#temperment",
    "title": "Boston Terrier",
    "section": "Temperment",
    "text": "Temperment\nBoston Terrier is a gentle breed that typically has a strong, happy-go-lucky, and friendly personality with a merry sense of humor. Boston Terriers are generally eager to please their owner and can be easily trained. They can be very protective of their owners, which may result in aggressive and territorial behavior toward other pets and strangers. The breed requires only a minimal amount of grooming.\nWhile originally bred for fighting as well as hunting rats in garment factories, they were later bred for companionship. They are not considered terriers by the American Kennel Club, however, but are part of the non-sporting group.\nBoth females and males are generally quiet and bark only when necessary, Their usually sensible attitude toward barking makes them excellent choices for apartment dwellers. They enjoy being around people, get along well with children, the elderly, other canines, and non-canine pets, if properly socialized."
  },
  {
    "objectID": "posts/history.html#grooming",
    "href": "posts/history.html#grooming",
    "title": "Boston Terrier",
    "section": "Grooming",
    "text": "Grooming\nWith a short, shiny, smooth coat, Boston Terriers require little grooming. Bostons produce light shedding, and weekly brushing of their fine coat is effective at removing loose hair. Brushing promotes the health of the coat because it distributes skin oils, and it also encourages new hair growth. Occasional bathing is suitable for the breed.7\nThe nails of Boston Terriers require regular trimming. Overgrown nails not only have the potential to inflict pain on the breed, but they can also make walking difficult or tear off after getting snagged on something.\nSimilarly to nail trimming, tooth brushing should also be done regularly to promote good oral health. The risk of the breed developing oral pain, gum infection, or bad breath can be decreased with regular tooth brushing that removes plaque buildup and other bacteria. In addition, poor dental hygiene can lead to tooth root abscesses that can lead to damage around the tissue and eventually lead to the loss of teeth."
  },
  {
    "objectID": "posts/inline-code.html",
    "href": "posts/inline-code.html",
    "title": "An Idle Mind",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.0 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(palmerpenguins)\nThe dataset contains 344 penguin size measurements from Adelie, Gentoo, Chinstrap species across Torgersen, Biscoe, Dream islands.."
  },
  {
    "objectID": "posts/inline-code.html#what-about-formatting",
    "href": "posts/inline-code.html#what-about-formatting",
    "title": "An Idle Mind",
    "section": "What about formatting?",
    "text": "What about formatting?\n\npen_summary <- penguins |> \n  group_by(species) |> \n  summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))\n\nThe average body mass by species is 3700.6622517, 3733.0882353, 5076.0162602.\nWe can do better!\n\nbody_mass <- scales::label_number(big.mark = \",\", accuracy = 0.1, suffix = \"g\")(pull(pen_summary, avg_mass))\n\nbody_mass\n\n[1] \"3,700.7g\" \"3,733.1g\" \"5,076.0g\"\n\n\nThe average body mass by species is 3,700.7g, 3,733.1g, 5,076.0g.\nWe can still do better!\n\nmass_reporter <- glue::glue_collapse(body_mass, sep = \", \", last = \", and \")\n\nThe average body mass by species is 3,700.7g, 3,733.1g, and 5,076.0g."
  },
  {
    "objectID": "posts/inline-code.html#reporting-with-lists",
    "href": "posts/inline-code.html#reporting-with-lists",
    "title": "An Idle Mind",
    "section": "Reporting with lists",
    "text": "Reporting with lists\nCredit to TJ Mahr\n\nknitted <- list(\n  when = format(Sys.Date()),\n  with = system(\"quarto --version\", intern = TRUE)\n)\n\nReported prepared on 2023-01-03 with quarto version 1.2.280."
  },
  {
    "objectID": "posts/lightbox-extension.html",
    "href": "posts/lightbox-extension.html",
    "title": "Example Lightbox Document",
    "section": "",
    "text": "Here is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "posts/lightbox-extension.html#elsewhere",
    "href": "posts/lightbox-extension.html#elsewhere",
    "title": "Example Lightbox Document",
    "section": "Elsewhere",
    "text": "Elsewhere\nThe below demonstrates placing more than one image in a gallery. Note the usage of the layout-ncol which arranges the images on the page side by date. Adding the group attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n\n\n\n\nAquinnah\n\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\n\nVineyard lighthouse"
  },
  {
    "objectID": "posts/lightbox-extension.html#credits",
    "href": "posts/lightbox-extension.html#credits",
    "title": "Example Lightbox Document",
    "section": "Credits",
    "text": "Credits\nThe images in this example were used under the Unsplash license, view originals below:\n\nChilmark Beach\nAquinnah\nGingerbread House\nEdgartown Light\nEdgartown Sailboat"
  },
  {
    "objectID": "posts/markdown-syntax.html",
    "href": "posts/markdown-syntax.html",
    "title": "An Idle Mind",
    "section": "",
    "text": "DELETE THIS SECTION WHEN COMPLETED\n\nAdd a title and author to the YAML header. Add a table of contents as well.\nAdd two major sections with level two headers\n\n\nAdd a subsection to one of your major sections\n\n\nCreate a 3 row x 2 col table, populate with a column for restaurant + column for cuisine, and then add 3 examples.\nAdd an image link to a web image you have chosen and a local image.\nUse any markdown syntax that you can recall from the slides or refresh your memory from https://quarto.org/docs/authoring/markdown-basics.html"
  },
  {
    "objectID": "posts/old-rmarkdown.html",
    "href": "posts/old-rmarkdown.html",
    "title": "reactable example",
    "section": "",
    "text": "This is an example from reactable documentation - showing the Twitter followers of some politicians.\nExample adapted from {reactable} documentation"
  },
  {
    "objectID": "posts/penguin-analysis.html",
    "href": "posts/penguin-analysis.html",
    "title": "An Idle Mind",
    "section": "",
    "text": "Insert three total code chunks\nChunk 1: load tidyverse and palmerpenguins R packages and print the penguins dataset with glimpse()\nChunk 2: Create a summary by sex/species of the average and median body weight and bill length\nChunk 3: Create a plot of body mass (x) by bill length (y)\nRender it!"
  },
  {
    "objectID": "posts/penguin-params.html",
    "href": "posts/penguin-params.html",
    "title": "Penguins",
    "section": "",
    "text": "We have data about 344 penguins. Only 193 are classified asAdelie. The distribution of the Adelie penguins are shown below:"
  },
  {
    "objectID": "posts/penguin-report.html",
    "href": "posts/penguin-report.html",
    "title": "Penguins Distilled",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth.\n\n\nLiterate Programming\nPer Donald Knuth\n\nA programming paradigm introduced by Donald Knuth in which a computer program is given an explanation of its logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which compilable source code can be generated.\n\nInitial explore\nWe can do a quick exploration of the data with skimr::skim(). This will report the counts of various variables, along with some basic descriptive statistics. The skimr package is fantastic for quickly getting a sense of your datasets.\nAhead of skimr there are 344 penguins in this dataset, and the unique species are Adelie, Gentoo, Chinstrap.\nPer the rOpenSci skimr docs:\n\nskimr provides a frictionless approach to summary statistics which conforms to the principle of least surprise, displaying summary statistics the user can skim quickly to understand their data. It handles different data types and returns a skim_df object which can be included in a pipeline or displayed nicely for the human reader.\n\n\npenguins %>% \n  group_by(species) %>% \n  skimr::skim() %>% \n  select(-contains(\"numeric.p\"))\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n344\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nspecies\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nspecies\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\nisland\nAdelie\n0\n1.00\nFALSE\n3\nDre: 56, Tor: 52, Bis: 44\n\n\nisland\nChinstrap\n0\n1.00\nFALSE\n1\nDre: 68, Bis: 0, Tor: 0\n\n\nisland\nGentoo\n0\n1.00\nFALSE\n1\nBis: 124, Dre: 0, Tor: 0\n\n\nsex\nAdelie\n6\n0.96\nFALSE\n2\nfem: 73, mal: 73\n\n\nsex\nChinstrap\n0\n1.00\nFALSE\n2\nfem: 34, mal: 34\n\n\nsex\nGentoo\n5\n0.96\nFALSE\n2\nmal: 61, fem: 58\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nspecies\nn_missing\ncomplete_rate\nmean\nsd\nhist\n\n\n\nbill_length_mm\nAdelie\n1\n0.99\n38.79\n2.66\n▁▆▇▆▁\n\n\nbill_length_mm\nChinstrap\n0\n1.00\n48.83\n3.34\n▂▇▇▅▁\n\n\nbill_length_mm\nGentoo\n1\n0.99\n47.50\n3.08\n▃▇▆▁▁\n\n\nbill_depth_mm\nAdelie\n1\n0.99\n18.35\n1.22\n▂▆▇▃▁\n\n\nbill_depth_mm\nChinstrap\n0\n1.00\n18.42\n1.14\n▅▇▇▆▂\n\n\nbill_depth_mm\nGentoo\n1\n0.99\n14.98\n0.98\n▅▇▇▆▂\n\n\nflipper_length_mm\nAdelie\n1\n0.99\n189.95\n6.54\n▁▆▇▅▁\n\n\nflipper_length_mm\nChinstrap\n0\n1.00\n195.82\n7.13\n▁▅▇▅▂\n\n\nflipper_length_mm\nGentoo\n1\n0.99\n217.19\n6.48\n▂▇▇▆▃\n\n\nbody_mass_g\nAdelie\n1\n0.99\n3700.66\n458.57\n▅▇▇▃▂\n\n\nbody_mass_g\nChinstrap\n0\n1.00\n3733.09\n384.34\n▁▅▇▃▁\n\n\nbody_mass_g\nGentoo\n1\n0.99\n5076.02\n504.12\n▃▇▇▇▂\n\n\nyear\nAdelie\n0\n1.00\n2008.01\n0.82\n▇▁▇▁▇\n\n\nyear\nChinstrap\n0\n1.00\n2007.97\n0.86\n▇▁▆▁▇\n\n\nyear\nGentoo\n0\n1.00\n2008.08\n0.79\n▆▁▇▁▇\n\n\n\n\n\nSpecific statistics\nWe can also explore specific statistics\nThe penguins split by species show a specific relationship between weight and flipper length, where the Adelie female penguins are the lighest and have the shortest flippers.\n\npenguins %>% \n  group_by(species, sex) %>% \n  summarize(\n    n = n(), \n    weight = mean(body_mass_g, na.rm = TRUE),\n    flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n    ) %>% \n  arrange(desc(weight))\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 5\n# Groups:   species [3]\n  species   sex        n weight flipper_length\n  <fct>     <fct>  <int>  <dbl>          <dbl>\n1 Gentoo    male      61  5485.           222.\n2 Gentoo    female    58  4680.           213.\n3 Gentoo    <NA>       5  4588.           216.\n4 Adelie    male      73  4043.           192.\n5 Chinstrap male      34  3939.           200.\n6 Adelie    <NA>       6  3540            186.\n7 Chinstrap female    34  3527.           192.\n8 Adelie    female    73  3369.           188.\n\n\nLooks like the Adelie are the lightest penguin. I want to see their distribution along with the overall distribution.\n\npenguins %>% \n  filter(is.na(sex))\n\n# A tibble: 11 × 8\n   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 2 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n 3 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n 4 Adelie  Torgersen           37.8          17.1        186    3300 <NA>   2007\n 5 Adelie  Torgersen           37.8          17.3        180    3700 <NA>   2007\n 6 Adelie  Dream               37.5          18.9        179    2975 <NA>   2007\n 7 Gentoo  Biscoe              44.5          14.3        216    4100 <NA>   2007\n 8 Gentoo  Biscoe              46.2          14.4        214    4650 <NA>   2008\n 9 Gentoo  Biscoe              47.3          13.8        216    4725 <NA>   2009\n10 Gentoo  Biscoe              44.5          15.7        217    4875 <NA>   2009\n11 Gentoo  Biscoe              NA            NA           NA      NA <NA>   2009\n# … with abbreviated variable names ¹​flipper_length_mm, ²​body_mass_g\n\n\n\nsmaller <- palmerpenguins::penguins %>% \n  filter(species == \"Adelie\", \n         !is.na(body_mass_g))\n\nCleanup the data\nIf you noticed above, there was some NA or missing data. We can remove those rows for now.\n\npenguins_clean <- penguins %>% \n  na.omit() %>% \n  mutate(species_num = as.numeric(species))\n\nPlot Section\nLet’s move on to some plots, for the overall distributions and for just the Adelie penguins. The overall distribution of the data by species shows some overlap in body weight for Adelie/Chinstrap, but more of a separation for the Gentoo penguins.\n\npenguins %>% \n  ggplot(aes(body_mass_g, fill = species)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Penguin Bins\")\n\n\n\n\nWhen we compare just within the Adelie penguins, we can see more of a specific separation of male vs female. However, there is still a decent amount of overlapping data.\n\npenguin_plot <- smaller %>% \n  filter(!is.na(sex)) %>% \n  ggplot(aes(body_mass_g, fill = sex)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n    scale_fill_manual(values = c(\"darkorange\",\"purple\")) +\n  labs(x = \"Penguin Bins\")\n\npenguin_plot\n\n\n\n\nLastly we can fit a basic linear model comparing body weight in grams to the flipper length of the penguins by specific species. There is a strong linear relationship, although it’s a bit difficult to distinguish between Chinstrap and Adelie penguins.\n\npenguin_size_plot <- penguins_clean %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = species)) + \n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  geom_point(size = 2, alpha = 0.5) +\n  labs(x = \"Mass (g)\", y = \"Flipper Length (mm)\") +\n  geom_smooth(aes(group = \"none\"), method = \"lm\")\n\npenguin_size_plot\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nWe can save the overall distribution and the linear model plot.\n\nggsave(\"penguin-dist.png\", penguin_plot, \n  dpi = \"retina\", height = 8, width = 8)\n\nggsave(\"penguin-smooth.png\", penguin_size_plot, \n  dpi = \"retina\", height = 8, width = 8)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nModeling section\nMoving on to some basic modeling we can see if what kind of relationships we observe in the data. Note that I’m really not following any plan, just indicating how you can fit some different models all at once with dplyr + broom.\n\nmodel_inputs <- tibble(\n  model_form = c(\n    list(flipper_length_mm ~ body_mass_g),\n    list(species_num ~ bill_length_mm + body_mass_g + sex),\n    list(flipper_length_mm ~ bill_length_mm + species)\n    ),\n  data = list(penguins_clean)\n) \n\nmodel_metrics <- model_inputs %>% \n  rowwise(model_form, data) %>% \n  summarize(lm = list(lm(model_form, data = data)), .groups = \"drop\") %>% \n  rowwise(model_form, lm, data) %>% \n  summarise(broom::glance(lm), .groups = \"drop\")\n\nWrap up\nWe can then take the model outcomes and throw them into a quick gt table.\n\nmodel_metrics %>% \n  select(model_form, r.squared:p.value) %>% \n  mutate(model_form = as.character(model_form)) %>% \n  gt::gt() %>% \n  gt::fmt_number(r.squared:statistic) %>% \n  gt::fmt_scientific(p.value) %>% \n  gt::cols_width(\n    model_form ~ px(150)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodel_form\n      r.squared\n      adj.r.squared\n      sigma\n      statistic\n      p.value\n    \n\n\nflipper_length_mm ~ body_mass_g\n0.76\n0.76\n6.85\n1,060.30\n3.13 × 10−105\n\n\n\nspecies_num ~ bill_length_mm + body_mass_g + sex\n0.84\n0.84\n0.36\n583.59\n2.45 × 10−131\n\n\n\nflipper_length_mm ~ bill_length_mm + species\n0.83\n0.83\n5.83\n529.22\n1.66 × 10−125\n\n\n\n\n\n\n\nOverall, this was a quick overview of the beauty of literate programming. We have R code that is self-documenting, as we capture our thoughts and the outputs in a single document. We know at some level that the code works since it “logs” the outputs at various stages and could still output to additional log files. To render it has to run successfully in a linear fashion, and it is human readable as code, via the visual editor or even in version control like Git!"
  },
  {
    "objectID": "posts/plot-layout.html",
    "href": "posts/plot-layout.html",
    "title": "An Idle Mind",
    "section": "",
    "text": "library(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union"
  },
  {
    "objectID": "posts/plot-layout.html#figure-layout-ncol",
    "href": "posts/plot-layout.html#figure-layout-ncol",
    "title": "An Idle Mind",
    "section": "Figure layout, ncol",
    "text": "Figure layout, ncol\n\n```{r}\n#| layout-ncol: 2\n#| fig-cap:\n#|   - \"Speed and Stopping Distances of Cars\"\n#|   - \"Engine displacement and fuel efficiency in Cars\"\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n\n\n\n\nSpeed and Stopping Distances of Cars\n\n\n\n\n\n\nEngine displacement and fuel efficiency in Cars"
  },
  {
    "objectID": "posts/plot-layout.html#subcaptions",
    "href": "posts/plot-layout.html#subcaptions",
    "title": "An Idle Mind",
    "section": "Subcaptions:",
    "text": "Subcaptions:\n\n```{r}\n#| label: fig-charts\n#| fig-cap: Charts\n#| fig-subcap:\n#|   - \"Cars\"\n#|   - \"mtcars\"\n#| layout-ncol: 2\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n\n\n\n\n(a) Cars\n\n\n\n\n\n\n(b) mtcars\n\n\n\n\nFigure 1: Charts"
  },
  {
    "objectID": "posts/plot-layout.html#figure-layout-custom",
    "href": "posts/plot-layout.html#figure-layout-custom",
    "title": "An Idle Mind",
    "section": "Figure layout, custom",
    "text": "Figure layout, custom\n\n```{r}\n#| layout: [[45,-10, 45], [50, 50]]\n#| fig-height: 5\n#| fig-align: center\n#| message: false\n#| warning: false\n#| dpi: 300\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_smooth() +\n  theme(text = element_text(size = 20))\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()+\n  theme(text = element_text(size = 20))\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()+\n  theme(text = element_text(size = 20))\n\nmtcars %>% \n  ggplot(aes(x = cyl, y = mpg, group = cyl, color = factor(cyl))) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme(legend.position = \"none\")+\n  theme(text = element_text(size = 20))\n```"
  },
  {
    "objectID": "posts/plots.html",
    "href": "posts/plots.html",
    "title": "An Idle Mind",
    "section": "",
    "text": "library(palmerpenguins)\nlibrary(ggplot2)\nggplot2::theme_set(ggplot2::theme_minimal())\npenguins <- na.omit(penguins)"
  },
  {
    "objectID": "posts/plots.html#ggplot2",
    "href": "posts/plots.html#ggplot2",
    "title": "An Idle Mind",
    "section": "ggplot2",
    "text": "ggplot2\nCredit to Alison Hill + Allison Horst\n\n```{r}\nmass_flipper <- ggplot(data = penguins, \n                       aes(x = flipper_length_mm,\n                           y = body_mass_g)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin size, Palmer Station LTER\",\n       subtitle = \"Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins\",\n       x = \"Flipper length (mm)\",\n       y = \"Body mass (g)\",\n       color = \"Penguin species\",\n       shape = \"Penguin species\") +\n  theme(legend.position = c(0.2, 0.7),\n        plot.title.position = \"plot\",\n        plot.caption = element_text(hjust = 0, face= \"italic\"),\n        plot.caption.position = \"plot\",\n        plot.background = element_rect(color = \"black\"))\n```"
  },
  {
    "objectID": "posts/plots.html#basic-plot",
    "href": "posts/plots.html#basic-plot",
    "title": "An Idle Mind",
    "section": "Basic plot",
    "text": "Basic plot\n\n```{r}\nmass_flipper\n```"
  },
  {
    "objectID": "posts/plots.html#basic-plot-1",
    "href": "posts/plots.html#basic-plot-1",
    "title": "An Idle Mind",
    "section": "Basic plot",
    "text": "Basic plot\nIncreasing the width/DPI only affects the scaling of the image, it will not overflow.\n\n```{r}\n#| fig-width: 10\n#| fig-height: 4\n#| fig-dpi: 600\nmass_flipper\n```"
  },
  {
    "objectID": "posts/plots.html#aside",
    "href": "posts/plots.html#aside",
    "title": "An Idle Mind",
    "section": "Aside",
    "text": "Aside\n\n\n\n\n\n\nThe palmerpenguins R package contains two datasets that we believe are a viable alternative to Anderson’s Iris data (see datasets::iris). In this introductory vignette, we’ll highlight some of the properties of these datasets that make them useful for statistics and data science education, as well as software documentation and testing."
  },
  {
    "objectID": "posts/plots.html#overflow-content",
    "href": "posts/plots.html#overflow-content",
    "title": "An Idle Mind",
    "section": "Overflow Content",
    "text": "Overflow Content\nThere are many options for overflow, either left/right\n\n```{r}\n#| column: body-outset-right\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: screen-inset-right\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: page-inset-left\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: screen-left\n#| fig-width: 10\nmass_flipper\n```"
  },
  {
    "objectID": "posts/posts.html",
    "href": "posts/posts.html",
    "title": "Posts",
    "section": "",
    "text": "Autocomplete\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBootswatch Themed QMD\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nBoston Terrier\n\n\nCopied verbatim from Wikipedia, the free encyclopedia\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCallout markdown syntax\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCallout markdown syntax\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDELETE THIS SECTION WHEN COMPLETED\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nDirectory\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nExample Lightbox Document\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure layout, ncol\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFont Awesome Quarto Extension\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHousing Prices\n\n\n\n\n\n\n\n\n\n\n\n\nMe, copying from Mine Çetinkaya-Rundel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoad libraries\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake these columns appear in order\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOverview of using gtsummary\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nPenguin Report\n\n\nwith revealjs\n\n\n\n\n\n\n\n\n\nJan 3, 2023\n\n\nTom Mock\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPenguins\n\n\n\n\n\n\n\n\n\n\n\n\nJul 13, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nPenguins Distilled\n\n\n\n\n\nA great new article on Penguins\n\n\n\n\n\n\nInvalid Date\n\n\nTom Mock\n\n\n\n\n\n\n  \n\n\n\n\nSubfigures\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis is a dummy blog post\n\n\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\n\nJun 1, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nVisual Editor for Quarto\n\n\n\n\n\n\n\n\n\n\n\n\nDec 31, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat about formatting?\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngtsummary + R Markdown\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreactable example\n\n\n\n\n\n\n\n\n\n\n\n\nTom Mock\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/revealjs-penguins.html#section",
    "href": "posts/revealjs-penguins.html#section",
    "title": "Penguin Report",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth."
  },
  {
    "objectID": "posts/revealjs-penguins.html#literate-programming",
    "href": "posts/revealjs-penguins.html#literate-programming",
    "title": "Penguin Report",
    "section": "Literate Programming",
    "text": "Literate Programming\nPer Donald Knuth\n\nA programming paradigm introduced by Donald Knuth in which a computer program is given an explanation of its logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which compilable source code can be generated."
  },
  {
    "objectID": "posts/revealjs-penguins.html#specific-statistics",
    "href": "posts/revealjs-penguins.html#specific-statistics",
    "title": "Penguin Report",
    "section": "Specific statistics",
    "text": "Specific statistics\n\npenguins %>% \n  group_by(species, sex) %>% \n  summarize(\n    n = n(), \n    weight = mean(body_mass_g, na.rm = TRUE),\n    flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n    ) %>% \n  arrange(desc(weight))\n\n# A tibble: 8 × 5\n# Groups:   species [3]\n  species   sex        n weight flipper_length\n  <fct>     <fct>  <int>  <dbl>          <dbl>\n1 Gentoo    male      61  5485.           222.\n2 Gentoo    female    58  4680.           213.\n3 Gentoo    <NA>       5  4588.           216.\n4 Adelie    male      73  4043.           192.\n5 Chinstrap male      34  3939.           200.\n6 Adelie    <NA>       6  3540            186.\n7 Chinstrap female    34  3527.           192.\n8 Adelie    female    73  3369.           188."
  },
  {
    "objectID": "posts/revealjs-penguins.html#cleanup-the-data",
    "href": "posts/revealjs-penguins.html#cleanup-the-data",
    "title": "Penguin Report",
    "section": "Cleanup the data",
    "text": "Cleanup the data\nIf you noticed above, there was some NA or missing data. We can remove those rows for now.\n\npenguins_clean <- penguins %>% \n  na.omit() %>% \n  mutate(species_num = as.numeric(species))"
  },
  {
    "objectID": "posts/revealjs-penguins.html#plot-section",
    "href": "posts/revealjs-penguins.html#plot-section",
    "title": "Penguin Report",
    "section": "Plot Section",
    "text": "Plot Section\nLet’s move on to some plots, for the overall distributions and for just the Adelie penguins. The overall distribution of the data by species shows some overlap in body weight for Adelie/Chinstrap, but more of a separation for the Gentoo penguins."
  },
  {
    "objectID": "posts/revealjs-penguins.html#distribution",
    "href": "posts/revealjs-penguins.html#distribution",
    "title": "Penguin Report",
    "section": "Distribution",
    "text": "Distribution\n\npenguins %>% \n  ggplot(aes(body_mass_g, fill = species)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Penguin Bins\")"
  },
  {
    "objectID": "posts/revealjs-penguins.html#lm-scatter-plot",
    "href": "posts/revealjs-penguins.html#lm-scatter-plot",
    "title": "Penguin Report",
    "section": "LM + Scatter Plot",
    "text": "LM + Scatter Plot\n\npenguin_size_plot <- penguins_clean %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = species)) + \n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  geom_point(size = 2, alpha = 0.5) +\n  labs(x = \"Mass (g)\", y = \"Flipper Length (mm)\") +\n  geom_smooth(aes(group = \"none\"), method = \"lm\")\n\npenguin_size_plot"
  },
  {
    "objectID": "posts/revealjs-penguins.html#modeling-section",
    "href": "posts/revealjs-penguins.html#modeling-section",
    "title": "Penguin Report",
    "section": "Modeling section",
    "text": "Modeling section\nMoving on to some basic modeling we can see if what kind of relationships we observe in the data. Note that I’m really not following any plan, just indicating how you can fit some different models all at once with dplyr + broom."
  },
  {
    "objectID": "posts/revealjs-penguins.html#section-1",
    "href": "posts/revealjs-penguins.html#section-1",
    "title": "Penguin Report",
    "section": "",
    "text": "model_inputs <- tibble(\n  model_form = c(\n    list(flipper_length_mm ~ body_mass_g),\n    list(species_num ~ bill_length_mm + body_mass_g + sex),\n    list(flipper_length_mm ~ bill_length_mm + species)\n    ),\n  data = list(penguins_clean)\n) \n\nmodel_metrics <- model_inputs %>% \n  rowwise(model_form, data) %>% \n  summarize(lm = list(lm(model_form, data = data)), .groups = \"drop\") %>% \n  rowwise(model_form, lm, data) %>% \n  summarise(broom::glance(lm), .groups = \"drop\")"
  },
  {
    "objectID": "posts/revealjs-penguins.html#section-2",
    "href": "posts/revealjs-penguins.html#section-2",
    "title": "Penguin Report",
    "section": "",
    "text": "model_metrics %>% \n  select(model_form, r.squared:p.value) %>% \n  mutate(model_form = as.character(model_form)) %>% \n  gt::gt() %>% \n  gt::fmt_number(r.squared:statistic) %>% \n  gt::fmt_scientific(p.value) %>% \n  gt::cols_width(\n    model_form ~ px(150)\n  )\n\n\n\n\n\n  \n    \n    \n    \n    \n    \n    \n  \n  \n  \n    \n      model_form\n      r.squared\n      adj.r.squared\n      sigma\n      statistic\n      p.value\n    \n  \n  \n    flipper_length_mm ~ body_mass_g\n0.76\n0.76\n6.85\n1,060.30\n3.13 × 10−105\n    species_num ~ bill_length_mm + body_mass_g + sex\n0.84\n0.84\n0.36\n583.59\n2.45 × 10−131\n    flipper_length_mm ~ bill_length_mm + species\n0.83\n0.83\n5.83\n529.22\n1.66 × 10−125"
  },
  {
    "objectID": "posts/sample-post-template.html",
    "href": "posts/sample-post-template.html",
    "title": "This is a dummy blog post",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nCodepreds_lm %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nCodeglm.mod <- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds <- dat %>% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit > 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?\n\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/stat-html.html",
    "href": "posts/stat-html.html",
    "title": "gtsummary + R Markdown",
    "section": "",
    "text": "library(gtsummary)\nlibrary(tidyverse)\nlibrary(survival)"
  },
  {
    "objectID": "posts/stat-html.html#gtsummary-tables",
    "href": "posts/stat-html.html#gtsummary-tables",
    "title": "gtsummary + R Markdown",
    "section": "gtsummary tables",
    "text": "gtsummary tables\nTables created with {gtsummary} can be integrated into R markdown documents. The {gtsummary} package was written to be a companion to the {gt} package from RStudio, and {gtsummary} tables are printed using {gt} when possible. Currently, {gt} supports HTML output, with LaTeX and RTF planned for the future.\n\npatient_characteristics <-\n  trial %>%\n  select(trt, age, grade, response) %>%\n  tbl_summary(by = trt)  \npatient_characteristics\n\n\n\n\n\n\nCharacteristic\n      \nDrug A, N = 981\n\n      \nDrug B, N = 1021\n\n    \n\n\nAge\n46 (37, 59)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n\n1 Median (IQR); n (%)\n    \n\n\n\n\nWith HTML output, you can include complex tables with footnotes, indentation, and spanning table headers.\n\n# Side-by-side Regression Models\n# logistic regression model\nt1 <-\n  glm(response ~ trt + grade + age, trial, family = binomial) %>%\n  tbl_regression(exponentiate = TRUE)\n# time to death Cox model\nt2 <-\n  coxph(Surv(ttdeath, death) ~ trt + grade + age, trial) %>%\n  tbl_regression(exponentiate = TRUE)\n\n# printing merged table\ntbl_merge(\n  tbls = list(t1, t2),\n  tab_spanner = c(\"**Tumor Response**\", \"**Time to Death**\")\n)\n\n\n\n\n\n\n\nCharacteristic\n      \n        Tumor Response\n      \n      \n        Time to Death\n      \n    \n\n\nOR1\n\n      \n95% CI1\n\n      p-value\n      \nHR1\n\n      \n95% CI1\n\n      p-value\n    \n\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n\n\n    Drug A\n—\n—\n\n—\n—\n\n\n\n    Drug B\n1.13\n0.60, 2.13\n0.7\n1.30\n0.88, 1.92\n0.2\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n—\n—\n\n—\n—\n\n\n\n    II\n0.85\n0.39, 1.85\n0.7\n1.21\n0.73, 1.99\n0.5\n\n\n    III\n1.01\n0.47, 2.15\n>0.9\n1.79\n1.12, 2.86\n0.014\n\n\nAge\n1.02\n1.00, 1.04\n0.10\n1.01\n0.99, 1.02\n0.3\n\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "posts/stat-html.html#inline-reporting",
    "href": "posts/stat-html.html#inline-reporting",
    "title": "gtsummary + R Markdown",
    "section": "inline reporting",
    "text": "inline reporting\nAny number/statistic from a {gtsummary} table can be reported inline in a R markdown document using the inline_text() function. See example below:\n\nAmong patients who received Drug A, 31 (32%) had grade III tumors.\n\nFor detailed examples using functions from {gtsummary}, visit the {gtsummary} website."
  },
  {
    "objectID": "posts/visual-editor.html",
    "href": "posts/visual-editor.html",
    "title": "Visual Editor for Quarto",
    "section": "",
    "text": "RStudio 2022.07.1 comes with support for the Visual Mode of editing Quarto and other markdown-based files!\nThis is a WYSIWYM editor, meaning:\n\nWYSIWYM is an acronym that stands for What you see is what you mean. This was positioned to not be confused with WYSIWYG (what you see is what you get). The idea behind WYSIWYG is to display text on screen in much the exact same way as they will appear when printed on paper.\n\nWYSIWYM means that it can be translated differently, (where) the same content can lead to different output formats .\n\nThe Visual Markdown mode in RStudio allows for editing in plain text or visual mode, along with a visual representation of what it will actually look like while maintaining the ability to output to HTML or PDF.\nFull guide guide from the RStudio dev team that covers all the major topics and sub topics of the new features.\n\n\nOS\nDownload\nSize\nSHA-256\n\n\n\nWindows 10/11\n\nRStudio-2022.07.1-554.exe(opens in a new tab)\n\n190.14 MB\n5ab6215b\n\n\nmacOS 10.15+\n\nRStudio-2022.07.1-554.dmg(opens in a new tab)\n\n221.04 MB\n7b1a2285\n\n\nUbuntu 18+/Debian 10+\n\nrstudio-2022.07.1-554-amd64.deb(opens in a new tab)\n\n132.91 MB\n74b9e751\n\n\nUbuntu 22\n\nrstudio-2022.07.1-554-amd64.deb(opens in a new tab)\n\n145.33 MB\n92f2ab75\n\n\nFedora 19/Red Hat 7\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n103.29 MB\n0fc15d16\n\n\nFedora 34/Red Hat 8\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n149.77 MB\n0c4ef334\n\n\nOpenSUSE 15\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n133.76 MB\n45f277d0\n\n\n\n\n\nMarkdown documents can be edited in either source or visual button at the top-right of the document toolbar (or alternatively the ⌘ + ⇧ + F4 keyboard shortcut):\n\n\nPlease see long section of the guide.\n\nIf you have a workflow that involves editing in both visual and source mode, you may want to ensure that the same markdown is written no matter which mode edits originate from. You can accomplish this using the canonical option. For example:\n---\ntitle: \"My Document\"\neditor_options:\n  markdown:\n    wrap: 72\n    references: \n      location: block\n    canonical: true\n---\n\nThe editor toolbar includes buttons for the most commonly used formatting commands:\n\nAdditional commands are available on the Format, Insert, and Table menus:\n\n\n\n\n\n\n\n\n\n\n\n\nCommand\nKeyboard Shortcut\nMarkdown Shortcut\n\n\n\nBold\n⌘ B\n**bold**\n\n\nItalic\n⌘ I\n*italic*\n\n\nCode\n⌘ D\n`code`\n\n\nLink\n⌘ K\n<href>\n\n\nHeading 1\n⌥⌘ 1\n#\n\n\nHeading 2\n⌥⌘ 2\n##\n\n\nHeading 3\n⌥⌘ 3\n###\n\n\nR Code Chunk\n⌥⌘ I\n```{r}\n\n\n\nYou can also use the catch-all ⌘/ shortcut to insert just about anything. Just execute the shortcut then type what you want to insert. For example:\nUse the bullet\n\nOutput\n\nOr numbered\n\nNumber list!\n\nHere’s a link - how to turn into an image?\n\nEXAMPLE LINK: https://rstudio.github.io/visual-markdown-editing/images/visual-editing-omni-list.png"
  },
  {
    "objectID": "posts/visual-editor.html#equations",
    "href": "posts/visual-editor.html#equations",
    "title": "Visual Editor for Quarto",
    "section": "Equations",
    "text": "Equations\nLaTeX equations are authored using standard Pandoc markdown syntax (the editor will automatically recognize the syntax and treat the equation as math). When you aren’t directly editing an equation it will appear as rendered math:\n\\[\nP(E) = {n \\choose k} p^k (2-p)^{n-k}\n\\]\n\nFootnotes\n\nYou can include footnotes using the Insert -> Footnote command (or the ⇧ ⌘ F7 keyboard shortcut). Footnote editing occurs in a pane immediately below the main document:1 <- NOTE THE FOOTMARK"
  },
  {
    "objectID": "posts/visual-editor.html#inserting-citations",
    "href": "posts/visual-editor.html#inserting-citations",
    "title": "Visual Editor for Quarto",
    "section": "Inserting Citations",
    "text": "Inserting Citations\nYou insert citations by either using the Insert -> Citation command or by using markdown syntax directly (e.g. [@cite]).\nCitations go inside square brackets and are separated by semicolons. Each citation must have a key, composed of ‘@’ + the citation identifier from the database, and may optionally have a prefix, a locator, and a suffix. The citation key must begin with a letter, digit, or _, and may contain alphanumerics, _, and internal punctuation characters (:.#$%&-+?<>~/). Here are some examples:\n\n(Rottman-Sagebiel et al. 2018)\nDEMO OF CITATION WITH INSERT"
  },
  {
    "objectID": "posts/visual-editor.html#embedded-code",
    "href": "posts/visual-editor.html#embedded-code",
    "title": "Visual Editor for Quarto",
    "section": "Embedded Code",
    "text": "Embedded Code\nSource code which you include in an Quarto document can either by for display only or can be executed by knitr as part of rendering. Code can furthermore be either inline or block (e.g. an Rmd code chunk).\nDisplaying Code\nTo display but not execute code, either use the Insert -> Code Block menu item, or start a new line and type either:\n\n``` (for a plain code block); or\n```<lang> (where <lang> is a language) for a code block with syntax highlighting.\n\nThen press the Enter key. To display code inline, simply surround text with backticks (`code`), or use the Format -> Code menu item.\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %>% \n  ggplot(aes(x = body_weight_g, y = flipper_length_mm, color = species)) +\n  geom_point()\nCode Chunks\nTo insert an executable code chunk, use the Insert -> Code Chunk menu item, or start a new line and type:\n```{r}\nThen press the Enter key. Note that r could be another language supported by knitr (e.g. python or sql) and you can also include a chunk label and other chunk options.\nTo include inline R code, you just create normal inline code (e.g. by using backticks or the ⌘ D shortcut) but preface it with r. For example, this inline code will be executed by knitr: 2023-01-03. Note that when the code displays in visual mode it won’t have the backticks (but they will still appear in source mode).\n\npenguin_plot <- penguins %>% \n  na.omit() %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_point(aes(color = species)) +\n  labs(title = \"Important Penguins\") +\n  geom_smooth(method = \"lm\", color = \"black\")\n\npenguin_plot\n\n\n\n\nR generated Tables\n\nlibrary(gt)\n\npenguins %>% \n  na.omit() %>% \n  select(species, bill_length_mm, body_mass_g) %>% \n  head() %>% \n  gt()\n\n\n\n\n\n\nspecies\n      bill_length_mm\n      body_mass_g\n    \n\n\nAdelie\n39.1\n3750\n\n\nAdelie\n39.5\n3800\n\n\nAdelie\n40.3\n3250\n\n\nAdelie\n36.7\n3450\n\n\nAdelie\n39.3\n3650\n\n\nAdelie\n38.9\n3625\n\n\n\n\n\n\n\nlibrary(reactable)\npenguins %>% \n  filter(species == \"Adelie\") %>% \n  na.omit() %>% \n  select(species, bill_length_mm, body_mass_g) %>% \n  reactable(defaultPageSize = 5)"
  },
  {
    "objectID": "projects/projects.html",
    "href": "projects/projects.html",
    "title": "Projects",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "An Idle Mind",
    "section": "",
    "text": "Preparatory Work to moving my full website to Quarto!"
  }
]