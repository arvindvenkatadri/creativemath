[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Applied Metaphorics",
    "section": "",
    "text": "Hi, I‚Äôm Arvind Venkatadri.\nI‚Äôm an Adjunct Professor at DSU, Bangalore, INDIA, with a passion for R, data visualization, and Creative Thinking and Problem Solving with TRIZ. On this blog, I share and teach what I learn.\nTo get started, you can check out my courses. You can find me on Twitter or GitHub and YouTube. Feel free to reach out to me via mail !"
  },
  {
    "objectID": "content/courses/Data-Analytics/index.html",
    "href": "content/courses/Data-Analytics/index.html",
    "title": "Data Analytics",
    "section": "",
    "text": "Order By\nDefault\n\n          Date - Oldest\n        \n\n          Date - Newest\n        \n\n          Title\n        \n\n          Author\n        \n\n    \n      \n      \n\n\n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\nReading Time\n\n\n\n\n\n¬†\n\n\n\n\n\nDistributions Presentation\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/courses/Data-Analytics/Modules/Distributions/Distributions-Presentation.html#slide-1",
    "href": "content/courses/Data-Analytics/Modules/Distributions/Distributions-Presentation.html#slide-1",
    "title": "Distributions Presentation",
    "section": "Slide 1",
    "text": "Slide 1"
  },
  {
    "objectID": "content/courses/Data-Analytics/Modules/Distributions/Distributions-Presentation.html#slide-2",
    "href": "content/courses/Data-Analytics/Modules/Distributions/Distributions-Presentation.html#slide-2",
    "title": "Distributions Presentation",
    "section": "Slide 2",
    "text": "Slide 2"
  },
  {
    "objectID": "content/courses/R-for-Artists/index.html",
    "href": "content/courses/R-for-Artists/index.html",
    "title": "R for Artists",
    "section": "",
    "text": "Order By\nDefault\n\n          Date - Oldest\n        \n\n          Date - Newest\n        \n\n          Title\n        \n\n          Author\n        \n\n    \n      \n      \n\n\n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\nReading Time\n\n\n\n\n\n\n\n\nNov 1, 2021\n\n\nüï∂ Science, Human Experience, Experiments, and Data\n\n\nArvind Venkatadri\n\n\n20 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-2: Down the R-abbit Hole‚Ä¶\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-3: Drink Me!\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-4: I say what I mean and I mean what I say\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-5: Twas brillig, and the slithy toves‚Ä¶\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-6: These Roses have been Painted !!\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-7: The Lobster Quadrille\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-9: If you please sir‚Ä¶which way to the Secret Garden?\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nJun 6, 2022\n\n\nLab-10: An Invitation from the Queen‚Ä¶to play Croquet\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-11: The Queen of Hearts, She Made some Tarts\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-12: Time is a Him!!\n\n\nArvind Venkatadri\n\n\n6 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-14: You‚Äôre are Nothing but a Pack of Cards!!\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n¬†\n\n\n\n\n\nThe Grammar of Diagrams\n\n\nArvind Venkatadri\n\n\n10 min\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#fa-envelope-titlean-envelope-where-does-data-come-from",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#fa-envelope-titlean-envelope-where-does-data-come-from",
    "title": "üï∂ Science, Human Experience, Experiments, and Data",
    "section": "\n Where does Data come from?",
    "text": "Where does Data come from?\nWe will need to form a basic understanding of basic scientific enterprise. Let us look at the slides."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#fa-chart-simple-why-visualize",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#fa-chart-simple-why-visualize",
    "title": "üï∂ Science, Human Experience, Experiments, and Data",
    "section": "\n Why Visualize?",
    "text": "Why Visualize?\n\nWe can digest information more easily when it is pictorial\nOur Working Memories are both short-term and limited in capacity. So a picture abstracts the details and presents us with an overall summary, an insight, or a story that is both easy to recall and easy on retention.\n\nData Viz includes shapes that carry strong cultural memories and impressions for us. These cultural memories help us to use data viz in a universal way to appeal to a wide variety of audiences. (Do humans have a gene for geometry?)\nIt helps sift facts and mere statements: for example:\n\n\n\nRape Capital\n\n\n\n\nWhat does Data Reveal?"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#iconify-mdi-category-plus-what-are-data-types",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#iconify-mdi-category-plus-what-are-data-types",
    "title": "üï∂ Science, Human Experience, Experiments, and Data",
    "section": "\n What are Data Types?",
    "text": "What are Data Types?\n\n\n\nIn more detail:"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#sec-data-types",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#sec-data-types",
    "title": "üï∂ Science, Human Experience, Experiments, and Data",
    "section": "\n How do we Spot Data Variable Types?",
    "text": "How do we Spot Data Variable Types?\nBy asking questions!\n\n\nQuestions and Types of Variables\n\n\n\n\n\n\n\n\nPronoun\nAnswer\nVariable / Scale\nExample\nWhat Operations ?\n\n\n\nWhat, Who, Where, Whom, Which\nName, Place, Animal, Thing\nQualitative or Nominal\n\nName\n\nCount of Cases\nMode\n\n\n\nHow, What Kind, What Sort\nA Manner / Method / Type or Attribute from a List, with list items in some ‚Äúorder‚Äù ( e.g good, better, improved, best‚Ä¶)\nQualitative or Ordinal\n\n\nSocioeconomic status,\nEducation,\nIncome,\nSatisfaction\n\n\nMedian\nPercentiles\n\n\n\nHow Many, How much, How Heavy , How few, Seldom, Often, When\n\nQuantities with Scale\nDi fferences are meaningful, but not products or ratios\n\nQ uantitative or  Interval**\n\npH\nSAT Score (200-800)\nCredit Score (300-850)\nYear of Starting College\n\n\nMean\n\nStandard\nDeviation\n\n\n\n\nHow Many, How much, How Heavy , How few, Seldom, Often, When\n\nQuantities, with Scale and a Zero Value.\nDifferences and Ratios /Products are meaningful. (e.g Weight )\n\nQ uantitative or Ratio\n\n\nWeight, Length, Height,\nTemperature, Enzyme Activity, Dosage Amount, Reaction Rate,\nC oncentration, Pulse Rate, Survival Time\n\n\nCorrelation\nCoefficient of Variation\n\n\n\n\n\nAs you go from Qualitative to Quantitative data types in the table, I hope you can detect a movement from fuzzy groups/categories to more and more crystallized numbers.\n\n\nType of Variables\n\n\nEach variable/scale can be subjected to the operations of the previous group. In the words of S.S. Stevens\n\nthe basic operations needed to create each type of scale is cumulative: to an operation listed opposite a particular scale must be added all those operations preceding it."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#sec-data-viz",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#sec-data-viz",
    "title": "üï∂ Science, Human Experience, Experiments, and Data",
    "section": "What Are the Parts of a Data Viz?",
    "text": "What Are the Parts of a Data Viz?"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#how-to-pick-a-data-viz",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#how-to-pick-a-data-viz",
    "title": "üï∂ Science, Human Experience, Experiments, and Data",
    "section": "How to pick a Data Viz?",
    "text": "How to pick a Data Viz?\nMost Data Visualizations use one or more of the following geometric attributes or aesthetics. These geometric aesthetics are used to represent qualitative or quantitative variables from your data.\n\n\nCommon Geometric Aesthetics in Charts\n\n\nWhat does this mean? We can think of simple visualizations as combinations of these aesthetics. Some examples:\n\n\nGeometries , Combinations, and Graphs\n\n\n\n\n\n\nAesthetic #1\nAesthetic #2\nShape\n\n\n\nPosition X = Quant Variable\nPosition Y = Quant Variable\nPoints/Circles with Fixed Size\n\n\nPosition X = Qual Variable\nPosition Y = Count of Qual Variable\nColumns\n\n\nPosition X = Qual Variable\nPosition Y = Qual Variable\nRectangles, with area proportional to joint(X,Y) count\n\n\n\nPosition X = Qual Variable\nPosition Y = Rank-Ordered Quant Variable\nBox + Whisker, Box length proportional to Inter-Quartile Range, whisker-length proportional to upper and lower quartile resp.\n\n\nPosition X = Quant Variable\nPosition Y = Quant Variable + Qual Variable\n\nLine and Area\nColour for Area"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html",
    "title": "Lab-10: An Invitation from the Queen‚Ä¶to play Croquet",
    "section": "",
    "text": "## Slides and Tutorials"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#introduction",
    "title": "Lab-10: An Invitation from the Queen‚Ä¶to play Croquet",
    "section": "Introduction",
    "text": "Introduction\nNetwork Diagrams are important in data visualization to bring out relationships between diverse entities. They are used in ecology, biology, transportation, and even history!\nAnd hey, whom did Jon Snow marry?"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#references",
    "title": "Lab-10: An Invitation from the Queen‚Ä¶to play Croquet",
    "section": "References",
    "text": "References\n\nMichael Gastner, Data Analysis and Visualisation with R, Chapter 23: Networks\nDavid Schoch, Network Visualizations in R using ggraph and graphlayouts\nKonrad M. Lawson, Toilers and Gangsters:Simple Network Visualization with R for Historians"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html",
    "title": "The Grammar of Diagrams",
    "section": "",
    "text": "There are many presentation and drawing tools out there. And these allow the user full control over the diagram so generally result in prettier diagrams that can convey more information to the audience at that point in time.\nBut that point in time passes, and pretty pictures can quickly become out-of-date and, ironically, misinforming if they don‚Äôt match the reality of the system they are describing. This is especially so if one team is drawing the pretty pictures, and another team is writing the software/implementing the system.\nHaving diagrams as code that can live beside the system design/code, that the stakeholders are equally comfortable editing and viewing,reduces the gap i.e.¬†‚ÄúWhere system diagrams meet system reality‚Äù.\nWe will ‚Äúexplore‚Äù two packages to do this: DiagrammeR and nomnoml. Each of these follows a specific grammar so that sets of ‚Äúsentences‚Äù will morph into very different kinds of diagrams."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram",
    "text": "Sequence Diagram\nLook at the code below: What do you think it represents?\n\nCodeDiagrammeR(\"\nsequenceDiagram\nArvind ->> Anamika: Why are you late today?\nAnamika ->> Anamika: Ulp...\nAnamika ->> Arvind: I am sorry... <br> may I come in please?\n\nArvind ->> Komal: And you? What kept you?\nKomal ->> Anamika: (Quietly) He's having a bad day, dude...\nAnamika ->> Komal: (Whisper) Boomer...\n\")\n\n\n\n\n\nThis is a simple Sequence Diagram! Shows a strictly imaginary exchange between a pair of students and an unknown Faculty Member.\nLet us now see how we can embellish this kind of diagram. Can we have a Garden of Forking Paths?\n\nCodeDiagrammeR(\"\n  graph LR\n    A-->B\n    A-->C\n    C-->E\n    B-->D\n    C-->D\n    D-->F\n    E-->F\n\")\n\n\n\n\n\n\nCodeDiagrammeR(\"\n        sequenceDiagram\n        \n        alt Anamika is always punctual\n        Arvind ->> Anamika: Why haven't you put up your Daily Reflection?\n        Anamika ->> Anamika: Ulp...\n        Note right of Anamika : I have had it today..\n        Anamika ->> Arvind: I am sorry... \n        Arvind ->> Anamika: Ok write it today\n        \n        else Anamika is usually tardy\n        Arvind ->> Anamika: Why haven't you put up your Daily Reflection?\n        Anamika ->> Anamika: Ulp...\n        Anamika ->> Arvind: I am sorry... \n        Arvind ->> Anamika: This is not acceptable and will reflect in your grade\n        end\n        \n        Arvind ->> Komal: And you? What kept you?\n        Komal ->> Anamika: (Quietly) He's having a bad day, dude...\n        Anamika ->> Komal: (Whisper) Boomer...\n        Note over Anamika,Komal: Giggle...\n\")\n\n\n\n\n\n\nFrom here: https://cyberhelp.sesync.org/blog/visualization-with-diagrammeR.html\n\nCodegrViz(\"digraph{\n\n      graph[rankdir = LR]\n  \n      node[shape = rectangle, style = filled]\n  \n      node[fillcolor = Coral, margin = 0.2]\n      A[label = 'Figure 1: Map']\n      B[label = 'Figure 2: Metrics']\n  \n      node[fillcolor = Cyan, margin = 0.2]\n      C[label = 'Figures.Rmd']\n  \n      node[fillcolor = Violet, margin = 0.2]\n      D[label = 'Analysis_1.R']\n      E[label = 'Analysis_2.R']\n  \n      subgraph cluster_0 {\n        graph[shape = rectangle]\n        style = rounded\n        bgcolor = Gold\n    \n        label = 'Data Source 1'\n        node[shape = rectangle, fillcolor = LemonChiffon, margin = 0.25]\n        F[label = 'my_dataframe_1.csv']\n        G[label = 'my_dataframe_2.csv']\n      }\n  \n      subgraph cluster_1 {\n         graph[shape = rectangle]\n         style = rounded\n         bgcolor = Gold\n    \n         label = 'Data Source 2'\n         node[shape = rectangle, fillcolor = LemonChiffon, margin = 0.25]\n         H[label = 'my_dataframe_3.csv']\n         I[label = 'my_dataframe_4.csv']\n      }\n  \n      edge[color = black, arrowhead = vee, arrowsize = 1.25]\n      C -> {A B}\n      D -> C\n      E -> C\n      F -> D\n      G -> D\n      H -> E\n      I -> E\n      \n      }\")\n\n\n\n\n\n\nCodemermaid(\"\n        graph BT\n        A((Salinity))\n        A-->B(Barnacles)\n        B-.->|-0.10|B1{Mussels}\n        A-- 0.30 -->B1\n\n        C[Air Temp]\n        C-->B\n        C-.->E(Macroalgae)\n        E-->B1\n        C== 0.89 ==>B1\n\n        style A fill:#FFF, stroke:#333, stroke-width:4px\n        style B fill:#9AA, stroke:#9AA, stroke-width:2px\n        style B1 fill:#879, stroke:#333, stroke-width:1px\n        style C fill:#ADF, stroke:#333, stroke-width:2px\n        style E fill:#9C2, stroke:#9C2, stroke-width:2px\n\n        \")\n\n\n\n\n\n\nCodeDiagrammeR(\"\nsequenceDiagram\n  Arvind ->>ticket seller: ask ticket\n  ticket seller->>database: seats\n  alt tickets available\n    database->>ticket seller: ok\n    ticket seller->>customer: confirm\n    Arvind ->>ticket seller: ok\n    ticket seller->>database: book a seat\n    ticket seller->>printer: print ticket\n  else sold out\n    database->>ticket seller: none left\n    ticket seller->>customer: sorry\n  end\n\")\n\n\n\n\n\n\nCodeDiagrammeR(\n\"graph TB;\nA(Rounded)-->B[Squared];\nB-->C{A Decision};\nC-->D[Square One];\nC-->E[Square Two];\n\n%% Now styling these blocks\nstyle A fill:#E5E25F;  \nstyle B fill:#87AB51; \nstyle C fill:#3C8937;\nstyle D fill:#23772C;  \nstyle E fill:#B6E6E6;\n\"\n)\n\n\n\n\n\n\nCode  grViz(\"\ndigraph boxes_and_circles {\n\n  # a 'graph' statement\n  graph [overlap = true, fontsize = 10,forcelabels = true]\n\n  # several 'node' statements\n  node [shape = box,fontname = Helvetica, color = red, style = filled]\n  A[label = 'This is \\\\n an internal \\\\n label', xlabel = 'This is \\\\nan external \\\\nlabel']; B; C; D; E; F\n\n  node [shape = circle, fixedsize = true, color = palegreen, width = 0.9] // sets as circles\n  1; 2; 3; 4; 5; 6; 7; 8\n\n  # several 'edge' statements\n  A->{1,2,3,4} B->2 B->3 B->4 C->A\n  1->D E->A 2->4 1->5 1->F\n  E->6 4->6 5->7 6->7 3->8 3->1\n}\n\")"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-2",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-2",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram-2",
    "text": "Sequence Diagram-2"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-3",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-3",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram 3",
    "text": "Sequence Diagram 3"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#mindmap",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#mindmap",
    "title": "The Grammar of Diagrams",
    "section": "Mindmap",
    "text": "Mindmap"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#gantt-chart",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#gantt-chart",
    "title": "The Grammar of Diagrams",
    "section": "Gantt Chart",
    "text": "Gantt Chart"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#flow-chart",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#flow-chart",
    "title": "The Grammar of Diagrams",
    "section": "Flow chart",
    "text": "Flow chart"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#some-definitions-on-the-grammar-of-shapes-in-nomnoml",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#some-definitions-on-the-grammar-of-shapes-in-nomnoml",
    "title": "The Grammar of Diagrams",
    "section": "Some definitions on the ‚Äúgrammar of shapes‚Äù in nomnoml\n",
    "text": "Some definitions on the ‚Äúgrammar of shapes‚Äù in nomnoml\n\n\nAssociation Types: Connectors between blocks( i.e.¬†Classifiers)\nClassifier Types: Kinds of blocks.\nDirective Types: Directives change the nature of the diagram rendered, by affective parameters like colour, direction and margins. ( Ha! VC people!!)\n\nCSS colours https://www.w3schools.com/cssref/css_colors.asp Only these colours are permitted, so use either the names or these specific colour hash codes. Any general hash code will not render.\n\nCode//association-1\n[a] - [b] \n\n//association-2\n[b] -> [c] \n\n//association_3\n[c] <-> [a]\n\n//dependency-1\n[a] <-->[d]\n\n//dependency-2\n#.ell: visual=ellipse fill=#fbfb09 bold\n#.arvind: visual=rhomb fill=#ff2234 bold\n[<ell>e]-->[a]\n//generalization-1\n[c]-:>[<arvind>k]\n\n//implementation --:>\n[k]--:>[d]\n\n\n\n\n\n\nCode//composition +-\n[a]+-[b]\n//composition +->\n[b]-+[c]\n//aggregation o-\n[c]o->[d]\n//aggregation o->\n[d]o->[a]\n//note --\n[d]--[everything happens;here]\n//hidden -/-\n[d]-/-[f]\n////////////////////////\n//weightless edge _>\n//[k]_>[d] //not working\n//weightless dashed__\n//[d]__[j] //not working\n\n\n\n\n\nClassifier Types\nThese are different kinds of blocks.\n\nCode[class]->[<abstract> abstract]\n[<abstract> abstract]-:>[<instance> instance]\n[<instance> instance]-:>[<note> note]\n[<note> note]-->[<reference> reference]\n\n\n\n\n\n\nCode[<package> package|components]-->[<frame> frame|]\n[<database> database]-->[<start> start]\n[<end> end]-o>[<state> state]\n\n\n\n\n\n\nCode[<choice> choice]--->[<sync> sync]\n[<input> input]->[<sender> sender]\n[<receiver> receiver]o-[<transceiver> transceiver]\n\n\n\n\n\n\nCode#direction:down\n#background:lightgrey\n#fill: fuchsia; green; purple\n#fillArrows: false\n#font: Courier\n[class]->[<abstract> abstract]\n[<abstract> abstract]-:>[<instance> instance]\n[<instance> instance]-:>[<note> note]\n[<note> note]-->[<reference> reference]\n\n\n\n\n\n\nCode#font: CenturySchoolbook\n#fill: lightyellow\n#stroke: green\n\n[<actor> actor]---[<usecase> usecase]\n[<usecase> usecase]<-->[<label> label]\n[<usecase> usecase]-/-[<hidden> hidden]\n\n\n\n\n\n\nCode[<table> table| a | 5 || b | 7]\n\n\n\n\n\n\n\nCode[<table> table| c | 9 ]"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#directives",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#directives",
    "title": "The Grammar of Diagrams",
    "section": "Directives",
    "text": "Directives\nDirectives change the nature of the diagram rendered, by affective parameters like colour, direction and margins."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#custom-classifier-styles",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#custom-classifier-styles",
    "title": "The Grammar of Diagrams",
    "section": "Custom classifier styles",
    "text": "Custom classifier styles\nA directive that starts with ‚Äú.‚Äù define a classifier‚Äôs style. The style is written as a space separated list of modifiers and key/value pairs.\n\nCode#.box: fill=#8f8 dashed\n#.blob: visual=ellipse title=bold\n#.arvind: visual=rhomb title=bold dashed fill=CornFlowerBlue\n[<box> GreenBox]\n[<blob> Blobby]\n[<arvind> Someone]"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#nomnoml-keyvalue-pairs",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#nomnoml-keyvalue-pairs",
    "title": "The Grammar of Diagrams",
    "section": "\nnomnoml Key/value pairs",
    "text": "nomnoml Key/value pairs\n\nfill=(any css color)\nstroke=(any css color)\nalign=center align=left\ndirection=right direction=down\nvisual=actor\nvisual=class\nvisual=database\nvisual=ellipse\nvisual=end\nvisual=frame\nvisual=hidden\nvisual=input\nvisual=none\nvisual=note\nvisual=package\nvisual=receiver\nvisual=rhomb\nvisual=roundrect\nvisual=sender\nvisual=start\nvisual=sync\nvisual=table\nvisual=transceiver"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#text-modifiers",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#text-modifiers",
    "title": "The Grammar of Diagrams",
    "section": "Text modifiers",
    "text": "Text modifiers\nbold center italic left underline\n\nCode# .box: fill=#8f8 dashed\n# .blob: visual=rhomb title=bold fill=#8f8 dashed\n\n[A]-[B]\n[B]--[<usecase>C]\n[C]-[<box> D]\n[B]--[<blob> Jabba;TheHut]\n\n\n\n\n\n\nCode[a] ->[b]\n[b] -:> [c]\n[c]o->[d]\n[d]-/-[e]\n\n\n\n\n\n\nCode#fill: lightgreen; lightblue; lightyellow; grey; white\n\n[<table> table | c | 9 ]\n\n[R | [<table> Packages |\n         Base R |\n         [ <table> tidyverse| ggplot | tidyr | readr |\n             [<table> dplyr|\n                 magrittr | Others]]]]\n\n\n\n\n\n\n\nCode#fill: lightgreen; lightblue; lightyellow; pink; white\n\n[RStudio | [R | [<table> Packages |\n                   Base R | [ tidyverse |\n                               ggplot | tidyr | readr |\n                               [dplyr]--[magrittr]\n                               [dplyr]--[Others]\n                             | tibble\n                             ]\n                 | lubridate | DiagrammeR | Lattice]]]\n\n\n\n\n\n\n\nCode[Linux]+-[Ubuntu]\n[Linux]+-[Mint]\n[Ubuntu]--[Mint]\n[Linux]+-[Rosa Linux]\n[Linux]+-[Mx Linux]\n[Debian]-+[Linux]\n\n\n[Fedora]-+[Linux]\n[Puppy Linux]-+[Linux]\n[Personal Pups]-+[Puppy Linux]"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/index.html#introduction",
    "title": "Lab-11: The Queen of Hearts, She Made some Tarts",
    "section": "Introduction",
    "text": "Introduction\nWe can use R to create complicated diagrams too ! Flow charts, Gantt charts, Org charts‚Ä¶all with R. We will use packages such as nomnoml and DiagrammeR to achieve these ends."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/120-time/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/120-time/index.html#introduction",
    "title": "Lab-12: Time is a Him!!",
    "section": "Introduction",
    "text": "Introduction\nTime Series data are important in data visualization where events have a temporal dimension, such as with finance, transportation, music, telecommunications for example."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/120-time/index.html#creating-a-time-series",
    "href": "content/courses/R-for-Artists/Modules/120-time/index.html#creating-a-time-series",
    "title": "Lab-12: Time is a Him!!",
    "section": "Creating a time series",
    "text": "Creating a time series\nIn this first example, we will use simple ts data, and then do another with a tibble dataset, and then a third example with an tsibble formatted dataset.\n\nts format data\nThere are a few datasets in base R that are in ts format already.\n\nCodeAirPassengers\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n1949 112 118 132 129 121 135 148 148 136 119 104 118\n1950 115 126 141 135 125 149 170 170 158 133 114 140\n1951 145 150 178 163 172 178 199 199 184 162 146 166\n1952 171 180 193 181 183 218 230 242 209 191 172 194\n1953 196 196 236 235 229 243 264 272 237 211 180 201\n1954 204 188 235 227 234 264 302 293 259 229 203 229\n1955 242 233 267 269 270 315 364 347 312 274 237 278\n1956 284 277 317 313 318 374 413 405 355 306 271 306\n1957 315 301 356 348 355 422 465 467 404 347 305 336\n1958 340 318 362 348 363 435 491 505 404 359 310 337\n1959 360 342 406 396 420 472 548 559 463 407 362 405\n1960 417 391 419 461 472 535 622 606 508 461 390 432\n\nCodestr(AirPassengers)\n\n Time-Series [1:144] from 1949 to 1961: 112 118 132 129 121 135 148 148 136 119 ...\n\n\nThis can be easily plotted using base R:\n\nCodeplot(AirPassengers)\n\n\n\n\nLet us take data that is ‚Äútime oriented‚Äù but not in ts format, and convert it to ts: the syntax of ts() is:\nSyntax:  objectName <- ts(data, start, end, frequency)\n\nwhere,\n\n    `data` represents the data vector\n    `start` represents the first observation in time series\n    `end` represents the last observation in time series\n    frequency represents number of observations per unit time. For \n    example, frequency=1 for monthly data.\nWe will pick simple numerical vector data ChickWeight:\n\nCodeChickWeight %>% head()\n\n\n\n  \n\n\nCodeChickWeight_ts <- ts(ChickWeight$weight, frequency = 2)\nplot(ChickWeight_ts)\n\n\n\n\nThe ts format is not recommended for new analysis since it does not permit inclusion of multiple time series in one dataset, nor other categorical variables for grouping etc.\n\ntibble format data\nSome ‚Äútime-oriented‚Äù datasets are available in tibble form. Let us try to plot one, the walmart_sales_weekly dataset from the timetk package:\n\nCodedata(walmart_sales_weekly, package = \"timetk\")\nwalmart_sales_weekly %>% head()\n\n\n\n  \n\n\n\nThis dataset is a tibble with a Date column. Let us plot the data using this column on the time/X-axis:\n\nCodewalmart_sales_weekly %>% \n  # convert Dept number to a **categorical factor**\n  mutate(Dept = forcats::as_factor(Dept)) %>% \n  ggplot(aes(x = Date, y = Weekly_Sales, group = Dept)) + \n  geom_point(aes(colour = Dept)) +\n  geom_line(aes(colour = Dept))\n\n\n\n\n\ntsibble format data\nFor more analysis and forecasting etc., it is useful to convert this tibble into a tsibble:\n\nCodewalmart_tsibble <- as_tsibble(walmart_sales_weekly,\n                         index = Date,\n                         key = c(id, Dept))\nwalmart_tsibble\n\n\n\n  \n\n\n\nThe 7D states the data is weekly. There is a Date column and all the other numerical variables are time-varying quantities. The categorical variables such as id, and Dept allow us to identify separate time series in the data, and these have 7 combinations hence are 7 time series in this data, as indicated.\nLet us plot Weekly_Sales, colouring the time series by Dept:\n\nCodewalmart_tsibble %>% \n  ggplot(aes( x = Date, y = Weekly_Sales, colour = Dept)) + \n           geom_line() + \n           geom_point() + \n           labs(title = \"Weekly Sales by Dept at Walmart\")\n\n\n\nFigure¬†1: Walmart Time Series\n\n\n\n\nThis first plot is that of all series together. There does seem to be an annual variation, which we should investigate later.\nNote the blue trend lines that are automatically plotted in the second graph. This is caused by the argument .smooth = TRUE.\n‚äïWe can also do a quick autoplot that seems to offer less control and is also not interactive.\n\n\n\nCodewalmart_tsibble %>% \n  dplyr::group_by(Dept) %>% \n  autoplot(Weekly_Sales)\n\n`mutate_if()` ignored the following grouping variables:\n‚Ä¢ Column `Dept`"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/120-time/index.html#one-more-example",
    "href": "content/courses/R-for-Artists/Modules/120-time/index.html#one-more-example",
    "title": "Lab-12: Time is a Him!!",
    "section": "One more example",
    "text": "One more example\nOften we have data in table form, that is time-oriented, with a date like column, and we need to convert it into a tsibble for analysis:\n\nCodeprison <- readr::read_csv(\"https://OTexts.com/fpp3/extrafiles/prison_population.csv\")\n\nRows: 3072 Columns: 6\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr  (4): State, Gender, Legal, Indigenous\ndbl  (1): Count\ndate (1): Date\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodeglimpse(prison)\n\nRows: 3,072\nColumns: 6\n$ Date       <date> 2005-03-01, 2005-03-01, 2005-03-01, 2005-03-01, 2005-03-01‚Ä¶\n$ State      <chr> \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"NS‚Ä¶\n$ Gender     <chr> \"Female\", \"Female\", \"Female\", \"Female\", \"Male\", \"Male\", \"Ma‚Ä¶\n$ Legal      <chr> \"Remanded\", \"Remanded\", \"Sentenced\", \"Sentenced\", \"Remanded‚Ä¶\n$ Indigenous <chr> \"ATSI\", \"Non-ATSI\", \"ATSI\", \"Non-ATSI\", \"ATSI\", \"Non-ATSI\",‚Ä¶\n$ Count      <dbl> 0, 2, 0, 5, 7, 58, 5, 101, 51, 131, 145, 323, 355, 1617, 12‚Ä¶\n\n\nWe have a Date column for the time index, and we have unique key variables like State, Gender, Legal and Indigenous. Count is the value that is variable over time. It also appears that the data is quarterly, since mosaic::inspect reports the max_diff in the Date column as \\(92\\). (Run mosaic::inspect(prison) in your Console).\n\nCodeprison_tsibble <- prison %>% \n  mutate(quarter = yearquarter(Date)) %>% \n  select(-Date) %>% # Remove the Date column now that we have quarters\n  as_tsibble(index = quarter, key = c(State, Gender, Legal, Indigenous))\n\nprison_tsibble\n\n\n\n  \n\n\n\n(Here, ATSI stands for Aboriginal or Torres Strait Islander.). We have \\(64\\) time series here, organized quarterly.\nLet us examine the key variables:\n\nCodeprison_tsibble %>% distinct(Indigenous)\n\n\n\n  \n\n\nCodeprison_tsibble %>% distinct(State)\n\n\n\n  \n\n\n\nSo we can plot the time series, faceted by / coloured by State:\n\nCodeprison_tsibble %>% \n  tsibble::index_by() %>% \n  group_by(Indigenous, State) %>% \n  #filter(State == \"NSW\") %>% \n  summarise(Total = sum(Count))  %>%\n  ggplot(aes(x = quarter, y = Total, colour = Indigenous, \n             shape = Indigenous)) + \n  geom_point() +\n  geom_line()  + \n  facet_wrap(~ State)\n\n\n\n\nHmm‚Ä¶looks like New South Wales(NSW) as something different going on compared to the rest of the states in Aus."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/120-time/index.html#decomposing-time-series",
    "href": "content/courses/R-for-Artists/Modules/120-time/index.html#decomposing-time-series",
    "title": "Lab-12: Time is a Him!!",
    "section": "Decomposing Time Series",
    "text": "Decomposing Time Series\nWe can decompose the Weekly_Sales into components representing trends, seasonal events that repeat, and irregular noise. Since each Dept could have a different set of trends, we will do this first for one Dept, say Dept #95:\n\nCodewalmart_decomposed_season <- walmart_tsibble %>% \n  dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n  #\n  # feasts depends upon fabletools.\n  # \n  fabletools::model(\n    season = STL(Weekly_Sales ~ season(window = \"periodic\"))) \n\nwalmart_decomposed_ets <- walmart_tsibble %>% \n  dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n  #\n  # feasts depends upon fabletools.\n  # \n  fabletools::model(\n    ets = ETS(box_cox(Weekly_Sales, 0.3)))\n\nwalmart_decomposed_season %>% fabletools::components()\n\n\n\n  \n\n\nCodewalmart_decomposed_ets %>% fabletools::components()\n\n\n\n  \n\n\nCode# walmart_decomposed_arima <- walmart_tsibble %>% \n#   dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n#     arima = ARIMA(log(Weekly_Sales))\n\n\n\nCodewalmart_decomposed_season %>% \n  components() %>% \n  autoplot() + \n  labs( title = \"Seasonal Variations in Weekly Sales, Dept #95\")\n\n\n\nCodewalmart_decomposed_ets %>% \n  components() %>% \n  autoplot() + \n  labs( title = \"ETS Variations in Weekly Sales, Dept #95\")\n\nWarning: Removed 1 row containing missing values (`geom_line()`)."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/120-time/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/120-time/index.html#references",
    "title": "Lab-12: Time is a Him!!",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/140-website/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/140-website/index.html#introduction",
    "title": "Lab-14: You‚Äôre are Nothing but a Pack of Cards!!",
    "section": "Introduction",
    "text": "Introduction\nLet‚Äôs make a website in RStudio to show off our data viz portfolio, and to share with friends, parents, prospective employers‚Ä¶\nWe will encounter a new package called blogdown and use workflows with github and a free web hosting service called Netlify to create a website where all our RMarkdowns become individual blog posts, complete with Titles, Sections, Text, Diagrams and Links!"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/140-website/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/140-website/index.html#references",
    "title": "Lab-14: You‚Äôre are Nothing but a Pack of Cards!!",
    "section": "References",
    "text": "References\n\nAllison Hill\nSharon Macliss\nYihui Xie"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/20-intro/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/20-intro/index.html#introduction",
    "title": "Lab-2: Down the R-abbit Hole‚Ä¶",
    "section": "Introduction",
    "text": "Introduction\nWelcome!\nLet‚Äôs start our journey to the Garden of Data Visualization, with this terrific presentation by the great ( and sadly late..) Hans Rosling.\nThe best stats you‚Äôve ever seen by Hans Rosling:\n{{% youtube \"hVimVzgtD6w\" %}}\n\nWe will run some boiler-plate R code today! Nothing ( almost! ) to code! We will get used to the tools and words of the trade: R, RStudio, installation, packages, libraries‚Ä¶.\nlinks: @Installation 00-install_name_plot.Rmd\nSlides 00-Installation.Rmd"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/30-rmd/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/30-rmd/index.html#introduction",
    "title": "Lab-3: Drink Me!",
    "section": "Introduction",
    "text": "Introduction\nWe will get acquainted with the RMarkdown format, which allows us to mix text narrative, code, code-developed figures and items from the web in a seamless document.\nThen we can try to create something in the lines of what Hans Rosling did.\nSomething that can:\n- provide a visualization\n- provide insight\n- tell a story\n- is reproducible"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/30-rmd/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/30-rmd/index.html#references",
    "title": "Lab-3: Drink Me!",
    "section": "References:",
    "text": "References:\n\nhttps://ysc-rmarkdown.netlify.app/slides/01-basics.html Nice RMarkdown presentation and ‚Äúcode movies‚Äù !\nhttps://rmarkdown.rstudio.com/index.html\nhttps://www.markdowntutorial.com\nhttps://andrewbtran.github.io/NICAR/2018/workflow/docs/02-rmarkdown.html\nhttps://yihui.name/tinytex/ (install!)\nhttps://github.com/rstudio/cheatsheets/blob/master/rmarkdown-2.0.pdf\nhttps://rmarkdown.rstudio.com/html_document_format.html\nhttps://rmarkdown.rstudio.com/pdf_document_format.html"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/30-rmd/index.html#assignments",
    "href": "content/courses/R-for-Artists/Modules/30-rmd/index.html#assignments",
    "title": "Lab-3: Drink Me!",
    "section": "Assignment(s)",
    "text": "Assignment(s)\n\nComplete the markdowntutorial in [reference 1]\nCreate a fresh RMarkdown document and use as many as possible of the RMarkdown constructs from the Cheatsheet [reference 4]"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/30-rmd/index.html#optional",
    "href": "content/courses/R-for-Artists/Modules/30-rmd/index.html#optional",
    "title": "Lab-3: Drink Me!",
    "section": "Optional",
    "text": "Optional\n\nGo to reference 3 and install tinytex. Try to knit your document into PDF also, using tinytex."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/30-rmd/index.html#fun-stuff",
    "href": "content/courses/R-for-Artists/Modules/30-rmd/index.html#fun-stuff",
    "title": "Lab-3: Drink Me!",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nDesir√©e De Leon, Alison Hill: rstudio4edu: A Handbook for Teaching and Learning with R and RStudio, https://rstudio4edu.github.io/rstudio4edu-book/"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/40-working-in-r/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/40-working-in-r/index.html#introduction",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "Introduction",
    "text": "Introduction\nWe will get acquainted with data and its representations in R! We will also form a view of how English Grammar ( pronouns, verbs, adjectives, figures of speech..) get metaphorized into the R World!!"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/40-working-in-r/index.html#readings",
    "href": "content/courses/R-for-Artists/Modules/40-working-in-r/index.html#readings",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "Readings",
    "text": "Readings\n\nR for Data Science, Workflow: Basics Chapter: http://r4ds.had.co.nz/workflow-basics.html\nModern Dive, Getting Started Chapter: http://moderndive.com/2-getting-started.html\nR & RStudio Basics: https://bookdown.org/chesterismay/rbasics/3-rstudiobasics.html\nRStudio IDE Cheatsheet: https://github.com/rstudio/cheatsheets/blob/master/rstudio-ide.pdf"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/50-working-in-tidyverse/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/50-working-in-tidyverse/index.html#introduction",
    "title": "Lab-5: Twas brillig, and the slithy toves‚Ä¶",
    "section": "Introduction",
    "text": "Introduction\nWe meet the most important idea in R: tidy data. Once data is tidy, there is a great deal of insight to be obtained from it, by way of tables, graphs and explorations!\nWe will get hands on with dplyr, the R-package that belongs in the tidyverse and is a terrific toolbox to clean, transform, reorder, and summarize your data. And we will be ready to ask Questions of our data and embark on anlayzing it."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/50-working-in-tidyverse/index.html#readings",
    "href": "content/courses/R-for-Artists/Modules/50-working-in-tidyverse/index.html#readings",
    "title": "Lab-5: Twas brillig, and the slithy toves‚Ä¶",
    "section": "Readings",
    "text": "Readings\n\nR4DS dplyr chapter\nModernDive dplyr chapter\nRStudio dplyr Cheatsheet"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/60-GoG/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/60-GoG/index.html#introduction",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "Introduction",
    "text": "Introduction\nAh‚Ä¶ggplot ! All those wonderful pictures and graphs, that Alice might have relished!\nMetaphors, aesthetics, geometries‚Ä¶and pictures !! ggplot seems to equate ravens to writing desks in its syntax‚Ä¶and out come graphs!!\nAnd colours: Wes Anderson! Tim Burton! The Economist‚Ä¶ and many others!!"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/60-GoG/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/60-GoG/index.html#references",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "References",
    "text": "References\n\nGeorge Lakoff and Mark Johnson, Metaphors We Live By, https://www.youtube.com/watch?v=lYcQcwUfo8c\nWickham and Grolemund, R for Data Science, ggplot chapter: https://r4ds.had.co.nz/data-visualisation.html\nCMDLineTips, 10 Tips to Customize Text Color, Font, Size in ggplot2 with element_text(), https://cmdlinetips.com/2021/05/tips-to-customize-text-color-font-size-in-ggplot2-with-element_text/\nCMDLineTips, How to write a simple custom ggplot theme from scratch, https://cmdlinetips.com/2022/05/how-to-write-a-simple-custom-ggplot-theme-from-scratch/\nAsha Hill @ mode.com, 12 Extensions to ggplot2 for More Powerful R Visualizations, https://mode.com/blog/r-ggplot-extension-packages/\nEmil Hvitfeldt, ggplot Trial and Error, https://www.emilhvitfeldt.com/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/60-GoG/index.html#fun-stuff",
    "href": "content/courses/R-for-Artists/Modules/60-GoG/index.html#fun-stuff",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nYihan Wu, Mapping ggplot geoms and aesthetic parameters, ( An interactive view of which aesthetic parameters work with which ggplot geom!! ) https://www.yihanwu.ca/post/geoms-and-aesthetic-parameters/\nhttps://www.theartstory.org/artist/kandinsky-wassily/"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#introduction",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Introduction",
    "text": "Introduction\nWe will hear at icing and froth to our vanilla ggplots:\n\n\nfonts, annotations, highlights and even pictures!!"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#references",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "References",
    "text": "References\n\nThomas Lin Pedersen, https://www.data-imaginist.com/. The creator of ggforce, and patchwork packages.\nClaus Wilke, cowplot ‚Äì Streamlined plot theme and plot annotations for ggplot2, https://wilkelab.org/cowplot/index.html\nClaus Wilke, Spruce up your ggplot2 visualizations with formatted text, https://clauswilke.com/talk/rstudio_conf_2020/. Slides, Code, and Video !\nRobert Kabacoff, ggplot theme cheatsheet, https://rkabacoff.github.io/datavis/modifyingthemes.pdf"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#fun-stuff",
    "href": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#fun-stuff",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nZuguang Gu, Circular Visualization in R,\n\n\n\n\n\n\n\n\n\nhttps://jokergoo.github.io/circlize_book/book/"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/90-GoM/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/90-GoM/index.html#introduction",
    "title": "Lab-9: If you please sir‚Ä¶which way to the Secret Garden?",
    "section": "Introduction",
    "text": "Introduction\nWhat is there to not like about maps!!!\nWe will learn to make static and interactive maps and to show off different kinds of data on them, data that have an inherently ‚Äúspatial‚Äù spread or significance!\nTrade Routes? Populations? Street Crime hotspots? Theatre and Food districts and popular Restaurants? Literary Paris, London and Barcelona?\nAll possible !!"
  },
  {
    "objectID": "content/labs/doe/index.html",
    "href": "content/labs/doe/index.html",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "",
    "text": "This project is a quick analysis of the Design of Experiments class carried out in the Order and Chaos course, FSP-2021-2022, at SMI MAHE, Bangalore.\nThe methodology followed was that in A.J. Lawrance‚Äôs paper 1 describing a Statistics module based on the method of Design of Experiments. The inquiry relates to Short Term Memory (STM) among students."
  },
  {
    "objectID": "content/labs/doe/index.html#structure",
    "href": "content/labs/doe/index.html#structure",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "Structure",
    "text": "Structure\nThe total number of students were 17. Eight Pairs of students were created randomly to create eight different Test tools for Short Term Memory testing.\nThe binary ( two - level ) variables/parameters that were used in the tests, were, following Lawrance:\n\nWL: Word List Length ( 7 and 15 words )\n\nSL: Syllables in the Words ( 2 and 5 syllables )\n\nST: Study Time allowed for the Respondents ( 15 and 30 seconds )\n\nOther parameters considered were a) Language b) Structure/Depiction of the Word Lists ( e.g.¬†word clouds, matrices, columns‚Ä¶), c) Whether the words would be shown or read aloud, and d) whether the respondents had to speak out, or write down, the recollected words. These parameters were discussed and abandoned as too complex to mechanize, though they could have had an impact on the STM scores.\nHence a total of 8 Tests were created by 8 pairs of students, and each team tested the remaining 15 students ( Due to COVID restrictions, this testing was carried out entirely online on MS Teams, using individual breakout rooms for the Test Teams. )\nThe data were entered into a Google Sheet and the STM scores were converted to percentages so as to be comparable across WL.\nThe data was then ‚Äúflattened‚Äù for each of the binary parameters; this was logical to do since for each parameter, the other two parameters were balanced out by the Test structure. For instance, for WL = 5, the SL and ST parameters used all the four combinations ( SL = 5, 15 ) and (ST = 15, 30 ). Hence the ‚Äúcommon sense‚Äù analysis could proceed for each of the parameters individually. Joint effects were not considered for this preliminary class."
  },
  {
    "objectID": "content/labs/doe/index.html#data",
    "href": "content/labs/doe/index.html#data",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "Data",
    "text": "Data\n\n\n\n\n  \n\n\n\nThe data has scores that have been combined into single columns for each setting for each of the parameters. For example, the column syllable_2 contains STM scores for all tests that used SL = 2-syllables in their tests. The Word Length WL and Study Time ST go through all their combinations in this column. The other columns are constructed similarly.\nBasic Plots\nWe will use Box Plots and Density Plots to compare the STM score distributions for each Parameter. To do this we need to pivot_longer the adjacent columns ( e.g.¬†syllable_2 and syllable_5) and use these names as categorical variables:\nSyllable Parameter SL\n\n\n\n\n  \n\n\n\n\n\n\nStudy Time Parameter ST\n\n\n\n\n  \n\n\n\n\n\n\nWord List Length Parameter WL"
  },
  {
    "objectID": "content/labs/doe/index.html#preliminary-observations",
    "href": "content/labs/doe/index.html#preliminary-observations",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "Preliminary Observations",
    "text": "Preliminary Observations\nClearly, based on visual inspection of the Plots, the Word Count seems to have a large effect on STM Test Scores, with fewer words ( 7 ) being easier to recall. Study Time ( 15 and 30 seconds ) also seems to have a more modest positive effect on STM scores, while Syllable Count ( 2 or 5 syllables ) seems to have a modest negative effect on STM scores."
  },
  {
    "objectID": "content/labs/doe/index.html#analysis",
    "href": "content/labs/doe/index.html#analysis",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "Analysis",
    "text": "Analysis\nWe wish to establish the significance of the effect size due to each of the Parameters. Already from the Density Plots, we can see that none of the scores are normally distributed. A quick Shapiro-Wilkes Test for each of them confirms that the scores are not normally distributed.\nHence we go for a Permutation Test to check for significance of effect.\nOn the other hand, as remarked in Ernst2, the non-parametric permutation test can be both exact and also intuitively easier for students to grasp, as I can testify from direct observation in this class. There is no need to discuss sampling distributions and means, t-tests and the like. Permutations are easily executed in R, using packages such as mosaic3.\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$syllable_2\nW = 0.95508, p-value = 0.02716\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$syllable_5\nW = 0.95321, p-value = 0.02211\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$study_time_15\nW = 0.9068, p-value = 0.0002348\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$study_time_30\nW = 0.95539, p-value = 0.0281\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$list_length_7\nW = 0.90542, p-value = 0.0002085\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$list_length_15\nW = 0.92806, p-value = 0.001645"
  },
  {
    "objectID": "content/labs/doe/index.html#permutation-tests",
    "href": "content/labs/doe/index.html#permutation-tests",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "Permutation Tests",
    "text": "Permutation Tests\nWe proceed with a Permutation Test for each of the Parameters. We start with the Syllable Parameter SL. We shuffle the labels ( SL- = 2 and SL+ = 5) between the scores and determine the null distribution. This is then compared with the difference in mean scores between the unpermuted sets. We continue similarly for the other two parameters.\n\n\n[1] 0.0153731\n\n\n\n\n  \n\n\n\n[1] 0.08526183\n\n\n\n\n  \n\n\n\n[1] 0.2887539"
  },
  {
    "objectID": "content/labs/doe/index.html#conclusions",
    "href": "content/labs/doe/index.html#conclusions",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "Conclusions",
    "text": "Conclusions\nFrom the above null distribution plots obtained using Permutation tests, it is clear that both Study Time ( ST ) and List Word Length ( WL) have significant effects on the Short Term Memory Scores. The probability that the observed value is obtained or exceeded by any permutation of scores is very low in both cases.\nOn the other hand, Syllable Count (SL) does not seem to affect the STM scores significantly."
  },
  {
    "objectID": "content/labs/doe/index.html#references",
    "href": "content/labs/doe/index.html#references",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "content/labs/r-labs/diagrams/index.html",
    "href": "content/labs/r-labs/diagrams/index.html",
    "title": "Lab 01 - Introduce Yourself",
    "section": "",
    "text": "At the end of this Lab, we will:\n\nhave installed R and RStudio on our machines\nunderstood how to add additional R-packages for specific features and graphic capability\nrun code within RStudio and interpret the results\nhave learnt to look for help within R and RStudio"
  },
  {
    "objectID": "content/labs/r-labs/diagrams/index.html#Check-In-R",
    "href": "content/labs/r-labs/diagrams/index.html#Check-In-R",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n3.1 Check in",
    "text": "3.1 Check in\nLaunch R by clicking this logo. You should see one console with a command line interpreter. Try typing 2 + 2 and check !\nClose R."
  },
  {
    "objectID": "content/labs/r-labs/diagrams/index.html#Check-In-RStudio",
    "href": "content/labs/r-labs/diagrams/index.html#Check-In-RStudio",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n4.1 Check in",
    "text": "4.1 Check in\nLaunch RStudio. You should get a window similar to the screenshot you see here, but yours will be empty. Look at the bottom left pane: this is the same console window you saw when you opened R in step @Check-In-R\n\nPlace your cursor where you see > and type x <- 2 + 2 again hit enter or return, then type x, and hit enter/return again.\nIf [1] 4 prints to the screen, you have successfully installed R and RStudio, and you can move onto installing packages."
  },
  {
    "objectID": "content/labs/r-labs/diagrams/index.html#save-and-share",
    "href": "content/labs/r-labs/diagrams/index.html#save-and-share",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n7.1 Save and share",
    "text": "7.1 Save and share\nSave your work so you can share your favorite plot with us. You will not like the looks of your plot if you mouse over to Export and save it. Instead, use ggplot2‚Äôs command for saving a plot with sensible defaults:\n\nShow the Codehelp(ggsave)\n\n\n\nShow the Codeggsave(\"file_name_here.pdf\", plot) # please make the filename unique!\n\n\nUpload this exported plot to Teams -> Assignments.\nBefore you do that, check that you can submit stuff/assignments on the MLS by uploading a cat picture üêà first, especially if you are an ailurophile like me. (Acceptable Breeds: Scottish Folds or Maine Coons)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html",
    "href": "content/labs/r-labs/graphics/index.html",
    "title": "Lab 01 - Introduce Yourself",
    "section": "",
    "text": "At the end of this Lab, we will:\n\nhave installed R and RStudio on our machines\nunderstood how to add additional R-packages for specific features and graphic capability\nrun code within RStudio and interpret the results\nhave learnt to look for help within R and RStudio"
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#Check-In-R",
    "href": "content/labs/r-labs/graphics/index.html#Check-In-R",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n3.1 Check in",
    "text": "3.1 Check in\nLaunch R by clicking this logo. You should see one console with a command line interpreter. Try typing 2 + 2 and check !\nClose R."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#Check-In-RStudio",
    "href": "content/labs/r-labs/graphics/index.html#Check-In-RStudio",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n4.1 Check in",
    "text": "4.1 Check in\nLaunch RStudio. You should get a window similar to the screenshot you see here, but yours will be empty. Look at the bottom left pane: this is the same console window you saw when you opened R in step @Check-In-R\n\nPlace your cursor where you see > and type x <- 2 + 2 again hit enter or return, then type x, and hit enter/return again.\nIf [1] 4 prints to the screen, you have successfully installed R and RStudio, and you can move onto installing packages."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#save-and-share",
    "href": "content/labs/r-labs/graphics/index.html#save-and-share",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n7.1 Save and share",
    "text": "7.1 Save and share\nSave your work so you can share your favorite plot with us. You will not like the looks of your plot if you mouse over to Export and save it. Instead, use ggplot2‚Äôs command for saving a plot with sensible defaults:\n\nShow the Codehelp(ggsave)\n\n\n\nShow the Codeggsave(\"file_name_here.pdf\", plot) # please make the filename unique!\n\n\nUpload this exported plot to Teams -> Assignments.\nBefore you do that, check that you can submit stuff/assignments on the MLS by uploading a cat picture üêà first, especially if you are an ailurophile like me. (Acceptable Breeds: Scottish Folds or Maine Coons)"
  },
  {
    "objectID": "content/labs/r-labs/installation/index.html",
    "href": "content/labs/r-labs/installation/index.html",
    "title": "Lab 01 - Introduce Yourself",
    "section": "",
    "text": "At the end of this Lab, we will:\n\nhave installed R and RStudio on our machines\nunderstood how to add additional R-packages for specific features and graphic capability\nrun code within RStudio and interpret the results\nhave learnt to look for help within R and RStudio"
  },
  {
    "objectID": "content/labs/r-labs/installation/index.html#Check-In-R",
    "href": "content/labs/r-labs/installation/index.html#Check-In-R",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n3.1 Check in",
    "text": "3.1 Check in\nLaunch R by clicking this logo. You should see one console with a command line interpreter. Try typing 2 + 2 and check !\nClose R."
  },
  {
    "objectID": "content/labs/r-labs/installation/index.html#Check-In-RStudio",
    "href": "content/labs/r-labs/installation/index.html#Check-In-RStudio",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n4.1 Check in",
    "text": "4.1 Check in\nLaunch RStudio. You should get a window similar to the screenshot you see here, but yours will be empty. Look at the bottom left pane: this is the same console window you saw when you opened R in step @Check-In-R\n\nPlace your cursor where you see > and type x <- 2 + 2 again hit enter or return, then type x, and hit enter/return again.\nIf [1] 4 prints to the screen, you have successfully installed R and RStudio, and you can move onto installing packages."
  },
  {
    "objectID": "content/labs/r-labs/installation/index.html#save-and-share",
    "href": "content/labs/r-labs/installation/index.html#save-and-share",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n7.1 Save and share",
    "text": "7.1 Save and share\nSave your work so you can share your favorite plot with us. You will not like the looks of your plot if you mouse over to Export and save it. Instead, use ggplot2‚Äôs command for saving a plot with sensible defaults:\n\nShow the Codehelp(ggsave)\n\n\n\nShow the Codeggsave(\"file_name_here.pdf\", plot) # please make the filename unique!\n\n\nUpload this exported plot to Teams -> Assignments.\nBefore you do that, check that you can submit stuff/assignments on the MLS by uploading a cat picture üêà first, especially if you are an ailurophile like me. (Acceptable Breeds: Scottish Folds or Maine Coons)"
  },
  {
    "objectID": "content/labs/r-labs/maps/index.html",
    "href": "content/labs/r-labs/maps/index.html",
    "title": "Lab 01 - Introduce Yourself",
    "section": "",
    "text": "At the end of this Lab, we will:\n\nhave installed R and RStudio on our machines\nunderstood how to add additional R-packages for specific features and graphic capability\nrun code within RStudio and interpret the results\nhave learnt to look for help within R and RStudio"
  },
  {
    "objectID": "content/labs/r-labs/maps/index.html#Check-In-R",
    "href": "content/labs/r-labs/maps/index.html#Check-In-R",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n3.1 Check in",
    "text": "3.1 Check in\nLaunch R by clicking this logo. You should see one console with a command line interpreter. Try typing 2 + 2 and check !\nClose R."
  },
  {
    "objectID": "content/labs/r-labs/maps/index.html#Check-In-RStudio",
    "href": "content/labs/r-labs/maps/index.html#Check-In-RStudio",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n4.1 Check in",
    "text": "4.1 Check in\nLaunch RStudio. You should get a window similar to the screenshot you see here, but yours will be empty. Look at the bottom left pane: this is the same console window you saw when you opened R in step @Check-In-R\n\nPlace your cursor where you see > and type x <- 2 + 2 again hit enter or return, then type x, and hit enter/return again.\nIf [1] 4 prints to the screen, you have successfully installed R and RStudio, and you can move onto installing packages."
  },
  {
    "objectID": "content/labs/r-labs/maps/index.html#save-and-share",
    "href": "content/labs/r-labs/maps/index.html#save-and-share",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n7.1 Save and share",
    "text": "7.1 Save and share\nSave your work so you can share your favorite plot with us. You will not like the looks of your plot if you mouse over to Export and save it. Instead, use ggplot2‚Äôs command for saving a plot with sensible defaults:\n\nShow the Codehelp(ggsave)\n\n\n\nShow the Codeggsave(\"file_name_here.pdf\", plot) # please make the filename unique!\n\n\nUpload this exported plot to Teams -> Assignments.\nBefore you do that, check that you can submit stuff/assignments on the MLS by uploading a cat picture üêà first, especially if you are an ailurophile like me. (Acceptable Breeds: Scottish Folds or Maine Coons)"
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html",
    "href": "content/labs/r-labs/networks/index.html",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "",
    "text": "This RMarkdown document is part of my course on R for Artists and Designers. The material is based on A Layered Grammar of Graphics by Hadley Wickham. The intent of this Course is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll RMarkdown files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)\n\nAt the end of this Lab session, we should:\n- know the types and structures of network data and be able to work with them\n- understand the basics of modern network packages in R\n- be able to create network visualizations using tidygraph, ggraph( static visualizations ) and visNetwork (interactive visualizations)\n- see directions for how the network metaphor applies in a variety of domains (e.g.¬†biology/ecology, ideas/influence, technology, transportation, to name a few)\n\nThe method followed will be based on PRIMM:\n\n\nPREDICT Inspect the code and guess at what the code might do, write predictions\n\n\nRUN the code provided and check what happens\n\nINFER what the parameters of the code do and write comments to explain. What bells and whistles can you see?\n\nMODIFY the parameters code provided to understand the options available. Write comments to show what you have aimed for and achieved.\n\nMAKE : take an idea/concept of your own, and graph it.\n\nThe setup code chunk below brings into our coding session R packages that provide specific computational abilities and also datasets which we can use.\nTo reiterate: Packages and datasets are not the same thing !! Packages are (small) collections of programs. Datasets are just‚Ä¶.information.\n\nNetwork graphs are characterized by two key terms: nodes and edges\n\n\nNodes : Entities\n\nMetaphors: Individual People? Things? Ideas? Places? to be connected in the network.\nSynonyms: vertices. Nodes have IDs.\n\n\n\nEdges: Connections\n\nMetaphors: Interactions? Relationships? Influence? Letters sent and received? Dependence? between the entities.\nSynonyms: links, ties.\n\n\n\nIn R, we create network representations using node and edge information. One way in which these could be organized are:\n- Node list: a data frame with a single column listing the node IDs found in the edge list. You can also add attribute columns to the data frame such as the names of the nodes or grouping variables. ( Type? Class? Family? Country? Subject? Race? )\n\nNode Table\n\n\n\n\n\n\n\nID\nNode Name\nAttribute? Qualities?Categories? Family? Country?Planet?\n\n\n1\nNed\nNursery School Teacher\n\n\n2\nJaguar Paw\nMain Character, Apocalypto\n\n\n3\nJohn Snow\nEpidemiologist\n\n\n\n\n\nEdge list: data frame containing two columns: source node and destination node of an edge. Source and Destination have node IDs.\n\nWeighted network graph: An edge list can also contain additional columns describing attributes of the edges such as a magnitude aspect for an edge. If the edges have a magnitude attribute the graph is considered weighted.\n\n\nEdges Table\n\nFrom\nTo\nRelationship\nWeightage\n\n\n\n1\n3\nFinancial Dealings\n6\n\n\n2\n1\nHistory Lessons\n2\n\n\n2\n3\nVaccination\n15\n\n\n\n\n\nLayout: A geometric arrangement of nodes and edges.\n\nMetaphors: Location? Spacing? Distance? Coordinates? Colour? Shape? Size? Provides visual insight due to the arrangement.\n\n\n\n\nLayout Algorithms : Method to arranges nodes and edges with the aim of optimizing some metric .\n\nMetaphors: Nodes are masses and edges are springs. The Layout algorithm minimizes the stretching and compressing of all springs.(BTW, are the Spring Constants K the same for all springs?‚Ä¶)\n\n\n\n\n\nDirected and undirected network graph: If the distinction between source and target is meaningful, the network is directed. If the distinction is not meaningful, the network is undirected. Directed edges represent an ordering of nodes, like a relationship extending from one node to another, where switching the direction would change the structure of the network. Undirected edges are simply links between nodes where order does not matter.\n\nExamples:\n\nThe World Wide Web is an example of a directed network because hyperlinks connect one Web page to another, but not necessarily the other way around.\nCo-authorship networks represent examples of un-directed networks, where nodes are authors and they are connected by an edge if they have written a publication together\nWhen people send e-mail to each other, the distinction between the sender (source) and the recipient (target) is clearly meaningful, therefore the network is directed.\n\n\n\nConnected and Disconnected graphs: If there is some path from any node to any other node, the Networks is said to be Connected. Else, Disconnected.\n\n\ntidygraph and ggraph are modern R packages for network data. Graph Data setup and manipulation is done in tidygraph and graph visualization with ggraph.\n\n\ntidygraph Data -> ‚ÄúNetwork Object‚Äù in R.\n\nggraph Network Object -> Plots using a chosen layout/algo.\n\nBoth leverage the power of igraph, which is the Big Daddy of all network packages. We will be using the Grey‚Äôs Anatomy dataset in our first foray into networks.\n\n\nShow the Codegrey_nodes <- read_csv(\"../../../materials/data/grey_nodes.csv\")\ngrey_edges <- read_csv(\"../../../materials/data/grey_edges.csv\")\n\n\n# grey_nodes <- read_delim(\"./Data/greys-nodes.csv\", delim = \";\")\n# ger_edges <- read_delim(\"~/Downloads/grey-edges.csv\", \n#     delim = \";\", escape_double = FALSE, trim_ws = TRUE)\ngrey_nodes\n\n\n\n  \n\n\nShow the Codegrey_edges\n\n\n\n  \n\n\n\n\n\n\n Download Grey Nodes as csv\n\n\n\n\n Download Grey Edges data as csv\n\n\n\n\n\nQuestions and Inferences #1:\n\n\nLook at the console output thumbnail. What does for example name = col_character mean? What attributes (i.e.¬†extra information) are seen for Nodes and Edges? Understand the data in both nodes and edges as shown in the second and third thumbnails. Write some comments and inferences here.\n\n\n\nKey function:\n\n\ntbl_graph(): (aka ‚Äútibble graph‚Äù). Key arguments: nodes, edges and directed. Note this is a very versatile command and can take many input forms, such as data structures that result from other packages. Type ?tbl_graph in the Console and see the Usage section.\n\n\nShow the Codega <- tbl_graph(nodes = grey_nodes, \n                edges = grey_edges, \n                directed = FALSE)\nga\n\n# A tbl_graph: 54 nodes and 57 edges\n#\n# An undirected simple graph with 4 components\n#\n# Node Data: 54 √ó 7 (active)\n  name               sex   race  birthyear position  season sign  \n  <chr>              <chr> <chr>     <dbl> <chr>      <dbl> <chr> \n1 Addison Montgomery F     White      1967 Attending      1 Libra \n2 Adele Webber       F     Black      1949 Non-Staff      2 Leo   \n3 Teddy Altman       F     White      1969 Attending      6 Pisces\n4 Amelia Shepherd    F     White      1981 Attending      7 Libra \n5 Arizona Robbins    F     White      1976 Attending      5 Leo   \n6 Rebecca Pope       F     White      1975 Non-Staff      3 Gemini\n# ‚Ä¶ with 48 more rows\n#\n# Edge Data: 57 √ó 4\n   from    to weight type    \n  <int> <int>  <dbl> <chr>   \n1     5    47      2 friends \n2    21    47      4 benefits\n3     5    46      1 friends \n# ‚Ä¶ with 54 more rows\n\n\n\n\nQuestions and Inferences #2:\n\n\nQuestions and Inferences: What information does the graph object contain? What attributes do the nodes have? What about the edges?\n\n\n\n3a. Quick Plot: autograph() This is to check quickly is the data is imported properly and to decide upon going on to a more elaborate plotting.\n\nShow the Codeautograph(ga)\n\n\n\n\n\n\nQuestions and Inferences #3:\n\n\nQuestions and Inferences: Describe this graph, in simple words here. Try to use some of the new domain words we have just acquired: nodes/edges, connected/disconnected, directed/undirected.\n\n\n3b. More elaborate plot\nKey functions:\n\n\nggraph(layout = \"......\"): Create classic node-edge diagrams; i.e. Sets up the graph. Rather like ggplot for networks!\n\nTwo kinds of geom: one set for nodes, and another for edges\n\ngeom_node_point(aes(.....)): Draws node as ‚Äúpoints‚Äù. Alternatives are circle / arc_bar / tile / voronoi. Remember the geoms that we have seen before in Grammar of Graphics!\ngeom_edge_link(aes(.....)): Draws edges as ‚Äúlinks‚Äù. Alternatives are arc / bend / elbow / hive / loop / parallel / diagonal / point / span /tile.\ngeom_node_text(aes(label = ......), repel = TRUE): Adds text labels (non-overlapping). Alternatives are label /...\nlabs(title = \"....\", subtitle = \"....\", caption = \"....\"): Change main titles, axis labels and legend titles. We know this from our work with ggplot.\n\n\nShow the Code# Write Comments next to each line \n# About what that line does for the overall graph\n\nggraph(graph = ga,  layout = \"kk\") +\n  #\n  \n  geom_edge_link(width = 2, color = \"pink\") +\n  #\n  \n  geom_node_point(\n    shape = 21,\n    size = 8,\n    fill = \"blue\",\n    color = \"green\",\n    stroke = 2\n  ) +\n  #\n  \n  labs(title = \"Whoo Hoo! My first silly Grey's Anatomy graph in R!\",\n       subtitle = \"Why did Ramesh put me in this course...\",\n       caption = \"Bro, they are doing **cool** things in the other\n       classes...\") +\n  theme_graph(base_family = \"fira\") +\n  theme(legend.position = \"top\")\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\n‚Ñπ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n\n\n\n\n\n\n\nQuestions and Inferences #3:\n\n\nQuestions and Inferences: What parameters have been changed here, compared to the earlier graph? Where do you see these changes in the code above?\n\n\nLet us Play with this graph and see if we can make some small changes. Colour? Fill? Width? Size? Stroke? Labs? Of course!\n\nShow the Code# Change the parameters in each of the commands here to new ones\n# Use fixed values for colours or sizes...etc. \n\nggraph(graph = ga,  layout = \"kk\") + \n  geom_edge_link(width = 2) + \n  geom_node_point(shape = 21, size = 8, \n                  fill = \"blue\", \n                  color = \"green\", \n                  stroke = 2) +\n  labs(title = \"Whoo Hoo! My next silly Grey's Anatomy graph in R!\",\n       subtitle = \"Why did Ramesh put me in this course...\",\n       caption = \"Bro, they are doing cool things in the other \n       classes...\") +\n  theme_graph(base_family = \"fira\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\nQuestions and Inferences #4:\n\n\nQuestions and Inferences: What did the shape parameter achieve? What are the possibilities with shape? How about including alpha?\n\n\n3c. Aesthetic Mapping from Node and Edge attribute columns\nUp to now, we have assigned specific numbers to geometric aesthetics such as shape and size. Now we are ready ( maybe ?) change the meaning and significance of the entire graph and each element within it, and use aesthetics / metaphoric mappings to achieve new meanings or insights. Let us try using aes() inside each geom to map a variable to a geometric aspect.\nDon‚Äôt try to use more than 2 aesthetic mappings simultaneously!!\nThe node elements we can tweak are:\n\nTypes of Nodes: geom_node_****()\n\nNode Parameters: inside geom_node_****(aes(...............))\n-aes(alpha  = node-variable) : opacity; a value between 0 and 1\n-aes(shape  = node-variable) : node shape\n-aes(colour = node-variable) : node colour\n-aes(fill   = node-variable) : fill colour for node\n-aes(size   = node-variable) : size of node\n\nThe edge elements we can tweak are:\n\nType of Edges‚Äù geom_edge_****()\n\nEdge Parameters: inside geom_edge_****(aes(...............))\n-aes(colour = edge-variable) : colour of the edge\n-aes(width  = edge-variable) : width of the edge\n-aes(label  = some_variable) : labels for the edge\n\nType ?geom_node_point and ?geom-edge_link in your Console for more information.\n\nShow the Codeggraph(graph = ga, layout = \"fr\") +\n  geom_edge_link0(aes(width = weight)) + # add mapping here\n  \n  geom_node_point(aes(color = race), size = 6) + # add mapping here\n\n  # geom_node_label(aes(label = name), # modify this mapping\n  #                 repel = TRUE, max.overlaps = 20,\n  #                 alpha = 0.6,\n  #                 size = 3) +\n\n  labs(title = \"Whoo Hoo! Yet another Grey's Anatomy graph in R!\") +\n  theme_graph(base_family = \"fira\") +\n  theme(legend.position = \"right\")\n\n\n\n\n\n\nQuestions and Inferences #5:\n\n\nQuestions and Inferences: Describe some of the changes here. What types of edges worked? Which variables were you able to use for nodes and edges and how? What did not work with either of the two?\n\n\n\n\nShow the Code# Arc diagram\nggraph(ga, layout = \"linear\") +\n  geom_edge_arc(aes(width = weight), alpha = 0.8) +\n  scale_edge_width(range = c(0.2, 2)) +\n  geom_node_point(size = 2, colour = \"red\") +\n  labs(edge_width = \"Weight\") +\n  theme_graph(base_family = \"fira\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\nQuestions and Inferences #6:\n\n\nQuestions and Inferences: How does this graph look ‚Äúmetaphorically‚Äù different? Do you see a difference in the relationships between people here? Why?\n\n\n\nShow the Code# Coord diagram, circular\nggraph(ga, layout = \"linear\", circular = TRUE) + \n  geom_edge_arc(aes(width = weight), alpha = 0.8) + \n  scale_edge_width(range = c(0.2, 2)) +\n  geom_node_point(size = 4,colour = \"red\") + \n  geom_node_text(aes(label = name),repel = TRUE, size = 3,\n                 max.overlaps = 20) +\n  labs(edge_width = \"Weight\") +\n  theme_graph() +\n  theme(legend.position = \"right\", \n        aspect.ratio = 1,\n        text = element_text(family = \"fira\"))\n\n\n\n\n\n\nQuestions and Inferences #7:\n\n\nQuestions and Inferences: How does this graph look ‚Äúmetaphorically‚Äù different? Do you see a difference in the relationships between people here? Why?\n\n\n\nThese provide for some alternative metaphorical views of networks. Note that not all layouts are possible for all datasets!!\n\nShow the Code# setting theme_graph \nset_graph_style(family = \"fira\")\n\n# This dataset contains the graph that describes the class \n# hierarchy for the Flare visualization library.\n# Type ?flare in your Console\nhead(flare$vertices)\n\n\n\n  \n\n\nShow the Codehead(flare$edges)\n\n\n\n  \n\n\nShow the Code# flare class hierarchy\ngraph = tbl_graph(edges = flare$edges, nodes = flare$vertices)\n\n# dendrogram\nggraph(graph, layout = \"dendrogram\") + \n  geom_edge_diagonal() + \n  labs(title = \"Dendrogram\")\n\n\n\nShow the Code# circular dendrogram\nggraph(graph, layout = \"dendrogram\", circular = TRUE) + \n  geom_edge_diagonal() + \n  geom_node_point(aes(filter = leaf)) + \n  coord_fixed()+ \n  labs(title = \"Circular Dendrogram\")\n\n\n\nShow the Code# rectangular tree map\nggraph(graph, layout = \"treemap\", weight = size) + \n  geom_node_tile(aes(fill = depth), size = 0.25) + \n  labs(title = \"Rectangular Tree Map\")\n\n\n\nShow the Code# circular tree map\nggraph(graph, layout = \"circlepack\", weight = size) + \n  geom_node_circle(aes(fill = depth), size = 0.25, n = 50) + \n  coord_fixed() + \n  labs(title = \"Circular Tree Map\")\n\n\n\nShow the Code# icicle\nggraph(graph, layout = \"partition\") + \n  geom_node_tile(aes(y = -y, fill = depth))\n\n\n\nShow the Code# sunburst (circular icicle)\nggraph(graph, layout = \"partition\", circular = TRUE) +\n  geom_node_arc_bar(aes(fill = depth)) +\n  coord_fixed() + \n  labs(title = \"Circular Icicle\")\n\n\n\n\n\n\nQuestions and Inferences #8:\n\n\nQuestions and Inferences: How do graphs look ‚Äúmetaphorically‚Äù different? Do they reveal different aspects of the group? How?\n\n\n\nFaceting allows to create sub-plots according to the values of a qualitative attribute on nodes or edges.\n\nShow the Code# setting theme_graph \nset_graph_style(family = \"fira\")\n\n\n# facet edges by type\nggraph(ga,layout = \"linear\", circular = TRUE) + \n  geom_edge_link(aes(color = type)) + \n  geom_node_point() +\n  facet_edges(~ type) +\n  theme(aspect.ratio = 1)\n\n\n\nShow the Code# facet nodes by sex\nggraph(ga,layout = \"linear\", circular = TRUE) + \n  geom_edge_link() + \n  geom_node_point() +\n  facet_nodes(~race) +\n  theme(aspect.ratio = 1)\n\n\n\nShow the Code# facet both nodes and edges\nggraph(ga,layout = \"linear\", circular = TRUE) + \n  geom_edge_link(aes(color = type)) + \n  geom_node_point() +\n  facet_graph(type ~ race) + \n  th_foreground(border = TRUE) +\n  theme(aspect.ratio = 1, legend.position = \"top\")\n\n\n\n\n\n\nQuestions and Inferences #9:\n\n\nQuestions and Inferences: Does splitting up the main graph into subnetworks give you more insight? Describe some of these.\n\n\n\nThe data frame graph representation can be easily augmented with metrics or statistics computed on the graph. Remember how we computed counts with the penguin dataset in Grammar of Graphics.\nBefore computing a metric on nodes or edges use the activate() function to activate either node or edge data frames. Use dplyr verbs (filter, arrange, mutate) to achieve your computation in the proper way.\n\nCentrality is a an ‚Äúill-defined‚Äù metric of node and edge importance in a network. It is therefore calculated in many ways. Type ?centrality in your Console.\n\n\nStandards\n\n\nLet‚Äôs add a few columns to the nodes and edges based on network centrality measures:\n\nShow the Codega %>% \n  activate(nodes) %>% \n  \n  # Most connections?\n  mutate(degree = centrality_degree(mode = c(\"in\"))) %>% \n  filter(degree > 0) %>% \n  \n  activate(edges) %>% \n  # \"Busiest\" edge?\n  mutate(betweenness = centrality_edge_betweenness())\n\n# A tbl_graph: 54 nodes and 57 edges\n#\n# An undirected simple graph with 4 components\n#\n# Edge Data: 57 √ó 5 (active)\n   from    to weight type     betweenness\n  <int> <int>  <dbl> <chr>          <dbl>\n1     5    47      2 friends         20.3\n2    21    47      4 benefits        44.7\n3     5    46      1 friends         39  \n4     5    41      1 friends         66.3\n5    18    41      6 friends         39  \n6    21    41     12 benefits        91.5\n# ‚Ä¶ with 51 more rows\n#\n# Node Data: 54 √ó 8\n  name               sex   race  birthyear position  season sign   degree\n  <chr>              <chr> <chr>     <dbl> <chr>      <dbl> <chr>   <dbl>\n1 Addison Montgomery F     White      1967 Attending      1 Libra       3\n2 Adele Webber       F     Black      1949 Non-Staff      2 Leo         1\n3 Teddy Altman       F     White      1969 Attending      6 Pisces      4\n# ‚Ä¶ with 51 more rows\n\n\nPackages tidygraph and ggraph can be pipelined to perform analysis and visualization tasks in one go.\n\nShow the Code# setting theme_graph \nset_graph_style()\n\nga %>% \n  activate(nodes) %>% \n  \n  # Who has the most connections?\n  mutate(degree = centrality_degree()) %>% \n  \n  activate(edges) %>% \n  # Who is the go-through person?\n  mutate(betweenness = centrality_edge_betweenness()) %>%\n  \n  # Now to continue with plotting\n  ggraph(layout = \"nicely\") +\n  geom_edge_link(aes(alpha = betweenness)) +\n  geom_node_point(aes(size = degree, colour = degree)) + \n  \n  # discrete colour legend\n  scale_color_gradient(guide = \"legend\") +\n  theme_graph(base_family = \"fira\")\n\n\n\nShow the Code# or even less typing\n  ggraph(ga,layout = \"nicely\") +\n  geom_edge_link(aes(alpha = centrality_edge_betweenness())) +\n  geom_node_point(aes(colour = centrality_degree(), \n                      size = centrality_degree())) + \n  scale_color_gradient(guide = \"legend\",\n                       low = \"green\",\n                       high = \"red\") +\n  theme_graph(base_family = \"fira\")\n\n\n\n\n\n\nQuestions and Inferences #10:\n\n\nQuestions and Inferences: How do the Centrality Measures show up in the graph? Would you ‚Äúagree‚Äù with the way we have done it? Try to modify the aesthetics by copy-pasting this chunk below and see how you can make an alternative representation.\n\n\n\nWho is close to whom? Which are the groups you can see?\n\nShow the Code# setting theme_graph \nset_graph_style()\n\n\n# visualize communities of nodes\nga %>% \n  activate(nodes) %>%\n  mutate(community = as.factor(group_louvain())) %>% \n  ggraph(layout = \"graphopt\") + \n  geom_edge_link() + \n  geom_node_point(aes(color = community), size = 5) +\n  theme_graph(base_family = \"fira\")\n\n\n\n\n\n\nQuestions and Inferences #11:\n\n\nQuestions and Inferences: Is the Community depiction clear? How would you do it, with which aesthetic? Copy Paste this chunk below and try.\n\n\n\nExploring the VisNetwork package. Make graphs wiggle and shake using tidy commands! The package implements interactivity using the physical metaphor of weights and springs we discussed earlier.\nThe visNetwork() function uses a nodes list and edges list to create an interactive graph. The nodes list must include an ‚Äúid‚Äù column, and the edge list must have ‚Äúfrom‚Äù and ‚Äúto‚Äù columns. The function also plots the labels for the nodes, using the names of the cities from the ‚Äúlabel‚Äù column in the node list.\n\nShow the Codelibrary(visNetwork)\n\n# Prepare the data for plotting by visNetwork\ngrey_nodes\n\n\n\n  \n\n\nShow the Codegrey_edges\n\n\n\n  \n\n\nShow the Code# Relabel greys anatomy nodes and edges for VisNetwork\ngrey_nodes_vis <- grey_nodes %>% \n  rowid_to_column(var = \"id\") %>% \n  rename(\"label\" = name) %>% \n  mutate(sex = case_when(sex == \"F\" ~ \"Female\",\n                         sex == \"M\" ~ \"Male\")) %>% \n  replace_na(., list(sex = \"Transgender?\")) %>% \n  rename(\"group\" = sex)\ngrey_nodes_vis\n\n\n\n  \n\n\nShow the Codegrey_edges_vis <- grey_edges %>% \n  select(from, to) %>% \n  left_join(., grey_nodes_vis, \n            by = c(\"from\" = \"label\")) %>% \n  left_join(., grey_nodes_vis, \n            by = c(\"to\" = \"label\")) %>%\n  select(\"from\"= id.x, \"to\" = id.y)\ngrey_edges_vis\n\n\n\n  \n\n\n\nUsing fontawesome icons\n\nShow the Codegrey_nodes_vis %>%\n\n  visNetwork(nodes = ., edges = grey_edges_vis) %>% \n  visNodes(font = list(size = 40)) %>% \n  \n  # Colour and icons for each of the gender-groups\n  visGroups(groupname = \"Female\", shape = \"icon\", \n            icon = list(code = \"f182\", size = 75, color = \"tomato\"),\n            shadow = list(enabled = TRUE)) %>% \n  \n  visGroups(groupname = \"Male\", shape = \"icon\", \n            icon = list(code = \"f183\", size = 75, color = \"slateblue\"), \n            shadow = list(enabled = TRUE)) %>% \n  \n  visGroups(groupname = \"Transgender?\", shape = \"icon\", \n            icon = list(code = \"f22c\", size = 75, color = \"fuchsia\"), \n            shadow = list(enabled = TRUE)) %>% \n  \n  #visLegend() %>%\n  #Add the fontawesome icons!!\n  addFontAwesome() %>% \n  \n  # Add Interaction Controls\n  visInteraction(navigationButtons = TRUE,\n                 hover = TRUE,\n                 selectConnectedEdges = TRUE,\n                 hoverConnectedEdges = TRUE,\n                 zoomView = TRUE)\n\n\n\n\n\nThere is another family of icons available in visNetwork, called ionicons. Let‚Äôs see how they look:\n\nShow the Codegrey_nodes_vis %>%\n\n  visNetwork(nodes = ., edges = grey_edges_vis,) %>%\n  visLayout(randomSeed = 12345) %>%\n  visNodes(font = list(size = 50)) %>%\n  visEdges(color = \"green\") %>%\n  visGroups(\n    groupname = \"Female\",\n    shape = \"icon\",\n    icon = list(\n      face = 'Ionicons',\n      code = \"f25d\",\n      color = \"fuchsia\",\n      size = 125\n    )\n  ) %>%\n  \n  visGroups(\n    groupname = \"Male\",\n    shape = \"icon\",\n    icon = list(\n      face = 'Ionicons',\n      code = \"f202\",\n      color = \"green\",\n      size = 125\n    )\n  ) %>%\n  \n  visGroups(\n    groupname = \"Transgender?\",\n    shape = \"icon\",\n    icon = list(\n      face = 'Ionicons',\n      code = \"f233\",\n      color = \"dodgerblue\",\n      size = 125\n    )\n  ) %>%\n  visLegend() %>%\n  addIonicons() %>%\n  visInteraction(\n    navigationButtons = TRUE,\n    hover = TRUE,\n    selectConnectedEdges = TRUE,\n    hoverConnectedEdges = TRUE,\n    zoomView = TRUE\n  )\n\n\n\n\n\nSome idea of interactivity and controls with visNetwork:\n\nShow the Codelibrary(visNetwork)\n# let's look again at the data\nstarwars_nodes <- read_csv(\"../../../materials/data/star-wars-network-nodes.csv\")\n\nRows: 22 Columns: 2\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr (1): name\ndbl (1): id\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nShow the Codestarwars_edges <- read_csv(\"../../../materials/data/star-wars-network-edges.csv\")\n\nRows: 60 Columns: 3\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr (2): source, target\ndbl (1): weight\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n Download Nodes data as csv\n\n\n\n\n Download Edges data as csv\n\n\n\n\nShow the Code# We need to rename starwars nodes dataframe and edge dataframe columns for visNetwork\nstarwars_nodes_vis <- \n  starwars_nodes %>% \n  rename(\"label\" = name)\n\n# Convert from and to columns to **node ids**\nstarwars_edges_vis <- \n  starwars_edges %>% \n  \n  # Matching Source <- Source Node id (\"id.x\")\n  left_join(., starwars_nodes_vis, by = c(\"source\" = \"label\")) %>% \n  \n  # Matching Target <- Target Node id (\"id.y\")\n  left_join(., starwars_nodes_vis, by = c(\"target\" = \"label\")) %>% \n  \n# Select \"id.x\" and \"id.y\" ONLY\n# Rename them as \"from\" and \"to\"\n# keep \"weight\" column for aesthetics of edges\n  select(\"from\" = id.x, \"to\" = id.y, \"value\" = weight)\n\n# Check everything once\nstarwars_nodes_vis\n\n\n\n  \n\n\nShow the Codestarwars_edges_vis\n\n\n\n  \n\n\n\nOk, let‚Äôs make things move and shake!!\n\nShow the CodevisNetwork(nodes = starwars_nodes_vis,\n           edges = starwars_edges_vis) %>% \n  visNodes(font = list(size = 30), shape = \"icon\", \n           icon = list(code = \"f1e3\", size = 75)) %>% \n  addFontAwesome() %>% \n  visEdges(color = \"red\")\n\n\n\n\n\n\nShow the CodevisNetwork(nodes = starwars_nodes_vis,\n           edges = starwars_edges_vis) %>% \n  visNodes(font = list(size = 30)) %>% \n  visEdges(color = \"red\")\n\n\n\n\n\n\n\nStep 1. Fire up a new RMarkdown. Write your name, file_name and date.\nStep 2. Take any one of the ‚ÄúMake1-Datasets‚Äù datasets decribed below.\nStep 3. RMarkdown contents:\n\nIntroduce / Inspect in R your data and describe\nIntroduce your Purpose\nCreate graph objects.\nWrite comments in the code\nWrite narrative in text with sections, bold ,italic etc.\n\nStep 4. Knit before you submit. Submit only your knittable .Rmd file.\n\n\nAirline Data:\n\n\nStart with this bit of code in your second chunk, after set up\n\n\n\nShow the Codeairline_nodes <- read_csv(\"../../../materials/data/AIRLINES-NODES.csv\") %>% mutate(Id = Id + 1)\nairline_edges <- read_csv(\"../../../materials/data/AIRLINES-EDGES.csv\") %>%\nmutate(Source = Source + 1, Target = Target + 1)\n\n\n\n\n\n Download data as csv\n\n\n\n\n Download data as csv\n\n\n\n\nThe Famous Zachary Karate Club dataset\n\n\nStart with pulling this data into your Rmarkdown:\n\ndata(\"karate\",package= \"igraphdata\")\nkarate\n\nTry ?karate in the console\nNote that this is not a set of nodes, nor edges, but already a graph-object!\nSo no need to create a graph object using tbl_graph.\nYou will need to just go ahead and plot using ggraph.\n\n\nGame of Thrones:\n\n\nStart with pulling this data into your Rmarkdown:\n\n\nShow the CodeGoT <- read_rds(\"../../../materials/data/GoT.RDS\")\n\n\n\n\n\n Download data as RDS\n\n\n\n\nNote that this is a list of 7 graphs from Game of Thrones.\nSelect one using GoT[[index]] where index = 1‚Ä¶7 and then plot directly.\nTry to access the nodes and edges and modify them using any attribute data\n\n\nAny other graph dataset from igraphdata (type ?igraphdata in console)\n\n\nAsk me for help if you need any\n\nThis is in groups. Groups of 4. To be announced\nYou need to create a Network Graph for your favourite Book, play, TV serial or Show. (E.g. Friends, BBT, or LB or HIMYM‚Ä¶or Hamlet, Little Women , Pride and Prejudice, or LoTR)\nStep 1. Go to: Literary Networks for instructions. (Instructions are on also Teams -> Files.)\nStep 2. Make your data using the instructions.\n\nIn the nodes excel, use id and names as your columns. Any other details in other columns to the right.\nIn your edges excel, use from and to are your first columns. Entries in these columns can be names or ids but be consistent and don‚Äôt mix.\n\nStep 3. Decide on 3 answers that you to seek and plan to make graphs for.\nStep 4. Create graph objects. Say 3 visualizations.\nStep 5. Write comments/answers in the code and narrative text. Add pictures from the web using Markdown syntax.\nStep 6. Write Reflection ( ok, a short one!) inside your RMarkdown. Make sure it knits!!\nStep 7. Group Submission: Submit the knittable .Rmd file AND the data. RMarkdown with joint authorship. Each person submits on their Assignments. All get the same grade on this one.\nAsk me for clarifications on what to do after you have read the Instructions in your group.\n\n\nThomas Lin Pedersen - 1 giraffe, 2 giraffe,GO!\nIgraph: Network Analysis and Visualization. https://CRAN.R-project.org/package=igraph.\nPedersen, Thomas Lin. 2017a. Ggraph: An Implementation of Grammar of Graphics for Graphs and Networks. https://CRAN.R-project.org/package=ggraph.\n‚Äî‚Äî‚Äî. 2017b. Tidygraph: A Tidy Api for Graph Manipulation. https://CRAN.R-project.org/package=tidygraph.\nTyner, Sam, Fran√ßois Briatte, and Heike Hofmann. 2017. ‚ÄúNetwork Visualization with ggplot2.‚Äù The R Journal 9 (1): 27‚Äì59. https://journal.r-project.org/archive/2017/RJ-2017-023/index.html.\nNetwork Datasets https://icon.colorado.edu/#!/networks\nYunran Chen, Introduction to Network Analysis Using R"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/index.html",
    "href": "content/labs/r-labs/pronouns/index.html",
    "title": "Lab-02: Pronouns and Data",
    "section": "",
    "text": "Understand different kinds of data variables\nAppreciate how they can be identified based on the Interrogative Pronouns they answer to\nUnderstand how each kind of variable lends itself to a specific geometric aspect in the data visualization.\nUnderstand how ask Questions of Data to develop Visualizations"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/index.html#set-up",
    "href": "content/labs/r-labs/pronouns/index.html#set-up",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n2.1 Set Up",
    "text": "2.1 Set Up\nThe setup code chunk below brings into our coding session R packages that provide specific computational abilities and also datasets which we can use.\nTo reiterate: Packages and datasets are not the same thing !! Packages are (small) collections of programs. Datasets are just‚Ä¶.information."
  },
  {
    "objectID": "content/labs/r-labs/pronouns/index.html#the-penguins-dataset",
    "href": "content/labs/r-labs/pronouns/index.html#the-penguins-dataset",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n5.1 The penguins dataset",
    "text": "5.1 The penguins dataset\nnames(penguins) # Column, i.e. Variable names\n[1] ‚Äúspecies‚Äù ‚Äúisland‚Äù ‚Äúbill_length_mm‚Äù\n[4] ‚Äúbill_depth_mm‚Äù ‚Äúflipper_length_mm‚Äù ‚Äúbody_mass_g‚Äù\n[7] ‚Äúsex‚Äù ‚Äúyear‚Äù\nhead(penguins) # first six rows\n\n\n\n  \n\n\ntail(penguins) # Last six rows\n\n\n\n  \n\n\ndim(penguins) # Size of dataset\n[1] 344 8\n# Check for missing data\nany(is.na(penguins) == TRUE)\n[1] TRUE\n\n\n\n\n\n\nInspect the Data\n\n\n\n\nWhat are the variable names()?\nWhat would be the Question you might have asked to obtain each of the variables?\nWhat further questions/meta questions would you ask to ‚Äúprocess‚Äù that variable? ( Hint: Add another word after any of the Interrogative Pronouns, e.g.¬†How‚Ä¶MANY?)\nWhere might the answers take your story?\n\n\n\n\n\n\n\n\n\nYour Turn #1\n\n\n\nState a few questions after discussion with your friend and state possible variables, or what you could DO with the variables, as an answer.\nE.g. Q. How many penguins? A. We need to count‚Ä¶rows?"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/index.html#pronouns-and-variables",
    "href": "content/labs/r-labs/pronouns/index.html#pronouns-and-variables",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n5.2 Pronouns and Variables",
    "text": "5.2 Pronouns and Variables\nIn the Table below, we have a rough mapping of interrogative pronouns to the kinds of variables in the data:\n\n\n\n\n\n\n\n\n\nPronoun\nAnswer\nVariable / Scale\nE xample\nWhat O perations?\n\n\n\nWhat, Who, Where, Whom, Which\nName, Place, Animal, Thing\nQ ualitative / N ominal**\nName\n\nCount no. of cases\nMode\n\n\n\nHow, What Kind, What Sort\nA Manner / Method, Type or A ttribute from a list, with list items in some ‚Äù or der**‚Äù ( e.g.¬†good, better, i mproved, best..)\nQ ualitative / O rdinal**\n\n\nSo cio-ec onomic\n\nstatus\n(‚Äúlow\ni\nncome, middle i ncome,\nhigh i ncome)\n\n\nedu cation\nlevel\n\n\n(‚Äúhigh\nsch ool‚Äù,‚Äù\nBS‚Äù ,‚ÄúMS‚Äù, ‚ÄúPhD‚Äù)\n\n\nincome\nlevel\n\n\n(‚Äúless\nthan\n50K‚Äù, ‚Äú5 0K-100 K‚Äù ,‚Äúover\n100K‚Äù)\n\n\nSatisf action ra\ntin g(‚Äúext remely\ndis like‚Äù, ‚Äù\ndis like‚Äù, ‚Äù n\neut ral‚Äù,‚Äù like‚Äù, ‚Äù\next remely l ike‚Äù).\n\n\n\n\nMedian\nP ercentiles\n\n\n\nHow Many / Much / Heavy? Few? Seldom? Often? When?\n\nQ uantities with Scale.\nD iff e rences are me a ningful, but not products or ratios\n\nQu antitative / Interval\n\npH\n\nSAT\nscore ( 20 0-800)\n\n\nCredit\nscore\n(30 0-850)\n\nYear of St arting in C ollege\n\n\nMean\n\nStandard\nDeviation\n\n\n\n\nHow Many / Much / Heavy? Few? Seldom? Often? When?\n\nQu a ntities, with Scale and a Zero Value.\nDi f ferences and Ratios / Products are me a ningful. (e.g Weight )\n\nQua n titative / Ratio**\n\n\n\nW eight,\nL ength,\n\n\nHeight\n\nTe\n\nm pe rature in\nKelvin\n\nEnzyme\n\na ct ivity, dose\na mount,\nre action rate, flow\nr at e,conc e nt ration\n\nPulse\nSu rvival\n\ntime\n\n\n\nCo\n\nrre lation - Coeff of\nV ariation\n\n\n\n\nAs you go from Qualitative to Quantitative data types in the table, I hope you can detect a movement from fuzzy groups/categories to more and more crystallized numbers. Each variable/scale can be subjected to the operations of the previous group. In the words of S.S. Stevens (https://psychology.okstate.edu/faculty/jgrice/psyc3214/Stevens_FourScales_1946.pdf)\n\nthe basic operations needed to create each type of scale is cumulative: to an operation listed opposite a particular scale must be added all those operations preceding it.\n\nDo think about this as you work with data.\n\nDo take a look at these references:\n\nhttps://stats.idre.ucla.edu/other/mult-pkg/whatstat/what-is-the-difference-between-categorical-ordinal-and-interval-variables/\nhttps://www.freecodecamp.org/news/types-of-data-in-statistics-nominal-ordinal-interval-and-ratio-data-types-explained-with-examples/"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/index.html#the-mpg-dataset",
    "href": "content/labs/r-labs/pronouns/index.html#the-mpg-dataset",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n5.3 The mpg dataset",
    "text": "5.3 The mpg dataset\nnames(mpg) # Column, i.e. Variable names\n[1] ‚Äúmanufacturer‚Äù ‚Äúmodel‚Äù ‚Äúdispl‚Äù ‚Äúyear‚Äù ‚Äúcyl‚Äù\n[6] ‚Äútrans‚Äù ‚Äúdrv‚Äù ‚Äúcty‚Äù ‚Äúhwy‚Äù ‚Äúfl‚Äù\n[11] ‚Äúclass‚Äù\nhead(mpg) # first six rows\n\n\n\n  \n\n\ntail(mpg) # Last six rows\n\n\n\n  \n\n\ndim(mpg) # Size of dataset\n[1] 234 11\n# Check for missing data\nany(is.na(mpg) == TRUE)\n[1] FALSE\n\n5.3.1 YOUR TURN-2\nLook carefully at the variables here. How would you interpret say the cyl variable? Is it a number and therefore Quantitative, or could it be something else?"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/index.html#single-qualitativecategorical-nominal-variable",
    "href": "content/labs/r-labs/pronouns/index.html#single-qualitativecategorical-nominal-variable",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.1 Single Qualitative/Categorical/ Nominal Variable",
    "text": "6.1 Single Qualitative/Categorical/ Nominal Variable\n\nQuestions: Which? What Kind? How? How many of each Kind?\n\n\nIsland ( Which island ? )\nSpecies ( Which Species? )\n\n\nCalculations: No of levels / Counts for each level\n\n\n\n\ncount / tally of no. of penguins on each island or in each species\n\nsort and order by island or species\n\n\nCharts: Bar Chart / Pie Chart / Tree Map\n\n\n\ngeom_bar / geom_bar + coord_polar() / Find out!!\n\npenguins %>% count(species)\n\n\n\n  \n\n\nggplot(penguins) + geom_bar(aes(x = island))\n\n\n\nggplot(penguins) + geom_bar(aes(x = sex))\n\n\n\n\n6.1.1 YOUR TURN-3"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/index.html#single-quantitative-variable",
    "href": "content/labs/r-labs/pronouns/index.html#single-quantitative-variable",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.2 Single Quantitative Variable",
    "text": "6.2 Single Quantitative Variable\n\nQuestions: How many? How few? How often? How much?\nCalculations: max / min / mean / mode / (units)\n\n\n\nmax(), min(), range(), mean(), mode(), summary()\n\n\n\nCharts: Bar Chart / Histogram / Density\n\n\ngeom_histogram() / geom_density()\n\n\n\n\nmax(penguins$bill_length_mm)\n[1] 59.6\nrange(penguins$bill_length_mm, na.rm =TRUE) \n[1] 32.1 59.6\nsummary(penguins$flipper_length_mm)\nMin. 1st Qu. Median Mean 3rd Qu. Max. 172 190 197 201 213 231\nggplot(penguins) + geom_density(aes(bill_length_mm))\n\n\n\nggplot(penguins) + geom_histogram(aes(x = bill_length_mm))\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n6.2.1 YOUR TURN-4\nAre all the above Quantitative variables ratio variables? Justify."
  },
  {
    "objectID": "content/labs/r-labs/pronouns/index.html#two-variables-quantitative-vs-quantitative",
    "href": "content/labs/r-labs/pronouns/index.html#two-variables-quantitative-vs-quantitative",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.3 Two Variables: Quantitative vs Quantitative",
    "text": "6.3 Two Variables: Quantitative vs Quantitative\nWe can easily extend our intuition about one quantitative variable, to a pair of them. What Questions can we ask?\n\nQuestions: How many of this vs How many of that? Does this depend upon that? How are they related? (Remember \\(y = mx + c\\) and friends?)\nCalculations: Correlation / Covariance / T-test / Chi-Square Test for Two Means etc. We won‚Äôt go into this here !\nCharts: Scatter Plot / Line Plot / Regression i.e.¬†best fit lines\n\ncor(penguins$bill_length_mm, penguins$bill_depth_mm)\n[1] -0.2286256\nggplot(penguins) +\n  geom_point(aes(x = flipper_length_mm,\n                 y = body_mass_g))\n\n\n\nggplot(penguins) +\n  geom_point(aes(x = flipper_length_mm, \n                 y = bill_length_mm))\n\n\n\n\n6.3.1 YOUR TURN-5"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/index.html#two-variables-categorical-vs-categorical",
    "href": "content/labs/r-labs/pronouns/index.html#two-variables-categorical-vs-categorical",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.4 Two Variables: Categorical vs Categorical",
    "text": "6.4 Two Variables: Categorical vs Categorical\nWhat sort of question could we ask that involves two categorical variables?\n\nQuestions: How Many of this Kind( ~x) are How Many of that Kind( ~y ) ?\n\nCalculations: Counts and Tallies sliced by Category\n\n\ncounts , tally\n\n\n\n\nCharts: Stacked Bar Charts / Grouped Bar Charts / Segmented Bar Chart / Mosaic Chart\n\ngeom_bar()\nUse the second Categorical variables to modify fill, color.\nAlso try to vary the parameter position of the bars.\n\n\n\nggplot(penguins) + geom_bar(aes(x = island, \n                                fill = species),\n                            position = \"stack\")\n\n\n\nStoryline: ‡§§‡•Ä‡§® ‡§™‡•á‡§®‡§ó‡•Ä‡§®‡•§ ‡§î‡§∞ ‡§§‡•Å‡§Æ ‡§≠‡•Ä ‡§§‡•Ä‡§®(Oh never mind!)\n\n6.4.1 YOUR TURN-6"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/index.html#two-variables-quantitative-vs-qualitative",
    "href": "content/labs/r-labs/pronouns/index.html#two-variables-quantitative-vs-qualitative",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.5 Two Variables: Quantitative vs Qualitative",
    "text": "6.5 Two Variables: Quantitative vs Qualitative\nFinally, what if we want to look at Quant variables and Qual variables together? What questions could we ask?\n\nQuestions: How much of this is Which Kind of that? How many vs Which? How many vs How?\nCalculations: Counts, Means, Ranges etc., grouped by Categorical variable.\n\nggplot(penguins) + \n    geom_density(aes(x = body_mass_g, \n                 color = island, \n                 fill = island), \n                 alpha = 0.3)\n\n\n\n\nCharts: Bar Chart using group / density plots by group / violin plots by group / box plots by group\n\n\n\ngeom_bar / geom_density / geom_violin / geom_boxplot using Categorical Variable for grouping\n\nggplot(penguins) + \n    geom_density(aes(x = body_mass_g, \n                 color = island, \n                 fill = island), \n                 alpha = 0.3)\n\n\n\nggplot(penguins) + \n  geom_histogram(aes(x = flipper_length_mm,\n                 fill = sex))\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n6.5.1 YOUR TURN-7\n\n6.5.2 Time to Play\n\nCreate a fresh RMarkdown and similarly analyse two datasets of the following data sets\n\n\nAny dataset in your R installation. Type data() in your console to see what is available.\ndiamonds . This dataset is part of the tidyverse package so just type diamonds in your code and there it is.\ngapminder !! Yes!!You will need to install the gapminder package to access this dataset\nmosaicData package datasets. Install mosaicData\ndata.world: Find Datasets of your choice: https://docs.data.world/en/64499-64516-Quickstarts-and-tutorials.html\nkaggle: https://www.kaggle.com/datasets"
  },
  {
    "objectID": "content/labs/r-labs/r-labs-listing.html",
    "href": "content/labs/r-labs/r-labs-listing.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "Lab 01 - Introduce Yourself\n\n\nInstalling and Getting Started with R!\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 01 - Introduce Yourself\n\n\nInstalling and Getting Started with R!\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 01 - Introduce Yourself\n\n\nInstalling and Getting Started with R!\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 01 - Introduce Yourself\n\n\nInstalling and Getting Started with R!\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 01 - Introduce Yourself\n\n\nInstalling and Getting Started with R!\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 07 - The Grammar of Networks\n\n\nInstalling and Getting Started with R!\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJun 21, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-02: Pronouns and Data\n\n\n\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/labs/r-labs/time/index.html",
    "href": "content/labs/r-labs/time/index.html",
    "title": "Lab 01 - Introduce Yourself",
    "section": "",
    "text": "At the end of this Lab, we will:\n\nhave installed R and RStudio on our machines\nunderstood how to add additional R-packages for specific features and graphic capability\nrun code within RStudio and interpret the results\nhave learnt to look for help within R and RStudio"
  },
  {
    "objectID": "content/labs/r-labs/time/index.html#Check-In-R",
    "href": "content/labs/r-labs/time/index.html#Check-In-R",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n3.1 Check in",
    "text": "3.1 Check in\nLaunch R by clicking this logo. You should see one console with a command line interpreter. Try typing 2 + 2 and check !\nClose R."
  },
  {
    "objectID": "content/labs/r-labs/time/index.html#Check-In-RStudio",
    "href": "content/labs/r-labs/time/index.html#Check-In-RStudio",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n4.1 Check in",
    "text": "4.1 Check in\nLaunch RStudio. You should get a window similar to the screenshot you see here, but yours will be empty. Look at the bottom left pane: this is the same console window you saw when you opened R in step @Check-In-R\n\nPlace your cursor where you see > and type x <- 2 + 2 again hit enter or return, then type x, and hit enter/return again.\nIf [1] 4 prints to the screen, you have successfully installed R and RStudio, and you can move onto installing packages."
  },
  {
    "objectID": "content/labs/r-labs/time/index.html#save-and-share",
    "href": "content/labs/r-labs/time/index.html#save-and-share",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n7.1 Save and share",
    "text": "7.1 Save and share\nSave your work so you can share your favorite plot with us. You will not like the looks of your plot if you mouse over to Export and save it. Instead, use ggplot2‚Äôs command for saving a plot with sensible defaults:\n\nShow the Codehelp(ggsave)\n\n\n\nShow the Codeggsave(\"file_name_here.pdf\", plot) # please make the filename unique!\n\n\nUpload this exported plot to Teams -> Assignments.\nBefore you do that, check that you can submit stuff/assignments on the MLS by uploading a cat picture üêà first, especially if you are an ailurophile like me. (Acceptable Breeds: Scottish Folds or Maine Coons)"
  },
  {
    "objectID": "content/posts/01-intro/history.html",
    "href": "content/posts/01-intro/history.html",
    "title": "Boston Terrier",
    "section": "",
    "text": "The Boston Terrier is a breed of dog originating in the United States of America. This ‚ÄúAmerican Gentleman‚Äù was accepted in 1893 by the American Kennel Club as a non-sporting breed.1 Color and markings are important when distinguishing this breed from the AKC standard. They should be either black, brindle or seal with white markings.2 Boston Terriers are small and compact with a short tail and erect ears. The AKC says they are highly intelligent and very easily trained.3 They are friendly and can be stubborn at times. The average life span of a Boston Terrier is around 11 to 13 years.4 The American Kennel Club ranked the Boston Terrier as the 21st most popular breed in 2019.5"
  },
  {
    "objectID": "content/posts/01-intro/history.html#history",
    "href": "content/posts/01-intro/history.html#history",
    "title": "Boston Terrier",
    "section": "History",
    "text": "History\n\n\n\n\n\nTerrier Seated\n\n\n\n\nThe Boston terrier breed originated around 1875, when Robert C. Hooper of Boston purchased from Edward Burnett a dog named Judge (known later as Hooper‚Äôs Judge), which was of a bull and terrier type lineage. Hooper‚Äôs Judge is directly related to the original bull and terrier breeds of the 19th and early 20th centuries. The American Kennel Club cites Hooper‚Äôs Judge as the ancestor of all true modern Boston Terriers. Judge weighed about 32 pounds (15 kg).\n\n\n\n\nJudge was bred to Burnett‚Äôs Gyp (or Kate). Gyp was a white bulldog-type female, owned by Edward Burnett, of Southboro, Massachusetts. She weighed about 20 pounds (9.1 kg), was stocky and strong and had the typical blocky head now shown in Bostons. From this foundation of the breed, subsequent breeders refined the breed into its modern day presentation. Bred down in size from fighting dogs of the bull and terrier types, the Boston Terrier originally weighed up to 44 pounds (20 kg) (Old Boston Bulldogs).\n\n\n\n\n\n\nA young male Boston Terrier with a Brown brindle coat\n\nThe breed was first shown in Boston in 1870. By 1889 the breed had become sufficiently popular in Boston that fanciers formed the American Bull Terrier Club, the breed‚Äôs nickname, ‚Äúroundheads‚Äù. Shortly after, at the suggestion of James Watson (a noted writer and authority), the club changed its name to the Boston Terrier Club and in 1893 it was admitted to membership in the American Kennel Club, thus making it the first US breed to be recognized. It is one of a small number of breeds to have originated in the United States. The Boston Terrier was the first non-sporting dog breed in the US.\nIn the early years, the color and markings were not very important to the breed‚Äôs standard. By the 20th century the breed‚Äôs distinctive markings and color were written into the standard, becoming an essential feature. The Boston Terrier has lost most of its aggressive nature, preferring the company of humans, although some males will still challenge other dogs if they feel their territory is being invaded. Boston University has used Rhett the Boston Terrier as their mascot since 1922. Wofford College in Spartanburg, SC has had a live Boston Terrier mascot named Blitz since 2003 that attends home football games. The Boston Terrier has also been the official state dog of Massachusetts since 1979."
  },
  {
    "objectID": "content/posts/01-intro/history.html#description",
    "href": "content/posts/01-intro/history.html#description",
    "title": "Boston Terrier",
    "section": "Description",
    "text": "Description\nThe Boston Terrier is a compactly built, well-proportioned dog. It has a square-looking head with erect ears and a slightly arched neck. The muzzle is short and generally wrinkle-free, with an even or a slightly undershot bite. The chest is broad and the tail is short. According to international breed standards, the dog should weigh no more than 25 pounds (11 kg). Boston Terriers usually stand up to 15‚Äì17 inches (380‚Äì430 mm) at the withers.\nThe American Kennel Club divides the breed into three classes: under 15 pounds, 15 pounds and under 20 pounds, 20 pounds and not exceeding 25 pounds.\nCoat and color\nThe Boston Terrier is characteristically marked with white in proportion to either black, brindle, seal (color of a wet seal, a very dark brown that looks black except in the bright sun), or a combination of the three. Any other color is not accepted as a Boston Terrier by the American Kennel Club, as they are usually obtained by crossbreeding with other breeds and the dog loses its characteristic ‚Äútuxedo‚Äù appearance.6 Any Boston Terrier from AKC parentage regardless of the color, or if it is a splash or has a blue eye or weak ears, can be and are registered by the AKC and participate in any AKC sporting events.\n\n\n\nA female Boston Terrier with a black coat\n\nAccording to the American Kennel Club, the Boston Terrier‚Äôs markings are broken down into two categories: Required, which consists of a white chest, white muzzle band, and a white band between the eyes; and Desired, which includes the Required markings plus a white collar, white on the forelegs, forelegs, up to the hocks on the rear legs. For conformation showing, symmetrical markings are preferred. Due to the Boston Terrier‚Äôs markings resembling formal wear, in addition to its refined and pleasant personality, the breed is commonly referred to as ‚Äúthe American Gentleman.‚Äù\n\n\n\nAn adult male Boston Terrier with a black coat"
  },
  {
    "objectID": "content/posts/01-intro/history.html#temperament",
    "href": "content/posts/01-intro/history.html#temperament",
    "title": "Boston Terrier",
    "section": "Temperament",
    "text": "Temperament\nBoston Terrier is a gentle breed that typically has a strong, happy-go-lucky, and friendly personality with a merry sense of humor. Boston Terriers are generally eager to please their owner and can be easily trained. They can be very protective of their owners, which may result in aggressive and territorial behavior toward other pets and strangers. The breed requires only a minimal amount of grooming.\nWhile originally bred for fighting as well as hunting rats in garment factories, they were later bred for companionship. They are not considered terriers by the American Kennel Club, however, but are part of the non-sporting group.\nBoth females and males are generally quiet and bark only when necessary, Their usually sensible attitude toward barking makes them excellent choices for apartment dwellers. They enjoy being around people, get along well with children, the elderly, other canines, and non-canine pets, if properly socialized."
  },
  {
    "objectID": "content/posts/01-intro/history.html#grooming",
    "href": "content/posts/01-intro/history.html#grooming",
    "title": "Boston Terrier",
    "section": "Grooming",
    "text": "Grooming\nWith a short, shiny, smooth coat, Boston Terriers require little grooming. Bostons produce light shedding, and weekly brushing of their fine coat is effective at removing loose hair. Brushing promotes the health of the coat because it distributes skin oils, and it also encourages new hair growth. Occasional bathing is suitable for the breed.7\nThe nails of Boston Terriers require regular trimming. Overgrown nails not only have the potential to inflict pain on the breed, but they can also make walking difficult or tear off after getting snagged on something.\nSimilarly to nail trimming, tooth brushing should also be done regularly to promote good oral health. The risk of the breed developing oral pain, gum infection, or bad breath can be decreased with regular tooth brushing that removes plaque buildup and other bacteria. In addition, poor dental hygiene can lead to tooth root abscesses that can lead to damage around the tissue and eventually lead to the loss of teeth."
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html",
    "href": "content/posts/02-authoring/authoring.html",
    "title": "Housing Prices",
    "section": "",
    "text": "In this analysis, we build a model predicting sale prices of houses based on data on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020. Let‚Äôs start by loading the packages we‚Äôll use for the analysis.\n\nPackageslibrary(openintro)  # for data\nlibrary(tidyverse)  # for data wrangling and visualization\nlibrary(knitr)      # for tables\nlibrary(broom)      # for model summary\n\n\nWe present the results of exploratory data analysis in Section¬†2 and the regression model in Section¬†3."
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html#sec-eda",
    "href": "content/posts/02-authoring/authoring.html#sec-eda",
    "title": "Housing Prices",
    "section": "\n2 Exploratory data analysis",
    "text": "2 Exploratory data analysis\nThe data contains 98 houses. As part of the exploratory analysis let‚Äôs visualize and summarize the relationship between areas and prices of these houses.\n\n2.1 Data visualization\nFigure¬†1 shows two histograms displaying the distributions of price and area individually.\n\nCodeggplot(duke_forest, aes(x = price)) +\n  geom_histogram(binwidth = 50000) +\n  labs(title = \"Histogram of prices\")\n\nggplot(duke_forest, aes(x = area)) +\n  geom_histogram(binwidth = 250) +\n  labs(title = \"Histogram of areas\")\n\n\n\n\n\n(a) Histogram of prices\n\n\n\n\n\n\n(b) Histogram of areas\n\n\n\n\nFigure¬†1: Histograms of individual variables\n\n\n\nFigure¬†2 displays the relationship between these two variables in a scatterplot.\n\nCodeggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point() +\n  labs(title = \"Price and area of houses in Duke Forest\")\n\n\n\nFigure¬†2: Scatterplot of price vs.¬†area of houses in Duke Forest\n\n\n\n\n\n2.2 Summary statistics\nTable¬†1 displays basic summary statistics for these two variables.\n\nCodeduke_forest %>%\n  summarise(\n    `Median price` = median(price),\n    `IQR price` = IQR(price),\n    `Median area` = median(area),\n    `IQR area` = IQR(area),\n    `Correlation, r` = cor(price, area)\n    ) %>%\n  kable(digits = c(0, 0, 0, 0, 2))\n\n\n\nTable¬†1: Summary statistics for price and area of houses in Duke Forest\n\nMedian price\nIQR price\nMedian area\nIQR area\nCorrelation, r\n\n\n540000\n193125\n2623\n1121\n0.67"
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html#sec-model",
    "href": "content/posts/02-authoring/authoring.html#sec-model",
    "title": "Housing Prices",
    "section": "\n3 Modeling",
    "text": "3 Modeling\nWe can fit a simple linear regression model of the form shown in Equation¬†1.\n\nprice = \\hat{\\beta_0} + \\hat{\\beta_1} \\times area + \\epsilon\n\\tag{1}\nTable¬†2 shows the regression output for this model.\n\nCodeprice_fit <- lm(price ~ area, data = duke_forest)\n  \nprice_fit %>%\n  tidy() %>%\n  kable(digits = c(0, 0, 2, 2, 2))\n\n\n\nTable¬†2: Linear regression model for predicting price from area\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n(Intercept)\n116652\n53302.46\n2.19\n0.03\n\n\narea\n159\n18.17\n8.78\n0.00\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis is a pretty incomplete analysis, but hopefully the document provides a good overview of some of the authoring features of Quarto !"
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html#crossreferences",
    "href": "content/posts/02-authoring/authoring.html#crossreferences",
    "title": "Housing Prices",
    "section": "\n4 Crossreferences",
    "text": "4 Crossreferences\nWe present the results of exploratory data analysis in Section¬†2 and the regression model in Section¬†3 .\nFigure¬†2 displays the relationship between these two variables in a scatterplot.\nTable¬†1 displays basic summary statistics for these two variables.\nWe can fit a simple linear regression model of the form shown in Equation¬†1."
  },
  {
    "objectID": "content/posts/02-authoring/callout-boxes.html",
    "href": "content/posts/02-authoring/callout-boxes.html",
    "title": "Callout Boxes",
    "section": "",
    "text": ":::{.callout-note}\nNote that there are five types of callouts, including:\n`note`, `warning`, `important`, `tip`, and `caution`.\n:::\n\n:::{.callout-tip}\n## Tip With Caption\n\nThis is an example of a callout with a caption.\n:::\n\n:::{.callout-caution collapse=\"true\"}\n## Expand To Learn About Collapse\n\nThis is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make a collapsible callout that is expanded by default.\n:::"
  },
  {
    "objectID": "content/posts/02-authoring/figure-layout.html",
    "href": "content/posts/02-authoring/figure-layout.html",
    "title": "Figure Layouts",
    "section": "",
    "text": "# returns a tibble of the files\n# \nfs::dir_info(here::here(\"content/materials/images\"))\n\n# A tibble: 7 √ó 18\n  path             type     size permi‚Ä¶¬π modification_time   user  group devic‚Ä¶¬≤\n  <fs::path>       <fct> <fs::b> <fs::p> <dttm>              <chr> <chr>   <dbl>\n1 ‚Ä¶Terrier001.jpeg file   31.11K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n2 ‚Ä¶en_Forever.jpeg file   18.72K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n3 ‚Ä¶rrier_male.jpeg file   54.81K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n4 ‚Ä¶ages/avatar.jpg file    8.73K rw-     2022-09-17 06:19:54 <NA>  <NA>   2.93e9\n5 ‚Ä¶oston-sleep.png file  101.59K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n6 ‚Ä¶ton-terrier.png file   72.69K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n7 ‚Ä¶c_Library).jpeg file   32.09K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n# ‚Ä¶ with 10 more variables: hard_links <dbl>, special_device_id <dbl>,\n#   inode <dbl>, block_size <dbl>, blocks <dbl>, flags <int>, generation <dbl>,\n#   access_time <dttm>, change_time <dttm>, birth_time <dttm>, and abbreviated\n#   variable names ¬π‚Äãpermissions, ¬≤‚Äãdevice_id\n\n\n\n# returns paths/files\nfs::dir_ls(here::here(\"content/materials/images\"))\n\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/330px-BostonTerrier001.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/330px-Boston_Terrier_Eden_Forever.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/330px-Boston_Terrier_male.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/avatar.jpg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/boston-sleep.png\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/boston-terrier.png\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/Terrier_Seated_(Boston_Public_Library).jpeg"
  },
  {
    "objectID": "content/posts/02-authoring/figure-layout.html#figures",
    "href": "content/posts/02-authoring/figure-layout.html#figures",
    "title": "Figure Layouts",
    "section": "Figures",
    "text": "Figures\nBasic markdown syntax:\n   ![Boston Terrier](images/boston-terrier.png)\n\n\nBoston Terrier"
  },
  {
    "objectID": "content/posts/02-authoring/figure-layout.html#fragments",
    "href": "content/posts/02-authoring/figure-layout.html#fragments",
    "title": "Figure Layouts",
    "section": "Fragments",
    "text": "Fragments\n\n\n   ![Boston terrier](images/boston-terrier.png){fig-align=\"left\"}\n\n\n![](images/boston-terrier.png){fig-align=\"right\" fig-alt=\"A photo a Boston Terrier.\"}"
  },
  {
    "objectID": "content/posts/02-authoring/figure-layout.html#subfigures",
    "href": "content/posts/02-authoring/figure-layout.html#subfigures",
    "title": "Figure Layouts",
    "section": "Subfigures",
    "text": "Subfigures\n::: {#fig-bostons layout-ncol=2}\n\n![Excited](images/boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](images/boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard\n\n:::"
  },
  {
    "objectID": "content/posts/02-authoring/figure-layout.html#subfigures-1",
    "href": "content/posts/02-authoring/figure-layout.html#subfigures-1",
    "title": "Figure Layouts",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\nFigure¬†1: Two states of Howard"
  },
  {
    "objectID": "content/posts/03-computation/inline-code.html",
    "href": "content/posts/03-computation/inline-code.html",
    "title": "Inline Code",
    "section": "",
    "text": "library(tidyverse)\n\n‚îÄ‚îÄ Attaching packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 1.3.2 ‚îÄ‚îÄ\n‚úî ggplot2 3.4.0      ‚úî purrr   1.0.0 \n‚úî tibble  3.1.8      ‚úî dplyr   1.0.10\n‚úî tidyr   1.2.1      ‚úî stringr 1.5.0 \n‚úî readr   2.1.3      ‚úî forcats 0.5.2 \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n\nlibrary(palmerpenguins)\nThe dataset contains 344 penguin size measurements from Adelie, Gentoo, Chinstrap species across Torgersen, Biscoe, Dream islands.."
  },
  {
    "objectID": "content/posts/03-computation/inline-code.html#what-about-formatting",
    "href": "content/posts/03-computation/inline-code.html#what-about-formatting",
    "title": "Inline Code",
    "section": "What about formatting?",
    "text": "What about formatting?\n\npen_summary <- penguins |> \n  group_by(species) |> \n  summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))\n\nThe average body mass by species is 3700.6622517, 3733.0882353, 5076.0162602.\nWe can do better!\n\nbody_mass <- scales::label_number(big.mark = \",\", accuracy = 0.1, suffix = \"g\")(pull(pen_summary, avg_mass))\n\nbody_mass\n\n[1] \"3,700.7g\" \"3,733.1g\" \"5,076.0g\"\n\n\nThe average body mass by species is 3,700.7g, 3,733.1g, 5,076.0g.\nWe can still do better!\n\nmass_reporter <- glue::glue_collapse(body_mass, sep = \", \", last = \", and \")\n\nThe average body mass by species is 3,700.7g, 3,733.1g, and 5,076.0g."
  },
  {
    "objectID": "content/posts/03-computation/inline-code.html#reporting-with-lists",
    "href": "content/posts/03-computation/inline-code.html#reporting-with-lists",
    "title": "Inline Code",
    "section": "Reporting with lists",
    "text": "Reporting with lists\nCredit to TJ Mahr\n\nknitted <- list(\n  when = format(Sys.Date()),\n  with = system(\"quarto --version\", intern = TRUE)\n)\n\nReported prepared on 2023-01-05 with quarto version 1.2.280."
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html",
    "href": "content/posts/03-computation/visual-editor.html",
    "title": "Visual Editor for Quarto",
    "section": "",
    "text": "RStudio 2022.07.1 comes with support for the Visual Mode of editing Quarto and other markdown-based files!\nThis is a WYSIWYM editor, meaning:\n\nWYSIWYM is an acronym that stands for What you see is what you mean. This was positioned to not be confused with WYSIWYG (what you see is what you get). The idea behind WYSIWYG is to display text on screen in much the exact same way as they will appear when printed on paper.\n\nWYSIWYM means that it can be translated differently, (where) the same content can lead to different output formats .\n\nThe Visual Markdown mode in RStudio allows for editing in plain text or visual mode, along with a visual representation of what it will actually look like while maintaining the ability to output to HTML or PDF.\nFull guide guide from the RStudio dev team that covers all the major topics and sub topics of the new features.\n\n\nOS\nDownload\nSize\nSHA-256\n\n\n\nWindows 10/11\n\nRStudio-2022.07.1-554.exe(opens in a new tab)\n\n190.14 MB\n5ab6215b\n\n\nmacOS 10.15+\n\nRStudio-2022.07.1-554.dmg(opens in a new tab)\n\n221.04 MB\n7b1a2285\n\n\nUbuntu 18+/Debian 10+\n\nrstudio-2022.07.1-554-amd64.deb(opens in a new tab)\n\n132.91 MB\n74b9e751\n\n\nUbuntu 22\n\nrstudio-2022.07.1-554-amd64.deb(opens in a new tab)\n\n145.33 MB\n92f2ab75\n\n\nFedora 19/Red Hat 7\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n103.29 MB\n0fc15d16\n\n\nFedora 34/Red Hat 8\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n149.77 MB\n0c4ef334\n\n\nOpenSUSE 15\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n133.76 MB\n45f277d0\n\n\n\n\n\nMarkdown documents can be edited in either source or visual button at the top-right of the document toolbar (or alternatively the ‚åò + ‚áß + F4 keyboard shortcut):\n\n\nPlease see long section of the guide.\n\nIf you have a workflow that involves editing in both visual and source mode, you may want to ensure that the same markdown is written no matter which mode edits originate from. You can accomplish this using the canonical option. For example:\n---\ntitle: \"My Document\"\neditor_options:\n  markdown:\n    wrap: 72\n    references: \n      location: block\n    canonical: true\n---\n\nThe editor toolbar includes buttons for the most commonly used formatting commands:\n\nAdditional commands are available on the Format, Insert, and Table menus:\n\n\n\n\n\n\n\n\n\n\n\n\nCommand\nKeyboard Shortcut\nMarkdown Shortcut\n\n\n\nBold\n‚åò B\n**bold**\n\n\nItalic\n‚åò I\n*italic*\n\n\nCode\n‚åò D\n`code`\n\n\nLink\n‚åò K\n<href>\n\n\nHeading 1\n‚å•‚åò 1\n#\n\n\nHeading 2\n‚å•‚åò 2\n##\n\n\nHeading 3\n‚å•‚åò 3\n###\n\n\nR Code Chunk\n‚å•‚åò I\n```{r}\n\n\n\nYou can also use the catch-all ‚åò/ shortcut to insert just about anything. Just execute the shortcut then type what you want to insert. For example:\nUse the bullet\n\nOutput\n\nOr numbered\n\nNumber list!\n\nHere‚Äôs a link - how to turn into an image?\n\nEXAMPLE LINK: https://rstudio.github.io/visual-markdown-editing/images/visual-editing-omni-list.png"
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html#equations",
    "href": "content/posts/03-computation/visual-editor.html#equations",
    "title": "Visual Editor for Quarto",
    "section": "Equations",
    "text": "Equations\nLaTeX equations are authored using standard Pandoc markdown syntax (the editor will automatically recognize the syntax and treat the equation as math). When you aren‚Äôt directly editing an equation it will appear as rendered math:\n\\[\nP(E) = {n \\choose k} p^k (2-p)^{n-k}\n\\]\n\nFootnotes\n\nYou can include footnotes using the Insert -> Footnote command (or the ‚áß ‚åò F7 keyboard shortcut). Footnote editing occurs in a pane immediately below the main document:1 <- NOTE THE FOOTMARK"
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html#inserting-citations",
    "href": "content/posts/03-computation/visual-editor.html#inserting-citations",
    "title": "Visual Editor for Quarto",
    "section": "Inserting Citations",
    "text": "Inserting Citations\nYou insert citations by either using the Insert -> Citation command or by using markdown syntax directly (e.g.¬†[@cite]).\nCitations go inside square brackets and are separated by semicolons. Each citation must have a key, composed of ‚Äò@‚Äô + the citation identifier from the database, and may optionally have a prefix, a locator, and a suffix. The citation key must begin with a letter, digit, or _, and may contain alphanumerics, _, and internal punctuation characters (:.#$%&-+?<>~/). Here are some examples:\n\n(Rottman-Sagebiel et al. 2018)\nDEMO OF CITATION WITH INSERT"
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html#embedded-code",
    "href": "content/posts/03-computation/visual-editor.html#embedded-code",
    "title": "Visual Editor for Quarto",
    "section": "Embedded Code",
    "text": "Embedded Code\nSource code which you include in an Quarto document can either by for display only or can be executed by knitr as part of rendering. Code can furthermore be either inline or block (e.g.¬†an Rmd code chunk).\nDisplaying Code\nTo display but not execute code, either use the Insert -> Code Block menu item, or start a new line and type either:\n\n``` (for a plain code block); or\n```<lang> (where <lang> is a language) for a code block with syntax highlighting.\n\nThen press the Enter key. To display code inline, simply surround text with backticks (`code`), or use the Format -> Code menu item.\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %>% \n  ggplot(aes(x = body_weight_g, y = flipper_length_mm, color = species)) +\n  geom_point()\nCode Chunks\nTo insert an executable code chunk, use the Insert -> Code Chunk menu item, or start a new line and type:\n```{r}\nThen press the Enter key. Note that r could be another language supported by knitr (e.g.¬†python or sql) and you can also include a chunk label and other chunk options.\nTo include inline R code, you just create normal inline code (e.g.¬†by using backticks or the ‚åò D shortcut) but preface it with r. For example, this inline code will be executed by knitr: 2023-01-05. Note that when the code displays in visual mode it won‚Äôt have the backticks (but they will still appear in source mode).\n\npenguin_plot <- penguins %>% \n  na.omit() %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_point(aes(color = species)) +\n  labs(title = \"Important Penguins\") +\n  geom_smooth(method = \"lm\", color = \"black\")\n\npenguin_plot\n\n\n\n\nR generated Tables\n\nlibrary(gt)\n\npenguins %>% \n  na.omit() %>% \n  select(species, bill_length_mm, body_mass_g) %>% \n  head() %>% \n  gt()\n\n\n\n\n\n\nspecies\n      bill_length_mm\n      body_mass_g\n    \n\n\nAdelie\n39.1\n3750\n\n\nAdelie\n39.5\n3800\n\n\nAdelie\n40.3\n3250\n\n\nAdelie\n36.7\n3450\n\n\nAdelie\n39.3\n3650\n\n\nAdelie\n38.9\n3625\n\n\n\n\n\n\n\nlibrary(reactable)\npenguins %>% \n  filter(species == \"Adelie\") %>% \n  na.omit() %>% \n  select(species, bill_length_mm, body_mass_g) %>% \n  reactable(defaultPageSize = 5)"
  },
  {
    "objectID": "content/posts/04-static/bootswatch-themed.html",
    "href": "content/posts/04-static/bootswatch-themed.html",
    "title": "Bootswatch Themed QMD",
    "section": "",
    "text": "Plots\nThis is the world‚Äôs most amazing plot. Everyone loves penguins.\nPenguins are fancy.\nThere are 344 in the dataset of interest.\n\nShow the codepenguins %>% \n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point()\n\n\n\n\nYou can also include tables. Tables are super cool. I love tables and I love penguins. I am subject to oversight by the penguin overlords. The eternals are friends with the penguins.\n\nShow the codepenguins %>% \n  na.omit() %>% \n  group_by(species, sex) %>% \n  rename(\n    body_mass = body_mass_g, bill_length = bill_length_mm, \n    bill_depth = bill_depth_mm\n    ) %>% \n  summarise(\n    n = n(),\n    across(\n      .cols = c(body_mass, bill_length, bill_depth),\n      .fns = list(mean = mean, sd = sd)\n    ),\n    .groups = \"drop\"\n  ) %>% \n  gt(rowname_col = \"sex\") %>% \n  cols_label(\n    n = \"N\", body_mass_mean = \"Mean\", body_mass_sd = \"SD\", \n    bill_length_mean= \"Mean\", bill_length_sd = \"SD\",\n    bill_depth_mean = \"Mean\", bill_depth_sd = \"SD\"\n    ) %>% \n  gt::tab_spanner(\n    label = \"Body Mass (g)\",\n    columns = 4:5\n  ) %>% \n  gt::tab_spanner(\n    label = \"Bill Length (mm)\",\n    columns = 6:7\n  ) %>% \n  gt::tab_spanner(\n    label = \"Bill Depth (mm)\",\n    columns = 8:9\n  ) %>% \n  fmt_number(\n    columns = c(where(is.numeric), -n)\n  )\n\n\n\n\n\n\n\n\n      species\n      N\n      \n        Body Mass (g)\n      \n      \n        Bill Length (mm)\n      \n      \n        Bill Depth (mm)\n      \n    \n\nMean\n      SD\n      Mean\n      SD\n      Mean\n      SD\n    \n\n\n\nfemale\nAdelie\n73\n3,368.84\n269.38\n37.26\n2.03\n17.62\n0.94\n\n\nmale\nAdelie\n73\n4,043.49\n346.81\n40.39\n2.28\n19.07\n1.02\n\n\nfemale\nChinstrap\n34\n3,527.21\n285.33\n46.57\n3.11\n17.59\n0.78\n\n\nmale\nChinstrap\n34\n3,938.97\n362.14\n51.09\n1.56\n19.25\n0.76\n\n\nfemale\nGentoo\n58\n4,679.74\n281.58\n45.56\n2.05\n14.24\n0.54\n\n\nmale\nGentoo\n61\n5,484.84\n313.16\n49.47\n2.72\n15.72\n0.74"
  },
  {
    "objectID": "content/posts/04-static/old-rmarkdown.html",
    "href": "content/posts/04-static/old-rmarkdown.html",
    "title": "Old Markdown - reactable example",
    "section": "",
    "text": "This is an example from reactable documentation - showing the Twitter followers of some politicians.\nExample adapted from {reactable} documentation\n\nlibrary(reactable)\nlibrary(htmltools)\nlibrary(dplyr)\n\ndata <- read.csv(\"https://glin.github.io/reactable/articles/twitter-followers/twitter_followers.csv\",\n                 stringsAsFactors = FALSE)\n\n# Render a bar chart with a label on the left\nbar_chart <- function(label, width = \"100%\", height = \"14px\", fill = \"#00bfc4\", background = NULL) {\n  bar <- div(style = list(background = fill, width = width, height = height))\n  chart <- div(style = list(flexGrow = 1, marginLeft = \"6px\", background = background), bar)\n  div(style = list(display = \"flex\", alignItems = \"center\"), label, chart)\n}\n\ntbl <- reactable(\n  data,\n  pagination = FALSE,\n  defaultSorted = \"exclusive_followers_pct\",\n  defaultColDef = colDef(headerClass = \"header\", align = \"left\"),\n  columns = list(\n    account = colDef(\n      cell = function(value) {\n        url <- paste0(\"https://twitter.com/\", value)\n        tags$a(href = url, target = \"_blank\", paste0(\"@\", value))\n      },\n      width = 150\n    ),\n    followers = colDef(\n      defaultSortOrder = \"desc\",\n      cell = function(value) {\n        width <- paste0(value * 100 / max(data$followers), \"%\")\n        value <- format(value, big.mark = \",\")\n        value <- format(value, width = 9, justify = \"right\")\n        bar <- div(\n          class = \"bar-chart\",\n          style = list(marginRight = \"6px\"),\n          div(class = \"bar\", style = list(width = width, backgroundColor = \"#3fc1c9\"))\n        )\n        div(class = \"bar-cell\", span(class = \"number\", value), bar)\n      }\n    ),\n    exclusive_followers_pct = colDef(\n      name = \"Exclusive Followers\",\n      defaultSortOrder = \"desc\",\n      cell = JS(\"function(cellInfo) {\n        // Format as percentage\n        const pct = (cellInfo.value * 100).toFixed(1) + '%'\n        // Pad single-digit numbers\n        let value = pct.padStart(5)\n        // Show % on first row only\n        if (cellInfo.viewIndex > 0) {\n          value = value.replace('%', ' ')\n        }\n        // Render bar chart\n        return (\n          '<div class=\\\"bar-cell\\\">' +\n            '<span class=\\\"number\\\">' + value + '</span>' +\n            '<div class=\\\"bar-chart\\\" style=\\\"background-color: #e1e1e1\\\">' +\n              '<div class=\\\"bar\\\" style=\\\"width: ' + pct + '; background-color: #fc5185\\\"></div>' +\n            '</div>' +\n          '</div>'\n        )\n      }\"),\n      html = TRUE\n    )\n  ),\n  compact = TRUE,\n  class = \"followers-tbl\"\n)\n\ntbl\n\n\n\n\n\n\n\n# Add Google Fonts to the page\ntags$link(href = \"https://fonts.googleapis.com/css?family=Karla:400,700|Fira+Mono&display=fallback\",\n          rel = \"stylesheet\")\n\n\n\n\n\n/* CSS for the R Markdown document, inserted through a ```{css} code chunk */\n\n/* Styles for the table container, title, and subtitle */\n.twitter-followers {\n  /* Center the table */\n  margin: 0 auto;\n  /* Reduce the table width */\n  width: 575px;\n  font-family: Karla, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.followers-header {\n  margin: 8px 0;\n  font-size: 16px;\n}\n\n.followers-title {\n  font-size: 20px;\n  font-weight: 600;\n}\n\n/* Styles for the table */\n.followers-tbl {\n  font-size: 14px;\n  line-height: 18px;\n}\n\n.followers-tbl a {\n  color: inherit;\n}\n\n/* Styles for the column headers */\n.header {\n  border-bottom: 2px solid #555;\n  font-size: 13px;\n  font-weight: 400;\n  text-transform: uppercase;\n}\n\n.header:hover {\n  background-color: #eee;\n}\n\n/* Styles for the bar charts */\n.bar-cell {\n  display: flex;\n  align-items: center;\n}\n\n.number {\n  font-family: \"Fira Mono\", Consolas, Monaco, monospace;\n  font-size: 13.5px;\n  white-space: pre;\n}\n\n.bar-chart {\n  flex-grow: 1;\n  margin-left: 6px;\n  height: 14px;\n}\n\n.bar {\n  height: 100%;\n}"
  },
  {
    "objectID": "content/posts/04-static/penguin-report.html",
    "href": "content/posts/04-static/penguin-report.html",
    "title": "Penguins Distilled",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth.\n\n\nLiterate Programming\nPer Donald Knuth\n\nA programming paradigm introduced by Donald Knuth in which a computer program is given an explanation of its logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which compilable source code can be generated.\n\nInitial explore\nWe can do a quick exploration of the data with skimr::skim(). This will report the counts of various variables, along with some basic descriptive statistics. The skimr package is fantastic for quickly getting a sense of your datasets.\nAhead of skimr there are 344 penguins in this dataset, and the unique species are Adelie, Gentoo, Chinstrap.\nPer the rOpenSci skimr docs:\n\nskimr provides a frictionless approach to summary statistics which conforms to the principle of least surprise, displaying summary statistics the user can skim quickly to understand their data. It handles different data types and returns a skim_df object which can be included in a pipeline or displayed nicely for the human reader.\n\n\npenguins %>% \n  group_by(species) %>% \n  skimr::skim() %>% \n  select(-contains(\"numeric.p\"))\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n344\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nspecies\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nspecies\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\nisland\nAdelie\n0\n1.00\nFALSE\n3\nDre: 56, Tor: 52, Bis: 44\n\n\nisland\nChinstrap\n0\n1.00\nFALSE\n1\nDre: 68, Bis: 0, Tor: 0\n\n\nisland\nGentoo\n0\n1.00\nFALSE\n1\nBis: 124, Dre: 0, Tor: 0\n\n\nsex\nAdelie\n6\n0.96\nFALSE\n2\nfem: 73, mal: 73\n\n\nsex\nChinstrap\n0\n1.00\nFALSE\n2\nfem: 34, mal: 34\n\n\nsex\nGentoo\n5\n0.96\nFALSE\n2\nmal: 61, fem: 58\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nspecies\nn_missing\ncomplete_rate\nmean\nsd\nhist\n\n\n\nbill_length_mm\nAdelie\n1\n0.99\n38.79\n2.66\n‚ñÅ‚ñÜ‚ñá‚ñÜ‚ñÅ\n\n\nbill_length_mm\nChinstrap\n0\n1.00\n48.83\n3.34\n‚ñÇ‚ñá‚ñá‚ñÖ‚ñÅ\n\n\nbill_length_mm\nGentoo\n1\n0.99\n47.50\n3.08\n‚ñÉ‚ñá‚ñÜ‚ñÅ‚ñÅ\n\n\nbill_depth_mm\nAdelie\n1\n0.99\n18.35\n1.22\n‚ñÇ‚ñÜ‚ñá‚ñÉ‚ñÅ\n\n\nbill_depth_mm\nChinstrap\n0\n1.00\n18.42\n1.14\n‚ñÖ‚ñá‚ñá‚ñÜ‚ñÇ\n\n\nbill_depth_mm\nGentoo\n1\n0.99\n14.98\n0.98\n‚ñÖ‚ñá‚ñá‚ñÜ‚ñÇ\n\n\nflipper_length_mm\nAdelie\n1\n0.99\n189.95\n6.54\n‚ñÅ‚ñÜ‚ñá‚ñÖ‚ñÅ\n\n\nflipper_length_mm\nChinstrap\n0\n1.00\n195.82\n7.13\n‚ñÅ‚ñÖ‚ñá‚ñÖ‚ñÇ\n\n\nflipper_length_mm\nGentoo\n1\n0.99\n217.19\n6.48\n‚ñÇ‚ñá‚ñá‚ñÜ‚ñÉ\n\n\nbody_mass_g\nAdelie\n1\n0.99\n3700.66\n458.57\n‚ñÖ‚ñá‚ñá‚ñÉ‚ñÇ\n\n\nbody_mass_g\nChinstrap\n0\n1.00\n3733.09\n384.34\n‚ñÅ‚ñÖ‚ñá‚ñÉ‚ñÅ\n\n\nbody_mass_g\nGentoo\n1\n0.99\n5076.02\n504.12\n‚ñÉ‚ñá‚ñá‚ñá‚ñÇ\n\n\nyear\nAdelie\n0\n1.00\n2008.01\n0.82\n‚ñá‚ñÅ‚ñá‚ñÅ‚ñá\n\n\nyear\nChinstrap\n0\n1.00\n2007.97\n0.86\n‚ñá‚ñÅ‚ñÜ‚ñÅ‚ñá\n\n\nyear\nGentoo\n0\n1.00\n2008.08\n0.79\n‚ñÜ‚ñÅ‚ñá‚ñÅ‚ñá\n\n\n\n\n\nSpecific statistics\nWe can also explore specific statistics\nThe penguins split by species show a specific relationship between weight and flipper length, where the Adelie female penguins are the lighest and have the shortest flippers.\n\npenguins %>% \n  group_by(species, sex) %>% \n  summarize(\n    n = n(), \n    weight = mean(body_mass_g, na.rm = TRUE),\n    flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n    ) %>% \n  arrange(desc(weight))\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 √ó 5\n# Groups:   species [3]\n  species   sex        n weight flipper_length\n  <fct>     <fct>  <int>  <dbl>          <dbl>\n1 Gentoo    male      61  5485.           222.\n2 Gentoo    female    58  4680.           213.\n3 Gentoo    <NA>       5  4588.           216.\n4 Adelie    male      73  4043.           192.\n5 Chinstrap male      34  3939.           200.\n6 Adelie    <NA>       6  3540            186.\n7 Chinstrap female    34  3527.           192.\n8 Adelie    female    73  3369.           188.\n\n\nLooks like the Adelie are the lightest penguin. I want to see their distribution along with the overall distribution.\n\npenguins %>% \n  filter(is.na(sex))\n\n# A tibble: 11 √ó 8\n   species island    bill_length_mm bill_depth_mm flipper_‚Ä¶¬π body_‚Ä¶¬≤ sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 2 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n 3 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n 4 Adelie  Torgersen           37.8          17.1        186    3300 <NA>   2007\n 5 Adelie  Torgersen           37.8          17.3        180    3700 <NA>   2007\n 6 Adelie  Dream               37.5          18.9        179    2975 <NA>   2007\n 7 Gentoo  Biscoe              44.5          14.3        216    4100 <NA>   2007\n 8 Gentoo  Biscoe              46.2          14.4        214    4650 <NA>   2008\n 9 Gentoo  Biscoe              47.3          13.8        216    4725 <NA>   2009\n10 Gentoo  Biscoe              44.5          15.7        217    4875 <NA>   2009\n11 Gentoo  Biscoe              NA            NA           NA      NA <NA>   2009\n# ‚Ä¶ with abbreviated variable names ¬π‚Äãflipper_length_mm, ¬≤‚Äãbody_mass_g\n\n\n\nsmaller <- palmerpenguins::penguins %>% \n  filter(species == \"Adelie\", \n         !is.na(body_mass_g))\n\nCleanup the data\nIf you noticed above, there was some NA or missing data. We can remove those rows for now.\n\npenguins_clean <- penguins %>% \n  na.omit() %>% \n  mutate(species_num = as.numeric(species))\n\nPlot Section\nLet‚Äôs move on to some plots, for the overall distributions and for just the Adelie penguins. The overall distribution of the data by species shows some overlap in body weight for Adelie/Chinstrap, but more of a separation for the Gentoo penguins.\n\npenguins %>% \n  ggplot(aes(body_mass_g, fill = species)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Penguin Bins\")\n\n\n\n\nWhen we compare just within the Adelie penguins, we can see more of a specific separation of male vs female. However, there is still a decent amount of overlapping data.\n\npenguin_plot <- smaller %>% \n  filter(!is.na(sex)) %>% \n  ggplot(aes(body_mass_g, fill = sex)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n    scale_fill_manual(values = c(\"darkorange\",\"purple\")) +\n  labs(x = \"Penguin Bins\")\n\npenguin_plot\n\n\n\n\nLastly we can fit a basic linear model comparing body weight in grams to the flipper length of the penguins by specific species. There is a strong linear relationship, although it‚Äôs a bit difficult to distinguish between Chinstrap and Adelie penguins.\n\npenguin_size_plot <- penguins_clean %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = species)) + \n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  geom_point(size = 2, alpha = 0.5) +\n  labs(x = \"Mass (g)\", y = \"Flipper Length (mm)\") +\n  geom_smooth(aes(group = \"none\"), method = \"lm\")\n\npenguin_size_plot\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nWe can save the overall distribution and the linear model plot.\n\nggsave(\"penguin-dist.png\", penguin_plot, \n  dpi = \"retina\", height = 8, width = 8)\n\nggsave(\"penguin-smooth.png\", penguin_size_plot, \n  dpi = \"retina\", height = 8, width = 8)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nModeling section\nMoving on to some basic modeling we can see if what kind of relationships we observe in the data. Note that I‚Äôm really not following any plan, just indicating how you can fit some different models all at once with dplyr + broom.\n\nmodel_inputs <- tibble(\n  model_form = c(\n    list(flipper_length_mm ~ body_mass_g),\n    list(species_num ~ bill_length_mm + body_mass_g + sex),\n    list(flipper_length_mm ~ bill_length_mm + species)\n    ),\n  data = list(penguins_clean)\n) \n\nmodel_metrics <- model_inputs %>% \n  rowwise(model_form, data) %>% \n  summarize(lm = list(lm(model_form, data = data)), .groups = \"drop\") %>% \n  rowwise(model_form, lm, data) %>% \n  summarise(broom::glance(lm), .groups = \"drop\")\n\nWrap up\nWe can then take the model outcomes and throw them into a quick gt table.\n\nmodel_metrics %>% \n  select(model_form, r.squared:p.value) %>% \n  mutate(model_form = as.character(model_form)) %>% \n  gt::gt() %>% \n  gt::fmt_number(r.squared:statistic) %>% \n  gt::fmt_scientific(p.value) %>% \n  gt::cols_width(\n    model_form ~ px(150)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodel_form\n      r.squared\n      adj.r.squared\n      sigma\n      statistic\n      p.value\n    \n\n\nflipper_length_mm ~ body_mass_g\n0.76\n0.76\n6.85\n1,060.30\n3.13 √ó 10‚àí105\n\n\n\nspecies_num ~ bill_length_mm + body_mass_g + sex\n0.84\n0.84\n0.36\n583.59\n2.45 √ó 10‚àí131\n\n\n\nflipper_length_mm ~ bill_length_mm + species\n0.83\n0.83\n5.83\n529.22\n1.66 √ó 10‚àí125\n\n\n\n\n\n\n\nOverall, this was a quick overview of the beauty of literate programming. We have R code that is self-documenting, as we capture our thoughts and the outputs in a single document. We know at some level that the code works since it ‚Äúlogs‚Äù the outputs at various stages and could still output to additional log files. To render it has to run successfully in a linear fashion, and it is human readable as code, via the visual editor or even in version control like Git!"
  },
  {
    "objectID": "content/posts/05-presentations/fragments.html#make-these-columns-appear-in-order",
    "href": "content/posts/05-presentations/fragments.html#make-these-columns-appear-in-order",
    "title": "Presentation with Columns?",
    "section": "Make these columns appear in order",
    "text": "Make these columns appear in order\n\n\nThese appear first\n\nMake\nYour\nList\n\n\nThen this\n\n```{r}\nhead(mtcars)\n```\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#section",
    "href": "content/posts/05-presentations/revealjs-penguins.html#section",
    "title": "Penguin Report Presentation",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#literate-programming",
    "href": "content/posts/05-presentations/revealjs-penguins.html#literate-programming",
    "title": "Penguin Report Presentation",
    "section": "Literate Programming",
    "text": "Literate Programming\nPer Donald Knuth\n\nA programming paradigm introduced by Donald Knuth in which a computer program is given an explanation of its logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which compilable source code can be generated."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#specific-statistics",
    "href": "content/posts/05-presentations/revealjs-penguins.html#specific-statistics",
    "title": "Penguin Report Presentation",
    "section": "Specific statistics",
    "text": "Specific statistics\n\npenguins %>% \n  group_by(species, sex) %>% \n  summarize(\n    n = n(), \n    weight = mean(body_mass_g, na.rm = TRUE),\n    flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n    ) %>% \n  arrange(desc(weight))\n\n# A tibble: 8 √ó 5\n# Groups:   species [3]\n  species   sex        n weight flipper_length\n  <fct>     <fct>  <int>  <dbl>          <dbl>\n1 Gentoo    male      61  5485.           222.\n2 Gentoo    female    58  4680.           213.\n3 Gentoo    <NA>       5  4588.           216.\n4 Adelie    male      73  4043.           192.\n5 Chinstrap male      34  3939.           200.\n6 Adelie    <NA>       6  3540            186.\n7 Chinstrap female    34  3527.           192.\n8 Adelie    female    73  3369.           188."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#cleanup-the-data",
    "href": "content/posts/05-presentations/revealjs-penguins.html#cleanup-the-data",
    "title": "Penguin Report Presentation",
    "section": "Cleanup the data",
    "text": "Cleanup the data\nIf you noticed above, there was some NA or missing data. We can remove those rows for now.\n\npenguins_clean <- penguins %>% \n  na.omit() %>% \n  mutate(species_num = as.numeric(species))"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#plot-section",
    "href": "content/posts/05-presentations/revealjs-penguins.html#plot-section",
    "title": "Penguin Report Presentation",
    "section": "Plot Section",
    "text": "Plot Section\nLet‚Äôs move on to some plots, for the overall distributions and for just the Adelie penguins. The overall distribution of the data by species shows some overlap in body weight for Adelie/Chinstrap, but more of a separation for the Gentoo penguins."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#distribution",
    "href": "content/posts/05-presentations/revealjs-penguins.html#distribution",
    "title": "Penguin Report Presentation",
    "section": "Distribution",
    "text": "Distribution\n\npenguins %>% \n  ggplot(aes(body_mass_g, fill = species)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Penguin Bins\")"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#lm-scatter-plot",
    "href": "content/posts/05-presentations/revealjs-penguins.html#lm-scatter-plot",
    "title": "Penguin Report Presentation",
    "section": "LM + Scatter Plot",
    "text": "LM + Scatter Plot\n\npenguin_size_plot <- penguins_clean %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = species)) + \n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  geom_point(size = 2, alpha = 0.5) +\n  labs(x = \"Mass (g)\", y = \"Flipper Length (mm)\") +\n  geom_smooth(aes(group = \"none\"), method = \"lm\")\n\npenguin_size_plot"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#modeling-section",
    "href": "content/posts/05-presentations/revealjs-penguins.html#modeling-section",
    "title": "Penguin Report Presentation",
    "section": "Modeling section",
    "text": "Modeling section\nMoving on to some basic modeling we can see if what kind of relationships we observe in the data. Note that I‚Äôm really not following any plan, just indicating how you can fit some different models all at once with dplyr + broom."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#section-1",
    "href": "content/posts/05-presentations/revealjs-penguins.html#section-1",
    "title": "Penguin Report Presentation",
    "section": "",
    "text": "model_inputs <- tibble(\n  model_form = c(\n    list(flipper_length_mm ~ body_mass_g),\n    list(species_num ~ bill_length_mm + body_mass_g + sex),\n    list(flipper_length_mm ~ bill_length_mm + species)\n    ),\n  data = list(penguins_clean)\n) \n\nmodel_metrics <- model_inputs %>% \n  rowwise(model_form, data) %>% \n  summarize(lm = list(lm(model_form, data = data)), .groups = \"drop\") %>% \n  rowwise(model_form, lm, data) %>% \n  summarise(broom::glance(lm), .groups = \"drop\")"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#section-2",
    "href": "content/posts/05-presentations/revealjs-penguins.html#section-2",
    "title": "Penguin Report Presentation",
    "section": "",
    "text": "model_metrics %>% \n  select(model_form, r.squared:p.value) %>% \n  mutate(model_form = as.character(model_form)) %>% \n  gt::gt() %>% \n  gt::fmt_number(r.squared:statistic) %>% \n  gt::fmt_scientific(p.value) %>% \n  gt::cols_width(\n    model_form ~ px(150)\n  )\n\n\n\n\n\n  \n    \n    \n    \n    \n    \n    \n  \n  \n  \n    \n      model_form\n      r.squared\n      adj.r.squared\n      sigma\n      statistic\n      p.value\n    \n  \n  \n    flipper_length_mm ~ body_mass_g\n0.76\n0.76\n6.85\n1,060.30\n3.13 √ó 10‚àí105\n    species_num ~ bill_length_mm + body_mass_g + sex\n0.84\n0.84\n0.36\n583.59\n2.45 √ó 10‚àí131\n    flipper_length_mm ~ bill_length_mm + species\n0.83\n0.83\n5.83\n529.22\n1.66 √ó 10‚àí125"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout-2.html",
    "href": "content/posts/07-visuals/figure-layout-2.html",
    "title": "Figure Layouts-2",
    "section": "",
    "text": "::: {#fig-bostons layout-nrow=2}\n\n![Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\n![Still Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Still sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard, twice\n\n:::"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout-2.html#subfigures-1",
    "href": "content/posts/07-visuals/figure-layout-2.html#subfigures-1",
    "title": "Figure Layouts-2",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\n\n\n\n\nStill Excited\n\n\n\n\n\n\nStill sleeping\n\n\n\n\nFigure¬†1: Two states of Howard, twice"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout-2.html#subfigures-2",
    "href": "content/posts/07-visuals/figure-layout-2.html#subfigures-2",
    "title": "Figure Layouts-2",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\nExcited\n\n\n\n\n\n\nSleeping\n\n\n\n\n\n\nStill Excited\n\n\n\n\n\n\n\n\nStill sleeping\n\n\n\n\nTwo states of Howard, twice"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html",
    "href": "content/posts/07-visuals/figure-layout.html",
    "title": "Figure Layout",
    "section": "",
    "text": "library(ggplot2)"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html#figures",
    "href": "content/posts/07-visuals/figure-layout.html#figures",
    "title": "Figure Layout",
    "section": "Figures",
    "text": "Figures\nBasic markdown syntax:\n         ![Boston Terrier](boston-terrier.png)\n\n\nBoston Terrier"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html#fragments",
    "href": "content/posts/07-visuals/figure-layout.html#fragments",
    "title": "Figure Layout",
    "section": "Fragments",
    "text": "Fragments\n\n\n       ![Boston terrier](boston-terrier.png){fig-align=\"left\"}\n\n\n\n ![](boston-terrier.png){fig-align=\"right\" fig-alt=\"A photo a Boston Terrier.\"}"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html#subfigures",
    "href": "content/posts/07-visuals/figure-layout.html#subfigures",
    "title": "Figure Layout",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n![Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard\n\n\n\nFigure¬†1: ?(caption)"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html#subfigures-1",
    "href": "content/posts/07-visuals/figure-layout.html#subfigures-1",
    "title": "Figure Layout",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\nFigure¬†2: Two states of Howard"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html#custom-grid",
    "href": "content/posts/07-visuals/figure-layout.html#custom-grid",
    "title": "Figure Layout",
    "section": "Custom grid",
    "text": "Custom grid\n\n\nThis column takes 1/2 of the page\n\nggplot(mtcars, aes(x = cyl, y = disp)) +\n  geom_boxplot()\n\nWarning: Continuous x aesthetic\n‚Ñπ did you forget `aes(group = ...)`?\n\n\n\n\n\n\n\nThis column takes 1/2 of the page\n\nhead(mtcars, 5)[1:4] |> knitr::kable()\n\n\n\n\nmpg\ncyl\ndisp\nhp\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n\n\nDatsun 710\n22.8\n4\n108\n93\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n\n\nHornet Sportabout\n18.7\n8\n360\n175"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#introduction",
    "href": "content/posts/07-visuals/gt-summary.html#introduction",
    "title": "Overview of using gtsummary\n",
    "section": "Introduction",
    "text": "Introduction\nReproducible reports are an important part of good practices. We often need to report the results from a table in the text of an Quarto report. Inline reporting has been made simple with inline_text(). The inline_text() function reports statistics from {gtsummary} tables inline in an Quarto report."
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#setup",
    "href": "content/posts/07-visuals/gt-summary.html#setup",
    "title": "Overview of using gtsummary\n",
    "section": "Setup",
    "text": "Setup\nBefore going through the tutorial, install and load {gtsummary}.\n\n# install.packages(\"gtsummary\")\nlibrary(gtsummary)"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#example-data-set",
    "href": "content/posts/07-visuals/gt-summary.html#example-data-set",
    "title": "Overview of using gtsummary\n",
    "section": "Example data set",
    "text": "Example data set\nWe‚Äôll be using the trial data set throughout this example.\n\nThis set contains data from 200 patients who received one of two types of chemotherapy (Drug A or Drug B). The outcomes are tumor response and death.\n\nFor brevity in the tutorial, let‚Äôs keep a subset of the variables from the trial data set.\n\ntrial2 <-\n  trial %>%\n  select(trt, marker, stage)"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_summary",
    "href": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_summary",
    "title": "Overview of using gtsummary\n",
    "section": "Inline results from tbl_summary()",
    "text": "Inline results from tbl_summary()\nFirst create a basic summary table using tbl_summary() (review tbl_summary() vignette for detailed overview of this function if needed).\n\ntab1 <- tbl_summary(trial2, by = trt)\ntab1\n\n\n\n\n\n\nCharacteristic\n      \nDrug A, N = 981\n\n      \nDrug B, N = 1021\n\n    \n\n\nMarker Level (ng/mL)\n0.84 (0.24, 1.57)\n0.52 (0.19, 1.20)\n\n\n¬†¬†¬†¬†Unknown\n6\n4\n\n\nT Stage\n\n\n\n\n¬†¬†¬†¬†T1\n28 (29%)\n25 (25%)\n\n\n¬†¬†¬†¬†T2\n25 (26%)\n29 (28%)\n\n\n¬†¬†¬†¬†T3\n22 (22%)\n21 (21%)\n\n\n¬†¬†¬†¬†T4\n23 (23%)\n27 (26%)\n\n\n\n\n1 Median (IQR); n (%)\n    \n\n\n\n\nTo report the median (IQR) of the marker levels in each group, use the following commands inline.\n\nThe median (IQR) marker level in the Drug A and Drug B groups are 0.84 (0.24, 1.57) and 0.52 (0.19, 1.20), respectively. Here‚Äôs how the line will appear in your report.\n\n\nThe median (IQR) marker level in the Drug A and Drug B groups are 0.84 (0.24, 1.57) and 0.52 (0.19, 1.20), respectively. If you display a statistic from a categorical variable, include the level argument.\n\n\n25 (25%) resolves to ‚Äú25 (25%)‚Äù"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_regression",
    "href": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_regression",
    "title": "Overview of using gtsummary\n",
    "section": "Inline results from tbl_regression()",
    "text": "Inline results from tbl_regression()\nSimilar syntax is used to report results from tbl_regression() and tbl_uvregression() tables. Refer to the tbl_regression() vignette if you need detailed guidance on using these functions.\nLet‚Äôs first create a regression model.\n\n# build logistic regression model\nm1 <- glm(response ~ age + stage, trial, family = binomial(link = \"logit\"))\n\nNow summarize the results with tbl_regression(); exponentiate to get the odds ratios.\n\ntbl_m1 <- tbl_regression(m1, exponentiate = TRUE)\ntbl_m1\n\n\n\n\n\n\nCharacteristic\n      \nOR1\n\n      \n95% CI1\n\n      p-value\n    \n\n\nAge\n1.02\n1.00, 1.04\n0.091\n\n\nT Stage\n\n\n\n\n\n¬†¬†¬†¬†T1\n‚Äî\n‚Äî\n\n\n\n¬†¬†¬†¬†T2\n0.58\n0.24, 1.37\n0.2\n\n\n¬†¬†¬†¬†T3\n0.94\n0.39, 2.28\n0.9\n\n\n¬†¬†¬†¬†T4\n0.79\n0.33, 1.90\n0.6\n\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval\n    \n\n\n\n\nTo report the result for age, use the following commands inline.\n\n1.02 (95% CI 1.00, 1.04; p=0.091) Here‚Äôs how the line will appear in your report.\n\n\n1.02 (95% CI 1.00, 1.04; p=0.091) It is reasonable that you‚Äôll need to modify the text. To do this, use the pattern argument. The pattern argument syntax follows glue::glue() format with referenced R objects being inserted between curly brackets. The default is pattern = \"{estimate} ({conf.level*100}% CI {conf.low}, {conf.high}; {p.value})\". You have access the to following fields within the pattern argument.\n\n\n\n\n\n\n\n\nParameter\n      Description\n    \n\n\n\n{estimate}\n\nprimary estimate (e.g. model coefficient, odds ratio)\n\n\n\n{conf.low}\n\nlower limit of confidence interval\n\n\n\n{conf.high}\n\nupper limit of confidence interval\n\n\n\n{p.value}\n\np-value\n\n\n\n{conf.level}\n\nconfidence level of interval\n\n\n\n{N}\n\nnumber of observations\n\n\n\n\n\n\n\nAge was not significantly associated with tumor response (OR 1.02; 95% CI 1.00, 1.04; p=0.091). Age was not significantly associated with tumor response (OR 1.02; 95% CI 1.00, 1.04; p=0.091). If you‚Äôre printing results from a categorical variable, include the level argument, e.g. inline_text(tbl_m1, variable = stage, level = \"T3\") resolves to ‚Äú0.94 (95% CI 0.39, 2.28; p=0.9)‚Äù.\n\nThe inline_text function has arguments for rounding the p-value (pvalue_fun) and the coefficients and confidence interval (estimate_fun). These default to the same rounding performed in the table, but can be modified when reporting inline.\nFor more details about inline code, review to the RStudio documentation page."
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html",
    "href": "content/posts/07-visuals/plot-layout.html",
    "title": "Plot Layout",
    "section": "",
    "text": "library(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union"
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html#figure-layout-ncol",
    "href": "content/posts/07-visuals/plot-layout.html#figure-layout-ncol",
    "title": "Plot Layout",
    "section": "Figure layout, ncol",
    "text": "Figure layout, ncol\n\n```{r}\n#| layout-ncol: 2\n#| fig-cap:\n#|   - \"Speed and Stopping Distances of Cars\"\n#|   - \"Engine displacement and fuel efficiency in Cars\"\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n\n\n\n\nSpeed and Stopping Distances of Cars\n\n\n\n\n\n\nEngine displacement and fuel efficiency in Cars"
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html#subcaptions",
    "href": "content/posts/07-visuals/plot-layout.html#subcaptions",
    "title": "Plot Layout",
    "section": "Subcaptions:",
    "text": "Subcaptions:\n\n```{r}\n#| label: fig-charts\n#| fig-cap: Charts\n#| fig-subcap:\n#|   - \"Cars\"\n#|   - \"mtcars\"\n#| layout-ncol: 2\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n\n\n\n\n(a) Cars\n\n\n\n\n\n\n(b) mtcars\n\n\n\n\nFigure¬†1: Charts"
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html#figure-layout-custom",
    "href": "content/posts/07-visuals/plot-layout.html#figure-layout-custom",
    "title": "Plot Layout",
    "section": "Figure layout, custom",
    "text": "Figure layout, custom\n\n```{r}\n#| layout: [[45,-10, 45], [50, 50]]\n#| fig-height: 5\n#| fig-align: center\n#| message: false\n#| warning: false\n#| dpi: 300\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_smooth() +\n  theme(text = element_text(size = 20))\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()+\n  theme(text = element_text(size = 20))\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()+\n  theme(text = element_text(size = 20))\n\nmtcars %>% \n  ggplot(aes(x = cyl, y = mpg, group = cyl, color = factor(cyl))) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme(legend.position = \"none\")+\n  theme(text = element_text(size = 20))\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html",
    "href": "content/posts/07-visuals/plots.html",
    "title": "Plots",
    "section": "",
    "text": "library(palmerpenguins)\nlibrary(ggplot2)\nggplot2::theme_set(ggplot2::theme_minimal())\npenguins <- na.omit(penguins)"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#ggplot2",
    "href": "content/posts/07-visuals/plots.html#ggplot2",
    "title": "Plots",
    "section": "ggplot2",
    "text": "ggplot2\nCredit to Alison Hill + Allison Horst\n\n```{r}\nmass_flipper <- ggplot(data = penguins, \n                       aes(x = flipper_length_mm,\n                           y = body_mass_g)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin size, Palmer Station LTER\",\n       subtitle = \"Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins\",\n       x = \"Flipper length (mm)\",\n       y = \"Body mass (g)\",\n       color = \"Penguin species\",\n       shape = \"Penguin species\") +\n  theme(legend.position = c(0.2, 0.7),\n        plot.title.position = \"plot\",\n        plot.caption = element_text(hjust = 0, face= \"italic\"),\n        plot.caption.position = \"plot\",\n        plot.background = element_rect(color = \"black\"))\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#basic-plot",
    "href": "content/posts/07-visuals/plots.html#basic-plot",
    "title": "Plots",
    "section": "Basic plot",
    "text": "Basic plot\n\n```{r}\nmass_flipper\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#basic-plot-1",
    "href": "content/posts/07-visuals/plots.html#basic-plot-1",
    "title": "Plots",
    "section": "Basic plot",
    "text": "Basic plot\nIncreasing the width/DPI only affects the scaling of the image, it will not overflow.\n\n```{r}\n#| fig-width: 10\n#| fig-height: 4\n#| fig-dpi: 600\nmass_flipper\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#aside",
    "href": "content/posts/07-visuals/plots.html#aside",
    "title": "Plots",
    "section": "Aside",
    "text": "Aside\n\n\n\n\n\n\nThe palmerpenguins R package contains two datasets that we believe are a viable alternative to Anderson‚Äôs Iris data (see datasets::iris). In this introductory vignette, we‚Äôll highlight some of the properties of these datasets that make them useful for statistics and data science education, as well as software documentation and testing."
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#overflow-content",
    "href": "content/posts/07-visuals/plots.html#overflow-content",
    "title": "Plots",
    "section": "Overflow Content",
    "text": "Overflow Content\nThere are many options for overflow, either left/right\n\n```{r}\n#| column: body-outset-right\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: screen-inset-right\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: page-inset-left\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: screen-left\n#| fig-width: 10\nmass_flipper\n```"
  },
  {
    "objectID": "content/posts/07-visuals/stat-html.html",
    "href": "content/posts/07-visuals/stat-html.html",
    "title": "gtsummary + R Markdown",
    "section": "",
    "text": "library(gtsummary)\nlibrary(tidyverse)\nlibrary(survival)"
  },
  {
    "objectID": "content/posts/07-visuals/stat-html.html#gtsummary-tables",
    "href": "content/posts/07-visuals/stat-html.html#gtsummary-tables",
    "title": "gtsummary + R Markdown",
    "section": "gtsummary tables",
    "text": "gtsummary tables\nTables created with {gtsummary} can be integrated into R markdown documents. The {gtsummary} package was written to be a companion to the {gt} package from RStudio, and {gtsummary} tables are printed using {gt} when possible. Currently, {gt} supports HTML output, with LaTeX and RTF planned for the future.\n\npatient_characteristics <-\n  trial %>%\n  select(trt, age, grade, response) %>%\n  tbl_summary(by = trt)  \npatient_characteristics\n\n\n\n\n\n\nCharacteristic\n      \nDrug A, N = 981\n\n      \nDrug B, N = 1021\n\n    \n\n\nAge\n46 (37, 59)\n48 (39, 56)\n\n\n¬†¬†¬†¬†Unknown\n7\n4\n\n\nGrade\n\n\n\n\n¬†¬†¬†¬†I\n35 (36%)\n33 (32%)\n\n\n¬†¬†¬†¬†II\n32 (33%)\n36 (35%)\n\n\n¬†¬†¬†¬†III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n¬†¬†¬†¬†Unknown\n3\n4\n\n\n\n\n1 Median (IQR); n (%)\n    \n\n\n\n\nWith HTML output, you can include complex tables with footnotes, indentation, and spanning table headers.\n\n# Side-by-side Regression Models\n# logistic regression model\nt1 <-\n  glm(response ~ trt + grade + age, trial, family = binomial) %>%\n  tbl_regression(exponentiate = TRUE)\n# time to death Cox model\nt2 <-\n  coxph(Surv(ttdeath, death) ~ trt + grade + age, trial) %>%\n  tbl_regression(exponentiate = TRUE)\n\n# printing merged table\ntbl_merge(\n  tbls = list(t1, t2),\n  tab_spanner = c(\"**Tumor Response**\", \"**Time to Death**\")\n)\n\n\n\n\n\n\n\nCharacteristic\n      \n        Tumor Response\n      \n      \n        Time to Death\n      \n    \n\n\nOR1\n\n      \n95% CI1\n\n      p-value\n      \nHR1\n\n      \n95% CI1\n\n      p-value\n    \n\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n\n\n¬†¬†¬†¬†Drug A\n‚Äî\n‚Äî\n\n‚Äî\n‚Äî\n\n\n\n¬†¬†¬†¬†Drug B\n1.13\n0.60, 2.13\n0.7\n1.30\n0.88, 1.92\n0.2\n\n\nGrade\n\n\n\n\n\n\n\n\n¬†¬†¬†¬†I\n‚Äî\n‚Äî\n\n‚Äî\n‚Äî\n\n\n\n¬†¬†¬†¬†II\n0.85\n0.39, 1.85\n0.7\n1.21\n0.73, 1.99\n0.5\n\n\n¬†¬†¬†¬†III\n1.01\n0.47, 2.15\n>0.9\n1.79\n1.12, 2.86\n0.014\n\n\nAge\n1.02\n1.00, 1.04\n0.10\n1.01\n0.99, 1.02\n0.3\n\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "content/posts/07-visuals/stat-html.html#inline-reporting",
    "href": "content/posts/07-visuals/stat-html.html#inline-reporting",
    "title": "gtsummary + R Markdown",
    "section": "inline reporting",
    "text": "inline reporting\nAny number/statistic from a {gtsummary} table can be reported inline in a R markdown document using the inline_text() function. See example below:\n\nAmong patients who received Drug A, 31 (32%) had grade III tumors.\n\nFor detailed examples using functions from {gtsummary}, visit the {gtsummary} website."
  },
  {
    "objectID": "content/posts/08-knitr/fa-example.html",
    "href": "content/posts/08-knitr/fa-example.html",
    "title": "Font Awesome Quarto Extension",
    "section": "",
    "text": "This extension allows you to use font-awesome icons in your Quarto HTML and PDF documents. It provides an {{< fa >}} shortcode:\n{{< fa icon-name >}}\nFor example:\n\n\nShortcode\nIcon\n\n\n\n{{< fa thumbs-up >}}\n\n\n\n{{< fa folder >}}\n\n\n\n{{< fa chess-pawn >}}\n\n\n\n{{< fa brands bluetooth >}}"
  },
  {
    "objectID": "content/posts/08-knitr/lightbox-extension.html",
    "href": "content/posts/08-knitr/lightbox-extension.html",
    "title": "Example Lightbox Document",
    "section": "",
    "text": "Here is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "content/posts/08-knitr/lightbox-extension.html#elsewhere",
    "href": "content/posts/08-knitr/lightbox-extension.html#elsewhere",
    "title": "Example Lightbox Document",
    "section": "Elsewhere",
    "text": "Elsewhere\nThe below demonstrates placing more than one image in a gallery. Note the usage of the layout-ncol which arranges the images on the page side by date. Adding the group attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n\n\n\nAquinnah\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\nVineyard lighthouse"
  },
  {
    "objectID": "content/posts/08-knitr/lightbox-extension.html#credits",
    "href": "content/posts/08-knitr/lightbox-extension.html#credits",
    "title": "Example Lightbox Document",
    "section": "Credits",
    "text": "Credits\nThe images in this example were used under the Unsplash license, view originals below:\n\nChilmark Beach\nAquinnah\nGingerbread House\nEdgartown Light\nEdgartown Sailboat"
  },
  {
    "objectID": "content/posts/08-knitr/penguin-params.html",
    "href": "content/posts/08-knitr/penguin-params.html",
    "title": "Penguins Parametric Reports",
    "section": "",
    "text": "We have data about 344 penguins. Only 193 are classified asAdelie. The distribution of the Adelie penguins are shown below:"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html",
    "href": "content/posts/09-using-lordicons/index.html",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "",
    "text": "This is just a compilation of the example files from the Quarto website, so that I can have ready-made code to copy and paste."
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#installation",
    "href": "content/posts/09-using-lordicons/index.html#installation",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Installation",
    "text": "Installation\nType these in your Terminal:\n\nIconify: quarto install extension mcanouil/quarto-iconify\n\nFontAwesome: quarto install extension quarto-ext/fontawesome\n\nLordicons: quarto install extension jmgirard/lordicon\n\nAcademicons: quarto install extension schochastics/academicons\n\n\nThese extensions allows you to use a variety of icons in your Quarto HTML documents."
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-lordicon-shortcodes",
    "href": "content/posts/09-using-lordicons/index.html#using-lordicon-shortcodes",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Lordicon Shortcodes",
    "text": "Using Lordicon Shortcodes\nThe {{< li >}} shortcode renders an icon (specified by its code) after downloading it the lordicon CDN. The {{< lif >}} shortcode renders an icon (specified by its filepath) from a local .json file. Both shortcodes support the same arguments for customization, described below.\n\n\n\n\n\n\n\nPseudocode\nExample Code\nRendered\n\n\n\n{{< li code >}}\n{{< li wlpxtupd >}}\n\n\n\n{{< lif file >}}\n{{< lif church.json >}}\n\n\n\n\nTriggers\ntrigger controls the icon‚Äôs animation type. When using the loop or loop-on-hover triggers, you can also set an optional delay (in ms) between loops.\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{< li wxnxiano >}}\n\n\n\n{{< li wxnxiano trigger=click >}}\n\n\n\n{{< li wxnxiano trigger=hover >}}\n\n\n\n{{< li wxnxiano trigger=loop >}}\n\n\n\n{{< li wxnxiano trigger=loop delay=1000 >}}\n\n\n\n{{< li wxnxiano trigger=loop-on-hover >}}\n\n\n\n{{< li wxnxiano trigger=loop-on-hover delay=1000 >}}\n\n\n\n{{< li wxnxiano trigger=morph >}}\n\n\n\n{{< li wxnxiano trigger=boomerang >}}\n\n\n\nSpeed\nspeed controls how quickly the icon‚Äôs animation plays.\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc trigger=loop speed=0.5 >}}\n\n\n\n{{< li lupuorrc trigger=loop speed=1.0 >}}\n\n\n\n{{< li lupuorrc trigger=loop speed=2.0 >}}\n\n\n\nColors\ncolors controls the icon‚Äôs coloring. Outline icons typically have just a primary and secondary color, but flat and lineal icons can have many more. Each color should be given in rank:color format (where ranks are primary, secondary, tertiary, etc.) and multiple colors should be separated by commas. Colors can be given in HTML color names or hexcodes.\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc >}}\n\n\n\n{{< li lupuorrc colors=primary:gold >}}\n\n\n\n{{< li lupuorrc colors=primary:gray,secondary:orange >}}\n\n\n\n{{< li lupuorrc colors=primary:#4030e8,secondary:#ee66aa >}}\n\n\n\nStroke\nstroke controls how thick the lines in an icon are.\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc stroke=50 >}}\n\n\n\n{{< li lupuorrc stroke=100 >}}\n\n\n\n{{< li lupuorrc stroke=150 >}}\n\n\n\nScale\nscale controls how large or zoomed in the icon is.\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc scale=25 >}}\n\n\n\n{{< li lupuorrc scale=50 >}}\n\n\n\n{{< li lupuorrc scale=100 >}}\n\n\n\nAxis X\nx controls the horizontal position of the center of the icon.\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc x=25 >}}\n\n\n\n{{< li lupuorrc x=50 >}}\n\n\n\n{{< li lupuorrc x=100 >}}\n\n\n\nAxis Y\ny controls the vertical position of the center of the icon.\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc y=25 >}}\n\n\n\n{{< li lupuorrc y=50 >}}\n\n\n\n{{< li lupuorrc y=100 >}}"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-academicons-shortcodes",
    "href": "content/posts/09-using-lordicons/index.html#using-academicons-shortcodes",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Academicons Shortcodes",
    "text": "Using Academicons Shortcodes\nThis extension allows you to use academicons in your Quarto HTML documents. It provides an {{< ai >}} shortcode:\n\n\nMandatory <icon-name>:\n{{< ai <icon-name> >}}\n\n\nOptional <size=...>:\n{{< ai <icon-name> <size=...> >}}\n\n\nFor example:\n\n\nShortcode\nIcon\n\n\n\n{{< ai arxiv >}}\n\n\n\n{{< ai google-scholar >}}\n\n\n\n{{< ai open-access >}}\n\n\n\n{{< ai open-access size=5x >}}"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-fontawesome-icons",
    "href": "content/posts/09-using-lordicons/index.html#using-fontawesome-icons",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Fontawesome Icons",
    "text": "Using Fontawesome Icons\nThis extension allows you to use font-awesome icons in your Quarto HTML and PDF documents. It provides an {{< fa >}} shortcode:\n\n\nMandatory <icon-name>:\n{{< fa <icon-name> >}}\n\n\nOptional <group>, <size=...>, and <title=...>:\n{{< fa <group> <icon-name> <size=...> <title=...> >}}\n\n\nFor example:\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{< fa thumbs-up >}}\n\n\n\n{{< fa folder >}}\n\n\n\n{{< fa chess-pawn >}}\n\n\n\n{{< fa brands bluetooth >}}\n\n\n\n\n{{< fa brands twitter size=2xl >}} (HTML only)\n\n\n\n\n{{< fa brands github size=5x >}} (HTML only)\n\n\n\n{{< fa battery-half size=Huge >}}\n\n\n\n{{< fa envelope title=\"An envelope\" >}}"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-iconify-shortcodes",
    "href": "content/posts/09-using-lordicons/index.html#using-iconify-shortcodes",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Iconify Shortcodes",
    "text": "Using Iconify Shortcodes\nThis extension allows you to use Iconify icons in your Quarto HTML documents. It provides an {{< iconify >}} shortcode:\n\n\nMandatory <icon-name>:\n{{< iconify <icon-name> >}}\n\n\nOptional <set> (default is fluent-emoji) <size=...>, <width=...>, <height=...>, <flip=...>, and <rotate=...>:\n{{< iconify <set> <icon-name> <size=...> <width=...> <height=...> <flip=...> <rotate=...> >}}\nIf <size=...> is defined, <width=...> and <height=...> are not used.\nSee https://docs.iconify.design/iconify-icon/ for more details.\n\n\nFor example:\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{< iconify exploding-head >}}\n\n\n\n{{< iconify exploding-head size=2xl >}}\n\n\n\n{{< iconify exploding-head size=5x rotate=180deg >}}\n\n\n\n{{< iconify exploding-head size=Huge >}}\n\n\n\n{{< iconify fluent-emoji-high-contrast 1st-place-medal >}}\n\n\n\n{{< iconify twemoji 1st-place-medal >}}\n\n\n\n{{< iconify line-md loading-alt-loop >}}\n\n\n\n{{< iconify fa6-brands apple width=50px height=10px rotate=90deg flip=vertical >}}"
  },
  {
    "objectID": "content/posts/10-using-nutshell/index.html",
    "href": "content/posts/10-using-nutshell/index.html",
    "title": "Nutshell: Expandable Explanations",
    "section": "",
    "text": "Nutshell is a tool to make ‚Äúexpandable explanations‚Äù, like this! This lets your readers learn only the details they need, just-in-time, always-in-context.\nUnlike links, Nutshell lets you include only the snippet you need, not the whole page. Plus, instead of being lost in a jungle of new tabs, your reader stays on one page, keeping their flow of reading. Even if you interrupt a sentence, Nutshell recaps the sentence afterwards, so your reader never loses context.\nYou can find more information on the nutshell webpage and here is a live demo !"
  },
  {
    "objectID": "content/posts/10-using-nutshell/index.html#test",
    "href": "content/posts/10-using-nutshell/index.html#test",
    "title": "Nutshell: Expandable Explanations",
    "section": "Test",
    "text": "Test\nThis is a senseless paragraph"
  },
  {
    "objectID": "content/posts/10-using-nutshell/index.html#testing-links",
    "href": "content/posts/10-using-nutshell/index.html#testing-links",
    "title": "Nutshell: Expandable Explanations",
    "section": "Testing Links",
    "text": "Testing Links\n\n:link to senseless paragraph\n\n:link to wikipedia article\n:link to invisible sections"
  },
  {
    "objectID": "content/posts/10-using-nutshell/index.html#x-invisible",
    "href": "content/posts/10-using-nutshell/index.html#x-invisible",
    "title": "Nutshell: Expandable Explanations",
    "section": ":x invisible",
    "text": ":x invisible\nUse ## :x header to include an invisible secion that can be linked to via nutshell"
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html",
    "href": "content/posts/12-tufte-style-article/index.html",
    "title": "A Tufte Handout Example",
    "section": "",
    "text": "The Tufte handout style is a style that Edward Tufte uses in his books and handouts. Tufte‚Äôs style is known for its extensive use of sidenotes, tight integration of graphics with text, and well-set typography. This style has been implemented in LaTeX and HTML/CSS1, respectively. We have ported both implementations into the tufte package. If you want LaTeX/PDF output, you may use the tufte_handout format for handouts, and tufte_book for books. For HTML output, use tufte_html. These formats can be either specified in the YAML metadata at the beginning of an R Markdown document (see an example below), or passed to the rmarkdown::render() function. See Allaire et al. (2022) for more information about rmarkdown.\n---\ntitle: \"An Example Using the Tufte Style\"\nauthor: \"John Smith\"\noutput:\n  tufte::tufte_handout: default\n  tufte::tufte_html: default\n---\nThere are two goals of this package:\n\nTo produce both PDF and HTML output with similar styles from the same R Markdown document;\nTo provide simple syntax to write elements of the Tufte style such as side notes and margin figures, e.g.¬†when you want a margin figure, all you need to do is the chunk option fig.margin = TRUE, and we will take care of the details for you, so you never need to think about \\begin{marginfigure} \\end{marginfigure} or <span class=\"marginfigure\"> </span>; the LaTeX and HTML code under the hood may be complicated, but you never need to learn or write such code.\n\nIf you have any feature requests or find bugs in tufte, please do not hesitate to file them to https://github.com/rstudio/tufte/issues. For general questions, you may ask them on StackOverflow: https://stackoverflow.com/tags/rmarkdown."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#margin-figures",
    "href": "content/posts/12-tufte-style-article/index.html#margin-figures",
    "title": "A Tufte Handout Example",
    "section": "Margin Figures",
    "text": "Margin Figures\nImages and graphics play an integral role in Tufte‚Äôs work. To place figures in the margin you can use the knitr chunk option fig.margin = TRUE. For example:\n\nlibrary(ggplot2)\nmtcars2 <- mtcars\nmtcars2$am <- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() + geom_smooth() +\n  theme(legend.position = 'bottom')\n\n\n\n\nFigure¬†1: MPG vs horsepower, colored by transmission.\n\n\n\nNote the use of the fig.cap chunk option to provide a figure caption. You can adjust the proportions of figures using the fig.width and fig.height chunk options. These are specified in inches, and will be automatically scaled down to fit within the handout margin."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#arbitrary-margin-content",
    "href": "content/posts/12-tufte-style-article/index.html#arbitrary-margin-content",
    "title": "A Tufte Handout Example",
    "section": "Arbitrary Margin Content",
    "text": "Arbitrary Margin Content\nIn fact, you can include anything in the margin using the knitr engine named marginfigure. Unlike R code chunks ```{r}, you write a chunk starting with ```{marginfigure} instead, then put the content in the chunk. See an example on the right about the first fundamental theorem of calculus.\n\nWe know from _the first fundamental theorem of calculus_ that for $x$ in $[a, b]$:\n$$\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).$$\n\nFor the sake of portability between LaTeX and HTML, you should keep the margin content as simple as possible (syntax-wise) in the marginefigure blocks. You may use simple Markdown syntax like **bold** and _italic_ text, but please refrain from using footnotes, citations, or block-level elements (e.g.¬†blockquotes and lists) there.\nNote: if you set echo = FALSE in your global chunk options, you will have to add echo = TRUE to the chunk to display a margin figure, for example ```{marginfigure, echo = TRUE}."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#full-width-figures",
    "href": "content/posts/12-tufte-style-article/index.html#full-width-figures",
    "title": "A Tufte Handout Example",
    "section": "Full Width Figures",
    "text": "Full Width Figures\nYou can arrange for figures to span across the entire page by using the chunk option fig.fullwidth = TRUE.\n\nggplot(diamonds, aes(carat, price)) + geom_smooth() +\n  facet_grid(~ cut)\n\n\n\nFigure¬†2: A full width figure.\n\n\n\n\nOther chunk options related to figures can still be used, such as fig.width, fig.cap, out.width, and so on. For full width figures, usually fig.width is large and fig.height is small. In the above example, the plot size is \\(10 \\times 2\\)."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#arbitrary-full-width-content",
    "href": "content/posts/12-tufte-style-article/index.html#arbitrary-full-width-content",
    "title": "A Tufte Handout Example",
    "section": "Arbitrary Full Width Content",
    "text": "Arbitrary Full Width Content\nAny content can span to the full width of the page. This feature requires Pandoc 2.0 or above. All you need is to put your content in a fenced Div with the class fullwidth, e.g.,\n::: {.fullwidth}\nAny _full width_ content here.\n:::\nBelow is an example:\n\nR is free software and comes with ABSOLUTELY NO WARRANTY. You are welcome to redistribute it under the terms of the GNU General Public License versions 2 or 3. For more information about these matters see https://www.gnu.org/licenses/."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#main-column-figures",
    "href": "content/posts/12-tufte-style-article/index.html#main-column-figures",
    "title": "A Tufte Handout Example",
    "section": "Main Column Figures",
    "text": "Main Column Figures\nBesides margin and full width figures, you can of course also include figures constrained to the main column. This is the default type of figures in the LaTeX/HTML output.\n\nggplot(diamonds, aes(cut, price)) + geom_boxplot()\n\n\n\nFigure¬†3: A figure in the main column."
  },
  {
    "objectID": "content/posts/13-rapp-sample-document/index.html",
    "href": "content/posts/13-rapp-sample-document/index.html",
    "title": "Sample Blog Post Template",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nCodepreds_lm %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nCodeglm.mod <- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds <- dat %>% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit > 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn‚Äôt it?"
  },
  {
    "objectID": "content/posts/posts.html",
    "href": "content/posts/posts.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "A Tufte Handout Example\n\n\nAn implementation in R Markdown\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nJJ Allaire and Yihui Xie\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBootswatch Themed QMD\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nBoston Terrier\n\n\nCopied verbatim from Wikipedia, the free encyclopedia\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCallout Boxes\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCallouts in PDF\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nExample Lightbox Document\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nFigure Layout\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nFigure Layouts\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nFigure Layouts-2\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFont Awesome Quarto Extension\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHousing Prices\n\n\n\n\n\n\n\n\n\n\n\n\nJan 8, 2023\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInline Code\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNutshell: Expandable Explanations\n\n\n\n\n\n\n\n\n\n\n\n\nDavid Schoch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOld Markdown - reactable example\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nTom Mock\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOverview of using gtsummary\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nPenguin Report Presentation\n\n\nWith revealjs\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nTom Mock\n\n\n\n\n\n\n  \n\n\n\n\nPenguins Distilled\n\n\n\n\n\nA great new article on Penguins\n\n\n\n\n\n\nInvalid Date\n\n\nTom Mock\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPenguins Parametric Reports\n\n\n\n\n\n\n\n\n\n\n\n\nJul 13, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlot Layout\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlots\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPresentation with Columns?\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSample Blog Post Template\n\n\nSubtitle: Taken from Albert Rapp‚Äôs Blog\n\n\nDescription: This is a test post. In this post, I try out different functionalities\n\n\n\n\n\n\nJun 1, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Lordicons, Fontawesome Icons,Academicons, and Iconify Icons\n\n\n\n\n\n\n\n\n\n\n\n\nJan 9, 2023\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nVisual Editor for Quarto\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nThomas Mock\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngtsummary + R Markdown\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "",
    "text": "This is an attempt to rework , using tidygraph and ggraph, much of Network Visualization with R Polnet 2018 Workshop Tutorial, Washington, DC by Prof.¬†Katherine (Katya) Ognyanova.\nThe aim is to get a working acquaintance with both these packages and also to appreciate some of the concepts in Networks. My code is by no means intended to be elegant; it merely works and there are surely many improvements that people may think of!\nI have attempted to write code for the Sections 2:5.\nI have retained Prof.¬†Ognyanova‚Äôs text in all places."
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#contents",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#contents",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "CONTENTS",
    "text": "CONTENTS\n\nWorking with colors in R plots\nReading in the network data\nNetwork plots in ‚Äòigraph‚Äô\nPlotting two-mode networks\nPlotting multiplex networks\nQuick example using ‚Äònetwork‚Äô\nSimple plot animations in R\nInteractive JavaScript networks\nInteractive and dynamic networks with ndtv-d3\nPlotting networks on a geographic map"
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#dataset-1-edgelist--",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#dataset-1-edgelist--",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "‚Äî‚Äî-~~ DATASET 1: edgelist ~~‚Äî‚Äî-",
    "text": "‚Äî‚Äî-~~ DATASET 1: edgelist ~~‚Äî‚Äî-\n\n# Read in the data:\nnodes <- read.csv(\"./Dataset1-Media-Example-NODES.csv\", header = T, as.is = T)\nlinks <- read.csv(\"./Dataset1-Media-Example-EDGES.csv\", header = T, as.is = T)\n\n\n# Examine the data:\nhead(nodes)\n\n   id               media media.type type.label audience.size\n1 s01            NY Times          1  Newspaper            20\n2 s02     Washington Post          1  Newspaper            25\n3 s03 Wall Street Journal          1  Newspaper            30\n4 s04           USA Today          1  Newspaper            32\n5 s05            LA Times          1  Newspaper            20\n6 s06       New York Post          1  Newspaper            50\n\nhead(links)\n\n  from  to      type weight\n1  s01 s02 hyperlink     22\n2  s01 s03 hyperlink     22\n3  s01 s04 hyperlink     21\n4  s01 s15   mention     20\n5  s02 s01 hyperlink     23\n6  s02 s03 hyperlink     21\n\n\nConverting the data to an igraph object:\nThe graph_from_data_frame() function takes two data frames: ‚Äòd‚Äô and ‚Äòvertices‚Äô. - ‚Äòd‚Äô describes the edges of the network - it should start with two columns containing the source and target node IDs for each network tie. - ‚Äòvertices‚Äô should start with a column of node IDs. It can be omitted. - Any additional columns in either data frame are interpreted as attributes.\nNOTE: ID columns need not be numbers or integers!!\n\nnet <- graph_from_data_frame(d = links, vertices = nodes, directed = T)\n\n# Examine the resulting object:\nclass(net)\n\n[1] \"igraph\"\n\nnet\n\nIGRAPH 8d2aa7a DNW- 17 49 -- \n+ attr: name (v/c), media (v/c), media.type (v/n), type.label (v/c),\n| audience.size (v/n), type (e/c), weight (e/n)\n+ edges from 8d2aa7a (vertex names):\n [1] s01->s02 s01->s03 s01->s04 s01->s15 s02->s01 s02->s03 s02->s09 s02->s10\n [9] s03->s01 s03->s04 s03->s05 s03->s08 s03->s10 s03->s11 s03->s12 s04->s03\n[17] s04->s06 s04->s11 s04->s12 s04->s17 s05->s01 s05->s02 s05->s09 s05->s15\n[25] s06->s06 s06->s16 s06->s17 s07->s03 s07->s08 s07->s10 s07->s14 s08->s03\n[33] s08->s07 s08->s09 s09->s10 s10->s03 s12->s06 s12->s13 s12->s14 s13->s12\n[41] s13->s17 s14->s11 s14->s13 s15->s01 s15->s04 s15->s06 s16->s06 s16->s17\n[49] s17->s04\n\n\nThe description of an igraph object starts with four letters: -D or U, for a directed or undirected graph -N for a named graph (where nodes have a name attribute) -W for a weighted graph (where edges have a weight attribute) -B for a bipartite (two-mode) graph (where nodes have a type attribute) The two numbers that follow (17 49) refer to the number of nodes and edges in the graph. The description also lists node & edge attributes.\nWe can access the nodes, edges, and their attributes:\n\nE(net)\n\n+ 49/49 edges from 8d2aa7a (vertex names):\n [1] s01->s02 s01->s03 s01->s04 s01->s15 s02->s01 s02->s03 s02->s09 s02->s10\n [9] s03->s01 s03->s04 s03->s05 s03->s08 s03->s10 s03->s11 s03->s12 s04->s03\n[17] s04->s06 s04->s11 s04->s12 s04->s17 s05->s01 s05->s02 s05->s09 s05->s15\n[25] s06->s06 s06->s16 s06->s17 s07->s03 s07->s08 s07->s10 s07->s14 s08->s03\n[33] s08->s07 s08->s09 s09->s10 s10->s03 s12->s06 s12->s13 s12->s14 s13->s12\n[41] s13->s17 s14->s11 s14->s13 s15->s01 s15->s04 s15->s06 s16->s06 s16->s17\n[49] s17->s04\n\nV(net)\n\n+ 17/17 vertices, named, from 8d2aa7a:\n [1] s01 s02 s03 s04 s05 s06 s07 s08 s09 s10 s11 s12 s13 s14 s15 s16 s17\n\nE(net)$type\n\n [1] \"hyperlink\" \"hyperlink\" \"hyperlink\" \"mention\"   \"hyperlink\" \"hyperlink\"\n [7] \"hyperlink\" \"hyperlink\" \"hyperlink\" \"hyperlink\" \"hyperlink\" \"hyperlink\"\n[13] \"mention\"   \"hyperlink\" \"hyperlink\" \"hyperlink\" \"mention\"   \"mention\"  \n[19] \"hyperlink\" \"mention\"   \"mention\"   \"hyperlink\" \"hyperlink\" \"mention\"  \n[25] \"hyperlink\" \"hyperlink\" \"mention\"   \"mention\"   \"mention\"   \"hyperlink\"\n[31] \"mention\"   \"hyperlink\" \"mention\"   \"mention\"   \"mention\"   \"hyperlink\"\n[37] \"mention\"   \"hyperlink\" \"mention\"   \"hyperlink\" \"mention\"   \"mention\"  \n[43] \"mention\"   \"hyperlink\" \"hyperlink\" \"hyperlink\" \"hyperlink\" \"mention\"  \n[49] \"hyperlink\"\n\nV(net)$media\n\n [1] \"NY Times\"            \"Washington Post\"     \"Wall Street Journal\"\n [4] \"USA Today\"           \"LA Times\"            \"New York Post\"      \n [7] \"CNN\"                 \"MSNBC\"               \"FOX News\"           \n[10] \"ABC\"                 \"BBC\"                 \"Yahoo News\"         \n[13] \"Google News\"         \"Reuters.com\"         \"NYTimes.com\"        \n[16] \"WashingtonPost.com\"  \"AOL.com\"            \n\n\n\n# Using tidygraph\ntbl_graph(nodes, links, directed = TRUE) %>% \n  activate(edges) %>% \n  select(type)\n\n# A tbl_graph: 17 nodes and 49 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 49 √ó 3 (active)\n   from    to type     \n  <int> <int> <chr>    \n1     1     2 hyperlink\n2     1     3 hyperlink\n3     1     4 hyperlink\n4     1    15 mention  \n5     2     1 hyperlink\n6     2     3 hyperlink\n# ‚Ä¶ with 43 more rows\n#\n# Node Data: 17 √ó 5\n  id    media               media.type type.label audience.size\n  <chr> <chr>                    <int> <chr>              <int>\n1 s01   NY Times                     1 Newspaper             20\n2 s02   Washington Post              1 Newspaper             25\n3 s03   Wall Street Journal          1 Newspaper             30\n# ‚Ä¶ with 14 more rows\n\ntbl_graph(nodes, links, directed = TRUE) %>% \n  activate(nodes) %>% \n  select(media)\n\n# A tbl_graph: 17 nodes and 49 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 17 √ó 1 (active)\n  media              \n  <chr>              \n1 NY Times           \n2 Washington Post    \n3 Wall Street Journal\n4 USA Today          \n5 LA Times           \n6 New York Post      \n# ‚Ä¶ with 11 more rows\n#\n# Edge Data: 49 √ó 4\n   from    to type      weight\n  <int> <int> <chr>      <int>\n1     1     2 hyperlink     22\n2     1     3 hyperlink     22\n3     1     4 hyperlink     21\n# ‚Ä¶ with 46 more rows\n\n\nOr find specific nodes and edges by attribute:(that returns objects of type vertex sequence / edge sequence)\n\nV(net)[media == \"BBC\"]\n\n+ 1/17 vertex, named, from 8d2aa7a:\n[1] s11\n\nE(net)[type == \"mention\"]\n\n+ 20/49 edges from 8d2aa7a (vertex names):\n [1] s01->s15 s03->s10 s04->s06 s04->s11 s04->s17 s05->s01 s05->s15 s06->s17\n [9] s07->s03 s07->s08 s07->s14 s08->s07 s08->s09 s09->s10 s12->s06 s12->s14\n[17] s13->s17 s14->s11 s14->s13 s16->s17\n\n\n\n#Using tidygraph\ntbl_graph(nodes, links, directed = TRUE) %>% \n  activate(nodes) %>% \n  filter(media == \"BBC\")\n\n# A tbl_graph: 1 nodes and 0 edges\n#\n# A rooted tree\n#\n# Node Data: 1 √ó 5 (active)\n  id    media media.type type.label audience.size\n  <chr> <chr>      <int> <chr>              <int>\n1 s11   BBC            2 TV                    34\n#\n# Edge Data: 0 √ó 4\n# ‚Ä¶ with 4 variables: from <int>, to <int>, type <chr>, weight <int>\n\ntbl_graph(nodes, links, directed = TRUE) %>% \n  activate(edges) %>% \n  filter(type == \"mention\")\n\n# A tbl_graph: 17 nodes and 20 edges\n#\n# A directed simple graph with 3 components\n#\n# Edge Data: 20 √ó 4 (active)\n   from    to type    weight\n  <int> <int> <chr>    <int>\n1     1    15 mention     20\n2     3    10 mention      2\n3     4     6 mention      1\n4     4    11 mention     22\n5     4    17 mention      2\n6     5     1 mention      1\n# ‚Ä¶ with 14 more rows\n#\n# Node Data: 17 √ó 5\n  id    media               media.type type.label audience.size\n  <chr> <chr>                    <int> <chr>              <int>\n1 s01   NY Times                     1 Newspaper             20\n2 s02   Washington Post              1 Newspaper             25\n3 s03   Wall Street Journal          1 Newspaper             30\n# ‚Ä¶ with 14 more rows\n\n\nIf you need them, you can extract an edge list or a matrix back from the igraph networks.\n\nas_edgelist(net, names = T)\n\n      [,1]  [,2] \n [1,] \"s01\" \"s02\"\n [2,] \"s01\" \"s03\"\n [3,] \"s01\" \"s04\"\n [4,] \"s01\" \"s15\"\n [5,] \"s02\" \"s01\"\n [6,] \"s02\" \"s03\"\n [7,] \"s02\" \"s09\"\n [8,] \"s02\" \"s10\"\n [9,] \"s03\" \"s01\"\n[10,] \"s03\" \"s04\"\n[11,] \"s03\" \"s05\"\n[12,] \"s03\" \"s08\"\n[13,] \"s03\" \"s10\"\n[14,] \"s03\" \"s11\"\n[15,] \"s03\" \"s12\"\n[16,] \"s04\" \"s03\"\n[17,] \"s04\" \"s06\"\n[18,] \"s04\" \"s11\"\n[19,] \"s04\" \"s12\"\n[20,] \"s04\" \"s17\"\n[21,] \"s05\" \"s01\"\n[22,] \"s05\" \"s02\"\n[23,] \"s05\" \"s09\"\n[24,] \"s05\" \"s15\"\n[25,] \"s06\" \"s06\"\n[26,] \"s06\" \"s16\"\n[27,] \"s06\" \"s17\"\n[28,] \"s07\" \"s03\"\n[29,] \"s07\" \"s08\"\n[30,] \"s07\" \"s10\"\n[31,] \"s07\" \"s14\"\n[32,] \"s08\" \"s03\"\n[33,] \"s08\" \"s07\"\n[34,] \"s08\" \"s09\"\n[35,] \"s09\" \"s10\"\n[36,] \"s10\" \"s03\"\n[37,] \"s12\" \"s06\"\n[38,] \"s12\" \"s13\"\n[39,] \"s12\" \"s14\"\n[40,] \"s13\" \"s12\"\n[41,] \"s13\" \"s17\"\n[42,] \"s14\" \"s11\"\n[43,] \"s14\" \"s13\"\n[44,] \"s15\" \"s01\"\n[45,] \"s15\" \"s04\"\n[46,] \"s15\" \"s06\"\n[47,] \"s16\" \"s06\"\n[48,] \"s16\" \"s17\"\n[49,] \"s17\" \"s04\"\n\nas_adjacency_matrix(net, attr = \"weight\")\n\n17 x 17 sparse Matrix of class \"dgCMatrix\"\n\n\n  [[ suppressing 17 column names 's01', 's02', 's03' ... ]]\n\n\n                                                     \ns01  . 22 22 21 .  .  .  .  .  .  .  .  .  . 20  .  .\ns02 23  . 21  . .  .  .  .  1  5  .  .  .  .  .  .  .\ns03 21  .  . 22 1  .  .  4  .  2  1  1  .  .  .  .  .\ns04  .  . 23  . .  1  .  .  .  . 22  3  .  .  .  .  2\ns05  1 21  .  . .  .  .  .  2  .  .  .  .  . 21  .  .\ns06  .  .  .  . .  1  .  .  .  .  .  .  .  .  . 21 21\ns07  .  .  1  . .  .  . 22  . 21  .  .  .  4  .  .  .\ns08  .  .  2  . .  . 21  . 23  .  .  .  .  .  .  .  .\ns09  .  .  .  . .  .  .  .  . 21  .  .  .  .  .  .  .\ns10  .  .  2  . .  .  .  .  .  .  .  .  .  .  .  .  .\ns11  .  .  .  . .  .  .  .  .  .  .  .  .  .  .  .  .\ns12  .  .  .  . .  2  .  .  .  .  .  . 22 22  .  .  .\ns13  .  .  .  . .  .  .  .  .  .  . 21  .  .  .  .  1\ns14  .  .  .  . .  .  .  .  .  .  1  . 21  .  .  .  .\ns15 22  .  .  1 .  4  .  .  .  .  .  .  .  .  .  .  .\ns16  .  .  .  . . 23  .  .  .  .  .  .  .  .  .  . 21\ns17  .  .  .  4 .  .  .  .  .  .  .  .  .  .  .  .  .\n\n# Using tidygraph\n# No direct command seems available ...\n\n\n# Or data frames describing nodes and edges:\nigraph::as_data_frame(x = net, what = \"edges\")\n\n   from  to      type weight\n1   s01 s02 hyperlink     22\n2   s01 s03 hyperlink     22\n3   s01 s04 hyperlink     21\n4   s01 s15   mention     20\n5   s02 s01 hyperlink     23\n6   s02 s03 hyperlink     21\n7   s02 s09 hyperlink      1\n8   s02 s10 hyperlink      5\n9   s03 s01 hyperlink     21\n10  s03 s04 hyperlink     22\n11  s03 s05 hyperlink      1\n12  s03 s08 hyperlink      4\n13  s03 s10   mention      2\n14  s03 s11 hyperlink      1\n15  s03 s12 hyperlink      1\n16  s04 s03 hyperlink     23\n17  s04 s06   mention      1\n18  s04 s11   mention     22\n19  s04 s12 hyperlink      3\n20  s04 s17   mention      2\n21  s05 s01   mention      1\n22  s05 s02 hyperlink     21\n23  s05 s09 hyperlink      2\n24  s05 s15   mention     21\n25  s06 s06 hyperlink      1\n26  s06 s16 hyperlink     21\n27  s06 s17   mention     21\n28  s07 s03   mention      1\n29  s07 s08   mention     22\n30  s07 s10 hyperlink     21\n31  s07 s14   mention      4\n32  s08 s03 hyperlink      2\n33  s08 s07   mention     21\n34  s08 s09   mention     23\n35  s09 s10   mention     21\n36  s10 s03 hyperlink      2\n37  s12 s06   mention      2\n38  s12 s13 hyperlink     22\n39  s12 s14   mention     22\n40  s13 s12 hyperlink     21\n41  s13 s17   mention      1\n42  s14 s11   mention      1\n43  s14 s13   mention     21\n44  s15 s01 hyperlink     22\n45  s15 s04 hyperlink      1\n46  s15 s06 hyperlink      4\n47  s16 s06 hyperlink     23\n48  s16 s17   mention     21\n49  s17 s04 hyperlink      4\n\nigraph::as_data_frame(x = net, what = \"vertices\")\n\n    name               media media.type type.label audience.size\ns01  s01            NY Times          1  Newspaper            20\ns02  s02     Washington Post          1  Newspaper            25\ns03  s03 Wall Street Journal          1  Newspaper            30\ns04  s04           USA Today          1  Newspaper            32\ns05  s05            LA Times          1  Newspaper            20\ns06  s06       New York Post          1  Newspaper            50\ns07  s07                 CNN          2         TV            56\ns08  s08               MSNBC          2         TV            34\ns09  s09            FOX News          2         TV            60\ns10  s10                 ABC          2         TV            23\ns11  s11                 BBC          2         TV            34\ns12  s12          Yahoo News          3     Online            33\ns13  s13         Google News          3     Online            23\ns14  s14         Reuters.com          3     Online            12\ns15  s15         NYTimes.com          3     Online            24\ns16  s16  WashingtonPost.com          3     Online            28\ns17  s17             AOL.com          3     Online            33\n\n#Using tidygraph\ntbl_graph(nodes, links, directed = TRUE) %>% \n  activate(nodes) %>% \n  as_tibble()\n\n# A tibble: 17 √ó 5\n   id    media               media.type type.label audience.size\n   <chr> <chr>                    <int> <chr>              <int>\n 1 s01   NY Times                     1 Newspaper             20\n 2 s02   Washington Post              1 Newspaper             25\n 3 s03   Wall Street Journal          1 Newspaper             30\n 4 s04   USA Today                    1 Newspaper             32\n 5 s05   LA Times                     1 Newspaper             20\n 6 s06   New York Post                1 Newspaper             50\n 7 s07   CNN                          2 TV                    56\n 8 s08   MSNBC                        2 TV                    34\n 9 s09   FOX News                     2 TV                    60\n10 s10   ABC                          2 TV                    23\n11 s11   BBC                          2 TV                    34\n12 s12   Yahoo News                   3 Online                33\n13 s13   Google News                  3 Online                23\n14 s14   Reuters.com                  3 Online                12\n15 s15   NYTimes.com                  3 Online                24\n16 s16   WashingtonPost.com           3 Online                28\n17 s17   AOL.com                      3 Online                33\n\ntbl_graph(nodes, links, directed = TRUE)%>% \n  activate(edges) %>% \n  as_tibble()\n\n# A tibble: 49 √ó 4\n    from    to type      weight\n   <int> <int> <chr>      <int>\n 1     1     2 hyperlink     22\n 2     1     3 hyperlink     22\n 3     1     4 hyperlink     21\n 4     1    15 mention       20\n 5     2     1 hyperlink     23\n 6     2     3 hyperlink     21\n 7     2     9 hyperlink      1\n 8     2    10 hyperlink      5\n 9     3     1 hyperlink     21\n10     3     4 hyperlink     22\n# ‚Ä¶ with 39 more rows\n\n\n\n# You can also access the network matrix directly:\nnet[1,]\n\ns01 s02 s03 s04 s05 s06 s07 s08 s09 s10 s11 s12 s13 s14 s15 s16 s17 \n  0  22  22  21   0   0   0   0   0   0   0   0   0   0  20   0   0 \n\nnet[5,7]\n\n[1] 0\n\n# Using tidygraph\n# Does not seem possible, even with `as.matrix()`.\n# Returns tibbles only as in the code chunk above\n\n\n# First attempt to plot the graph:\nplot(net) # not pretty!\n\n\n\n# Removing loops from the graph:\nnet <-\n  igraph::simplify(net, remove.multiple = F, remove.loops = T)\n\n# Let's and reduce the arrow size and remove the labels:\nplot(net, edge.arrow.size = .4, vertex.label = NA)\n\n\n\n\n\n# Using tidygraph\ntbl_graph(nodes, links, directed = TRUE) %>%\n  ggraph(., layout = \"graphopt\") +\n  geom_edge_link(\n    color = \"grey\",\n    end_cap = circle(0.2, \"cm\"),\n    start_cap = circle(0.2, \"cm\"),\n    # clears an area near the node\n    \n    arrow = arrow(\n      type = \"closed\",\n      ends = \"last\",\n      length = unit(3, \"mm\")\n    )\n  ) +\n  geom_node_point(size = 6, shape = 21, fill = \"orange\") +\n  geom_node_text(aes(label = id))\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\n‚Ñπ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n\n\n\n\n# Removing loops from the graph:\n# From the docs:\n# convert() is a shorthand for performing both `morph` and `crystallise` along with extracting a single tbl_graph (defaults to the first). For morphs w(h)ere you know they only create a single graph, and you want to keep it, this is an easy way.\n#\ntbl_graph(nodes, links, directed = TRUE) %>%\n\n  convert(to_simple) %>%\n  ggraph(., layout = \"graphopt\") +\n  geom_edge_link(\n    color = \"grey\",\n    end_cap = circle(0.2, \"cm\"),\n    start_cap = circle(0.2, \"cm\"),\n \n    arrow = arrow(\n      type = \"closed\",\n      ends = \"last\",\n      length = unit(3, \"mm\")\n    )\n  ) +\n  geom_node_point(size = 6, shape = 21, fill = \"orange\")"
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#dataset-2-matrix",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#dataset-2-matrix",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "‚Äî‚Äî-~~ DATASET 2: matrix ‚Äî‚Äî‚Äì",
    "text": "‚Äî‚Äî-~~ DATASET 2: matrix ‚Äî‚Äî‚Äì\n\n# Read in the data:\nnodes2 <- read.csv(\"./Dataset2-Media-User-Example-NODES.csv\", header = T, as.is = T)\nlinks2 <- read.csv(\"./Dataset2-Media-User-Example-EDGES.csv\", header = T, row.names = 1)\n\n# Examine the data:\nhead(nodes2)\n\n   id   media media.type media.name audience.size\n1 s01     NYT          1  Newspaper            20\n2 s02    WaPo          1  Newspaper            25\n3 s03     WSJ          1  Newspaper            30\n4 s04    USAT          1  Newspaper            32\n5 s05 LATimes          1  Newspaper            20\n6 s06     CNN          2         TV            56\n\nhead(links2)\n\n    U01 U02 U03 U04 U05 U06 U07 U08 U09 U10 U11 U12 U13 U14 U15 U16 U17 U18 U19\ns01   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\ns02   0   0   0   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0\ns03   0   0   0   0   0   1   1   1   1   0   0   0   0   0   0   0   0   0   0\ns04   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0\ns05   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0\ns06   0   0   0   0   0   0   0   0   0   0   0   0   1   1   0   0   1   0   0\n    U20\ns01   0\ns02   1\ns03   0\ns04   0\ns05   0\ns06   0\n\n# links2 is a matrix for a two-mode network:\nlinks2 <- as.matrix(links2)\ndim(links2)\n\n[1] 10 20\n\ndim(nodes2)\n\n[1] 30  5\n\n\nNote: What is a two-mode network? A network that as a node$type variable and can be a bipartite or a k-partite network as a result.\n\n# Create an igraph network object from the two-mode matrix:\nnet2 <- igraph::graph_from_incidence_matrix(links2)\n\n# To transform a one-mode network matrix into an igraph object,\n# we would use graph_from_adjacency_matrix()\n\n# A built-in vertex attribute 'type' shows which mode vertices belong to.\ntable(V(net2)$type)\n\n\nFALSE  TRUE \n   10    20 \n\n# Basic igraph plot\nplot(net2,vertex.label = NA)\n\n\n\n\n\n# using tidygraph\n# For all objects that are not node and edge data_frames\n# tidygraph uses `as_tbl_graph()`\n# \ngraph <- as_tbl_graph(links2)\ngraph %>% activate(nodes) %>% as_tibble()\n\n# A tibble: 30 √ó 2\n   type  name \n   <lgl> <chr>\n 1 FALSE s01  \n 2 FALSE s02  \n 3 FALSE s03  \n 4 FALSE s04  \n 5 FALSE s05  \n 6 FALSE s06  \n 7 FALSE s07  \n 8 FALSE s08  \n 9 FALSE s09  \n10 FALSE s10  \n# ‚Ä¶ with 20 more rows\n\ngraph %>% activate(edges) %>% as_tibble()\n\n# A tibble: 31 √ó 3\n    from    to weight\n   <int> <int>  <dbl>\n 1     1    11      1\n 2     1    12      1\n 3     1    13      1\n 4     2    14      1\n 5     2    15      1\n 6     2    30      1\n 7     3    16      1\n 8     3    17      1\n 9     3    18      1\n10     3    19      1\n# ‚Ä¶ with 21 more rows\n\ngraph %>% \n  ggraph(., layout = \"graphopt\") + \n  geom_edge_link(color = \"grey\") + \n  geom_node_point(fill = \"orange\", \n                  shape = 21, size = 6, \n                  color = \"black\")\n\n\n\n\n\n# Examine the resulting object:\nclass(net2)\n\n[1] \"igraph\"\n\nnet2\n\nIGRAPH 9008ce1 UN-B 30 31 -- \n+ attr: type (v/l), name (v/c)\n+ edges from 9008ce1 (vertex names):\n [1] s01--U01 s01--U02 s01--U03 s02--U04 s02--U05 s02--U20 s03--U06 s03--U07\n [9] s03--U08 s03--U09 s04--U09 s04--U10 s04--U11 s05--U11 s05--U12 s05--U13\n[17] s06--U13 s06--U14 s06--U17 s07--U14 s07--U15 s07--U16 s08--U16 s08--U17\n[25] s08--U18 s08--U19 s09--U06 s09--U19 s09--U20 s10--U01 s10--U11\n\n\nNote: The remaining attributes for the nodes ( in data frame nodes2) are not (yet) a part of the graph, either with igraph or with tidygraph."
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#plot-parameters-in-igraph",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#plot-parameters-in-igraph",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "‚Äî‚Äî~~ Plot parameters in igraph ‚Äî‚Äî‚Äì",
    "text": "‚Äî‚Äî~~ Plot parameters in igraph ‚Äî‚Äî‚Äì\nCheck out the node options (starting with ‚Äòvertex.‚Äô) and the edge options (starting with ‚Äòedge.‚Äô).\n\n?igraph.plotting\n\nstarting httpd help server ... done\n\n\nWe can set the node & edge options in two ways - one is to specify them in the plot() function, as we are doing below.\n\nPlot with curved edges (edge.curved = .1) and reduce arrow size:\n\n\nplot(net, edge.arrow.size = .4, edge.curved = .1)\n\n\n\n# Using tidygraph\ngraph <- tbl_graph(nodes, links, directed = TRUE)\ngraph\n\n# A tbl_graph: 17 nodes and 49 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 17 √ó 5 (active)\n  id    media               media.type type.label audience.size\n  <chr> <chr>                    <int> <chr>              <int>\n1 s01   NY Times                     1 Newspaper             20\n2 s02   Washington Post              1 Newspaper             25\n3 s03   Wall Street Journal          1 Newspaper             30\n4 s04   USA Today                    1 Newspaper             32\n5 s05   LA Times                     1 Newspaper             20\n6 s06   New York Post                1 Newspaper             50\n# ‚Ä¶ with 11 more rows\n#\n# Edge Data: 49 √ó 4\n   from    to type      weight\n  <int> <int> <chr>      <int>\n1     1     2 hyperlink     22\n2     1     3 hyperlink     22\n3     1     4 hyperlink     21\n# ‚Ä¶ with 46 more rows\n\ngraph %>% ggraph(., layout = \"graphopt\") +\n  geom_edge_arc(\n    color = \"grey\",\n    strength = 0.1,\n    end_cap = circle(.2, \"cm\"),\n\n    arrow = arrow(\n      type = \"closed\",\n      ends = \"both\",\n      length = unit(3, \"mm\")\n    )\n  ) +\n  geom_node_point(\n    fill = \"orange\",\n    shape = 21,\n    size = 8,\n    color = \"black\"\n  ) +\n  geom_node_text(aes(label = id))\n\n\n\n\n\nSet node color to orange and the border color to hex 555555\nReplace the vertex label with the node names stored in ‚Äúmedia‚Äù\n\n\nplot(\n  net,\n  edge.arrow.size = .2,\n  edge.curved = 0,\n  vertex.color = \"orange\",\n  vertex.frame.color = \"#555555\",\n  vertex.label = V(net)$media,\n  vertex.label.color = \"black\",\n  vertex.label.cex = .7\n)\n\n\n\n# Using tidygraph\n#graph <- tbl_graph(nodes, links, directed = TRUE)\n#graph\ngraph %>%\n  ggraph(., layout = \"gem\") +\n  geom_edge_link(\n    color = \"grey\",\n    end_cap = circle(.3, \"cm\"),\n    \n    arrow = arrow(\n      type = \"closed\",\n      ends = \"both\",\n      length = unit(1, \"mm\")\n    )\n  ) +\n  geom_node_point(\n    fill = \"orange\",\n    shape = 21,\n    size = 6,\n    color = \"#555555\"\n  ) +\n  geom_node_text(aes(label = media))\n\n\n\n\nThe second way to set attributes is to add them to the igraph object.\n\nGenerate colors based on media type:\n\n\ncolrs <- c(\"gray50\", \"tomato\", \"gold\")\nV(net)$color <- colrs[V(net)$media.type]\nplot(net)\n\n\n\n\n\nCompute node degrees (#links) and use that to set node size:\n\n\ndeg <- igraph::degree(net, mode = \"all\")\nV(net)$size <- deg*3\n# Alternatively, we can set node size based on audience size:\nV(net)$size <- V(net)$audience.size*0.7\nV(net)$size\n\n [1] 14.0 17.5 21.0 22.4 14.0 35.0 39.2 23.8 42.0 16.1 23.8 23.1 16.1  8.4 16.8\n[16] 19.6 23.1\n\n# The labels are currently node IDs.\n# Setting them to NA will render no labels:\nV(net)$label.color <- \"black\"\nV(net)$label <- NA\n\n# Set edge width based on weight:\nE(net)$width <- E(net)$weight/6\n\n#change arrow size and edge color:\nE(net)$arrow.size <- .2\nE(net)$edge.color <- \"gray80\"\n\n# We can even set the network layout:\ngraph_attr(net, \"layout\") <- layout_with_lgl\nplot(net)\n\n\n\n\n\n# Using tidygraph\n# graph <- tbl_graph(nodes, links, directed = TRUE)\n# graph\ngraph %>%\n  activate(nodes) %>%\n  mutate(size = centrality_degree()) %>%\n  ggraph(., layout = \"lgl\") +\n  geom_edge_link(\n    aes(width = weight),\n    color = \"grey80\",\n    end_cap = circle(.2, \"cm\"),\n    arrow = arrow(\n      type = \"closed\",\n      ends = \"last\",\n      length = unit(1, \"mm\")\n    )\n  ) +\n  geom_node_point(aes(fill = type.label, size = size),\n                  shape = 21,\n                  color = \"black\") +\n  scale_fill_manual(name = \"Media Type\",\n                    values = c(\"grey50\", \"gold\", \"tomato\")) +\n  scale_edge_width(range = c(0.2, 1.5), guide = \"none\") +\n  scale_size_continuous(\"Degree\", range =  c(2, 16)) +\n  \n  guides(fill = guide_legend(title = \"Media Type\",\n                             override.aes = list(pch = 21, size = 4)))\n\n\n\n\nWe can also override the attributes explicitly in the plot:\n\nplot(net, edge.color = \"orange\", vertex.color = \"gray50\")\n\n\n\n\nWe can also add a legend explaining the meaning of the colors we used:\n\nplot(net)\nlegend(x = -2.1, y = -1.1, \n       c(\"Newspaper\",\"Television\", \"Online News\"), \n       pch = 21,col = \"#777777\", \n       pt.bg = colrs, pt.cex = 2.5, bty = \"n\", ncol = 1)\n\n\n\n# legends are automatic with the tidygraph + ggraph flow\n\nSometimes, especially with semantic networks, we may be interested in plotting only the labels of the nodes:\n\nplot(net, vertex.shape = \"none\", vertex.label = V(net)$media,\n     vertex.label.font = 2, vertex.label.color = \"gray40\",\n     vertex.label.cex = .7, edge.color = \"gray85\")\n\n\n\n#using tidygraph\n\nggraph(net, layout = \"gem\") +\n  geom_edge_link(color = \"grey80\", width = 2,\n                 end_cap = circle(0.5,\"cm\"), \n                 start_cap = circle(0.5, \"cm\")) +\n    geom_node_text(aes(label = media))\n\n\n\n\nLet‚Äôs color the edges of the graph based on their source node color. We‚Äôll get the starting node for each edge with ends().\nNote: Edge attribute is being set by start node.\n\nedge.start <- ends(net, es = E(net), names = F)[,1]\nedge.col <- V(net)$color[edge.start] # How simple this is !!!\n# The three colors are recycled \n# \nplot(net, edge.color = edge.col, edge.curved = .4)\n\n\n\n\nNOTE: The source node colour has been set using the media.type, which is a node attribute. Node attributes are not typically accessible to edges. So we need to build a combo data frame using dplyr, so that edges can use this node attribute. ( There may be other ways‚Ä¶)\n\n# Using tidygraph\n# Make a \"combo\" data frame of nodes *and* edges with left_join()\n# Join by `from` so that type.label is based on from = edge.start\n\nlinks %>%\n  left_join(., nodes, by = c(\"from\" = \"id\")) %>%\n  tbl_graph(edges = ., nodes = nodes) %>%\n  \n  mutate(size = centrality_degree()) %>%\n  \n  ggraph(., layout = \"lgl\") +\n  geom_edge_arc(aes(color = type.label,\n                    width = weight),\n                strength = 0.3)  +\n  geom_node_point(aes(fill = type.label,\n                      # type.label is now available as edge attribute\n                      size = size),\n                  shape = 21,\n                  color = \"black\") +\n  scale_fill_manual(\n    name = \"Media Type\",\n    values = c(\"grey50\", \"gold\", \"tomato\"),\n    guide = \"legend\"\n  ) +\n  scale_edge_color_manual(name = \"Source Type\",\n                          values = c(\"grey80\", \"gold\", \"tomato\")) +\n  scale_edge_width(range = c(0.2, 1.5), guide = \"none\") +\n  scale_size_continuous(\"Degree\", range =  c(2, 16)) +\n  # not \"limits\"!\n  guides(fill = guide_legend(override.aes = list(pch = 21,\n                                                 size = 4)))"
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#network-layouts-in-igraph",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#network-layouts-in-igraph",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "‚Äî‚Äî-~~ Network Layouts in ‚Äòigraph‚Äô ‚Äî‚Äî‚Äì",
    "text": "‚Äî‚Äî-~~ Network Layouts in ‚Äòigraph‚Äô ‚Äî‚Äî‚Äì\nNetwork layouts are algorithms that return coordinates for each node in a network.\nLet‚Äôs generate a slightly larger 100-node graph using a preferential attachment model (Barabasi-Albert).\n\nnet.bg <- sample_pa(n =  100, power =  1.2)\nV(net.bg)$size <- 8\nV(net.bg)$frame.color <- \"white\"\nV(net.bg)$color <- \"orange\"\nV(net.bg)$label <- \"\"\nE(net.bg)$arrow.mode <- 0\nplot(net.bg)\n\n\n\n# Using tidygraph\ngraph <- play_barabasi_albert(n = 100, power = 1.2)\ngraph %>%\n  ggraph(., layout = \"graphopt\") +\n  geom_edge_link(color = \"grey\") +\n  geom_node_point(color = \"orange\", size = 4) +\n  theme_graph()\n\n\n\n\nNow let‚Äôs plot this network using the layouts available in igraph. You can set the layout in the plot function:\n\nplot(net.bg, layout = layout_randomly)\n\n\n\n\nOr calculate the vertex coordinates in advance:\n\nl <- layout_in_circle(net.bg)\nplot(net.bg, layout = l)\n\n\n\n# Using tidygraph\n# graph <- play_barabasi_albert(n = 100, power = 1.2)\ngraph %>% ggraph(., layout = \"circle\") +\n  geom_edge_link(color = \"grey\") +\n  geom_node_point(color = \"orange\", size = 2) +\n  theme_graph() +\n  theme(aspect.ratio = 1)\n\n\n\n\nl is simply a matrix of x,y coordinates (N x 2) for the N nodes in the graph. You can generate your own:\n\nl\n\n                [,1]          [,2]\n  [1,]  1.000000e+00  0.000000e+00\n  [2,]  9.980267e-01  6.279052e-02\n  [3,]  9.921147e-01  1.253332e-01\n  [4,]  9.822873e-01  1.873813e-01\n  [5,]  9.685832e-01  2.486899e-01\n  [6,]  9.510565e-01  3.090170e-01\n  [7,]  9.297765e-01  3.681246e-01\n  [8,]  9.048271e-01  4.257793e-01\n  [9,]  8.763067e-01  4.817537e-01\n [10,]  8.443279e-01  5.358268e-01\n [11,]  8.090170e-01  5.877853e-01\n [12,]  7.705132e-01  6.374240e-01\n [13,]  7.289686e-01  6.845471e-01\n [14,]  6.845471e-01  7.289686e-01\n [15,]  6.374240e-01  7.705132e-01\n [16,]  5.877853e-01  8.090170e-01\n [17,]  5.358268e-01  8.443279e-01\n [18,]  4.817537e-01  8.763067e-01\n [19,]  4.257793e-01  9.048271e-01\n [20,]  3.681246e-01  9.297765e-01\n [21,]  3.090170e-01  9.510565e-01\n [22,]  2.486899e-01  9.685832e-01\n [23,]  1.873813e-01  9.822873e-01\n [24,]  1.253332e-01  9.921147e-01\n [25,]  6.279052e-02  9.980267e-01\n [26,] -1.608143e-16  1.000000e+00\n [27,] -6.279052e-02  9.980267e-01\n [28,] -1.253332e-01  9.921147e-01\n [29,] -1.873813e-01  9.822873e-01\n [30,] -2.486899e-01  9.685832e-01\n [31,] -3.090170e-01  9.510565e-01\n [32,] -3.681246e-01  9.297765e-01\n [33,] -4.257793e-01  9.048271e-01\n [34,] -4.817537e-01  8.763067e-01\n [35,] -5.358268e-01  8.443279e-01\n [36,] -5.877853e-01  8.090170e-01\n [37,] -6.374240e-01  7.705132e-01\n [38,] -6.845471e-01  7.289686e-01\n [39,] -7.289686e-01  6.845471e-01\n [40,] -7.705132e-01  6.374240e-01\n [41,] -8.090170e-01  5.877853e-01\n [42,] -8.443279e-01  5.358268e-01\n [43,] -8.763067e-01  4.817537e-01\n [44,] -9.048271e-01  4.257793e-01\n [45,] -9.297765e-01  3.681246e-01\n [46,] -9.510565e-01  3.090170e-01\n [47,] -9.685832e-01  2.486899e-01\n [48,] -9.822873e-01  1.873813e-01\n [49,] -9.921147e-01  1.253332e-01\n [50,] -9.980267e-01  6.279052e-02\n [51,] -1.000000e+00 -3.216286e-16\n [52,] -9.980267e-01 -6.279052e-02\n [53,] -9.921147e-01 -1.253332e-01\n [54,] -9.822873e-01 -1.873813e-01\n [55,] -9.685832e-01 -2.486899e-01\n [56,] -9.510565e-01 -3.090170e-01\n [57,] -9.297765e-01 -3.681246e-01\n [58,] -9.048271e-01 -4.257793e-01\n [59,] -8.763067e-01 -4.817537e-01\n [60,] -8.443279e-01 -5.358268e-01\n [61,] -8.090170e-01 -5.877853e-01\n [62,] -7.705132e-01 -6.374240e-01\n [63,] -7.289686e-01 -6.845471e-01\n [64,] -6.845471e-01 -7.289686e-01\n [65,] -6.374240e-01 -7.705132e-01\n [66,] -5.877853e-01 -8.090170e-01\n [67,] -5.358268e-01 -8.443279e-01\n [68,] -4.817537e-01 -8.763067e-01\n [69,] -4.257793e-01 -9.048271e-01\n [70,] -3.681246e-01 -9.297765e-01\n [71,] -3.090170e-01 -9.510565e-01\n [72,] -2.486899e-01 -9.685832e-01\n [73,] -1.873813e-01 -9.822873e-01\n [74,] -1.253332e-01 -9.921147e-01\n [75,] -6.279052e-02 -9.980267e-01\n [76,] -1.836910e-16 -1.000000e+00\n [77,]  6.279052e-02 -9.980267e-01\n [78,]  1.253332e-01 -9.921147e-01\n [79,]  1.873813e-01 -9.822873e-01\n [80,]  2.486899e-01 -9.685832e-01\n [81,]  3.090170e-01 -9.510565e-01\n [82,]  3.681246e-01 -9.297765e-01\n [83,]  4.257793e-01 -9.048271e-01\n [84,]  4.817537e-01 -8.763067e-01\n [85,]  5.358268e-01 -8.443279e-01\n [86,]  5.877853e-01 -8.090170e-01\n [87,]  6.374240e-01 -7.705132e-01\n [88,]  6.845471e-01 -7.289686e-01\n [89,]  7.289686e-01 -6.845471e-01\n [90,]  7.705132e-01 -6.374240e-01\n [91,]  8.090170e-01 -5.877853e-01\n [92,]  8.443279e-01 -5.358268e-01\n [93,]  8.763067e-01 -4.817537e-01\n [94,]  9.048271e-01 -4.257793e-01\n [95,]  9.297765e-01 -3.681246e-01\n [96,]  9.510565e-01 -3.090170e-01\n [97,]  9.685832e-01 -2.486899e-01\n [98,]  9.822873e-01 -1.873813e-01\n [99,]  9.921147e-01 -1.253332e-01\n[100,]  9.980267e-01 -6.279052e-02\n\nl <- cbind(1:vcount(net.bg), c(1, vcount(net.bg):2))\nplot(net.bg, layout = l)\n\n\n\n# Using tidygraph\n# graph <- play_barabasi_albert(n = 100, power = 1.2)\ngraph %>% ggraph(., layout = l) +\n  geom_edge_link(color = \"grey\") +\n  geom_node_point(color = \"orange\", size = 2)+\n  theme_graph()\n\n\n\n\nThis layout is just an example and not very helpful - thankfully igraph has a number of built-in layouts, including:\n\nRandomly placed vertices\n\n\nl <- layout_randomly(net.bg)\nplot(net.bg, layout = l)\n\n\n\n# Using tidygraph\n# graph <- play_barabasi_albert(n = 100, power = 1.2)\ngraph %>% ggraph(., layout = layout_randomly(.)) + \n  geom_edge_link0(colour = \"grey\") + \n  geom_node_point(colour = \"orange\", size = 4)\n\n\n\n\n\nCircle layout\n\n\nl <- layout_in_circle(net.bg)\nplot(net.bg, layout = l)\n\n\n\n# Using tidygraph\n# graph <- play_barabasi_albert(n = 100, power = 1.2)\ngraph %>% ggraph(., layout = layout_in_circle(.)) + \n  geom_edge_link0(colour = \"grey\") + \n  geom_node_point(colour = \"orange\") +\n  theme(aspect.ratio = 1)\n\n\n\n\n\n3D sphere layout\n\n\nl <- layout_on_sphere(net.bg)\nplot(net.bg, layout = l)\n\n\n\n# Using tidygraph\n# graph <- play_barabasi_albert(n = 100, power = 1.2)\ngraph %>% ggraph(., layout = layout_on_sphere(.)) + \n  geom_edge_link0(colour = \"grey\") + \n  geom_node_point(colour = \"orange\")\n\n\n\n\n\nThe Fruchterman-Reingold force-directed algorithm: Nice but slow, most often used in graphs smaller than ~1000 vertices.\n\n\nl <- layout_with_fr(net.bg)\nplot(net.bg, layout = l)\n\n\n\n# Using tidygraph\n# graph <- play_barabasi_albert(n = 100, power = 1.2)\ngraph %>% ggraph(., layout = layout_with_fr(.)) + \n  geom_edge_link0(colour = \"grey\") + \n  geom_node_point(colour = \"orange\")\n\n\n\n\nYou will also notice that the F-R layout is not deterministic - different runs will result in slightly different configurations. Saving the layout in l allows us to get the exact same result multiple times.\n\npar(mfrow = c(2,2), mar = c(1,1,1,1))\nplot(net.bg, layout = layout_with_fr)\nplot(net.bg, layout = layout_with_fr)\nplot(net.bg, layout = l)\nplot(net.bg, layout = l)\n\n\n\n\nBy default, the coordinates of the plots are rescaled to the [-1,1] interval for both x and y. You can change that with the parameter rescale = FALSE and rescale your plot manually by multiplying the coordinates by a scalar. You can use norm_coords to normalize the plot with the boundaries you want. This way you can create more compact or spread out layout versions.\n\n#Get the layout coordinates:\nl <- layout_with_fr(net.bg)\n# Normalize them so that they are in the -1, 1 interval:\nl <- norm_coords(l, ymin = -1, ymax = 1, xmin = -1, xmax = 1)\n\npar(mfrow = c(2,2), mar = c(0,0,0,0))\nplot(net.bg, rescale = F, layout = l*0.4)\nplot(net.bg, rescale = F, layout = l*0.8)\nplot(net.bg, rescale = F, layout = l*1.2)\nplot(net.bg, rescale = F, layout = l*1.6)\n\n\n\n# Using tidygraph\n# Can't do this with tidygraph ( multiplying layout * scalar ), it seems\n\nAnother popular force-directed algorithm that produces nice results for connected graphs is Kamada Kawai. Like Fruchterman Reingold, it attempts to minimize the energy in a spring system.\n\nl <- layout_with_kk(net.bg)\nplot(net.bg, layout = l)\n\n\n\n# Using tidygraph\n# graph <- play_barabasi_albert(n = 100, power = 1.2)\ngraph %>% ggraph(., layout = layout_with_kk(.)) + \n  geom_edge_link0(colour = \"grey\") + \n  geom_node_point(colour = \"orange\", size = 4)\n\n\n\n\nThe MDS (multidimensional scaling) algorithm tries to place nodes based on some measure of similarity or distance between them. More similar/less distant nodes are placed closer to each other. By default, the measure used is based on the shortest paths between nodes in the network. That can be changed with the dist parameter.\n\nplot(net.bg, layout = layout_with_mds)\n\n\n\n# Using tidygraph\n# graph <- play_barabasi_albert(n = 100, power = 1.2)\ngraph %>% ggraph(., layout = layout_with_mds(.)) + \n  geom_edge_link0(colour = \"grey\") + \n  geom_node_point(colour = \"orange\", size = 4)\n\n\n\n\nThe LGL algorithm is for large connected graphs. Here you can specify a root- the node that will be placed in the middle of the layout.\n\nplot(net.bg, layout = layout_with_lgl)\n\n\n\n# Using tidygraph\n# graph <- play_barabasi_albert(n = 100, power = 1.2)\ngraph %>% ggraph(., layout = layout_with_lgl(.)) + \n  geom_edge_link0(colour = \"grey\") + \n  geom_node_point(colour = \"orange\", size = 4)\n\n\n\n\nBy default, igraph uses a layout called layout_nicely which selects an appropriate layout algorithm based on the properties of the graph. Check out all available layouts in igraph:\n\n?igraph::layout_\n\n\nlayouts <- grep(\"^layout_\", ls(\"package:igraph\"), value = TRUE)[-1]\n\n# Remove layouts that do not apply to our graph.\nlayouts <- layouts[!grepl(\"bipartite|merge|norm|sugiyama|tree\", layouts)]\n\npar(mfrow = c(3,3), mar = c(1,1,1,1))\n\nfor (layout in layouts) {\n  print(layout)\n  l <- do.call(layout, list(net))\n  plot(net, edge.arrow.mode = 0, layout = l, main = layout) }\n\n[1] \"layout_as_star\"\n\n\n[1] \"layout_components\"\n\n\n[1] \"layout_in_circle\"\n\n\n[1] \"layout_nicely\"\n\n\n[1] \"layout_on_grid\"\n\n\n[1] \"layout_on_sphere\"\n\n\n[1] \"layout_randomly\"\n\n\n[1] \"layout_with_dh\"\n\n\n[1] \"layout_with_drl\"\n\n\n\n\n\n[1] \"layout_with_fr\"\n\n\n[1] \"layout_with_gem\"\n\n\n[1] \"layout_with_graphopt\"\n\n\n[1] \"layout_with_kk\"\n\n\n[1] \"layout_with_lgl\"\n\n\n[1] \"layout_with_mds\""
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#highlighting-specific-nodes-or-links",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#highlighting-specific-nodes-or-links",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "‚Äî‚Äî-~~ Highlighting specific nodes or links ‚Äî‚Äî‚Äì",
    "text": "‚Äî‚Äî-~~ Highlighting specific nodes or links ‚Äî‚Äî‚Äì\nSometimes we want to focus the visualization on a particular node or a group of nodes. Let‚Äôs represent distance from the NYT:\n\n\ndistances() calculates shortest path from vertices in ‚Äòv‚Äô to ones in ‚Äòto‚Äô.\n\n\ndist.from.NYT <- distances(net, \n                           v = V(net)[media == \"NY Times\"], \n                           to = V(net), \n                           weights = NA)\n\n#Set colors to plot the distances:\noranges <- colorRampPalette(c(\"dark red\", \"gold\"))\ncol <- oranges(max(dist.from.NYT)+1)\ncol <- col[dist.from.NYT+1]\n\n# Let's have same coordinates for Nodes in both graph renderings\n# Then we can verify that the distance calculations are the same for both renderings\ncoords <- igraph::layout_nicely(net)\nplot(net, vertex.label = dist.from.NYT,\n     vertex.color = col, vertex.label.color = \"black\",\n     layout = coords)\n\n\n\n\n\n# Using tidygraph\ngraph <- tbl_graph(nodes, links, directed = TRUE)\ngraph\n\n# A tbl_graph: 17 nodes and 49 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 17 √ó 5 (active)\n  id    media               media.type type.label audience.size\n  <chr> <chr>                    <int> <chr>              <int>\n1 s01   NY Times                     1 Newspaper             20\n2 s02   Washington Post              1 Newspaper             25\n3 s03   Wall Street Journal          1 Newspaper             30\n4 s04   USA Today                    1 Newspaper             32\n5 s05   LA Times                     1 Newspaper             20\n6 s06   New York Post                1 Newspaper             50\n# ‚Ä¶ with 11 more rows\n#\n# Edge Data: 49 √ó 4\n   from    to type      weight\n  <int> <int> <chr>      <int>\n1     1     2 hyperlink     22\n2     1     3 hyperlink     22\n3     1     4 hyperlink     21\n# ‚Ä¶ with 46 more rows\n\n# Set up NY Times as root node first\n# V(net)[media == \"NY Times\"] cannot be used since it returns an `igraph.vs` ( i.e. a list ) object. \n# We need an integer node id.\nroot_nyt <- graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rowid_to_column(var = \"node_id\") %>%\n  filter(media == \"NY Times\") %>%\n  select(node_id) %>% as_vector()\nroot_nyt\n\nnode_id \n      1 \n\ngraph %>%\n  activate(nodes) %>%\n  mutate(size = centrality_degree()) %>%\n  \n  # new stuff:\n  # breadth first search for all distances from the root node\n  mutate(order = bfs_dist(root = root_nyt)) %>%\n  \n  ggraph(., layout = coords) + # same layout\n  geom_edge_link(\n    aes(width = weight),\n    color = \"grey80\",\n    end_cap = circle(.2, \"cm\"),\n    arrow = arrow(\n      type = \"closed\",\n      ends = \"last\",\n      length = unit(1, \"mm\")\n    )\n  ) +\n  geom_node_point(aes(fill = order,\n                      size = size),\n                  shape = 21,\n                  color = \"black\") +\n  \n  geom_node_text(aes(label = order)) +\n  \n  scale_fill_gradient(\n    name = \"Distance from NY Times\",\n    low = \"dark red\",\n    high = \"gold\",\n    guide = \"legend\"\n  ) +\n  scale_edge_width(range = c(0.2, 1.5), guide = \"none\") +\n  scale_size_continuous(\"Degree\", range =  c(2, 16)) +\n  guides(fill = guide_legend(override.aes = list(pch = 21,\n                                                 size = 4)))\n\n\n\n\nOr, a bit more readable:\n\nplot(net, vertex.color = col, \n     vertex.label = dist.from.NYT, edge.arrow.size = .6,\n     vertex.label.color = \"white\", \n     vertex.size = V(net)$size*1.6, \n     edge.width = 2,\n     layout = norm_coords(layout_with_lgl(net))*1.4, rescale = F)"
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#path-highlighting",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#path-highlighting",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "Path Highlighting",
    "text": "Path Highlighting\nWe can also highlight paths between the nodes in the network.\n\nSay here between MSNBC and the New York Post\n\n\nnews.path <- shortest_paths(net,\n                            from  =  V(net)[media == \"MSNBC\"],\n                            to   =  V(net)[media == \"New York Post\"],\n                            output  =  \"both\")  #both path nodes and edges\nnews.path.distance <- distances(net,\n                                V(net)[media == \"MSNBC\"],\n                                V(net)[media == \"New York Post\"] )\nnews.path\n\n$vpath\n$vpath[[1]]\n+ 4/17 vertices, named, from 8e65729:\n[1] s08 s03 s12 s06\n\n\n$epath\n$epath[[1]]\n+ 3/48 edges from 8e65729 (vertex names):\n[1] s08->s03 s03->s12 s12->s06\n\n\n$predecessors\nNULL\n\n$inbound_edges\nNULL\n\nnews.path.distance\n\n    s06\ns08   5\n\n#Generate edge color variable to plot the path:\necol <- rep(\"gray80\", ecount(net))\necol[unlist(news.path$epath)] <- \"orange\"\n\n#Generate edge width variable to plot the path:\new <- rep(2, ecount(net))\new[unlist(news.path$epath)] <- 4\n\n#Generate node color variable to plot the path:\nvcol <- rep(\"gray40\", vcount(net))\nvcol[unlist(news.path$vpath)] <- \"gold\"\n\nplot(net, vertex.color = vcol, \n     edge.color = ecol,\n     edge.width = ew, \n     edge.arrow.mode = 0,\n     ## added lines\n     vertex.label = V(net)$media,\n     vertex.label.font = 2, \n     vertex.label.color = \"gray40\",\n     vertex.label.cex = .7,\n     layout = coords * 1.5)\n\n\n\n\n\n# Using tidygraph\n# We need to use:\n# to_shortest_path(graph, from, to, mode = \"out\", weights = NULL)\n# Let's set up `to` and `from` nodes\n#\n# V(net)[media == \"NY Times\"] cannot be used since it returns an `igraph.vs` ( i.e. a list ) object.\n# We need integer node ids for `from` and `to` in `to_shortest_path`\n\nmsnbc <- graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rowid_to_column(var = \"node_id\") %>%\n  filter(media == \"MSNBC\") %>%\n  select(node_id) %>% as_vector()\nmsnbc\n\nnode_id \n      8 \n\nnypost <- graph %>%\n  activate(nodes) %>%\n  as_tibble() %>%\n  rowid_to_column(var = \"node_id\") %>%\n  filter(media == \"New York Post\") %>%\n  select(node_id) %>% as_vector()\nnypost\n\nnode_id \n      6 \n\n# Let's create a fresh graph object using morph\n# However we want to merge it back with the original `graph`\n# to get an overlay plot\n#\n# # Can do this to obtain a separate graph\n# convert(to_shortest_path,from = msnbc,to = nypost)\n# However we want to merge it back with the original `graph`\n# to get an overlay plot\nmsnbc_nyp <-\n  graph %>%\n  # first mark all nodes and edges as *not* on the shortest path\n  activate(nodes) %>%\n  mutate(shortest_path_node = FALSE) %>%\n  activate(edges) %>%\n  mutate(shortest_path_edge = FALSE) %>%\n  \n  # Find shortest path between MSNBC and NY Post\n  morph(to_shortest_path, from = msnbc, to = nypost) %>%\n  \n  # Now to mark the shortest_path nodes as TRUE\n  activate(nodes) %>%\n  mutate(shortest_path_node = TRUE) %>%\n  \n  # Now to mark the shortest_path edges as TRUE\n  activate(edges) %>%\n  mutate(shortest_path_edge = TRUE) %>%\n  #\n  # Merge back into main graph; Still saving it as a `msnbc_nyp`\n  unmorph()\nmsnbc_nyp\n\n# A tbl_graph: 17 nodes and 49 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 49 √ó 5 (active)\n   from    to type      weight shortest_path_edge\n  <int> <int> <chr>      <int> <lgl>             \n1     1     2 hyperlink     22 FALSE             \n2     1     3 hyperlink     22 FALSE             \n3     1     4 hyperlink     21 FALSE             \n4     1    15 mention       20 FALSE             \n5     2     1 hyperlink     23 FALSE             \n6     2     3 hyperlink     21 FALSE             \n# ‚Ä¶ with 43 more rows\n#\n# Node Data: 17 √ó 6\n  id    media               media.type type.label audience.size shortest_path_n‚Ä¶\n  <chr> <chr>                    <int> <chr>              <int> <lgl>           \n1 s01   NY Times                     1 Newspaper             20 FALSE           \n2 s02   Washington Post              1 Newspaper             25 FALSE           \n3 s03   Wall Street Journal          1 Newspaper             30 TRUE            \n# ‚Ä¶ with 14 more rows\n\nmsnbc_nyp %>%\n  activate(nodes) %>%\n  mutate(size = centrality_degree()) %>%\n  ggraph(layout = coords) +\n  #geom_edge_link0(colour = \"grey\") +\n  geom_edge_link0(aes(colour = shortest_path_edge,\n                      width = shortest_path_edge)) +\n  \n  geom_node_point(aes(size = size,\n                      fill = shortest_path_node), shape = 21) +\n  geom_node_text(aes(label = media)) +\n  \n  scale_size_continuous(\"Degree\", range =  c(2, 16)) +\n  scale_fill_manual(\"Shortest Path\",\n                    values = c(\"grey\", \"gold\")) +\n  \n  scale_edge_width_manual(values = c(1, 4)) +\n  \n  scale_edge_colour_manual(values = c(\"grey\", \"orange\")) +\n  guides(\n    fill = guide_legend(override.aes = list(pch = 21,\n                                            size = 6)),\n    edge_colour = \"none\",\n    edge_width = \"none\"\n  )\n\n\n\n\n\nHighlight the edges going into or out of a vertex, for instance the WSJ. For a single node, use incident(), for multiple nodes use incident_edges()\n\n\n\ninc.edges <-\n  incident(net, V(net)[media == \"Wall Street Journal\"], mode = \"all\")\n\n#Set colors to plot the selected edges.\necol <- rep(\"gray80\", ecount(net))\necol[inc.edges] <- \"orange\"\nvcol <- rep(\"grey40\", vcount(net))\nvcol[V(net)$media == \"Wall Street Journal\"] <- \"gold\"\nplot(\n  net,\n  vertex.color = vcol,\n  edge.color = ecol,\n  edge.width = 2,\n  layout = coords\n)\n\n\n\n\n\n# Using tidygraph\nwsj <- graph %>% \n  activate(nodes) %>% \n  as_tibble() %>% \n  rowid_to_column(var = \"node_id\") %>% \n  filter(media == \"Wall Street Journal\") %>% \n  select(node_id) %>% as_vector()\n\ngraph %>% \n  activate(nodes) %>% \n  mutate(wsj_adjacent = node_is_adjacent(to = wsj, mode = \"all\", \n                                         include_to = TRUE),\n         size = centrality_degree()) %>% \n  mutate(WSJ = if_else(media == \"Wall Street Journal\", TRUE, FALSE)) %>% \n  activate(edges) %>% \n  mutate(wsj_links = edge_is_incident(wsj)) %>% \n  \n  ggraph(., layout = coords) +\n  geom_edge_link0(aes(colour = wsj_links), width = 2) + \n  \n  geom_node_point(aes(fill = WSJ, \n                      size = size),shape = 21) +\n  \n  geom_node_text(aes(label = media), repel = TRUE) + \n  \n  scale_fill_manual(\"WSJ Neighbours\", \n                      values = c(\"grey\", \"gold\"), \n                      guide = guide_legend(override.aes = \n                                             list(pch = 21, \n                                                  size = 5))) + \n  scale_edge_colour_manual(\"WSJ Links\", \n                      values = c(\"grey\", \"orange\")) + \n  scale_size(\"Degree\", range = c( 2, 16)) +\n  ggtitle(label = \"Highlighting WSJ Neighbours and Links\") +\n  guides(shape = \"none\", fill = \"none\" #, colour = \"none\"\n  )"
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#highlight-neighbours",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#highlight-neighbours",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "Highlight Neighbours",
    "text": "Highlight Neighbours\nOr we can highlight the immediate neighbors of a vertex, say WSJ. The neighbors function finds all nodes one step out from the focal actor. To find the neighbors for multiple nodes, use adjacent_vertices(). To find node neighborhoods going more than one step out, use function ego() with parameter order set to the number of steps out to go from the focal node(s).\n\nneigh.nodes <- neighbors(net, V(net)[media == \"Wall Street Journal\"], mode = \"out\")\n\n# Set colors to plot the neighbors:\nvcol[neigh.nodes] <- \"#ff9d00\"\nplot(net, vertex.color = vcol)\n\n\n\n\n\n# Using tidygraph\nwsj <- graph %>% \n  activate(nodes) %>% \n  as_tibble() %>% \n  rowid_to_column(var = \"node_id\") %>% \n  filter(media == \"Wall Street Journal\") %>% \n  select(node_id) %>% as_vector()\n\ngraph %>% \n  activate(nodes) %>% \n  mutate(wsj_adjacent = node_is_adjacent(to = wsj, mode = \"all\", \n  # remove WSJ from the list!\n  # highlight only the neighbours\n  \n                                         include_to = FALSE),\n         size = centrality_degree()) %>% \n  mutate(WSJ = if_else(media == \"Wall Street Journal\", TRUE, FALSE)) %>% \n  activate(edges) %>% \n  mutate(wsj_links = edge_is_incident(wsj)) %>% \n  \n  ggraph(., layout = coords) +\n  geom_edge_link0(aes(colour = wsj_links), width = 2) + \n  \n  geom_node_point(aes(fill = wsj_adjacent, \n                      size = size),shape = 21) +\n  \n  geom_node_text(aes(label = media), repel = TRUE) + \n  \n  scale_fill_manual(\"WSJ Neighbours\", \n                      values = c(\"grey\", \"gold\"), \n                      guide = guide_legend(override.aes = \n                                             list(pch = 21, \n                                                  size = 5))) + \n  scale_edge_colour_manual(\"WSJ Links\", \n                      values = c(\"grey\", \"orange\")) + \n  scale_size(\"Degree\", range = c( 2, 16)) +\n  ggtitle(label = \"Highlighting WSJ Neighbours and Links\") +\n  guides(shape = \"none\", fill = \"none\" #, colour = \"none\"\n  )\n\n\n\n\nAnother way to draw attention to a group of nodes: (This is generally not recommended since, depending on layout, nodes that are not ‚Äòmarked‚Äô can accidentally get placed on top of the mark)\n\nplot(net, mark.groups = c(1,4,5,8), mark.col = \"#C5E5E7\", mark.border = NA)\n\n\n\n# Mark multiple groups:\nplot(net, mark.groups = list(c(1,4,5,8), c(15:17)),\n          mark.col = c(\"#C5E5E7\",\"#ECD89A\"), mark.border = NA)"
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#interactive-plotting-with-tkplot",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#interactive-plotting-with-tkplot",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "‚Äî‚Äî-~~ Interactive plotting with ‚Äòtkplot‚Äô ‚Äî‚Äî‚Äì",
    "text": "‚Äî‚Äî-~~ Interactive plotting with ‚Äòtkplot‚Äô ‚Äî‚Äî‚Äì\nR and igraph offer interactive plotting capabilities (mostly helpful for small networks)\n\ntkid <- tkplot(net) #tkid is the id of the tkplot\n\nl <- tkplot.getcoords(tkid) # grab the coordinates from tkplot\nplot(net, layout = l)"
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#other-ways-to-represent-a-network",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#other-ways-to-represent-a-network",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "‚Äî‚Äî-~~ Other ways to represent a network ‚Äî‚Äî‚Äì",
    "text": "‚Äî‚Äî-~~ Other ways to represent a network ‚Äî‚Äî‚Äì\nOne reminder that there are other ways to represent a network:\n\nHeatmap of the network matrix:\n\n\nnetm <- as_adjacency_matrix(net, attr = \"weight\", sparse = F)\ncolnames(netm) <- V(net)$media\nrownames(netm) <- V(net)$media\n\npalf <- colorRampPalette(c(\"gold\", \"dark orange\"))\n\n# The Rowv & Colv parameters turn dendrograms on and off\nheatmap(netm[,17:1], Rowv  =  NA, Colv  =  NA, col  =  palf(20),\n        scale = \"none\", margins = c(10,10) )\n\n\n\n\n\nDegree distribution\n\n\ndeg.dist <- degree_distribution(net, cumulative = T, mode = \"all\")\n# degree is available in `sna` too\nplot(x = 0:max(igraph::degree(net)), y = 1-deg.dist, pch = 19, cex = 1.4, col = \"orange\", xlab = \"Degree\", ylab = \"Cumulative Frequency\")\n\n\n\n# Using Tidygraph\n# https://stackoverflow.com/questions/18356860/cumulative-histogram-with-ggplot2\ngraph %>% \n  activate(nodes) %>% \n  mutate(degree = centrality_degree(mode = \"all\")) %>% \n  as_tibble() %>% \n  ggplot(aes(x = degree, y = stat(count))) +\n  # geom_histogram(aes(y = cumsum(..count..)), binwidth = 1) + \n  stat_bin(aes(y = cumsum(..count..)),\n                binwidth = 1,# Ta-Da !!\n                geom =\"point\",color =\"orange\", size = 5)\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\n‚Ñπ Please use `after_stat(count)` instead."
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#plotting-two-mode-networks",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#plotting-two-mode-networks",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "4. Plotting two-mode networks",
    "text": "4. Plotting two-mode networks\n\nhead(nodes2)\n\n   id   media media.type media.name audience.size\n1 s01     NYT          1  Newspaper            20\n2 s02    WaPo          1  Newspaper            25\n3 s03     WSJ          1  Newspaper            30\n4 s04    USAT          1  Newspaper            32\n5 s05 LATimes          1  Newspaper            20\n6 s06     CNN          2         TV            56\n\nhead(links2)\n\n    U01 U02 U03 U04 U05 U06 U07 U08 U09 U10 U11 U12 U13 U14 U15 U16 U17 U18 U19\ns01   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\ns02   0   0   0   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0\ns03   0   0   0   0   0   1   1   1   1   0   0   0   0   0   0   0   0   0   0\ns04   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0\ns05   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0\ns06   0   0   0   0   0   0   0   0   0   0   0   0   1   1   0   0   1   0   0\n    U20\ns01   0\ns02   1\ns03   0\ns04   0\ns05   0\ns06   0\n\nnet2\n\nIGRAPH 9008ce1 UN-B 30 31 -- \n+ attr: type (v/l), name (v/c)\n+ edges from 9008ce1 (vertex names):\n [1] s01--U01 s01--U02 s01--U03 s02--U04 s02--U05 s02--U20 s03--U06 s03--U07\n [9] s03--U08 s03--U09 s04--U09 s04--U10 s04--U11 s05--U11 s05--U12 s05--U13\n[17] s06--U13 s06--U14 s06--U17 s07--U14 s07--U15 s07--U16 s08--U16 s08--U17\n[25] s08--U18 s08--U19 s09--U06 s09--U19 s09--U20 s10--U01 s10--U11\n\nplot(net2)\n\n\n\n\nThis time we will make nodes look different based on their type. Media outlets are blue squares, audience nodes are orange circles:\n\nV(net2)$color <- c(\"steel blue\", \"orange\")[V(net2)$type+1]\nV(net2)$shape <- c(\"square\", \"circle\")[V(net2)$type+1]\n\n# Media outlets will have name labels, audience members will not:\nV(net2)$label <- \"\"\nV(net2)$label[V(net2)$type == F] <- nodes2$media[V(net2)$type == F]\nV(net2)$label.cex = .6\nV(net2)$label.font = 2\n\nplot(net2, vertex.label.color = \"white\", vertex.size = (2-V(net2)$type)*8)\n\n\n\n\n\n# Using tidygraph\nas_tbl_graph(x = links2, directed = TRUE) %>%\n  activate(nodes) %>%\n  left_join(nodes2, by = c(\"name\" = \"id\")) %>%\n  ggraph(layout = \"nicely\") +\n  geom_edge_link0() +\n  geom_node_point(aes(shape = type, fill = type, size = type)) +\n  geom_node_text(aes(label = if_else(type, \"\", media)), colour = \"white\", size = 3) +\n  \n  scale_shape_manual(\n    \"Type\",\n    values = c(22, 21),\n    labels = c(\"Media\", \"Persons\"),\n    guide = guide_legend(override.aes = list(size = 6))\n  ) +\n  \n  scale_fill_manual(\n    \"Type\",\n    values = c(\"dodgerblue\", \"orange\"),\n    labels = c(\"Media\", \"Persons\")\n  ) +\n  \n  scale_size_manual(values = c(10, 4), guide = \"none\") \n\n\n\n\nigraph has a built-in bipartite layout, though it‚Äôs not the most helpful:\n\nplot(net2, vertex.label = NA, vertex.size = 7, layout = layout_as_bipartite)\n\n\n\n# using tidygraph\nas_tbl_graph(x = links2, directed = TRUE) %>%\n  activate(nodes) %>%\n  left_join(nodes2, by = c(\"name\" = \"id\")) %>%\n  ggraph(., layout = \"igraph\", algorithm = \"bipartite\") +\n  geom_edge_link0() +\n  geom_node_point(aes(shape = type, fill = type, size = type)) +\n  geom_node_text(aes(label = if_else(type, \"\", media)), colour = \"white\", size = 3) +\n  \n  scale_shape_manual(\n    \"Type\",\n    values = c(22, 21),\n    labels = c(\"Media\", \"Persons\"),\n    guide = guide_legend(override.aes = list(size = 6))\n  ) +\n  \n  scale_fill_manual(\n    \"Type\",\n    values = c(\"dodgerblue\", \"orange\"),\n    labels = c(\"Media\", \"Persons\")\n  ) +\n  \n  scale_size_manual(values = c(10, 4), guide = \"none\") \n\n\n\n\n\nUsing text as nodes:\n\n\npar(mar = c(0,0,0,0))\nplot(net2, vertex.shape = \"none\", vertex.label = nodes2$media,\n     vertex.label.color = V(net2)$color, vertex.label.font = 2,\n     vertex.label.cex = .95, edge.color = \"gray70\",  edge.width = 2)\n\n\n\n# Using tidygraph\nas_tbl_graph(x = links2, directed = TRUE) %>%\n  activate(nodes) %>%\n  left_join(nodes2, by = c(\"name\" = \"id\")) %>%\n  ggraph(layout = \"nicely\") +\n  geom_edge_link(end_cap = circle(.4,\"cm\"), \n                 start_cap = circle(0.4, \"cm\")) +\n  # geom_node>point(aes(shape = type, fill = type, size = type)) +\n  geom_node_text(aes(label= media, colour = type), size = 4) +\n  \n  scale_shape_manual(\n    \"Type\",\n    values = c(22, 21),\n    labels = c(\"Media\", \"Persons\"),\n    guide = guide_legend(override.aes = list(size = 4))\n  ) +\n  \n  scale_fill_manual(\n    \"Type\",\n    values = c(\"dodgerblue\", \"orange\"),\n    labels = c(\"Media\", \"Persons\")\n  ) +\n  \n  scale_size_manual(values = c(10, 4), guide = \"none\") \n\n\n\n\n\nUsing images as nodes You will need the ‚Äòpng‚Äô package to do this:\n\n\n# install.packages(\"png\")\nlibrary(\"png\")\n\nimg.1 <- readPNG(\"./images/news.png\")\nimg.2 <- readPNG(\"./images/user.png\")\n\nV(net2)$raster <- list(img.1, img.2)[V(net2)$type+1]\n\npar(mar = c(3,3,3,3))\n\nplot(net2, vertex.shape = \"raster\", vertex.label = NA,\n     vertex.size = 16, vertex.size2 = 16, edge.width = 2)\n\n\n# By the way, you can also add any image you want to any plot. For example, many #network graphs could be improved by a photo of a puppy carrying a basket full of kittens.\nimg.3 <- readPNG(\"./images/puppy.png\")\nrasterImage(img.3,  xleft = -1.7, xright = 0, ybottom = -1.2, ytop = 0)\n\n\n\n# The numbers after the image are coordinates for the plot.\n# The limits of your plotting area are given in par()$usr\n\n\n# Using ~~tidygraph~~ visNetwork\n# See this cheatsheet:\n# system.file(\"fontAwesome/Font_Awesome_Cheatsheet.pdf\", package = \"visNetwork\")\nlibrary(visNetwork)\n\nas_tbl_graph(x = links2, directed = TRUE) %>%\n  activate(nodes) %>%\n  left_join(nodes2, by = c(\"name\" = \"id\")) %>% \n  \n  # visNetwork needs a \"group\" variable for grouping...\n  mutate(group = as.character(type)) %>% \n  visIgraph(.) %>% \n  visGroups(groupname = \"FALSE\",shape = \"icon\", \n            icon = list(code = \"f26c\", size = 75, color = \"orange\")) %>% \n  visGroups(groupname = \"TRUE\",shape = \"icon\", \n            icon = list(code = \"f007\", size = 75)) %>% \n  addFontAwesome()\n\n\n\n\n\nWe can also generate and plot bipartite projections for the two-mode network : (co-memberships are easy to calculate by multiplying the network matrix by its transposed matrix, or using igraph‚Äôs bipartite.projection function)\n\nnet2.bp <- bipartite.projection(net2)\n\n#We can calculate the projections manually as well:\nas_incidence_matrix(net2)  %*% t(as_incidence_matrix(net2))\n\n    s01 s02 s03 s04 s05 s06 s07 s08 s09 s10\ns01   3   0   0   0   0   0   0   0   0   1\ns02   0   3   0   0   0   0   0   0   1   0\ns03   0   0   4   1   0   0   0   0   1   0\ns04   0   0   1   3   1   0   0   0   0   1\ns05   0   0   0   1   3   1   0   0   0   1\ns06   0   0   0   0   1   3   1   1   0   0\ns07   0   0   0   0   0   1   3   1   0   0\ns08   0   0   0   0   0   1   1   4   1   0\ns09   0   1   1   0   0   0   0   1   3   0\ns10   1   0   0   1   1   0   0   0   0   2\n\nt(as_incidence_matrix(net2)) %*%   as_incidence_matrix(net2)\n\nWarning in rm(list = cmd, envir = .tkplot.env): object 'tkp.1' not found\n\n\n    U01 U02 U03 U04 U05 U06 U07 U08 U09 U10 U11 U12 U13 U14 U15 U16 U17 U18 U19\nU01   2   1   1   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0\nU02   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\nU03   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\nU04   0   0   0   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0\nU05   0   0   0   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0\nU06   0   0   0   0   0   2   1   1   1   0   0   0   0   0   0   0   0   0   1\nU07   0   0   0   0   0   1   1   1   1   0   0   0   0   0   0   0   0   0   0\nU08   0   0   0   0   0   1   1   1   1   0   0   0   0   0   0   0   0   0   0\nU09   0   0   0   0   0   1   1   1   2   1   1   0   0   0   0   0   0   0   0\nU10   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0   0   0\nU11   1   0   0   0   0   0   0   0   1   1   3   1   1   0   0   0   0   0   0\nU12   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0\nU13   0   0   0   0   0   0   0   0   0   0   1   1   2   1   0   0   1   0   0\nU14   0   0   0   0   0   0   0   0   0   0   0   0   1   2   1   1   1   0   0\nU15   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   0   0   0\nU16   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   2   1   1   1\nU17   0   0   0   0   0   0   0   0   0   0   0   0   1   1   0   1   2   1   1\nU18   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1   1\nU19   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   1   1   1   2\nU20   0   0   0   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   1\n    U20\nU01   0\nU02   0\nU03   0\nU04   1\nU05   1\nU06   1\nU07   0\nU08   0\nU09   0\nU10   0\nU11   0\nU12   0\nU13   0\nU14   0\nU15   0\nU16   0\nU17   0\nU18   0\nU19   1\nU20   2\n\npar(mfrow = c(1, 2))\n\nplot(\n  net2.bp$proj1,\n  vertex.label.color = \"black\",\n  vertex.label.dist = 2,\n  vertex.label = nodes2$media[!is.na(nodes2$media.type)]\n)\n\nplot(\n  net2.bp$proj2,\n  vertex.label.color = \"black\",\n  vertex.label.dist = 2,\n  vertex.label = nodes2$media[is.na(nodes2$media.type)]\n)\n\n\n\n\n\n# Using tidygraph\n# Calculate projections and add attributes/labels\nproj1 <-\n  as_incidence_matrix(net2)  %*% t(as_incidence_matrix(net2)) %>%\n  as_tbl_graph() %>%\n  activate(nodes) %>%\n  left_join(., nodes2, by = c(\"name\" = \"id\"))\n\nWarning in (is.null(rownames(x)) && is.null(colnames(x))) || colnames(x) == :\n'length(x) = 10 > 1' in coercion to 'logical(1)'\n\nproj2 <-\n  t(as_incidence_matrix(net2)) %*%   as_incidence_matrix(net2) %>% as_tbl_graph() %>%\n  activate(nodes) %>%\n  left_join(., nodes2, by = c(\"name\" = \"id\"))\n\nWarning in (is.null(rownames(x)) && is.null(colnames(x))) || colnames(x) == :\n'length(x) = 20 > 1' in coercion to 'logical(1)'\n\np1 <- proj1 %>%\n  ggraph(layout = \"graphopt\") +\n  geom_edge_link0() +\n  geom_node_point(size = 6, colour = \"orange\") +\n  geom_node_text(aes(label = media), repel = TRUE)\n\np2 <- proj2 %>%\n  ggraph(layout = \"graphopt\") +\n  geom_edge_link0() +\n  geom_node_point(\n    aes(colour = media.type),\n    size = 6,\n    shape  = 15,\n    colour = \"dodgerblue\"\n  ) +\n  geom_node_text(aes(label = media), repel = TRUE)\n\np1 + p2"
  },
  {
    "objectID": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#plotting-multiplex-networks",
    "href": "content/projects/2021-06-16-a-tidygraph-version-of-a-popular-network-science-tutorial/index.html#plotting-multiplex-networks",
    "title": "A Tidygraph version of a Popular Network Science Tutorial",
    "section": "5. Plotting multiplex networks",
    "text": "5. Plotting multiplex networks\nIn some cases, the networks we want to plot are multigraphs: they can have multiple edges connecting the same two nodes. A related concept, multiplex networks, contain multiple types of ties ‚Äì e.g. friendship, romantic, and work relationships between individuals.\nIn our example network, we also have two tie types: hyperlinks and mentions. One thing we can do is plot each type of tie separately:\n\nE(net)$width <- 2\nplot(\n  net,\n  edge.color = c(\"dark red\", \"slategrey\")[(E(net)$type == \"hyperlink\") +\n                                            1],\n  vertex.color = \"gray40\",\n  layout = layout_in_circle,\n  edge.curved = .3\n)\n\n\n\n# Another way to delete edges using the minus operator:\nnet.m <- net - E(net)[E(net)$type == \"hyperlink\"]\nnet.h <- net - E(net)[E(net)$type == \"mention\"]\n\n#Plot the two links separately:\npar(mfrow = c(1, 2))\n\nplot(net.h,\n     vertex.color = \"orange\",\n     layout = layout_with_fr,\n     main = \"Tie: Hyperlink\")\nplot(net.m,\n     vertex.color = \"lightsteelblue2\",\n     layout = layout_with_fr,\n     main = \"Tie: Mention\")\n\n\n\n\n\nMake sure the nodes stay in the same place in both plots:\n\n\npar(mfrow = c(1, 2), mar = c(1, 1, 4, 1))\n\nl <- layout_with_fr(net)\nplot(net.h,\n     vertex.color = \"orange\",\n     layout = l,\n     main = \"Tie: Hyperlink\")\nplot(net.m,\n     vertex.color = \"lightsteelblue2\",\n     layout = l,\n     main = \"Tie: Mention\")\n\n\n\n\n\n#Using tidygraph\n\nlayout <- layout_in_circle(net)\np1 <- tbl_graph(nodes, links, directed = TRUE) %>% \n  activate(nodes) %>% \n  mutate(size = centrality_degree()) %>% \n  activate(edges) %>% \n  filter(type == \"hyperlink\") %>% \n  \n  # reusing the earlier computed layout\n  ggraph(layout = layout) +\n  geom_edge_arc(strength = 0.05) +\n  geom_node_point(aes(size = size), shape = 21, \n                  fill = \"orange\") +\n  scale_size(range = c(2, 12)) + \n  labs(title = \"Tie: Hyperlink\") + \n  theme(aspect.ratio = 1,,\n        legend.position = \"bottom\")\n\np2 <- tbl_graph(nodes, links, directed = TRUE) %>% \n  activate(nodes) %>% \n  mutate(size = centrality_degree()) %>% \n  activate(edges) %>% \n  filter(type == \"mention\") %>% \n   # reusing the earlier computed layout\n  ggraph(layout = layout) +\n  geom_edge_arc(strength = 0.05) +\n  geom_node_point(aes(size = size), shape = 21, \n                  fill = \"lightsteelblue2\") +\n  scale_size(range = c(2, 12)) + \n  labs(title = \"Tie: Mention\") + \n  theme(aspect.ratio = 1, legend.position = \"bottom\")\n\nwrap_plots(p1, p2,guides = \"collect\") & \n  # note this \"pipe\" for patchwork!\n  theme(legend.position = \"none\")\n\n\n\n\nIn our example network, we don‚Äôt have node dyads connected by multiple types of connections (we never have both a ‚Äòhyperlink‚Äô and a ‚Äòmention‚Äô tie between the same two news outlets) ‚Äì however that could happen.\nNote: See the edges between s03 and s10‚Ä¶these are in opposite directions. So no dyads.\n\nlayout <- layout_in_circle(net)\ntbl_graph(nodes, links, directed = TRUE) %>%  \n  activate(nodes) %>% \n  mutate(size = centrality_degree()) %>% \n\n  # reusing the earlier computed layout\n  ggraph(layout = layout) +\n  geom_edge_arc(strength = 0.05, aes(colour = type)) +\n  geom_node_point(aes(size = size), shape = 21, \n                  fill = \"orange\") +\n  geom_node_text(aes(label = id), repel = TRUE) +\n  scale_size(range = c(2, 12)) + \n  labs(title = \"Tie: Hyperlink\") + \n  theme(aspect.ratio = 1,,\n        legend.position = \"bottom\")\n\n\n\n\nOne challenge in visualizing multiplex networks is that multiple edges between the same two nodes may get plotted on top of each other in a way that makes them impossible to distinguish. For example, let us generate a simple multiplex network with two nodes and three ties between them:\n\nmultigtr <- graph(edges = c(1, 2, 1, 2, 1, 2), n = 2)\n\nl <- layout_with_kk(multigtr)\n\n# Let's just plot the graph:\nplot(\n  multigtr,\n  vertex.color = \"lightsteelblue\",\n  vertex.frame.color = \"white\",\n  vertex.size = 40,\n  vertex.shape = \"circle\",\n  vertex.label = NA,\n  edge.color = c(\"gold\", \"tomato\", \"yellowgreen\"),\n  edge.width = 10,\n  edge.arrow.size = 5,\n  edge.curved = 0.1,\n  layout = l\n)\n\n\n\n# Using tidygraph\nmultigtr %>% \n  as_tbl_graph() %>% \n  activate(edges) %>% \n  mutate(edge_col = c(\"gold\", \"tomato\", \"yellowgreen\")) %>% \nggraph(., layout = l) +\n  geom_edge_arc(strength = 0.1, aes(colour = edge_col)) + \n  geom_node_point(size = 4, colour = \"lightsteelblue\") +\n  theme(legend.position = \"none\")\n\n\n\n\nBecause all edges in the graph have the same curvature, they are drawn over each other so that we only see the last one. What we can do is assign each edge a different curvature. One useful function in ‚Äòigraph‚Äô called curve_multiple() can help us here. For a graph G, curve.multiple(G) will generate a curvature for each edge that maximizes visibility.\n\nplot(\n  multigtr,\n  vertex.color = \"lightsteelblue\",\n  vertex.frame.color = \"white\",\n  vertex.size = 40,\n  vertex.shape = \"circle\",\n  vertex.label = NA,\n  edge.color = c(\"gold\", \"tomato\", \"yellowgreen\"),\n  edge.width = 10,\n  edge.arrow.size = 5,\n  edge.curved = curve_multiple(multigtr),\n  layout = l\n)\n\n\n\n\n\nmultigtr %>% \n  as_tbl_graph() %>% \n  activate(edges) %>% \n  mutate(edge_col = c(\"gold\", \"tomato\", \"yellowgreen\")) %>% \nggraph(., layout = l) +\n  geom_edge_fan(strength = 0.1, aes(colour = edge_col),width = 2) + \n  geom_node_point(size = 4, colour = \"lightsteelblue\") +\n  theme(legend.position = \"none\")\n\n\n\n\nAnd that is the end of this reoworked tutorial! Hope you enjoyed it and found it useful!!"
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "",
    "text": "The movie Lawrence of Arabia is justly famous for its terrific story, great cast of characters and actors, and some truly legendary scenes. Here I take one of the iconic scenes from the movie, the attack on the port town of Aqaba and interpret the entire event and the build up to it from a TRIZ viewpoint.\nI will give a short description of the movie plot first.\nI then discuss the source of the problem, how it occurred to Lawrence, and how he went about solving it in this dramatic fashion. I give an analysis of the Problem from a (classical) TRIZ perspective, including the formulation of the Contradiction, Identification of Causes, the statement of the Ideal Final Result, and finally using the TRIZ Contradiction Matrix to find Inventive Principles that inform Lawrence‚Äôs solution. I also dwell in passing upon aspects of how this story can be interpreted as a manifestation of Mihaly Csikszentmihalyi‚Äôs Creativity Systems Model.\nThis piece stems from my teaching a course on Creative Thinking and Problem Solving based on TRIZ, titled Play and Invent, over the past 8 years or more at the Srishti Manipal Institute of Art, Design, and Technology, Bangalore, India. (https://srishtimanipalinstitute.in)."
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#lawrence-of-arabia-a-summary",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#lawrence-of-arabia-a-summary",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "Lawrence of Arabia: a Summary",
    "text": "Lawrence of Arabia: a Summary\nThe movie is the story of T.E. Lawrence, the English officer who successfully united and led the diverse, often warring, Arab tribes during World War I in order to fight the Turks. The stellar cast includes Peter O‚ÄôToole as Lawrence, Omar Sharif as Ali, Alec Guinness as Prince Feisal, Anthony Quinn as Auda Abu Tayi, Claude Raines as Dryden, and Anthony Quayle as Col. Brighton. The director was David Lean. The editing of the film by Anne Coates is also much admired. (https://womenfilmeditors.princeton.edu/tag/lawrence-of-arabia/)\nLawrence is a complex, talented, and yet simple man, who is extremely well read (Greek philosophy and the Koran, for example) and is also an expert in Arab affairs and has considerable skill at map-making. Due to his being interpreted as insolent and insubordinate , he is given a lowly job at the HQ in Cairo. Dryden manages to convince the General that Lawrence should be allowed to go into Arabia and to find out what kind of long-term plans Prince Feisal is making for Arabia.\nHere is the map of the events that are unfolding in the movie at this time.1\n\n\n\n\n\nLawrence encounters Ali in dramatic fashion at the Masturah Well, on the way to meet Feisal, and his Arab guide is shot by Ali, a direct experience for Lawrence of inter-tribe rivalry in Arabia. (Ali is a Harith, and Tafas the guide was a Hashemi). Lawrence peremptorily rejects an offer of help from Ali, and finds his way alone to Wadi Safra, where Feisal is camped. He is met by Col. Brighton as he nears the camp. Both enter camp just in time to witness another bombing raid by Turkish airplanes.\nLater in the meeting with Feisal, Brighton tries to convince Feisal to retreat to Yenbo (Yanbu) and be out of range for the Turks, and where the British Army would supply them, train them to fight against the Turks. Feisal reluctantly accepts this plan, though he would rather the British navy take the port city of Aqaba and supply his army from there. Brighton simply scoffs at that idea, because the Turkish have 12 inch guns at Aqaba and the British have other things to do.\nLawrence has already intrigued Feisal by completing a verse from the Koran as it was being read by Selim, the cleric. At the end of the meeting, Feisal confronts Lawrence alone, as to his intentions in Arabia and finds out, to his astonishment, that Lawrence has his own interpretation of what his tasks and loyalties were, and these did not necessarily coincide with those of Brighton. In fact, Lawrence is not in favour of the Arab Army‚Äôs retreat to Yenbo, as it would become one small part of the British Army. As a parting remark, Feisal says to Lawrence that the Arabs need what no man can provide, a miracle.\nHere is the video of that terrific tent meeting scene."
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#lawrences-problem",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#lawrences-problem",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "Lawrence‚Äôs Problem",
    "text": "Lawrence‚Äôs Problem\nLawrence does not sleep that night. Provoked by Feisal‚Äôs parting remark, he sits up all night on a sand dune close to the camp, thinking about how Aqaba could be taken, since he wants the Arabs to continue fighting from where they were, and even advance if possible with British help. His detailed understanding of the Arabian geography, his knowledge of the Aqaba port and its fortifications, all come to the fore here. Aqaba is a port at the head end of a narrow gulf to the east of the Sinai Peninsula.\nIn the early morning, seemingly in a eureka moment, he decides that attacking Aqaba from the landward side would be a good solution, since the guns there could not be turned around.\nHere is Lawrence trying to convince Ali about this plan:\n\n\n\n\nLawrence does not inform Brighton of his plans, nor even Feisal. It is Ali who informs Feisal of this enterprise. Clearly, Lawrence does not consider Brighton as a member of his Field (as defined by Csikszentmihalyi in his Creativity Systems Model), but Feisal is a Field Member to Ali.\nApropos, the act of sitting up all night can be seen as the Incubation and Elaboration stages of the 5 Stages of Creativity from Csikszentmihalyi (Preparation, Incubation, Insight, Elaboration, Execution)."
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#a-triz-analysis-of-the-plan-to-take-aqaba",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#a-triz-analysis-of-the-plan-to-take-aqaba",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "A TRIZ Analysis of the Plan to Take Aqaba",
    "text": "A TRIZ Analysis of the Plan to Take Aqaba\nFor a TRIZ workflow, we proceed as follows:\nFirst, using the method described in Open Source TRIZ, (https://www.youtube.com/watch?v=cah0OhCH55k), we identify knobs or parameters within the situation and see how turning these could lead to identifying a Cause for a Problem in the form of a Contradiction.\nHere below is a quick Ishikawa Diagram for this purpose:\n\n\n\n\n\n\n\n\nTurning the knobs/parameters in the Ishikawa Diagram, it seems that if the British allies attack Aqaba, they may win, BUT they may lose a few warships. If the Arabs want to attack, they are too small in number and have no warships, and hence their chances of success are very slim. Herein lies the Contradiction, which we can now specify as an Administrative Contradiction(AC) in plain English:\n\n\nAC: The Arabs need the British to supply them via Aqaba port. Aqaba has huge guns and they will sink the British ships in that narrow gulf if they try a naval attack. So the Arabs need to take Aqaba without losing British ships.\n\n\nNext, based on this Contradiction and the inspection of the Ishikawa Diagram above, we are now ready to define the Ideal Final Result:\n\n\nIFR: The Arabs need to attack and take Aqaba port, and the big guns there should have no effect.\n\n\nNote how the tone of this IFR is like a ‚Äúeat my cake and have it too‚Äù. Very typical for IFRs, this impossible-sounding tone!\nLet us take the AC and convert it into a Technical Contradiction(TC). We will look at the 48 TRIZ Parameters in the TRIZ Contradiction Matrix (PDF) and see which Parameter we want to improve, while not worsening another. Here is what we can attempt, stating the Contradiction both ways2:\n\n- TC 1: Increase Duration of Action of a Moving Object (12) and not worsen Stability of Objects Composition (21)- TC 2: Increase Stability of Objects Composition (21) and not worsen Duration of Action of a Moving Object (12)\n\nHere we choose these Parameters based on our IFR that the guns at Aqaba should not affect the Arab attack at all. The Parameters chosen from the TRIZ Matrix can be thought of as metaphors for the knobs that lie within our AC. Going from the AC to the TC is an act of making metaphors. We could easily have chosen the Parameter Power(18) or Illumination Intensity(23) to ‚Äúmetaphorize‚Äù the effectiveness of the attack, if our imaginations run in that direction. There is here a considerable flexibility and possibility for imaginative interpretations of the AC, but using the language of TRIZ.\nWe could even stretch to making a Physical Contradiction(PC)3 happen:\n\n\nPC: The Ships must be near the guns but not be near enough to be shot at. (They must be near and not near at the same time)"
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#solving-the-technical-contradiction",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#solving-the-technical-contradiction",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "Solving the Technical Contradiction",
    "text": "Solving the Technical Contradiction\nLet us take the both the TC-s into the Contradiction Matrix and arrive at the list of TRIZ Inventive Principles. Here is the Matrix solution for TC-1 in the figure below:\n\n\n\n\n\n\n\n\nThe Inventive Principles are:(TC1)\n\nIP 13 (The Other Way Around)\n\nIP 35 (Parameter Change)\n\nIP 24 (Intermediary)\n\nIP 40 (Composite Materials)\n\nand (TC2)\n\nIP 10 (Preliminary Action)\n\nIP 5 (Merging)\n\nIP 35 (Parameter Change)\n\nIP 13 (The Other Way Around)\n\nHow are we to apply these Inventive Principles? Here again is an imaginative exercise as we map these Generalized Solutions back into the Problem at hand:\n\nIP 13: The Other Way Around. How? Not attack by sea? Wait‚Ä¶ATTACK BY LAND!! Change the DIRECTION of Attack! So attack from the other side, the land side!! (We could retrospectively add this parameter to the Ishikawa Diagram too). Will this work? Yes, the guns can‚Äôt turn around !!\nIP 35: Parameter Change. But ‚Äúships‚Äù on land?? Note, the desert is an ocean into which no oar is dipped. Sand and Water are both Resources in the problem, as we have duly noted in the Ishikawa Diagram. So a different kind of ocean and therefore a different kind of ship? At a stretch, we can say the warships of the British Navy are being substituted with the use of ‚Ä¶.Camels!! And, metaphorically speaking, it is still an attack using ships‚Ä¶.The Ships of the Desert!! Parameter Change.\nIP 10: Prior Action. How? Lawrence and Ali are far from Aqaba and cannot do anything ‚Äúin advance‚Äù. What could this be?\nIP 5: Merging. However, on the way to Aqaba, Lawrence and Ali must recruit the Howeitat tribe ‚Äúin advance‚Äù of their attack !! As Lawrence tells Ali, If 50 men came out of the Nefud Desert, they might be 50 men other men would join. This is in accordance with what IP 10 is suggesting, to get other tribes to join in, in advance of the attack.\nIP 40: Composite Materials. What object within the situation can we reconstitute with smaller pieces of different types? The British Army‚Ä¶so an army made up of pieces? Yes! The Tribes need to unite into one composite army.\nAnd, instead of large warships, the Arabs switch to a composite force with camels‚Ä¶\n\nSo IP 13 works nicely now, along with IP 35 and IP 40, to give us a camel-borne attack from the landward side. IP 10 also teams up with IP 40 and IP 5 to give the idea of tribe unification.\nAnd so Lawrence and Ali, with the help of Auda Abu Tayi, attack Aqaba port from the landward side by crossing the Nefud desert on camels, and take it! And we have justified their decision using TRIZ !!\nHere is the final solution in action !!\n\n\n\n\n I hope that was as much fun to read as it was for me to write it up !!"
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#points-to-ponder",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#points-to-ponder",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "Points to Ponder",
    "text": "Points to Ponder\n\nDo we each of us need a Dryden to vouch for us and help us get access to the Field?\nDoes TRIZ work in both mundane and industrial contexts? (Yes of course!)\nCan we just take the 40 Inventive Principles directly and throw them at every Problem, without necessarily going through the process of creating Contradictions and IFR? Hipple‚Äôs book has a remark in this direction."
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#references",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#references",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "References",
    "text": "References\n\nLawrence of Arabia at the Internet Movie Data Base https://www.imdb.com/title/tt0056172/\n\nMihaly Csikszentmihalyi, Creativity, Flow, and the Psychology of Discovery and Invention. Harper Perennial; Reprint edition (August 6, 2013)\nJack Hipple, The Ideal Result and How to Achieve It. Springer; 2012th edition (June 26, 2012)\nValery Souchkov, Defining Contradictions. http://www.xtriz.com/Training/TRIZ_DefineContradiction_Tutorial.pdf"
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "",
    "text": "Here we go with another of my TRIZ Chronicles. The first edition analysing the famous movie Lawrence of Arabia is here.\nThe recent series of ads by Spotify have been very well received, by the ad industry as well. There have been several of these ads, each with a solid little story and a great punch line. There is one popular one that I have selected here, featuring a Mother shopping for veggies, while her son watches (and ‚Äúlistens‚Äù) to her bargaining with the shopkeeper. Here I take just that highly effective ad and interpret it from a TRIZ viewpoint.\nThis piece stems from my teaching a course on Creative Thinking and Problem Solving based on TRIZ, titled Play and Invent, over the past 8 years or more at the Srishti Manipal Institute of Art, Design, and Technology, Bangalore, India. (https://srishtimanipalinstitute.in)."
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#the-famous-spotify-ad",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#the-famous-spotify-ad",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "The Famous Spotify Ad",
    "text": "The Famous Spotify Ad\nLet us watch the Spotify ad first, before analyzing it!"
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#the-young-mans-problem",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#the-young-mans-problem",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "The Young Man‚Äôs Problem",
    "text": "The Young Man‚Äôs Problem\nIn order to make a story out of this, I want make a Protagonist out the young man in the ad. It is he who has the problem and he who is going to apply TRIZ to solve it. I discuss the source of his Problem and give an analysis of the Problem from a (classical) TRIZ perspective, including the formulation of the Contradiction, Identification of Causes, the statement of the Ideal Final Result, and finally using the TRIZ Contradiction Matrix to find Inventive Principles, that lead to the solution, which of course, is meant to unerringly include Spotify !\nFirst a philosophical digression:‚Äî\nSeveral authors have taken a Game View of life. James P Carse‚Äôs famous book titled Finite and Infinite Games speaks of Play, Types of Games, Rules, Winning and our own aims in the Game itself. A similar articulation is, in my opinion, that of Mihaly Csikszentlmihalyi in his concept of Flow, shown here below:\n\n\nFrom Sketchplanations\n\n\nWhen the Game presents very little Challenge, we are bored. When the Game demands extreme skills the challenge is too much for us and we experience anxiety. When the Challenge presented is just barely matched by our Skill, we are in the zone of Flow, or what I call Play.\nA good metaphoric image for this experience is as follows:‚Äî that we live in a space where the Floor of Boredom is always rising and would crush us against our Ceiling of Anxiety. One Way to deal with this is to develop more Skills and push the Ceiling away, effectively moving into the zone of Flow. Another Way of looking at this is what Carse suggests: When Play is no longer possible, change the Game.\nSo what does all this have to do with getting veggies?\nThe ad is, in my opinion, all about Boredom, and how to avoid it. And not offend anybody. The Young Man (hereinafter, ‚ÄúYM‚Äù) simply has to accompany his Mom, and be there while she gets the veggies. I will exaggerate his irritation and his boredom at the risk of offending young people likely to read this, and say that he would rather not be there but he does not want to hurt Mom.\nWe are now ready for the TRIZ based Analysis of this Problem!"
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#a-triz-analysis-of-a-visit-to-the-subzi-mandi",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#a-triz-analysis-of-a-visit-to-the-subzi-mandi",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "A TRIZ Analysis of a Visit to the Subzi Mandi",
    "text": "A TRIZ Analysis of a Visit to the Subzi Mandi\nFor a TRIZ workflow, we proceed as before:\nFirst, using the method described in Open Source TRIZ, we identify knobs or parameters within the situation and see how turning these could lead to identifying a Cause for a Problem in the form of a Contradiction.\nHere below is a quick Ishikawa Diagram to help us identify the Parameters of this Problem:\n\n\n\n\n\n\n\n\nTurning the knobs/parameters in the Ishikawa Diagram, it seems that if the YM goes to the market with Mom, he would most likely get bored, but would please Mom. If he doesn‚Äôt go, then he chills at home, but Mom is going to justifiably furious. Herein lies the Contradiction, which we can now specify as an Administrative Contradiction(AC) in plain English:\n\n\nAC: The YM wants to chill at home but Mom wants him to take her veggie shopping. He has to put up with the Waste of Time, and being bored, and Stress at being away from friends.\n\n\nNext, based on this Contradiction and the inspection of the Ishikawa Diagram above, we are now ready to define a TRIZ Ideal Final Result:\n\n\nIFR: The YM must go to the Market and not be bored.\n\n\nNote again the impossible sounding way of expressing the IFR! One needs practice, like the Queen in Alice in Wonderland, who could think of Six Impossible Things before Breakfast ! Also note there could be other ways of specifying the IFR. See below, section Alternative Ideas for IFR.\nLet us take the AC and convert it into a Technical Contradiction(TC), keeping this IFR in mind. We will look at the 48 TRIZ Parameters in the TRIZ Contradiction Matrix (PDF) and see which Parameter we want to improve, while not worsening another. Here is what we can obtain. We will analyze each Contradiction both ways1:\n\n- TC 1: Improve Loss of Time (26) and not worsen Effect of External Harmful Factors (30)\n- TC 2: Improve Increase Productivity (44) and not worsen Stress (19)\n\nHere we choose these Parameters based on our IFR that while going to the Market may be unavoidable, Boredom need not ensue. Parameters chosen from the TRIZ Matrix can be thought of as metaphors for the knobs that lie within our AC. Going from the AC to the TC is an act of making metaphors. We could easily have chosen the Parameter Noise(29) as the ‚Äúmetaphoric thing‚Äù to avoid, but the current IFR doesn‚Äôt quite support that. There is here a considerable flexibility and possibility for imaginative interpretations of the AC, but using the language of TRIZ.\nWe could also formulate a Physical Contradiction(PC)2:\n\n\nPC: The YM must be in the market and not be in the market at the same time.\n\n\nwhich is aimed squarely at one of the Assumptions in the Problem, that the YM simply has to go. Again, if the IFR is formulated differently we could obtain a very different set of AC and PC. See below, section Alternative Ideas for IFR.\nIn a future post, we will deal with using the PC and the TRIZ Separation Principles to solve Problems."
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#solving-the-technical-contradiction",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#solving-the-technical-contradiction",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "Solving the Technical Contradiction",
    "text": "Solving the Technical Contradiction\nLet us take the both the TC-s into the Contradiction Matrix and arrive at the list of TRIZ Inventive Principles. Here is the Matrix solution for TC-1 in the figure below:\n\n\n\n\n\n\n\n\n\nThe two squares for the TC1 have been circled in red, solving TC-1.\nThe Inventive Principles are:(TC1, TC2, both ways)\n\n1(Segmentation)\n35(Parameter Change)\n21(Skipping)\n18(Mechanical Vibration) (!!)\n2(Taking Out/Separation)\n10(Prior Action)\n\n36(Phase Transitions)\nand with TC2:\n\n3(Local Quality)\n14(Spheroidality/Curvature)\n9(Preliminary Anti-Action)\n37(Thermal Expansion)\n40(Composite Materials)\n25(Self Service)\n24(Intermediary)\n\nThat is a considerable list for us to try to use!! Let us apply some these Inventive Principles! Viewing these Inventive Principles as we Generalized Solutions we try to map these back into the Problem at hand:\n\n\n35(Parameter Change): Which Parameter to change? Location? No. Sound? Change the ‚ÄúBargaining Talk‚Äù into what? Sweet Musical Lyrics!!üéµü§£\n\n18(Mechanical Vibration) : What, make noise of your own? Yes! Play Music !!üîâ ü§£\n\n14(Spheroidality): Wear ‚Äúspherical‚Äù headphones!!üéß! Create a ‚Äúsound sphere‚Äù! This is a long shot!!\n\n3(Local Quality): also indicates the creation of a ‚Äúlocal‚Äù cocoon around the YM, but needs to be combined with 18(Mechanical Vibration) to truly arrive at the musical solution!\n\nOne could make decent interpretations of 2(Taking Out/Separation), and 24(Intermediary), but we are already there! The rest are perhaps (at least to me!) not very evocative, unless 37(Thermal Expansion) means ‚Äúthrow a temper tantrum at Mom‚Äù? Never! So there you have it! The Cinderella song played on Spotify becomes not just a noise canceller but actually seems to substitute the very conversation between Mom and the vendor. And the YM has successfully attained Flow ! And the IFR too, since with the music in his head, he is effectively ‚Äúin the marketplace and not in the marketplace at the same time!\nAnd I attained Flow in writing this!!"
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#alternative-ideas-for-ifr",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#alternative-ideas-for-ifr",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "Alternative Ideas for IFR",
    "text": "Alternative Ideas for IFR\nWe note in passing that there is more than one way of formulating the Ideal Final Result. Here are two more examples:\n\n\nIFR2: The veggies should arrive without (the YM) going to the Market\nIFR3: Food should be prepared without having to go buy veggies.\n\n\nClearly these are at least as good as the one we have chosen, sounding nicely ‚Äúimpossible‚Äù in their own right! The point is that in the analysis of the Problem, we do need to ask Who has the Problem, as we did, and the IFR needs to stem from there. These alternative IFRs could well be the Voice of (another) Customer.\nIf there is any interesting situation that could be analyzed with TRIZ, please send me a DM! Thanks !"
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#references",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#references",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "References",
    "text": "References\n\nJames P Carse, Finite and Infinite Games, Free Press, 1986. ISBN: 0-02-905980-1\nMihaly Csikszentmihalyi, Creativity, Flow, and the Psychology of Discovery and Invention. Harper Perennial; Reprint edition (August 6, 2013)\nJack Hipple, The Ideal Result and How to Achieve It. Springer; 2012th edition (June 26, 2012)\nValery Souchkov, Defining Contradictions. http://www.xtriz.com/Training/TRIZ_DefineContradiction_Tutorial.pdf"
  },
  {
    "objectID": "content/projects/fsp-discussions/index.html",
    "href": "content/projects/fsp-discussions/index.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "This is a summary of the group discussion among: 1. Sadhvi Jawa 2. Minashshi Singh 3. Vidhu Gandhi 4. Yash Bhandari 5. Arvind Venkatadri"
  },
  {
    "objectID": "content/projects/fsp-doe/index.html",
    "href": "content/projects/fsp-doe/index.html",
    "title": "A Design of Experiments Class",
    "section": "",
    "text": "Code Lab"
  },
  {
    "objectID": "content/projects/fsp-doe/index.html#fa-envelope-introduction",
    "href": "content/projects/fsp-doe/index.html#fa-envelope-introduction",
    "title": "A Design of Experiments Class",
    "section": " Introduction",
    "text": "Introduction\nThis is a brief description and analysis of a Design of Experiments module conducted as a part of the Order and Chaos course, in the Foundation Studies Program (FSP 2021-2022) at SMI, MAHE, Bangalore."
  },
  {
    "objectID": "content/projects/fsp-doe/index.html#context",
    "href": "content/projects/fsp-doe/index.html#context",
    "title": "A Design of Experiments Class",
    "section": "Context",
    "text": "Context\nA Short Term Memory(STM) Test was the investigative tool used to verify several Hypotheses that were documented on the subject of STM.\nThis article describes the statistical analysis that was done with the readings. In particular, Permutations Tests were used to verify the effect size for each of three parameters that were hypothesized.\nFor more information, please click on the icon above to look at the Lab document."
  },
  {
    "objectID": "content/projects/fsp-doe/index.html#references",
    "href": "content/projects/fsp-doe/index.html#references",
    "title": "A Design of Experiments Class",
    "section": "References",
    "text": "References\n\nLawrance, A. J. 1996. ‚ÄúA Design of Experiments Workshop as an Introduction to Statistics.‚Äù American Statistician 50 (2): 156‚Äì58. doi:10.1080/00031305.1996.10474364.\nErnst, Michael D. 2004. ‚ÄúPermutation Methods: A Basis for Exact Inference.‚Äù Statistical Science 19 (4): 676‚Äì85. doi:10.1214/088342304000000396.\nPruim R, Kaplan DT, Horton NJ (2017). ‚ÄúThe mosaic Package: Helping Students to ‚ÄòThink with Data‚Äô Using R.‚Äù The R Journal, 9(1), 77‚Äì102. https://journal.r-project.org/archive/2017/RJ-2017-024/index.html."
  },
  {
    "objectID": "content/projects/fsp-manifesto/index.html",
    "href": "content/projects/fsp-manifesto/index.html",
    "title": "My Teaching Manifesto",
    "section": "",
    "text": "This is a short Statement of Values, Beliefs, and Content in my Teaching.\n\nArvind Venkatadri."
  },
  {
    "objectID": "content/projects/fsp-portfolio/index.html",
    "href": "content/projects/fsp-portfolio/index.html",
    "title": "Teaching in this Pandemic Year 2020-2021",
    "section": "",
    "text": "This is a short Portfolio of Teaching Initiatives and Student Outcomes during this pandemic year, 2020-2021, from Arvind Venkatadri."
  },
  {
    "objectID": "content/projects/fsp-portfolio-2022/index.html",
    "href": "content/projects/fsp-portfolio-2022/index.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "This is a short Portfolio of Teaching Initiatives and Student Outcomes during this post(?)-pandemic year, 2021-2022, from Arvind Venkatadri."
  },
  {
    "objectID": "content/projects/project-1/index.html",
    "href": "content/projects/project-1/index.html",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nShow the Codelibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nShow the Codepreds_lm %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nShow the Codeglm.mod <- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds <- dat %>% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit > 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\nShow the Codegeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\n\nShow the Codestat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\nShow the Codeggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn‚Äôt it?"
  },
  {
    "objectID": "content/projects/project-2/index.html",
    "href": "content/projects/project-2/index.html",
    "title": "Project 2",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nShow the Codelibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nShow the Codepreds_lm %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nShow the Codeglm.mod <- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds <- dat %>% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit > 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\nShow the Codegeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\n\nShow the Codestat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\nShow the Codeggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn‚Äôt it?"
  },
  {
    "objectID": "content/projects/projects.html",
    "href": "content/projects/projects.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "This is a dummy blog posts\n\n\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\n\nJun 1, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nProject 2\n\n\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\n\nJun 1, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA Design of Experiments Class\n\n\n\n\n\nA Design of Experiments Class\n\n\n\n\n\n\nJan 31, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA TRIZ Analysis of Lawrence of Arabia\n\n\n\n\n\nThe Attack on Aqaba: A TRIZ Analysis\n\n\n\n\n\n\nDec 20, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA Tidygraph version of a Popular Network Science Tutorial\n\n\n\n\n\n\n\n\n\n\n\n\nJun 16, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nMy Teaching Manifesto\n\n\n\n\n\n\n\n\n\n\n\n\nAug 20, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nResources for Order and Chaos\n\n\n\n\n\n\n\n\n\n\n\n\nDec 12, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nTeaching in this Pandemic Year 2020-2021\n\n\n\n\n\n\n\n\n\n\n\n\nAug 20, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nThe TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad\n\n\nHarrdy Sandhu and Getting the Veggies\n\n\nPunjabi Pop and Getting the Veggies\n\n\n\n\n\n\nJan 9, 2023\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJul 27, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#claude-shannon-and-information",
    "href": "content/slides/r-slides/nature-of-data/index.html#claude-shannon-and-information",
    "title": "The Nature of Data",
    "section": "Claude Shannon and Information",
    "text": "Claude Shannon and Information\n\nhttps://plus.maths.org/content/information-surprise"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#human-experience-is.data",
    "href": "content/slides/r-slides/nature-of-data/index.html#human-experience-is.data",
    "title": "The Nature of Data",
    "section": "Human Experience is‚Ä¶.Data??",
    "text": "Human Experience is‚Ä¶.Data??"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#experiments-and-hypotheses-a-kitchen-experiment",
    "href": "content/slides/r-slides/nature-of-data/index.html#experiments-and-hypotheses-a-kitchen-experiment",
    "title": "The Nature of Data",
    "section": "Experiments and Hypotheses: A Kitchen Experiment",
    "text": "Experiments and Hypotheses: A Kitchen Experiment\n\n\nInputs are: Ingredients, Recipes, Processes\nOutputs are: Taste, Texture, Colour, Quantity!!\n\nUsed without permission from https://safetyculture.com/topics/design-of-experiments/"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#what-is-the-result-of-an-experiment",
    "href": "content/slides/r-slides/nature-of-data/index.html#what-is-the-result-of-an-experiment",
    "title": "The Nature of Data",
    "section": "What is the Result of an Experiment?",
    "text": "What is the Result of an Experiment?\n\n\n\nAll experiments give us data about phenomena\nWe obtain data about the things that happen: Outputs\nWhat makes things happen?: Inputs\nHow?: Process\nWhen? Factors\nHow much ‚Äúoutput‚Äù is caused by how much ‚Äúinput‚Äù? Effect Size\n\n\nAll Experiments stem from Human Curiosity, a Hypothesis, and a Desire to Find out and Talk about Something"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#a-famous-lady-and-her-famous-experiment",
    "href": "content/slides/r-slides/nature-of-data/index.html#a-famous-lady-and-her-famous-experiment",
    "title": "The Nature of Data",
    "section": "A Famous Lady and her Famous Experiment",
    "text": "A Famous Lady and her Famous Experiment\n\n\n\n\n\n\n\n\n\n\nIn 1853, Turkey declared war on Russia. After the Russian Navy destroyed a Turkish squadron in the Black Sea, Great Britain and France joined with Turkey. In September of the following year, the British landed on the Crimean Peninsula and set out, with the French and Turks, to take the Russian naval base at Sevastopol.\nWhat followed was a tragicomedy of errors ‚Äì failure of supply, failed communications, international rivalries. Conditions in the armies were terrible, and disease ate through their ranks. They finally did take Sevastopol a year later, after a ghastly assault. It was ugly business all around. Well over half a million soldiers lost their lives during the Crimean War."
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#florence-nightingales-data",
    "href": "content/slides/r-slides/nature-of-data/index.html#florence-nightingales-data",
    "title": "The Nature of Data",
    "section": "Florence Nightingale‚Äôs Data",
    "text": "Florence Nightingale‚Äôs Data\n\n\n\n\n\nMonth\nYear\nDisease.rate\nWounds.rate\nOther.rate\n\n\n\n\nApr\n1854\n1.4\n0.0\n7.0\n\n\nMay\n1854\n6.2\n0.0\n4.6\n\n\nJun\n1854\n4.7\n0.0\n2.5\n\n\nJul\n1854\n150.0\n0.0\n9.6\n\n\nAug\n1854\n328.5\n0.4\n11.9\n\n\nSep\n1854\n312.2\n32.1\n27.7\n\n\nOct\n1854\n197.0\n51.7\n50.1\n\n\nNov\n1854\n340.6\n115.8\n42.8\n\n\nDec\n1854\n631.5\n41.7\n48.0\n\n\nJan\n1855\n1022.8\n30.7\n120.0"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#how-does-data-look-like-then",
    "href": "content/slides/r-slides/nature-of-data/index.html#how-does-data-look-like-then",
    "title": "The Nature of Data",
    "section": "How Does Data look Like, then?",
    "text": "How Does Data look Like, then?\n\n\n\n\n\nTypes of Variables - Using Interrogative Pronouns\n\nNominal: What? Who? Where? (Factors, Dimensions)\nOrdinal: Which Types? What Sizes? How Big? (Factors, Dimensions)\nInterval: How Often? (Numbers, Facts)\nRatio: How many? How much? How heavy? (Numbers, Facts)"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#types-of-variables---using-interrogative-pronouns",
    "href": "content/slides/r-slides/nature-of-data/index.html#types-of-variables---using-interrogative-pronouns",
    "title": "The Nature of Data",
    "section": "Types of Variables - Using Interrogative Pronouns",
    "text": "Types of Variables - Using Interrogative Pronouns\n\nNominal: What? Who? Where? (Factors, Dimensions)\nOrdinal: Which Types? What Sizes? How Big? (Factors, Dimensions)\nInterval: How Often? (Numbers, Facts)\nRatio: How many? How much? How heavy? (Numbers, Facts)"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#types-of-variables-in-nightingale-data",
    "href": "content/slides/r-slides/nature-of-data/index.html#types-of-variables-in-nightingale-data",
    "title": "The Nature of Data",
    "section": "Types of Variables in Nightingale Data",
    "text": "Types of Variables in Nightingale Data\n\n\n\nUsing Interrogative Pronouns:1\n\nNominal: None\nOrdinal: (Factors, Dimensions)\n\nHOW? War, Disease, Other\n\nInterval: (Numbers, Facts)\n\nWHEN? Year, Month\n\nRatio: (Numbers, Facts)\n\nHOW MANY? Rate of Deaths (War, Disease, Other)\n\n\n\n\n\n\n\nNightingale‚Äôs data table had dimensions coded into column names. This is not considered tidy in the modern age."
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#image-right",
    "href": "content/slides/r-slides/networks/index.html#image-right",
    "title": "letterbox slides",
    "section": ".image-right",
    "text": ".image-right\n\n\nWe can use the .image-right and .image-left classes to insert images in the background\nThese images will be placed behind most other content"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#image-left",
    "href": "content/slides/r-slides/networks/index.html#image-left",
    "title": "letterbox slides",
    "section": ".image-left",
    "text": ".image-left\n\n\n\n\nIt is therefore recommened that you use multiple columns to only have text on the background area"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#section",
    "href": "content/slides/r-slides/networks/index.html#section",
    "title": "letterbox slides",
    "section": "",
    "text": "background images"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#setting-background-colors",
    "href": "content/slides/r-slides/networks/index.html#setting-background-colors",
    "title": "letterbox slides",
    "section": "Setting background colors",
    "text": "Setting background colors\nyou can set your background as you normally would"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#video-slide-title",
    "href": "content/slides/r-slides/networks/index.html#video-slide-title",
    "title": "letterbox slides",
    "section": "Video Slide Title",
    "text": "Video Slide Title\nThis slides‚Äôs background video will play in a loop with audio muted."
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#slide-title",
    "href": "content/slides/r-slides/networks/index.html#slide-title",
    "title": "letterbox slides",
    "section": "Slide Title",
    "text": "Slide Title"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#further-modifying-theme",
    "href": "content/slides/r-slides/networks/index.html#further-modifying-theme",
    "title": "letterbox slides",
    "section": "Further Modifying theme",
    "text": "Further Modifying theme\nIf you want to modify theme, you can specify the .scss my modifying the yaml to look like this\nformat: \n  letterbox-revealjs:\n    theme: [default, style.scss]"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#modifying-letterbox-background",
    "href": "content/slides/r-slides/networks/index.html#modifying-letterbox-background",
    "title": "letterbox slides",
    "section": "Modifying letterbox background",
    "text": "Modifying letterbox background\nThe background colors can be with with, where #444444 represents the new background color and #222222 represents the color of the shadow\n.quarto-light {\n  background-color: #444444;\n}\n\n.quarto-dark {\n  background-color: #444444;\n}\n\n.slides {\n  box-shadow: #222222 0px 0px 30px 0px;\n}"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#quarto",
    "href": "content/slides/r-slides/networks/index.html#quarto",
    "title": "letterbox slides",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see https://quarto.org/docs/presentations/."
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#bullets",
    "href": "content/slides/r-slides/networks/index.html#bullets",
    "title": "letterbox slides",
    "section": "Bullets",
    "text": "Bullets\nWhen you click the Render button a document will be generated that includes:\n\nContent authored with markdown\nOutput from executable code"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#code",
    "href": "content/slides/r-slides/networks/index.html#code",
    "title": "letterbox slides",
    "section": "Code",
    "text": "Code\nWhen you click the Render button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n[1] 2"
  },
  {
    "objectID": "content/slides/r-slides/networks/LICENSE.html",
    "href": "content/slides/r-slides/networks/LICENSE.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "MIT License\nCopyright (c) 2022 quarto-letterbox authors\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ‚ÄúSoftware‚Äù), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED ‚ÄúAS IS‚Äù, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "content/slides/r-slides/r-slides-listing.html",
    "href": "content/slides/r-slides/r-slides-listing.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "MIT License\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nThe Nature of Data\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nletterbox slides\n\n\nquarto-revealjs-letterbox\n\n\n\n\n\n\n\n \n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied Metaphorics",
    "section": "",
    "text": "Hi, I‚Äôm Arvind Venkatadri.\nI‚Äôm an Adjunct Professor at DSU, Bangalore, INDIA, with a passion for R, data visualization, and Creative Thinking and Problem Solving with TRIZ. On this blog, I share and teach what I learn.\nTo get started, you can check out my courses. You can find me on Twitter or GitHub and YouTube. Feel free to reach out to me via mail !"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "Preparatory Work to moving my full website to Quarto!"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#fa-envelope-introduction",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#fa-envelope-introduction",
    "title": "Lab-10: An Invitation from the Queen‚Ä¶to play Croquet",
    "section": "\n Introduction",
    "text": "Introduction\nNetwork Diagrams are important in data visualization to bring out relationships between diverse entities. They are used in ecology, biology, transportation, and even history!\nAnd hey, whom did Jon Snow marry?"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#fa-reference-references",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#fa-reference-references",
    "title": "Lab-10: An Invitation from the Queen‚Ä¶to play Croquet",
    "section": "\n References",
    "text": "References\n\nMichael Gastner, Data Analysis and Visualisation with R, Chapter 23: Networks\nDavid Schoch, Network Visualizations in R using ggraph and graphlayouts\nKonrad M. Lawson, Toilers and Gangsters:Simple Network Visualization with R for Historians"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#fa-asterisk-references",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#fa-asterisk-references",
    "title": "Lab-10: An Invitation from the Queen‚Ä¶to play Croquet",
    "section": "\n References",
    "text": "References\n\nMichael Gastner, Data Analysis and Visualisation with R, Chapter 23: Networks\nDavid Schoch, Network Visualizations in R using ggraph and graphlayouts\nKonrad M. Lawson, Toilers and Gangsters:Simple Network Visualization with R for Historians"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#slides-and-tutorials",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#slides-and-tutorials",
    "title": "Lab-10: An Invitation from the Queen‚Ä¶to play Croquet",
    "section": "Slides and Tutorials",
    "text": "Slides and Tutorials"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#fa-folder-open-slides-and-tutorials",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#fa-folder-open-slides-and-tutorials",
    "title": "Lab-10: An Invitation from the Queen‚Ä¶to play Croquet",
    "section": "\n Slides and Tutorials",
    "text": "Slides and Tutorials"
  }
]