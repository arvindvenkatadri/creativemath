[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Applied Metaphorics",
    "section": "",
    "text": "Hi, I’m Arvind Venkatadri.\nI’m an Adjunct Professor at DSU, Bangalore, INDIA, with a passion for R, data visualization, and Creative Thinking and Problem Solving with TRIZ. On this blog, I share and teach what I learn.\nTo get started, you can check out my courses. You can find me on Twitter or GitHub and YouTube. Feel free to reach out to me via mail !"
  },
  {
    "objectID": "content/code-labs/r-labs/installation/index.html",
    "href": "content/code-labs/r-labs/installation/index.html",
    "title": "Lab 00 - Introduce Yourself",
    "section": "",
    "text": "At the end of this Lab, we will:\n\nhave installed R and RStudio on our machines\nunderstood how to add additional R-packages for specific features and graphic capability\nrun code within RStudio and interpret the results\nhave learnt to look for help within R and RStudio"
  },
  {
    "objectID": "content/code-labs/r-labs/installation/index.html#Check-In-R",
    "href": "content/code-labs/r-labs/installation/index.html#Check-In-R",
    "title": "Lab 00 - Introduce Yourself",
    "section": "\n3.1 Check in",
    "text": "3.1 Check in\nLaunch R by clicking this logo. You should see one console with a command line interpreter. Try typing 2 + 2 and check !\nClose R."
  },
  {
    "objectID": "content/code-labs/r-labs/installation/index.html#Check-In-RStudio",
    "href": "content/code-labs/r-labs/installation/index.html#Check-In-RStudio",
    "title": "Lab 00 - Introduce Yourself",
    "section": "\n4.1 Check in",
    "text": "4.1 Check in\nLaunch RStudio. You should get a window similar to the screenshot you see here, but yours will be empty. Look at the bottom left pane: this is the same console window you saw when you opened R in step @Check-In-R\n\nPlace your cursor where you see > and type x <- 2 + 2 again hit enter or return, then type x, and hit enter/return again.\nIf [1] 4 prints to the screen, you have successfully installed R and RStudio, and you can move onto installing packages."
  },
  {
    "objectID": "content/code-labs/r-labs/installation/index.html#save-and-share",
    "href": "content/code-labs/r-labs/installation/index.html#save-and-share",
    "title": "Lab 00 - Introduce Yourself",
    "section": "\n7.1 Save and share",
    "text": "7.1 Save and share\nSave your work so you can share your favorite plot with us. You will not like the looks of your plot if you mouse over to Export and save it. Instead, use ggplot2’s command for saving a plot with sensible defaults:\n\nShow the Codehelp(ggsave)\n\n\n\nShow the Codeggsave(\"file_name_here.pdf\", plot) # please make the filename unique!\n\n\nUpload this exported plot to Teams -> Assignments.\nBefore you do that, check that you can submit stuff/assignments on the MLS by uploading a cat picture 🐈 first, especially if you are an ailurophile like me. (Acceptable Breeds: Scottish Folds or Maine Coons)"
  },
  {
    "objectID": "content/code-labs/r-labs/pronouns/index.html",
    "href": "content/code-labs/r-labs/pronouns/index.html",
    "title": "Lab-02: Pronouns and Data",
    "section": "",
    "text": "Understand different kinds of data variables\nAppreciate how they can be identified based on the Interrogative Pronouns they answer to\nUnderstand how each kind of variable lends itself to a specific geometric aspect in the data visualization.\nUnderstand how ask Questions of Data to develop Visualizations"
  },
  {
    "objectID": "content/code-labs/r-labs/pronouns/index.html#set-up",
    "href": "content/code-labs/r-labs/pronouns/index.html#set-up",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n2.1 Set Up",
    "text": "2.1 Set Up\nThe setup code chunk below brings into our coding session R packages that provide specific computational abilities and also datasets which we can use.\nTo reiterate: Packages and datasets are not the same thing !! Packages are (small) collections of programs. Datasets are just….information."
  },
  {
    "objectID": "content/code-labs/r-labs/pronouns/index.html#the-penguins-dataset",
    "href": "content/code-labs/r-labs/pronouns/index.html#the-penguins-dataset",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n5.1 The penguins dataset",
    "text": "5.1 The penguins dataset\nnames(penguins) # Column, i.e. Variable names\n[1] “species” “island” “bill_length_mm”\n[4] “bill_depth_mm” “flipper_length_mm” “body_mass_g”\n[7] “sex” “year”\nhead(penguins) # first six rows\n\n\n\n  \n\n\ntail(penguins) # Last six rows\n\n\n\n  \n\n\ndim(penguins) # Size of dataset\n[1] 344 8\n# Check for missing data\nany(is.na(penguins) == TRUE)\n[1] TRUE\n\n\n\n\n\n\nInspect the Data\n\n\n\n\nWhat are the variable names()?\nWhat would be the Question you might have asked to obtain each of the variables?\nWhat further questions/meta questions would you ask to “process” that variable? ( Hint: Add another word after any of the Interrogative Pronouns, e.g. How…MANY?)\nWhere might the answers take your story?\n\n\n\n\n\n\n\n\n\nYour Turn #1\n\n\n\nState a few questions after discussion with your friend and state possible variables, or what you could DO with the variables, as an answer.\nE.g. Q. How many penguins? A. We need to count…rows?"
  },
  {
    "objectID": "content/code-labs/r-labs/pronouns/index.html#pronouns-and-variables",
    "href": "content/code-labs/r-labs/pronouns/index.html#pronouns-and-variables",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n5.2 Pronouns and Variables",
    "text": "5.2 Pronouns and Variables\nIn the Table below, we have a rough mapping of interrogative pronouns to the kinds of variables in the data:\n\n\n\n\n\n\n\n\n\nPronoun\nAnswer\nVariable / Scale\nE xample\nWhat Operations?\n\n\n\nWhat, Who, Where, Whom, Which\nName, Place, Animal, Thing\nQualitative / Nominal**\nName\n\nCount no. of cases\nMode\n\n\n\nHow, What Kind, What Sort\nA Manner / Method, Type or A ttribute from a list, with list items in some ” or der**” ( e.g. good, better, i mproved, best..)\nQualitative / Ordinal**\n\n\nSo cio-ec onomic\n\nstatus\n(“low\ni\nncome, middle i ncome,\nhigh i ncome)\n\n\nedu cation\nlevel\n\n\n(“high\nsch ool”,”\nBS” ,“MS”, “PhD”)\n\n\nincome\nlevel\n\n\n(“less\nthan\n50K”, “5 0K-100 K” ,“over\n100K”)\n\n\nSatisf action ra\ntin g(“ext remely\ndis like”, ”\ndis like”, ” n\neut ral”,” like”, ”\next remely l ike”).\n\n\n\n\nMedian\nPercentiles\n\n\n\nHow Many / Much / Heavy? Few? Seldom? Often? When?\n\nQ uantities with Scale.\nD iff e rences are me a ningful, but not products or ratios\n\nQu antitative / Interval\n\npH\n\nSAT\nscore ( 20 0-800)\n\n\nCredit\nscore\n(30 0-850)\n\nYear of St arting in C ollege\n\n\nMean\nStandard Deviation\n\n\n\nHow Many / Much / Heavy? Few? Seldom? Often? When?\n\nQu a ntities, with Scale and a Zero Value.\nDi f ferences and Ratios / Products are me a ningful. (e.g Weight )\n\nQua n titative / Ratio**\n\n\n\nW eight,\nL ength,\n\n\nHeight\n\nTe\n\nm pe rature in\nKelvin\n\nEnzyme\n\na ct ivity, dose\na mount,\nre action rate, flow\nr at e,conc e nt ration\n\nPulse\nSu rvival\n\ntime\n\n\n\nCo\n\nrre lation - Coeff of\nV ariation\n\n\n\n\nAs you go from Qualitative to Quantitative data types in the table, I hope you can detect a movement from fuzzy groups/categories to more and more crystallized numbers. Each variable/scale can be subjected to the operations of the previous group. In the words of S.S. Stevens (https://psychology.okstate.edu/faculty/jgrice/psyc3214/Stevens_FourScales_1946.pdf)\n\nthe basic operations needed to create each type of scale is cumulative: to an operation listed opposite a particular scale must be added all those operations preceding it.\n\nDo think about this as you work with data.\n\nDo take a look at these references:\n\nhttps://stats.idre.ucla.edu/other/mult-pkg/whatstat/what-is-the-difference-between-categorical-ordinal-and-interval-variables/\nhttps://www.freecodecamp.org/news/types-of-data-in-statistics-nominal-ordinal-interval-and-ratio-data-types-explained-with-examples/"
  },
  {
    "objectID": "content/code-labs/r-labs/pronouns/index.html#the-mpg-dataset",
    "href": "content/code-labs/r-labs/pronouns/index.html#the-mpg-dataset",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n5.3 The mpg dataset",
    "text": "5.3 The mpg dataset\nnames(mpg) # Column, i.e. Variable names\n[1] “manufacturer” “model” “displ” “year” “cyl”\n[6] “trans” “drv” “cty” “hwy” “fl”\n[11] “class”\nhead(mpg) # first six rows\n\n\n\n  \n\n\ntail(mpg) # Last six rows\n\n\n\n  \n\n\ndim(mpg) # Size of dataset\n[1] 234 11\n# Check for missing data\nany(is.na(mpg) == TRUE)\n[1] FALSE\n\n5.3.1 YOUR TURN-2\nLook carefully at the variables here. How would you interpret say the cyl variable? Is it a number and therefore Quantitative, or could it be something else?"
  },
  {
    "objectID": "content/code-labs/r-labs/pronouns/index.html#single-qualitativecategorical-nominal-variable",
    "href": "content/code-labs/r-labs/pronouns/index.html#single-qualitativecategorical-nominal-variable",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.1 Single Qualitative/Categorical/ Nominal Variable",
    "text": "6.1 Single Qualitative/Categorical/ Nominal Variable\n\nQuestions: Which? What Kind? How? How many of each Kind?\n\n\nIsland ( Which island ? )\nSpecies ( Which Species? )\n\n\nCalculations: No of levels / Counts for each level\n\n\n\n\ncount / tally of no. of penguins on each island or in each species\n\nsort and order by island or species\n\n\nCharts: Bar Chart / Pie Chart / Tree Map\n\n\n\ngeom_bar / geom_bar + coord_polar() / Find out!!\n\npenguins %>% count(species)\n\n\n\n  \n\n\nggplot(penguins) + geom_bar(aes(x = island))\n\n\n\nggplot(penguins) + geom_bar(aes(x = sex))\n\n\n\n\n6.1.1 YOUR TURN-3"
  },
  {
    "objectID": "content/code-labs/r-labs/pronouns/index.html#single-quantitative-variable",
    "href": "content/code-labs/r-labs/pronouns/index.html#single-quantitative-variable",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.2 Single Quantitative Variable",
    "text": "6.2 Single Quantitative Variable\n\nQuestions: How many? How few? How often? How much?\nCalculations: max / min / mean / mode / (units)\n\n\n\nmax(), min(), range(), mean(), mode(), summary()\n\n\n\nCharts: Bar Chart / Histogram / Density\n\n\ngeom_histogram() / geom_density()\n\n\n\n\nmax(penguins$bill_length_mm)\n[1] 59.6\nrange(penguins$bill_length_mm, na.rm =TRUE) \n[1] 32.1 59.6\nsummary(penguins$flipper_length_mm)\nMin. 1st Qu. Median Mean 3rd Qu. Max. 172 190 197 201 213 231\nggplot(penguins) + geom_density(aes(bill_length_mm))\n\n\n\nggplot(penguins) + geom_histogram(aes(x = bill_length_mm))\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n6.2.1 YOUR TURN-4\nAre all the above Quantitative variables ratio variables? Justify."
  },
  {
    "objectID": "content/code-labs/r-labs/pronouns/index.html#two-variables-quantitative-vs-quantitative",
    "href": "content/code-labs/r-labs/pronouns/index.html#two-variables-quantitative-vs-quantitative",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.3 Two Variables: Quantitative vs Quantitative",
    "text": "6.3 Two Variables: Quantitative vs Quantitative\nWe can easily extend our intuition about one quantitative variable, to a pair of them. What Questions can we ask?\n\nQuestions: How many of this vs How many of that? Does this depend upon that? How are they related? (Remember \\(y = mx + c\\) and friends?)\nCalculations: Correlation / Covariance / T-test / Chi-Square Test for Two Means etc. We won’t go into this here !\nCharts: Scatter Plot / Line Plot / Regression i.e. best fit lines\n\ncor(penguins$bill_length_mm, penguins$bill_depth_mm)\n[1] -0.2286256\nggplot(penguins) +\n  geom_point(aes(x = flipper_length_mm,\n                 y = body_mass_g))\n\n\n\nggplot(penguins) +\n  geom_point(aes(x = flipper_length_mm, \n                 y = bill_length_mm))\n\n\n\n\n6.3.1 YOUR TURN-5"
  },
  {
    "objectID": "content/code-labs/r-labs/pronouns/index.html#two-variables-categorical-vs-categorical",
    "href": "content/code-labs/r-labs/pronouns/index.html#two-variables-categorical-vs-categorical",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.4 Two Variables: Categorical vs Categorical",
    "text": "6.4 Two Variables: Categorical vs Categorical\nWhat sort of question could we ask that involves two categorical variables?\n\nQuestions: How Many of this Kind( ~x) are How Many of that Kind( ~y ) ?\n\nCalculations: Counts and Tallies sliced by Category\n\n\ncounts , tally\n\n\n\n\nCharts: Stacked Bar Charts / Grouped Bar Charts / Segmented Bar Chart / Mosaic Chart\n\ngeom_bar()\nUse the second Categorical variables to modify fill, color.\nAlso try to vary the parameter position of the bars.\n\n\n\nggplot(penguins) + geom_bar(aes(x = island, \n                                fill = species),\n                            position = \"stack\")\n\n\n\nStoryline: तीन पेनगीन। और तुम भी तीन(Oh never mind!)\n\n6.4.1 YOUR TURN-6"
  },
  {
    "objectID": "content/code-labs/r-labs/pronouns/index.html#two-variables-quantitative-vs-qualitative",
    "href": "content/code-labs/r-labs/pronouns/index.html#two-variables-quantitative-vs-qualitative",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.5 Two Variables: Quantitative vs Qualitative",
    "text": "6.5 Two Variables: Quantitative vs Qualitative\nFinally, what if we want to look at Quant variables and Qual variables together? What questions could we ask?\n\nQuestions: How much of this is Which Kind of that? How many vs Which? How many vs How?\nCalculations: Counts, Means, Ranges etc., grouped by Categorical variable.\n\nggplot(penguins) + \n    geom_density(aes(x = body_mass_g, \n                 color = island, \n                 fill = island), \n                 alpha = 0.3)\n\n\n\n\nCharts: Bar Chart using group / density plots by group / violin plots by group / box plots by group\n\n\n\ngeom_bar / geom_density / geom_violin / geom_boxplot using Categorical Variable for grouping\n\nggplot(penguins) + \n    geom_density(aes(x = body_mass_g, \n                 color = island, \n                 fill = island), \n                 alpha = 0.3)\n\n\n\nggplot(penguins) + \n  geom_histogram(aes(x = flipper_length_mm,\n                 fill = sex))\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n6.5.1 YOUR TURN-7\n\n6.5.2 Time to Play\n\nCreate a fresh RMarkdown and similarly analyse two datasets of the following data sets\n\n\nAny dataset in your R installation. Type data() in your console to see what is available.\ndiamonds . This dataset is part of the tidyverse package so just type diamonds in your code and there it is.\ngapminder !! Yes!!You will need to install the gapminder package to access this dataset\nmosaicData package datasets. Install mosaicData\ndata.world: Find Datasets of your choice: https://docs.data.world/en/64499-64516-Quickstarts-and-tutorials.html\nkaggle: https://www.kaggle.com/datasets"
  },
  {
    "objectID": "content/code-labs/r-labs/r-labs-listing.html",
    "href": "content/code-labs/r-labs/r-labs-listing.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "Lab 00 - Introduce Yourself\n\n\nInstalling and Getting Started with R!\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-02: Pronouns and Data\n\n\n\n\n\nPart of the R for Artists and Designers course at the School of Foundation Studies, Srishti Manipal Institute of Art, Design, and Technology, Bangalore, INDIA.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/courses/Data-Analytics/index.html",
    "href": "content/courses/Data-Analytics/index.html",
    "title": "Data Analytics",
    "section": "",
    "text": "Order By\nDefault\n\n          Date - Oldest\n        \n\n          Date - Newest\n        \n\n          Title\n        \n\n          Author\n        \n\n    \n      \n      \n\n\n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\nReading Time\n\n\n\n\n\n \n\n\n\n\n\nDistributions Presentation\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/courses/Data-Analytics/Modules/Distributions/Distributions-Presentation.html#slide-1",
    "href": "content/courses/Data-Analytics/Modules/Distributions/Distributions-Presentation.html#slide-1",
    "title": "Distributions Presentation",
    "section": "Slide 1",
    "text": "Slide 1"
  },
  {
    "objectID": "content/courses/Data-Analytics/Modules/Distributions/Distributions-Presentation.html#slide-2",
    "href": "content/courses/Data-Analytics/Modules/Distributions/Distributions-Presentation.html#slide-2",
    "title": "Distributions Presentation",
    "section": "Slide 2",
    "text": "Slide 2"
  },
  {
    "objectID": "content/courses/R-for-Artists/index.html",
    "href": "content/courses/R-for-Artists/index.html",
    "title": "R for Artists",
    "section": "",
    "text": "Order By\nDefault\n\n          Date - Oldest\n        \n\n          Date - Newest\n        \n\n          Title\n        \n\n          Author\n        \n\n    \n      \n      \n\n\n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\nReading Time\n\n\n\n\n\n\n\n\nNov 1, 2021\n\n\n🕶 Science, Human Experience, Experiments, and Data\n\n\nArvind Venkatadri\n\n\n32 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-2: Down the R-abbit Hole…\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-3: Drink Me!\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-4: I say what I mean and I mean what I say\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-5: Twas brillig, and the slithy toves…\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-6: These Roses have been Painted !!\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-7: The Lobster Quadrille\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-9: If you please sir…which way to the Secret Garden?\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-10: An Invitation from the Queen…to play Croquet\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-11: The Queen of Hearts, She Made some Tarts\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-12: Time is a Him!!\n\n\nArvind Venkatadri\n\n\n6 min\n\n\n\n\n\n\n\nInvalid Date\n\n\nLab-14: You’re are Nothing but a Pack of Cards!!\n\n\nArvind Venkatadri\n\n\n0 min\n\n\n\n\n\n \n\n\n\n\n\nThe Grammar of Diagrams\n\n\nArvind Venkatadri\n\n\n10 min\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#fa-envelope-titlean-envelope-where-does-data-come-from",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#fa-envelope-titlean-envelope-where-does-data-come-from",
    "title": "🕶 Science, Human Experience, Experiments, and Data",
    "section": "\n Where does Data come from?",
    "text": "Where does Data come from?\nWe will need to form a basic understanding of basic scientific enterprise. Let us look at the slides."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#fa-chart-simple-why-visualize",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#fa-chart-simple-why-visualize",
    "title": "🕶 Science, Human Experience, Experiments, and Data",
    "section": "\n Why Visualize?",
    "text": "Why Visualize?\n\nWe can digest information more easily when it is pictorial\nOur Working Memories are both short-term and limited in capacity. So a picture abstracts the details and presents us with an overall summary, an insight, or a story that is both easy to recall and easy on retention.\n\nData Viz includes shapes that carry strong cultural memories and impressions for us. These cultural memories help us to use data viz in a universal way to appeal to a wide variety of audiences. (Do humans have a gene for geometry?)\nIt helps sift facts and mere statements: for example:\n\n\n\nRape Capital\n\n\n\n\nWhat does Data Reveal?"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#iconify-materials-science-what-are-data-types",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#iconify-materials-science-what-are-data-types",
    "title": "🕶 Science, Human Experience, Experiments, and Data",
    "section": "\n What are Data Types?",
    "text": "What are Data Types?\n\n\n\nIn more detail:"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#sec-data-types",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#sec-data-types",
    "title": "🕶 Science, Human Experience, Experiments, and Data",
    "section": "How do we Spot Data Variable Types?",
    "text": "How do we Spot Data Variable Types?\nBy asking questions!\n\n\nQuestions and Types of Variables\n\n\n\n\n\n\n\n\nPronoun\nAnswer\nVariable / Scale\nExample\nWhat Operations ?\n\n\n\nWhat, Who, Where, Whom, Which\nName, Place, Animal, Thing\nQualitative / Nominal\n\nName\n\nCount of Cases\nMode\n\n\n\nHow, What Kind, What Sort\nA Manner / Method / Type or Attribute from a List, with list items in some “order” ( e.g good, better, improved, best…)\nQualitative / Ordinal\n\n\n\nSo cioeconomic\n\nstatus(“low\nincome”, mid\nincome”, “high\nincome”)\nEducation (“high\nschool”, “BS”, “MS”, “PhD”). - Income Level (“less than 50K”, ”\n50K-100K”, “over 100K”) - S atisfaction Rating\n(“extremely\ndislike”,\n“dislike”, “neut ral”,“like” ,“extremely like”)\n\n\nMedian\nPercentiles\n\n\n\nHow Many, How much, How Heavy , How few, Seldom, Often, When\n\nQuantities with Scale\nD ifferences are meaningful, but not products or ratios\n\nQ uantitative /  Interval**\n\n\npH\nSAT Score\n\n(200-800) - Credit Score\n(300-850) - Year of\nStarting College\n\n\nMean\n\nStandard\nDeviation\n\n\n\n\nHow Many, How much, How Heavy , How few, Seldom, Often, When\n\nQuantities, with Scale and a Zero Value.\nDifferences and Ratios /Products are meaningful. (e.g Weight )\n\nQ uantitative / Ratio\n\n\n\nWeight, Length, Height\nTemperature\nEnzyme\n\nActivity, Dosage Amount,\nReaction Rate, Co ncentration - Pulse,\nSurvival Time\n\n\n\nCorrelation\nCoefficient of\n\nVariation\n\n\n\n\n\nAs you go from Qualitative to Quantitative data types in the table, I hope you can detect a movement from fuzzy groups/categories to more and more crystallized numbers. Each variable/scale can be subjected to the operations of the previous group. In the words of S.S. Stevens\n\nthe basic operations needed to create each type of scale is cumulative: to an operation listed opposite a particular scale must be added all those operations preceding it."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#sec-data-viz",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#sec-data-viz",
    "title": "🕶 Science, Human Experience, Experiments, and Data",
    "section": "What Are the Parts of a Data Viz?",
    "text": "What Are the Parts of a Data Viz?"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/10-Basics/index.html#how-to-pick-a-data-viz",
    "href": "content/courses/R-for-Artists/Modules/10-Basics/index.html#how-to-pick-a-data-viz",
    "title": "🕶 Science, Human Experience, Experiments, and Data",
    "section": "How to pick a Data Viz?",
    "text": "How to pick a Data Viz?\nMost Data Visualizations use one or more of the following geometric attributes or aesthetics. These geometric aesthetics are used to represent qualitative or quantitative variables from your data.\n\n\nCommon Geometric Aesthetics in Charts\n\n\nWhat does this mean? We can think of simple visualizations as combinations of these aesthetics. Some examples:\n\n\nGeometries , Combinations, and Graphs\n\n\n\n\n\n\n\nAesthetic #1\nAesthetic #2\nShape\nChart Picture\n\n\n\nPosition X = Quant Variable\nPosition Y = Quant Variable\nPoints/Circles with Fixed Size\n\n\n\nPosition X = Qual Variable\nPosition Y = Count of Qual Variable\nColumns\n\n\n\nPosition X = Qual Variable\nPosition Y = Qual Variable\nRectangles, with area proportional to joint(X,Y) count\n\n[] (/content/mate rials/images/n oun-mosaic-cha rt-2339104.png ){width=“150”}\n\n\nPosition X = Qual Variable\nPosition Y = Rank-Ordered Quant Variable\nBox + Whisker, Box length proportional to  Inter-Quartile Range, whisker-length proportional to upper and lower quartile resp.\n\n\n\nPosition X = Quant Variable\nPosition Y = Quant Variable + Qual Variable\n\nLine and Area\nColour for Area\n\n[] (/content/mate rials/images/a rea-chart.png)"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#introduction",
    "title": "Lab-10: An Invitation from the Queen…to play Croquet",
    "section": "Introduction",
    "text": "Introduction\nNetwork Diagrams are important in data visualization to bring out relationships between diverse entities. They are used in ecology, biology, transportation, and even history!\nAnd hey, whom did Jon Snow marry?"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#slides",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#slides",
    "title": "Lab-10: An Invitation from the Queen…to play Croquet",
    "section": "Slides",
    "text": "Slides\nHere are the slides that will introduce us to some concepts and code."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#tutorial",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#tutorial",
    "title": "Lab-10: An Invitation from the Queen…to play Croquet",
    "section": "Tutorial",
    "text": "Tutorial\nLet us work through a Tutorial on networks."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/100-GoN/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/100-GoN/index.html#references",
    "title": "Lab-10: An Invitation from the Queen…to play Croquet",
    "section": "References",
    "text": "References\n\nMichael Gastner, Data Analysis and Visualisation with R, Chapter 23: Networks\nDavid Schoch, Network Visualizations in R using ggraph and graphlayouts\nKonrad M. Lawson, Toilers and Gangsters:Simple Network Visualization with R for Historians"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html",
    "title": "The Grammar of Diagrams",
    "section": "",
    "text": "There are many presentation and drawing tools out there. And these allow the user full control over the diagram so generally result in prettier diagrams that can convey more information to the audience at that point in time.\nBut that point in time passes, and pretty pictures can quickly become out-of-date and, ironically, misinforming if they don’t match the reality of the system they are describing. This is especially so if one team is drawing the pretty pictures, and another team is writing the software/implementing the system.\nHaving diagrams as code that can live beside the system design/code, that the stakeholders are equally comfortable editing and viewing,reduces the gap i.e. “Where system diagrams meet system reality”.\nWe will “explore” two packages to do this: DiagrammeR and nomnoml. Each of these follows a specific grammar so that sets of “sentences” will morph into very different kinds of diagrams."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram",
    "text": "Sequence Diagram\nLook at the code below: What do you think it represents?\n\nCodeDiagrammeR(\"\nsequenceDiagram\nArvind ->> Anamika: Why are you late today?\nAnamika ->> Anamika: Ulp...\nAnamika ->> Arvind: I am sorry... <br> may I come in please?\n\nArvind ->> Komal: And you? What kept you?\nKomal ->> Anamika: (Quietly) He's having a bad day, dude...\nAnamika ->> Komal: (Whisper) Boomer...\n\")\n\n\n\n\n\nThis is a simple Sequence Diagram! Shows a strictly imaginary exchange between a pair of students and an unknown Faculty Member.\nLet us now see how we can embellish this kind of diagram. Can we have a Garden of Forking Paths?\n\nCodeDiagrammeR(\"\n  graph LR\n    A-->B\n    A-->C\n    C-->E\n    B-->D\n    C-->D\n    D-->F\n    E-->F\n\")\n\n\n\n\n\n\nCodeDiagrammeR(\"\n        sequenceDiagram\n        \n        alt Anamika is always punctual\n        Arvind ->> Anamika: Why haven't you put up your Daily Reflection?\n        Anamika ->> Anamika: Ulp...\n        Note right of Anamika : I have had it today..\n        Anamika ->> Arvind: I am sorry... \n        Arvind ->> Anamika: Ok write it today\n        \n        else Anamika is usually tardy\n        Arvind ->> Anamika: Why haven't you put up your Daily Reflection?\n        Anamika ->> Anamika: Ulp...\n        Anamika ->> Arvind: I am sorry... \n        Arvind ->> Anamika: This is not acceptable and will reflect in your grade\n        end\n        \n        Arvind ->> Komal: And you? What kept you?\n        Komal ->> Anamika: (Quietly) He's having a bad day, dude...\n        Anamika ->> Komal: (Whisper) Boomer...\n        Note over Anamika,Komal: Giggle...\n\")\n\n\n\n\n\n\nFrom here: https://cyberhelp.sesync.org/blog/visualization-with-diagrammeR.html\n\nCodegrViz(\"digraph{\n\n      graph[rankdir = LR]\n  \n      node[shape = rectangle, style = filled]\n  \n      node[fillcolor = Coral, margin = 0.2]\n      A[label = 'Figure 1: Map']\n      B[label = 'Figure 2: Metrics']\n  \n      node[fillcolor = Cyan, margin = 0.2]\n      C[label = 'Figures.Rmd']\n  \n      node[fillcolor = Violet, margin = 0.2]\n      D[label = 'Analysis_1.R']\n      E[label = 'Analysis_2.R']\n  \n      subgraph cluster_0 {\n        graph[shape = rectangle]\n        style = rounded\n        bgcolor = Gold\n    \n        label = 'Data Source 1'\n        node[shape = rectangle, fillcolor = LemonChiffon, margin = 0.25]\n        F[label = 'my_dataframe_1.csv']\n        G[label = 'my_dataframe_2.csv']\n      }\n  \n      subgraph cluster_1 {\n         graph[shape = rectangle]\n         style = rounded\n         bgcolor = Gold\n    \n         label = 'Data Source 2'\n         node[shape = rectangle, fillcolor = LemonChiffon, margin = 0.25]\n         H[label = 'my_dataframe_3.csv']\n         I[label = 'my_dataframe_4.csv']\n      }\n  \n      edge[color = black, arrowhead = vee, arrowsize = 1.25]\n      C -> {A B}\n      D -> C\n      E -> C\n      F -> D\n      G -> D\n      H -> E\n      I -> E\n      \n      }\")\n\n\n\n\n\n\nCodemermaid(\"\n        graph BT\n        A((Salinity))\n        A-->B(Barnacles)\n        B-.->|-0.10|B1{Mussels}\n        A-- 0.30 -->B1\n\n        C[Air Temp]\n        C-->B\n        C-.->E(Macroalgae)\n        E-->B1\n        C== 0.89 ==>B1\n\n        style A fill:#FFF, stroke:#333, stroke-width:4px\n        style B fill:#9AA, stroke:#9AA, stroke-width:2px\n        style B1 fill:#879, stroke:#333, stroke-width:1px\n        style C fill:#ADF, stroke:#333, stroke-width:2px\n        style E fill:#9C2, stroke:#9C2, stroke-width:2px\n\n        \")\n\n\n\n\n\n\nCodeDiagrammeR(\"\nsequenceDiagram\n  Arvind ->>ticket seller: ask ticket\n  ticket seller->>database: seats\n  alt tickets available\n    database->>ticket seller: ok\n    ticket seller->>customer: confirm\n    Arvind ->>ticket seller: ok\n    ticket seller->>database: book a seat\n    ticket seller->>printer: print ticket\n  else sold out\n    database->>ticket seller: none left\n    ticket seller->>customer: sorry\n  end\n\")\n\n\n\n\n\n\nCodeDiagrammeR(\n\"graph TB;\nA(Rounded)-->B[Squared];\nB-->C{A Decision};\nC-->D[Square One];\nC-->E[Square Two];\n\n%% Now styling these blocks\nstyle A fill:#E5E25F;  \nstyle B fill:#87AB51; \nstyle C fill:#3C8937;\nstyle D fill:#23772C;  \nstyle E fill:#B6E6E6;\n\"\n)\n\n\n\n\n\n\nCode  grViz(\"\ndigraph boxes_and_circles {\n\n  # a 'graph' statement\n  graph [overlap = true, fontsize = 10,forcelabels = true]\n\n  # several 'node' statements\n  node [shape = box,fontname = Helvetica, color = red, style = filled]\n  A[label = 'This is \\\\n an internal \\\\n label', xlabel = 'This is \\\\nan external \\\\nlabel']; B; C; D; E; F\n\n  node [shape = circle, fixedsize = true, color = palegreen, width = 0.9] // sets as circles\n  1; 2; 3; 4; 5; 6; 7; 8\n\n  # several 'edge' statements\n  A->{1,2,3,4} B->2 B->3 B->4 C->A\n  1->D E->A 2->4 1->5 1->F\n  E->6 4->6 5->7 6->7 3->8 3->1\n}\n\")"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-2",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-2",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram-2",
    "text": "Sequence Diagram-2"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-3",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-3",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram 3",
    "text": "Sequence Diagram 3"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#mindmap",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#mindmap",
    "title": "The Grammar of Diagrams",
    "section": "Mindmap",
    "text": "Mindmap"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#gantt-chart",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#gantt-chart",
    "title": "The Grammar of Diagrams",
    "section": "Gantt Chart",
    "text": "Gantt Chart"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#flow-chart",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#flow-chart",
    "title": "The Grammar of Diagrams",
    "section": "Flow chart",
    "text": "Flow chart"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#some-definitions-on-the-grammar-of-shapes-in-nomnoml",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#some-definitions-on-the-grammar-of-shapes-in-nomnoml",
    "title": "The Grammar of Diagrams",
    "section": "Some definitions on the “grammar of shapes” in nomnoml\n",
    "text": "Some definitions on the “grammar of shapes” in nomnoml\n\n\nAssociation Types: Connectors between blocks( i.e. Classifiers)\nClassifier Types: Kinds of blocks.\nDirective Types: Directives change the nature of the diagram rendered, by affective parameters like colour, direction and margins. ( Ha! VC people!!)\n\nCSS colours https://www.w3schools.com/cssref/css_colors.asp Only these colours are permitted, so use either the names or these specific colour hash codes. Any general hash code will not render.\n\nCode//association-1\n[a] - [b] \n\n//association-2\n[b] -> [c] \n\n//association_3\n[c] <-> [a]\n\n//dependency-1\n[a] <-->[d]\n\n//dependency-2\n#.ell: visual=ellipse fill=#fbfb09 bold\n#.arvind: visual=rhomb fill=#ff2234 bold\n[<ell>e]-->[a]\n//generalization-1\n[c]-:>[<arvind>k]\n\n//implementation --:>\n[k]--:>[d]\n\n\n\n\n\n\nCode//composition +-\n[a]+-[b]\n//composition +->\n[b]-+[c]\n//aggregation o-\n[c]o->[d]\n//aggregation o->\n[d]o->[a]\n//note --\n[d]--[everything happens;here]\n//hidden -/-\n[d]-/-[f]\n////////////////////////\n//weightless edge _>\n//[k]_>[d] //not working\n//weightless dashed__\n//[d]__[j] //not working\n\n\n\n\n\nClassifier Types\nThese are different kinds of blocks.\n\nCode[class]->[<abstract> abstract]\n[<abstract> abstract]-:>[<instance> instance]\n[<instance> instance]-:>[<note> note]\n[<note> note]-->[<reference> reference]\n\n\n\n\n\n\nCode[<package> package|components]-->[<frame> frame|]\n[<database> database]-->[<start> start]\n[<end> end]-o>[<state> state]\n\n\n\n\n\n\nCode[<choice> choice]--->[<sync> sync]\n[<input> input]->[<sender> sender]\n[<receiver> receiver]o-[<transceiver> transceiver]\n\n\n\n\n\n\nCode#direction:down\n#background:lightgrey\n#fill: fuchsia; green; purple\n#fillArrows: false\n#font: Courier\n[class]->[<abstract> abstract]\n[<abstract> abstract]-:>[<instance> instance]\n[<instance> instance]-:>[<note> note]\n[<note> note]-->[<reference> reference]\n\n\n\n\n\n\nCode#font: CenturySchoolbook\n#fill: lightyellow\n#stroke: green\n\n[<actor> actor]---[<usecase> usecase]\n[<usecase> usecase]<-->[<label> label]\n[<usecase> usecase]-/-[<hidden> hidden]\n\n\n\n\n\n\nCode[<table> table| a | 5 || b | 7]\n\n\n\n\n\n\n\nCode[<table> table| c | 9 ]"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#directives",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#directives",
    "title": "The Grammar of Diagrams",
    "section": "Directives",
    "text": "Directives\nDirectives change the nature of the diagram rendered, by affective parameters like colour, direction and margins."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#custom-classifier-styles",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#custom-classifier-styles",
    "title": "The Grammar of Diagrams",
    "section": "Custom classifier styles",
    "text": "Custom classifier styles\nA directive that starts with “.” define a classifier’s style. The style is written as a space separated list of modifiers and key/value pairs.\n\nCode#.box: fill=#8f8 dashed\n#.blob: visual=ellipse title=bold\n#.arvind: visual=rhomb title=bold dashed fill=CornFlowerBlue\n[<box> GreenBox]\n[<blob> Blobby]\n[<arvind> Someone]"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#nomnoml-keyvalue-pairs",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#nomnoml-keyvalue-pairs",
    "title": "The Grammar of Diagrams",
    "section": "\nnomnoml Key/value pairs",
    "text": "nomnoml Key/value pairs\n\nfill=(any css color)\nstroke=(any css color)\nalign=center align=left\ndirection=right direction=down\nvisual=actor\nvisual=class\nvisual=database\nvisual=ellipse\nvisual=end\nvisual=frame\nvisual=hidden\nvisual=input\nvisual=none\nvisual=note\nvisual=package\nvisual=receiver\nvisual=rhomb\nvisual=roundrect\nvisual=sender\nvisual=start\nvisual=sync\nvisual=table\nvisual=transceiver"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#text-modifiers",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/08-Grammar-of-Diagrams.html#text-modifiers",
    "title": "The Grammar of Diagrams",
    "section": "Text modifiers",
    "text": "Text modifiers\nbold center italic left underline\n\nCode# .box: fill=#8f8 dashed\n# .blob: visual=rhomb title=bold fill=#8f8 dashed\n\n[A]-[B]\n[B]--[<usecase>C]\n[C]-[<box> D]\n[B]--[<blob> Jabba;TheHut]\n\n\n\n\n\n\nCode[a] ->[b]\n[b] -:> [c]\n[c]o->[d]\n[d]-/-[e]\n\n\n\n\n\n\nCode#fill: lightgreen; lightblue; lightyellow; grey; white\n\n[<table> table | c | 9 ]\n\n[R | [<table> Packages |\n         Base R |\n         [ <table> tidyverse| ggplot | tidyr | readr |\n             [<table> dplyr|\n                 magrittr | Others]]]]\n\n\n\n\n\n\n\nCode#fill: lightgreen; lightblue; lightyellow; pink; white\n\n[RStudio | [R | [<table> Packages |\n                   Base R | [ tidyverse |\n                               ggplot | tidyr | readr |\n                               [dplyr]--[magrittr]\n                               [dplyr]--[Others]\n                             | tibble\n                             ]\n                 | lubridate | DiagrammeR | Lattice]]]\n\n\n\n\n\n\n\nCode[Linux]+-[Ubuntu]\n[Linux]+-[Mint]\n[Ubuntu]--[Mint]\n[Linux]+-[Rosa Linux]\n[Linux]+-[Mx Linux]\n[Debian]-+[Linux]\n\n\n[Fedora]-+[Linux]\n[Puppy Linux]-+[Linux]\n[Personal Pups]-+[Puppy Linux]"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/110-GoD/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/110-GoD/index.html#introduction",
    "title": "Lab-11: The Queen of Hearts, She Made some Tarts",
    "section": "Introduction",
    "text": "Introduction\nWe can use R to create complicated diagrams too ! Flow charts, Gantt charts, Org charts…all with R. We will use packages such as nomnoml and DiagrammeR to achieve these ends."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/120-time/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/120-time/index.html#introduction",
    "title": "Lab-12: Time is a Him!!",
    "section": "Introduction",
    "text": "Introduction\nTime Series data are important in data visualization where events have a temporal dimension, such as with finance, transportation, music, telecommunications for example."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/120-time/index.html#creating-a-time-series",
    "href": "content/courses/R-for-Artists/Modules/120-time/index.html#creating-a-time-series",
    "title": "Lab-12: Time is a Him!!",
    "section": "Creating a time series",
    "text": "Creating a time series\nIn this first example, we will use simple ts data, and then do another with a tibble dataset, and then a third example with an tsibble formatted dataset.\n\nts format data\nThere are a few datasets in base R that are in ts format already.\n\nCodeAirPassengers\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n1949 112 118 132 129 121 135 148 148 136 119 104 118\n1950 115 126 141 135 125 149 170 170 158 133 114 140\n1951 145 150 178 163 172 178 199 199 184 162 146 166\n1952 171 180 193 181 183 218 230 242 209 191 172 194\n1953 196 196 236 235 229 243 264 272 237 211 180 201\n1954 204 188 235 227 234 264 302 293 259 229 203 229\n1955 242 233 267 269 270 315 364 347 312 274 237 278\n1956 284 277 317 313 318 374 413 405 355 306 271 306\n1957 315 301 356 348 355 422 465 467 404 347 305 336\n1958 340 318 362 348 363 435 491 505 404 359 310 337\n1959 360 342 406 396 420 472 548 559 463 407 362 405\n1960 417 391 419 461 472 535 622 606 508 461 390 432\n\nCodestr(AirPassengers)\n\n Time-Series [1:144] from 1949 to 1961: 112 118 132 129 121 135 148 148 136 119 ...\n\n\nThis can be easily plotted using base R:\n\nCodeplot(AirPassengers)\n\n\n\n\nLet us take data that is “time oriented” but not in ts format, and convert it to ts: the syntax of ts() is:\nSyntax:  objectName <- ts(data, start, end, frequency)\n\nwhere,\n\n    `data` represents the data vector\n    `start` represents the first observation in time series\n    `end` represents the last observation in time series\n    frequency represents number of observations per unit time. For \n    example, frequency=1 for monthly data.\nWe will pick simple numerical vector data ChickWeight:\n\nCodeChickWeight %>% head()\n\n\n\n  \n\n\nCodeChickWeight_ts <- ts(ChickWeight$weight, frequency = 2)\nplot(ChickWeight_ts)\n\n\n\n\nThe ts format is not recommended for new analysis since it does not permit inclusion of multiple time series in one dataset, nor other categorical variables for grouping etc.\n\ntibble format data\nSome “time-oriented” datasets are available in tibble form. Let us try to plot one, the walmart_sales_weekly dataset from the timetk package:\n\nCodedata(walmart_sales_weekly, package = \"timetk\")\nwalmart_sales_weekly %>% head()\n\n\n\n  \n\n\n\nThis dataset is a tibble with a Date column. Let us plot the data using this column on the time/X-axis:\n\nCodewalmart_sales_weekly %>% \n  # convert Dept number to a **categorical factor**\n  mutate(Dept = forcats::as_factor(Dept)) %>% \n  ggplot(aes(x = Date, y = Weekly_Sales, group = Dept)) + \n  geom_point(aes(colour = Dept)) +\n  geom_line(aes(colour = Dept))\n\n\n\n\n\ntsibble format data\nFor more analysis and forecasting etc., it is useful to convert this tibble into a tsibble:\n\nCodewalmart_tsibble <- as_tsibble(walmart_sales_weekly,\n                         index = Date,\n                         key = c(id, Dept))\nwalmart_tsibble\n\n\n\n  \n\n\n\nThe 7D states the data is weekly. There is a Date column and all the other numerical variables are time-varying quantities. The categorical variables such as id, and Dept allow us to identify separate time series in the data, and these have 7 combinations hence are 7 time series in this data, as indicated.\nLet us plot Weekly_Sales, colouring the time series by Dept:\n\nCodewalmart_tsibble %>% \n  ggplot(aes( x = Date, y = Weekly_Sales, colour = Dept)) + \n           geom_line() + \n           geom_point() + \n           labs(title = \"Weekly Sales by Dept at Walmart\")\n\n\n\nFigure 1: Walmart Time Series\n\n\n\n\nThis first plot is that of all series together. There does seem to be an annual variation, which we should investigate later.\nNote the blue trend lines that are automatically plotted in the second graph. This is caused by the argument .smooth = TRUE.\n⊕We can also do a quick autoplot that seems to offer less control and is also not interactive.\n\n\n\nCodewalmart_tsibble %>% \n  dplyr::group_by(Dept) %>% \n  autoplot(Weekly_Sales)\n\n`mutate_if()` ignored the following grouping variables:\n• Column `Dept`"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/120-time/index.html#one-more-example",
    "href": "content/courses/R-for-Artists/Modules/120-time/index.html#one-more-example",
    "title": "Lab-12: Time is a Him!!",
    "section": "One more example",
    "text": "One more example\nOften we have data in table form, that is time-oriented, with a date like column, and we need to convert it into a tsibble for analysis:\n\nCodeprison <- readr::read_csv(\"https://OTexts.com/fpp3/extrafiles/prison_population.csv\")\n\nRows: 3072 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): State, Gender, Legal, Indigenous\ndbl  (1): Count\ndate (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodeglimpse(prison)\n\nRows: 3,072\nColumns: 6\n$ Date       <date> 2005-03-01, 2005-03-01, 2005-03-01, 2005-03-01, 2005-03-01…\n$ State      <chr> \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"NS…\n$ Gender     <chr> \"Female\", \"Female\", \"Female\", \"Female\", \"Male\", \"Male\", \"Ma…\n$ Legal      <chr> \"Remanded\", \"Remanded\", \"Sentenced\", \"Sentenced\", \"Remanded…\n$ Indigenous <chr> \"ATSI\", \"Non-ATSI\", \"ATSI\", \"Non-ATSI\", \"ATSI\", \"Non-ATSI\",…\n$ Count      <dbl> 0, 2, 0, 5, 7, 58, 5, 101, 51, 131, 145, 323, 355, 1617, 12…\n\n\nWe have a Date column for the time index, and we have unique key variables like State, Gender, Legal and Indigenous. Count is the value that is variable over time. It also appears that the data is quarterly, since mosaic::inspect reports the max_diff in the Date column as \\(92\\). (Run mosaic::inspect(prison) in your Console).\n\nCodeprison_tsibble <- prison %>% \n  mutate(quarter = yearquarter(Date)) %>% \n  select(-Date) %>% # Remove the Date column now that we have quarters\n  as_tsibble(index = quarter, key = c(State, Gender, Legal, Indigenous))\n\nprison_tsibble\n\n\n\n  \n\n\n\n(Here, ATSI stands for Aboriginal or Torres Strait Islander.). We have \\(64\\) time series here, organized quarterly.\nLet us examine the key variables:\n\nCodeprison_tsibble %>% distinct(Indigenous)\n\n\n\n  \n\n\nCodeprison_tsibble %>% distinct(State)\n\n\n\n  \n\n\n\nSo we can plot the time series, faceted by / coloured by State:\n\nCodeprison_tsibble %>% \n  tsibble::index_by() %>% \n  group_by(Indigenous, State) %>% \n  #filter(State == \"NSW\") %>% \n  summarise(Total = sum(Count))  %>%\n  ggplot(aes(x = quarter, y = Total, colour = Indigenous, \n             shape = Indigenous)) + \n  geom_point() +\n  geom_line()  + \n  facet_wrap(~ State)\n\n\n\n\nHmm…looks like New South Wales(NSW) as something different going on compared to the rest of the states in Aus."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/120-time/index.html#decomposing-time-series",
    "href": "content/courses/R-for-Artists/Modules/120-time/index.html#decomposing-time-series",
    "title": "Lab-12: Time is a Him!!",
    "section": "Decomposing Time Series",
    "text": "Decomposing Time Series\nWe can decompose the Weekly_Sales into components representing trends, seasonal events that repeat, and irregular noise. Since each Dept could have a different set of trends, we will do this first for one Dept, say Dept #95:\n\nCodewalmart_decomposed_season <- walmart_tsibble %>% \n  dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n  #\n  # feasts depends upon fabletools.\n  # \n  fabletools::model(\n    season = STL(Weekly_Sales ~ season(window = \"periodic\"))) \n\nwalmart_decomposed_ets <- walmart_tsibble %>% \n  dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n  #\n  # feasts depends upon fabletools.\n  # \n  fabletools::model(\n    ets = ETS(box_cox(Weekly_Sales, 0.3)))\n\nwalmart_decomposed_season %>% fabletools::components()\n\n\n\n  \n\n\nCodewalmart_decomposed_ets %>% fabletools::components()\n\n\n\n  \n\n\nCode# walmart_decomposed_arima <- walmart_tsibble %>% \n#   dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n#     arima = ARIMA(log(Weekly_Sales))\n\n\n\nCodewalmart_decomposed_season %>% \n  components() %>% \n  autoplot() + \n  labs( title = \"Seasonal Variations in Weekly Sales, Dept #95\")\n\n\n\nCodewalmart_decomposed_ets %>% \n  components() %>% \n  autoplot() + \n  labs( title = \"ETS Variations in Weekly Sales, Dept #95\")\n\nWarning: Removed 1 row containing missing values (`geom_line()`)."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/120-time/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/120-time/index.html#references",
    "title": "Lab-12: Time is a Him!!",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/140-website/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/140-website/index.html#introduction",
    "title": "Lab-14: You’re are Nothing but a Pack of Cards!!",
    "section": "Introduction",
    "text": "Introduction\nLet’s make a website in RStudio to show off our data viz portfolio, and to share with friends, parents, prospective employers…\nWe will encounter a new package called blogdown and use workflows with github and a free web hosting service called Netlify to create a website where all our RMarkdowns become individual blog posts, complete with Titles, Sections, Text, Diagrams and Links!"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/140-website/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/140-website/index.html#references",
    "title": "Lab-14: You’re are Nothing but a Pack of Cards!!",
    "section": "References",
    "text": "References\n\nAllison Hill\nSharon Macliss\nYihui Xie"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/20-intro/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/20-intro/index.html#introduction",
    "title": "Lab-2: Down the R-abbit Hole…",
    "section": "Introduction",
    "text": "Introduction\nWelcome!\nLet’s start our journey to the Garden of Data Visualization, with this terrific presentation by the great ( and sadly late..) Hans Rosling.\nThe best stats you’ve ever seen by Hans Rosling:\n{{% youtube \"hVimVzgtD6w\" %}}\n\nWe will run some boiler-plate R code today! Nothing ( almost! ) to code! We will get used to the tools and words of the trade: R, RStudio, installation, packages, libraries….\nlinks: @Installation 00-install_name_plot.Rmd\nSlides 00-Installation.Rmd"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/30-rmd/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/30-rmd/index.html#introduction",
    "title": "Lab-3: Drink Me!",
    "section": "Introduction",
    "text": "Introduction\nWe will get acquainted with the RMarkdown format, which allows us to mix text narrative, code, code-developed figures and items from the web in a seamless document.\nThen we can try to create something in the lines of what Hans Rosling did.\nSomething that can:\n- provide a visualization\n- provide insight\n- tell a story\n- is reproducible"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/30-rmd/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/30-rmd/index.html#references",
    "title": "Lab-3: Drink Me!",
    "section": "References:",
    "text": "References:\n\nhttps://ysc-rmarkdown.netlify.app/slides/01-basics.html Nice RMarkdown presentation and “code movies” !\nhttps://rmarkdown.rstudio.com/index.html\nhttps://www.markdowntutorial.com\nhttps://andrewbtran.github.io/NICAR/2018/workflow/docs/02-rmarkdown.html\nhttps://yihui.name/tinytex/ (install!)\nhttps://github.com/rstudio/cheatsheets/blob/master/rmarkdown-2.0.pdf\nhttps://rmarkdown.rstudio.com/html_document_format.html\nhttps://rmarkdown.rstudio.com/pdf_document_format.html"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/30-rmd/index.html#assignments",
    "href": "content/courses/R-for-Artists/Modules/30-rmd/index.html#assignments",
    "title": "Lab-3: Drink Me!",
    "section": "Assignment(s)",
    "text": "Assignment(s)\n\nComplete the markdowntutorial in [reference 1]\nCreate a fresh RMarkdown document and use as many as possible of the RMarkdown constructs from the Cheatsheet [reference 4]"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/30-rmd/index.html#optional",
    "href": "content/courses/R-for-Artists/Modules/30-rmd/index.html#optional",
    "title": "Lab-3: Drink Me!",
    "section": "Optional",
    "text": "Optional\n\nGo to reference 3 and install tinytex. Try to knit your document into PDF also, using tinytex."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/30-rmd/index.html#fun-stuff",
    "href": "content/courses/R-for-Artists/Modules/30-rmd/index.html#fun-stuff",
    "title": "Lab-3: Drink Me!",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nDesirée De Leon, Alison Hill: rstudio4edu: A Handbook for Teaching and Learning with R and RStudio, https://rstudio4edu.github.io/rstudio4edu-book/"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/40-working-in-r/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/40-working-in-r/index.html#introduction",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "Introduction",
    "text": "Introduction\nWe will get acquainted with data and its representations in R! We will also form a view of how English Grammar ( pronouns, verbs, adjectives, figures of speech..) get metaphorized into the R World!!"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/40-working-in-r/index.html#readings",
    "href": "content/courses/R-for-Artists/Modules/40-working-in-r/index.html#readings",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "Readings",
    "text": "Readings\n\nR for Data Science, Workflow: Basics Chapter: http://r4ds.had.co.nz/workflow-basics.html\nModern Dive, Getting Started Chapter: http://moderndive.com/2-getting-started.html\nR & RStudio Basics: https://bookdown.org/chesterismay/rbasics/3-rstudiobasics.html\nRStudio IDE Cheatsheet: https://github.com/rstudio/cheatsheets/blob/master/rstudio-ide.pdf"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/50-working-in-tidyverse/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/50-working-in-tidyverse/index.html#introduction",
    "title": "Lab-5: Twas brillig, and the slithy toves…",
    "section": "Introduction",
    "text": "Introduction\nWe meet the most important idea in R: tidy data. Once data is tidy, there is a great deal of insight to be obtained from it, by way of tables, graphs and explorations!\nWe will get hands on with dplyr, the R-package that belongs in the tidyverse and is a terrific toolbox to clean, transform, reorder, and summarize your data. And we will be ready to ask Questions of our data and embark on anlayzing it."
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/50-working-in-tidyverse/index.html#readings",
    "href": "content/courses/R-for-Artists/Modules/50-working-in-tidyverse/index.html#readings",
    "title": "Lab-5: Twas brillig, and the slithy toves…",
    "section": "Readings",
    "text": "Readings\n\nR4DS dplyr chapter\nModernDive dplyr chapter\nRStudio dplyr Cheatsheet"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/60-GoG/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/60-GoG/index.html#introduction",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "Introduction",
    "text": "Introduction\nAh…ggplot ! All those wonderful pictures and graphs, that Alice might have relished!\nMetaphors, aesthetics, geometries…and pictures !! ggplot seems to equate ravens to writing desks in its syntax…and out come graphs!!\nAnd colours: Wes Anderson! Tim Burton! The Economist… and many others!!"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/60-GoG/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/60-GoG/index.html#references",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "References",
    "text": "References\n\nGeorge Lakoff and Mark Johnson, Metaphors We Live By, https://www.youtube.com/watch?v=lYcQcwUfo8c\nWickham and Grolemund, R for Data Science, ggplot chapter: https://r4ds.had.co.nz/data-visualisation.html\nCMDLineTips, 10 Tips to Customize Text Color, Font, Size in ggplot2 with element_text(), https://cmdlinetips.com/2021/05/tips-to-customize-text-color-font-size-in-ggplot2-with-element_text/\nCMDLineTips, How to write a simple custom ggplot theme from scratch, https://cmdlinetips.com/2022/05/how-to-write-a-simple-custom-ggplot-theme-from-scratch/\nAsha Hill @ mode.com, 12 Extensions to ggplot2 for More Powerful R Visualizations, https://mode.com/blog/r-ggplot-extension-packages/\nEmil Hvitfeldt, ggplot Trial and Error, https://www.emilhvitfeldt.com/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/60-GoG/index.html#fun-stuff",
    "href": "content/courses/R-for-Artists/Modules/60-GoG/index.html#fun-stuff",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nYihan Wu, Mapping ggplot geoms and aesthetic parameters, ( An interactive view of which aesthetic parameters work with which ggplot geom!! ) https://www.yihanwu.ca/post/geoms-and-aesthetic-parameters/\nhttps://www.theartstory.org/artist/kandinsky-wassily/"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#introduction",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Introduction",
    "text": "Introduction\nWe will hear at icing and froth to our vanilla ggplots:\n\n\nfonts, annotations, highlights and even pictures!!"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#references",
    "href": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#references",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "References",
    "text": "References\n\nThomas Lin Pedersen, https://www.data-imaginist.com/. The creator of ggforce, and patchwork packages.\nClaus Wilke, cowplot – Streamlined plot theme and plot annotations for ggplot2, https://wilkelab.org/cowplot/index.html\nClaus Wilke, Spruce up your ggplot2 visualizations with formatted text, https://clauswilke.com/talk/rstudio_conf_2020/. Slides, Code, and Video !\nRobert Kabacoff, ggplot theme cheatsheet, https://rkabacoff.github.io/datavis/modifyingthemes.pdf"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#fun-stuff",
    "href": "content/courses/R-for-Artists/Modules/70-wizardy/index.html#fun-stuff",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nZuguang Gu, Circular Visualization in R,\n\n\n\n\n\n\n\n\n\nhttps://jokergoo.github.io/circlize_book/book/"
  },
  {
    "objectID": "content/courses/R-for-Artists/Modules/90-GoM/index.html#introduction",
    "href": "content/courses/R-for-Artists/Modules/90-GoM/index.html#introduction",
    "title": "Lab-9: If you please sir…which way to the Secret Garden?",
    "section": "Introduction",
    "text": "Introduction\nWhat is there to not like about maps!!!\nWe will learn to make static and interactive maps and to show off different kinds of data on them, data that have an inherently “spatial” spread or significance!\nTrade Routes? Populations? Street Crime hotspots? Theatre and Food districts and popular Restaurants? Literary Paris, London and Barcelona?\nAll possible !!"
  },
  {
    "objectID": "content/posts/01-intro/history.html",
    "href": "content/posts/01-intro/history.html",
    "title": "Boston Terrier",
    "section": "",
    "text": "The Boston Terrier is a breed of dog originating in the United States of America. This “American Gentleman” was accepted in 1893 by the American Kennel Club as a non-sporting breed.1 Color and markings are important when distinguishing this breed from the AKC standard. They should be either black, brindle or seal with white markings.2 Boston Terriers are small and compact with a short tail and erect ears. The AKC says they are highly intelligent and very easily trained.3 They are friendly and can be stubborn at times. The average life span of a Boston Terrier is around 11 to 13 years.4 The American Kennel Club ranked the Boston Terrier as the 21st most popular breed in 2019.5"
  },
  {
    "objectID": "content/posts/01-intro/history.html#history",
    "href": "content/posts/01-intro/history.html#history",
    "title": "Boston Terrier",
    "section": "History",
    "text": "History\n\n\n\n\n\nTerrier Seated\n\n\n\n\nThe Boston terrier breed originated around 1875, when Robert C. Hooper of Boston purchased from Edward Burnett a dog named Judge (known later as Hooper’s Judge), which was of a bull and terrier type lineage. Hooper’s Judge is directly related to the original bull and terrier breeds of the 19th and early 20th centuries. The American Kennel Club cites Hooper’s Judge as the ancestor of all true modern Boston Terriers. Judge weighed about 32 pounds (15 kg).\n\n\n\n\nJudge was bred to Burnett’s Gyp (or Kate). Gyp was a white bulldog-type female, owned by Edward Burnett, of Southboro, Massachusetts. She weighed about 20 pounds (9.1 kg), was stocky and strong and had the typical blocky head now shown in Bostons. From this foundation of the breed, subsequent breeders refined the breed into its modern day presentation. Bred down in size from fighting dogs of the bull and terrier types, the Boston Terrier originally weighed up to 44 pounds (20 kg) (Old Boston Bulldogs).\n\n\n\n\n\n\nA young male Boston Terrier with a Brown brindle coat\n\nThe breed was first shown in Boston in 1870. By 1889 the breed had become sufficiently popular in Boston that fanciers formed the American Bull Terrier Club, the breed’s nickname, “roundheads”. Shortly after, at the suggestion of James Watson (a noted writer and authority), the club changed its name to the Boston Terrier Club and in 1893 it was admitted to membership in the American Kennel Club, thus making it the first US breed to be recognized. It is one of a small number of breeds to have originated in the United States. The Boston Terrier was the first non-sporting dog breed in the US.\nIn the early years, the color and markings were not very important to the breed’s standard. By the 20th century the breed’s distinctive markings and color were written into the standard, becoming an essential feature. The Boston Terrier has lost most of its aggressive nature, preferring the company of humans, although some males will still challenge other dogs if they feel their territory is being invaded. Boston University has used Rhett the Boston Terrier as their mascot since 1922. Wofford College in Spartanburg, SC has had a live Boston Terrier mascot named Blitz since 2003 that attends home football games. The Boston Terrier has also been the official state dog of Massachusetts since 1979."
  },
  {
    "objectID": "content/posts/01-intro/history.html#description",
    "href": "content/posts/01-intro/history.html#description",
    "title": "Boston Terrier",
    "section": "Description",
    "text": "Description\nThe Boston Terrier is a compactly built, well-proportioned dog. It has a square-looking head with erect ears and a slightly arched neck. The muzzle is short and generally wrinkle-free, with an even or a slightly undershot bite. The chest is broad and the tail is short. According to international breed standards, the dog should weigh no more than 25 pounds (11 kg). Boston Terriers usually stand up to 15–17 inches (380–430 mm) at the withers.\nThe American Kennel Club divides the breed into three classes: under 15 pounds, 15 pounds and under 20 pounds, 20 pounds and not exceeding 25 pounds.\nCoat and color\nThe Boston Terrier is characteristically marked with white in proportion to either black, brindle, seal (color of a wet seal, a very dark brown that looks black except in the bright sun), or a combination of the three. Any other color is not accepted as a Boston Terrier by the American Kennel Club, as they are usually obtained by crossbreeding with other breeds and the dog loses its characteristic “tuxedo” appearance.6 Any Boston Terrier from AKC parentage regardless of the color, or if it is a splash or has a blue eye or weak ears, can be and are registered by the AKC and participate in any AKC sporting events.\n\n\n\nA female Boston Terrier with a black coat\n\nAccording to the American Kennel Club, the Boston Terrier’s markings are broken down into two categories: Required, which consists of a white chest, white muzzle band, and a white band between the eyes; and Desired, which includes the Required markings plus a white collar, white on the forelegs, forelegs, up to the hocks on the rear legs. For conformation showing, symmetrical markings are preferred. Due to the Boston Terrier’s markings resembling formal wear, in addition to its refined and pleasant personality, the breed is commonly referred to as “the American Gentleman.”\n\n\n\nAn adult male Boston Terrier with a black coat"
  },
  {
    "objectID": "content/posts/01-intro/history.html#temperament",
    "href": "content/posts/01-intro/history.html#temperament",
    "title": "Boston Terrier",
    "section": "Temperament",
    "text": "Temperament\nBoston Terrier is a gentle breed that typically has a strong, happy-go-lucky, and friendly personality with a merry sense of humor. Boston Terriers are generally eager to please their owner and can be easily trained. They can be very protective of their owners, which may result in aggressive and territorial behavior toward other pets and strangers. The breed requires only a minimal amount of grooming.\nWhile originally bred for fighting as well as hunting rats in garment factories, they were later bred for companionship. They are not considered terriers by the American Kennel Club, however, but are part of the non-sporting group.\nBoth females and males are generally quiet and bark only when necessary, Their usually sensible attitude toward barking makes them excellent choices for apartment dwellers. They enjoy being around people, get along well with children, the elderly, other canines, and non-canine pets, if properly socialized."
  },
  {
    "objectID": "content/posts/01-intro/history.html#grooming",
    "href": "content/posts/01-intro/history.html#grooming",
    "title": "Boston Terrier",
    "section": "Grooming",
    "text": "Grooming\nWith a short, shiny, smooth coat, Boston Terriers require little grooming. Bostons produce light shedding, and weekly brushing of their fine coat is effective at removing loose hair. Brushing promotes the health of the coat because it distributes skin oils, and it also encourages new hair growth. Occasional bathing is suitable for the breed.7\nThe nails of Boston Terriers require regular trimming. Overgrown nails not only have the potential to inflict pain on the breed, but they can also make walking difficult or tear off after getting snagged on something.\nSimilarly to nail trimming, tooth brushing should also be done regularly to promote good oral health. The risk of the breed developing oral pain, gum infection, or bad breath can be decreased with regular tooth brushing that removes plaque buildup and other bacteria. In addition, poor dental hygiene can lead to tooth root abscesses that can lead to damage around the tissue and eventually lead to the loss of teeth."
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html",
    "href": "content/posts/02-authoring/authoring.html",
    "title": "Housing Prices",
    "section": "",
    "text": "In this analysis, we build a model predicting sale prices of houses based on data on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020. Let’s start by loading the packages we’ll use for the analysis.\n\nPackageslibrary(openintro)  # for data\nlibrary(tidyverse)  # for data wrangling and visualization\nlibrary(knitr)      # for tables\nlibrary(broom)      # for model summary\n\n\nWe present the results of exploratory data analysis in Section 2 and the regression model in Section 3."
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html#sec-eda",
    "href": "content/posts/02-authoring/authoring.html#sec-eda",
    "title": "Housing Prices",
    "section": "\n2 Exploratory data analysis",
    "text": "2 Exploratory data analysis\nThe data contains 98 houses. As part of the exploratory analysis let’s visualize and summarize the relationship between areas and prices of these houses.\n\n2.1 Data visualization\nFigure 1 shows two histograms displaying the distributions of price and area individually.\n\nCodeggplot(duke_forest, aes(x = price)) +\n  geom_histogram(binwidth = 50000) +\n  labs(title = \"Histogram of prices\")\n\nggplot(duke_forest, aes(x = area)) +\n  geom_histogram(binwidth = 250) +\n  labs(title = \"Histogram of areas\")\n\n\n\n\n\n(a) Histogram of prices\n\n\n\n\n\n\n(b) Histogram of areas\n\n\n\n\nFigure 1: Histograms of individual variables\n\n\n\nFigure 2 displays the relationship between these two variables in a scatterplot.\n\nCodeggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point() +\n  labs(title = \"Price and area of houses in Duke Forest\")\n\n\n\nFigure 2: Scatterplot of price vs. area of houses in Duke Forest\n\n\n\n\n\n2.2 Summary statistics\nTable 1 displays basic summary statistics for these two variables.\n\nCodeduke_forest %>%\n  summarise(\n    `Median price` = median(price),\n    `IQR price` = IQR(price),\n    `Median area` = median(area),\n    `IQR area` = IQR(area),\n    `Correlation, r` = cor(price, area)\n    ) %>%\n  kable(digits = c(0, 0, 0, 0, 2))\n\n\n\nTable 1: Summary statistics for price and area of houses in Duke Forest\n\nMedian price\nIQR price\nMedian area\nIQR area\nCorrelation, r\n\n\n540000\n193125\n2623\n1121\n0.67"
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html#sec-model",
    "href": "content/posts/02-authoring/authoring.html#sec-model",
    "title": "Housing Prices",
    "section": "\n3 Modeling",
    "text": "3 Modeling\nWe can fit a simple linear regression model of the form shown in Equation 1.\n\nprice = \\hat{\\beta_0} + \\hat{\\beta_1} \\times area + \\epsilon\n\\tag{1}\nTable 2 shows the regression output for this model.\n\nCodeprice_fit <- lm(price ~ area, data = duke_forest)\n  \nprice_fit %>%\n  tidy() %>%\n  kable(digits = c(0, 0, 2, 2, 2))\n\n\n\nTable 2: Linear regression model for predicting price from area\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n(Intercept)\n116652\n53302.46\n2.19\n0.03\n\n\narea\n159\n18.17\n8.78\n0.00\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis is a pretty incomplete analysis, but hopefully the document provides a good overview of some of the authoring features of Quarto !"
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html#crossreferences",
    "href": "content/posts/02-authoring/authoring.html#crossreferences",
    "title": "Housing Prices",
    "section": "\n4 Crossreferences",
    "text": "4 Crossreferences\nWe present the results of exploratory data analysis in Section 2 and the regression model in Section 3 .\nFigure 2 displays the relationship between these two variables in a scatterplot.\nTable 1 displays basic summary statistics for these two variables.\nWe can fit a simple linear regression model of the form shown in Equation 1."
  },
  {
    "objectID": "content/posts/02-authoring/callout-boxes.html",
    "href": "content/posts/02-authoring/callout-boxes.html",
    "title": "Callout Boxes",
    "section": "",
    "text": ":::{.callout-note}\nNote that there are five types of callouts, including:\n`note`, `warning`, `important`, `tip`, and `caution`.\n:::\n\n:::{.callout-tip}\n## Tip With Caption\n\nThis is an example of a callout with a caption.\n:::\n\n:::{.callout-caution collapse=\"true\"}\n## Expand To Learn About Collapse\n\nThis is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make a collapsible callout that is expanded by default.\n:::"
  },
  {
    "objectID": "content/posts/02-authoring/figure-layout.html",
    "href": "content/posts/02-authoring/figure-layout.html",
    "title": "Figure Layouts",
    "section": "",
    "text": "# returns a tibble of the files\n# \nfs::dir_info(here::here(\"content/materials/images\"))\n\n# A tibble: 7 × 18\n  path             type     size permi…¹ modification_time   user  group devic…²\n  <fs::path>       <fct> <fs::b> <fs::p> <dttm>              <chr> <chr>   <dbl>\n1 …Terrier001.jpeg file   31.11K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n2 …en_Forever.jpeg file   18.72K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n3 …rrier_male.jpeg file   54.81K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n4 …ages/avatar.jpg file    8.73K rw-     2022-09-17 06:19:54 <NA>  <NA>   2.93e9\n5 …oston-sleep.png file  101.59K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n6 …ton-terrier.png file   72.69K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n7 …c_Library).jpeg file   32.09K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n# … with 10 more variables: hard_links <dbl>, special_device_id <dbl>,\n#   inode <dbl>, block_size <dbl>, blocks <dbl>, flags <int>, generation <dbl>,\n#   access_time <dttm>, change_time <dttm>, birth_time <dttm>, and abbreviated\n#   variable names ¹​permissions, ²​device_id\n\n\n\n# returns paths/files\nfs::dir_ls(here::here(\"content/materials/images\"))\n\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/330px-BostonTerrier001.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/330px-Boston_Terrier_Eden_Forever.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/330px-Boston_Terrier_male.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/avatar.jpg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/boston-sleep.png\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/boston-terrier.png\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/content/materials/images/Terrier_Seated_(Boston_Public_Library).jpeg"
  },
  {
    "objectID": "content/posts/02-authoring/figure-layout.html#figures",
    "href": "content/posts/02-authoring/figure-layout.html#figures",
    "title": "Figure Layouts",
    "section": "Figures",
    "text": "Figures\nBasic markdown syntax:\n   ![Boston Terrier](images/boston-terrier.png)\n\n\nBoston Terrier"
  },
  {
    "objectID": "content/posts/02-authoring/figure-layout.html#fragments",
    "href": "content/posts/02-authoring/figure-layout.html#fragments",
    "title": "Figure Layouts",
    "section": "Fragments",
    "text": "Fragments\n\n\n   ![Boston terrier](images/boston-terrier.png){fig-align=\"left\"}\n\n\n![](images/boston-terrier.png){fig-align=\"right\" fig-alt=\"A photo a Boston Terrier.\"}"
  },
  {
    "objectID": "content/posts/02-authoring/figure-layout.html#subfigures",
    "href": "content/posts/02-authoring/figure-layout.html#subfigures",
    "title": "Figure Layouts",
    "section": "Subfigures",
    "text": "Subfigures\n::: {#fig-bostons layout-ncol=2}\n\n![Excited](images/boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](images/boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard\n\n:::"
  },
  {
    "objectID": "content/posts/02-authoring/figure-layout.html#subfigures-1",
    "href": "content/posts/02-authoring/figure-layout.html#subfigures-1",
    "title": "Figure Layouts",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\nFigure 1: Two states of Howard"
  },
  {
    "objectID": "content/posts/03-computation/inline-code.html",
    "href": "content/posts/03-computation/inline-code.html",
    "title": "Inline Code",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.0 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(palmerpenguins)\nThe dataset contains 344 penguin size measurements from Adelie, Gentoo, Chinstrap species across Torgersen, Biscoe, Dream islands.."
  },
  {
    "objectID": "content/posts/03-computation/inline-code.html#what-about-formatting",
    "href": "content/posts/03-computation/inline-code.html#what-about-formatting",
    "title": "Inline Code",
    "section": "What about formatting?",
    "text": "What about formatting?\n\npen_summary <- penguins |> \n  group_by(species) |> \n  summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))\n\nThe average body mass by species is 3700.6622517, 3733.0882353, 5076.0162602.\nWe can do better!\n\nbody_mass <- scales::label_number(big.mark = \",\", accuracy = 0.1, suffix = \"g\")(pull(pen_summary, avg_mass))\n\nbody_mass\n\n[1] \"3,700.7g\" \"3,733.1g\" \"5,076.0g\"\n\n\nThe average body mass by species is 3,700.7g, 3,733.1g, 5,076.0g.\nWe can still do better!\n\nmass_reporter <- glue::glue_collapse(body_mass, sep = \", \", last = \", and \")\n\nThe average body mass by species is 3,700.7g, 3,733.1g, and 5,076.0g."
  },
  {
    "objectID": "content/posts/03-computation/inline-code.html#reporting-with-lists",
    "href": "content/posts/03-computation/inline-code.html#reporting-with-lists",
    "title": "Inline Code",
    "section": "Reporting with lists",
    "text": "Reporting with lists\nCredit to TJ Mahr\n\nknitted <- list(\n  when = format(Sys.Date()),\n  with = system(\"quarto --version\", intern = TRUE)\n)\n\nReported prepared on 2023-01-05 with quarto version 1.2.280."
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html",
    "href": "content/posts/03-computation/visual-editor.html",
    "title": "Visual Editor for Quarto",
    "section": "",
    "text": "RStudio 2022.07.1 comes with support for the Visual Mode of editing Quarto and other markdown-based files!\nThis is a WYSIWYM editor, meaning:\n\nWYSIWYM is an acronym that stands for What you see is what you mean. This was positioned to not be confused with WYSIWYG (what you see is what you get). The idea behind WYSIWYG is to display text on screen in much the exact same way as they will appear when printed on paper.\n\nWYSIWYM means that it can be translated differently, (where) the same content can lead to different output formats .\n\nThe Visual Markdown mode in RStudio allows for editing in plain text or visual mode, along with a visual representation of what it will actually look like while maintaining the ability to output to HTML or PDF.\nFull guide guide from the RStudio dev team that covers all the major topics and sub topics of the new features.\n\n\nOS\nDownload\nSize\nSHA-256\n\n\n\nWindows 10/11\n\nRStudio-2022.07.1-554.exe(opens in a new tab)\n\n190.14 MB\n5ab6215b\n\n\nmacOS 10.15+\n\nRStudio-2022.07.1-554.dmg(opens in a new tab)\n\n221.04 MB\n7b1a2285\n\n\nUbuntu 18+/Debian 10+\n\nrstudio-2022.07.1-554-amd64.deb(opens in a new tab)\n\n132.91 MB\n74b9e751\n\n\nUbuntu 22\n\nrstudio-2022.07.1-554-amd64.deb(opens in a new tab)\n\n145.33 MB\n92f2ab75\n\n\nFedora 19/Red Hat 7\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n103.29 MB\n0fc15d16\n\n\nFedora 34/Red Hat 8\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n149.77 MB\n0c4ef334\n\n\nOpenSUSE 15\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n133.76 MB\n45f277d0\n\n\n\n\n\nMarkdown documents can be edited in either source or visual button at the top-right of the document toolbar (or alternatively the ⌘ + ⇧ + F4 keyboard shortcut):\n\n\nPlease see long section of the guide.\n\nIf you have a workflow that involves editing in both visual and source mode, you may want to ensure that the same markdown is written no matter which mode edits originate from. You can accomplish this using the canonical option. For example:\n---\ntitle: \"My Document\"\neditor_options:\n  markdown:\n    wrap: 72\n    references: \n      location: block\n    canonical: true\n---\n\nThe editor toolbar includes buttons for the most commonly used formatting commands:\n\nAdditional commands are available on the Format, Insert, and Table menus:\n\n\n\n\n\n\n\n\n\n\n\n\nCommand\nKeyboard Shortcut\nMarkdown Shortcut\n\n\n\nBold\n⌘ B\n**bold**\n\n\nItalic\n⌘ I\n*italic*\n\n\nCode\n⌘ D\n`code`\n\n\nLink\n⌘ K\n<href>\n\n\nHeading 1\n⌥⌘ 1\n#\n\n\nHeading 2\n⌥⌘ 2\n##\n\n\nHeading 3\n⌥⌘ 3\n###\n\n\nR Code Chunk\n⌥⌘ I\n```{r}\n\n\n\nYou can also use the catch-all ⌘/ shortcut to insert just about anything. Just execute the shortcut then type what you want to insert. For example:\nUse the bullet\n\nOutput\n\nOr numbered\n\nNumber list!\n\nHere’s a link - how to turn into an image?\n\nEXAMPLE LINK: https://rstudio.github.io/visual-markdown-editing/images/visual-editing-omni-list.png"
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html#equations",
    "href": "content/posts/03-computation/visual-editor.html#equations",
    "title": "Visual Editor for Quarto",
    "section": "Equations",
    "text": "Equations\nLaTeX equations are authored using standard Pandoc markdown syntax (the editor will automatically recognize the syntax and treat the equation as math). When you aren’t directly editing an equation it will appear as rendered math:\n\\[\nP(E) = {n \\choose k} p^k (2-p)^{n-k}\n\\]\n\nFootnotes\n\nYou can include footnotes using the Insert -> Footnote command (or the ⇧ ⌘ F7 keyboard shortcut). Footnote editing occurs in a pane immediately below the main document:1 <- NOTE THE FOOTMARK"
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html#inserting-citations",
    "href": "content/posts/03-computation/visual-editor.html#inserting-citations",
    "title": "Visual Editor for Quarto",
    "section": "Inserting Citations",
    "text": "Inserting Citations\nYou insert citations by either using the Insert -> Citation command or by using markdown syntax directly (e.g. [@cite]).\nCitations go inside square brackets and are separated by semicolons. Each citation must have a key, composed of ‘@’ + the citation identifier from the database, and may optionally have a prefix, a locator, and a suffix. The citation key must begin with a letter, digit, or _, and may contain alphanumerics, _, and internal punctuation characters (:.#$%&-+?<>~/). Here are some examples:\n\n(Rottman-Sagebiel et al. 2018)\nDEMO OF CITATION WITH INSERT"
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html#embedded-code",
    "href": "content/posts/03-computation/visual-editor.html#embedded-code",
    "title": "Visual Editor for Quarto",
    "section": "Embedded Code",
    "text": "Embedded Code\nSource code which you include in an Quarto document can either by for display only or can be executed by knitr as part of rendering. Code can furthermore be either inline or block (e.g. an Rmd code chunk).\nDisplaying Code\nTo display but not execute code, either use the Insert -> Code Block menu item, or start a new line and type either:\n\n``` (for a plain code block); or\n```<lang> (where <lang> is a language) for a code block with syntax highlighting.\n\nThen press the Enter key. To display code inline, simply surround text with backticks (`code`), or use the Format -> Code menu item.\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %>% \n  ggplot(aes(x = body_weight_g, y = flipper_length_mm, color = species)) +\n  geom_point()\nCode Chunks\nTo insert an executable code chunk, use the Insert -> Code Chunk menu item, or start a new line and type:\n```{r}\nThen press the Enter key. Note that r could be another language supported by knitr (e.g. python or sql) and you can also include a chunk label and other chunk options.\nTo include inline R code, you just create normal inline code (e.g. by using backticks or the ⌘ D shortcut) but preface it with r. For example, this inline code will be executed by knitr: 2023-01-05. Note that when the code displays in visual mode it won’t have the backticks (but they will still appear in source mode).\n\npenguin_plot <- penguins %>% \n  na.omit() %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_point(aes(color = species)) +\n  labs(title = \"Important Penguins\") +\n  geom_smooth(method = \"lm\", color = \"black\")\n\npenguin_plot\n\n\n\n\nR generated Tables\n\nlibrary(gt)\n\npenguins %>% \n  na.omit() %>% \n  select(species, bill_length_mm, body_mass_g) %>% \n  head() %>% \n  gt()\n\n\n\n\n\n\nspecies\n      bill_length_mm\n      body_mass_g\n    \n\n\nAdelie\n39.1\n3750\n\n\nAdelie\n39.5\n3800\n\n\nAdelie\n40.3\n3250\n\n\nAdelie\n36.7\n3450\n\n\nAdelie\n39.3\n3650\n\n\nAdelie\n38.9\n3625\n\n\n\n\n\n\n\nlibrary(reactable)\npenguins %>% \n  filter(species == \"Adelie\") %>% \n  na.omit() %>% \n  select(species, bill_length_mm, body_mass_g) %>% \n  reactable(defaultPageSize = 5)"
  },
  {
    "objectID": "content/posts/04-static/bootswatch-themed.html",
    "href": "content/posts/04-static/bootswatch-themed.html",
    "title": "Bootswatch Themed QMD",
    "section": "",
    "text": "Plots\nThis is the world’s most amazing plot. Everyone loves penguins.\nPenguins are fancy.\nThere are 344 in the dataset of interest.\n\nShow the codepenguins %>% \n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point()\n\n\n\n\nYou can also include tables. Tables are super cool. I love tables and I love penguins. I am subject to oversight by the penguin overlords. The eternals are friends with the penguins.\n\nShow the codepenguins %>% \n  na.omit() %>% \n  group_by(species, sex) %>% \n  rename(\n    body_mass = body_mass_g, bill_length = bill_length_mm, \n    bill_depth = bill_depth_mm\n    ) %>% \n  summarise(\n    n = n(),\n    across(\n      .cols = c(body_mass, bill_length, bill_depth),\n      .fns = list(mean = mean, sd = sd)\n    ),\n    .groups = \"drop\"\n  ) %>% \n  gt(rowname_col = \"sex\") %>% \n  cols_label(\n    n = \"N\", body_mass_mean = \"Mean\", body_mass_sd = \"SD\", \n    bill_length_mean= \"Mean\", bill_length_sd = \"SD\",\n    bill_depth_mean = \"Mean\", bill_depth_sd = \"SD\"\n    ) %>% \n  gt::tab_spanner(\n    label = \"Body Mass (g)\",\n    columns = 4:5\n  ) %>% \n  gt::tab_spanner(\n    label = \"Bill Length (mm)\",\n    columns = 6:7\n  ) %>% \n  gt::tab_spanner(\n    label = \"Bill Depth (mm)\",\n    columns = 8:9\n  ) %>% \n  fmt_number(\n    columns = c(where(is.numeric), -n)\n  )\n\n\n\n\n\n\n\n\n      species\n      N\n      \n        Body Mass (g)\n      \n      \n        Bill Length (mm)\n      \n      \n        Bill Depth (mm)\n      \n    \n\nMean\n      SD\n      Mean\n      SD\n      Mean\n      SD\n    \n\n\n\nfemale\nAdelie\n73\n3,368.84\n269.38\n37.26\n2.03\n17.62\n0.94\n\n\nmale\nAdelie\n73\n4,043.49\n346.81\n40.39\n2.28\n19.07\n1.02\n\n\nfemale\nChinstrap\n34\n3,527.21\n285.33\n46.57\n3.11\n17.59\n0.78\n\n\nmale\nChinstrap\n34\n3,938.97\n362.14\n51.09\n1.56\n19.25\n0.76\n\n\nfemale\nGentoo\n58\n4,679.74\n281.58\n45.56\n2.05\n14.24\n0.54\n\n\nmale\nGentoo\n61\n5,484.84\n313.16\n49.47\n2.72\n15.72\n0.74"
  },
  {
    "objectID": "content/posts/04-static/old-rmarkdown.html",
    "href": "content/posts/04-static/old-rmarkdown.html",
    "title": "Old Markdown - reactable example",
    "section": "",
    "text": "This is an example from reactable documentation - showing the Twitter followers of some politicians.\nExample adapted from {reactable} documentation\n\nlibrary(reactable)\nlibrary(htmltools)\nlibrary(dplyr)\n\ndata <- read.csv(\"https://glin.github.io/reactable/articles/twitter-followers/twitter_followers.csv\",\n                 stringsAsFactors = FALSE)\n\n# Render a bar chart with a label on the left\nbar_chart <- function(label, width = \"100%\", height = \"14px\", fill = \"#00bfc4\", background = NULL) {\n  bar <- div(style = list(background = fill, width = width, height = height))\n  chart <- div(style = list(flexGrow = 1, marginLeft = \"6px\", background = background), bar)\n  div(style = list(display = \"flex\", alignItems = \"center\"), label, chart)\n}\n\ntbl <- reactable(\n  data,\n  pagination = FALSE,\n  defaultSorted = \"exclusive_followers_pct\",\n  defaultColDef = colDef(headerClass = \"header\", align = \"left\"),\n  columns = list(\n    account = colDef(\n      cell = function(value) {\n        url <- paste0(\"https://twitter.com/\", value)\n        tags$a(href = url, target = \"_blank\", paste0(\"@\", value))\n      },\n      width = 150\n    ),\n    followers = colDef(\n      defaultSortOrder = \"desc\",\n      cell = function(value) {\n        width <- paste0(value * 100 / max(data$followers), \"%\")\n        value <- format(value, big.mark = \",\")\n        value <- format(value, width = 9, justify = \"right\")\n        bar <- div(\n          class = \"bar-chart\",\n          style = list(marginRight = \"6px\"),\n          div(class = \"bar\", style = list(width = width, backgroundColor = \"#3fc1c9\"))\n        )\n        div(class = \"bar-cell\", span(class = \"number\", value), bar)\n      }\n    ),\n    exclusive_followers_pct = colDef(\n      name = \"Exclusive Followers\",\n      defaultSortOrder = \"desc\",\n      cell = JS(\"function(cellInfo) {\n        // Format as percentage\n        const pct = (cellInfo.value * 100).toFixed(1) + '%'\n        // Pad single-digit numbers\n        let value = pct.padStart(5)\n        // Show % on first row only\n        if (cellInfo.viewIndex > 0) {\n          value = value.replace('%', ' ')\n        }\n        // Render bar chart\n        return (\n          '<div class=\\\"bar-cell\\\">' +\n            '<span class=\\\"number\\\">' + value + '</span>' +\n            '<div class=\\\"bar-chart\\\" style=\\\"background-color: #e1e1e1\\\">' +\n              '<div class=\\\"bar\\\" style=\\\"width: ' + pct + '; background-color: #fc5185\\\"></div>' +\n            '</div>' +\n          '</div>'\n        )\n      }\"),\n      html = TRUE\n    )\n  ),\n  compact = TRUE,\n  class = \"followers-tbl\"\n)\n\ntbl\n\n\n\n\n\n\n\n# Add Google Fonts to the page\ntags$link(href = \"https://fonts.googleapis.com/css?family=Karla:400,700|Fira+Mono&display=fallback\",\n          rel = \"stylesheet\")\n\n\n\n\n\n/* CSS for the R Markdown document, inserted through a ```{css} code chunk */\n\n/* Styles for the table container, title, and subtitle */\n.twitter-followers {\n  /* Center the table */\n  margin: 0 auto;\n  /* Reduce the table width */\n  width: 575px;\n  font-family: Karla, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.followers-header {\n  margin: 8px 0;\n  font-size: 16px;\n}\n\n.followers-title {\n  font-size: 20px;\n  font-weight: 600;\n}\n\n/* Styles for the table */\n.followers-tbl {\n  font-size: 14px;\n  line-height: 18px;\n}\n\n.followers-tbl a {\n  color: inherit;\n}\n\n/* Styles for the column headers */\n.header {\n  border-bottom: 2px solid #555;\n  font-size: 13px;\n  font-weight: 400;\n  text-transform: uppercase;\n}\n\n.header:hover {\n  background-color: #eee;\n}\n\n/* Styles for the bar charts */\n.bar-cell {\n  display: flex;\n  align-items: center;\n}\n\n.number {\n  font-family: \"Fira Mono\", Consolas, Monaco, monospace;\n  font-size: 13.5px;\n  white-space: pre;\n}\n\n.bar-chart {\n  flex-grow: 1;\n  margin-left: 6px;\n  height: 14px;\n}\n\n.bar {\n  height: 100%;\n}"
  },
  {
    "objectID": "content/posts/04-static/penguin-report.html",
    "href": "content/posts/04-static/penguin-report.html",
    "title": "Penguins Distilled",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth.\n\n\nLiterate Programming\nPer Donald Knuth\n\nA programming paradigm introduced by Donald Knuth in which a computer program is given an explanation of its logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which compilable source code can be generated.\n\nInitial explore\nWe can do a quick exploration of the data with skimr::skim(). This will report the counts of various variables, along with some basic descriptive statistics. The skimr package is fantastic for quickly getting a sense of your datasets.\nAhead of skimr there are 344 penguins in this dataset, and the unique species are Adelie, Gentoo, Chinstrap.\nPer the rOpenSci skimr docs:\n\nskimr provides a frictionless approach to summary statistics which conforms to the principle of least surprise, displaying summary statistics the user can skim quickly to understand their data. It handles different data types and returns a skim_df object which can be included in a pipeline or displayed nicely for the human reader.\n\n\npenguins %>% \n  group_by(species) %>% \n  skimr::skim() %>% \n  select(-contains(\"numeric.p\"))\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n344\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nspecies\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nspecies\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\nisland\nAdelie\n0\n1.00\nFALSE\n3\nDre: 56, Tor: 52, Bis: 44\n\n\nisland\nChinstrap\n0\n1.00\nFALSE\n1\nDre: 68, Bis: 0, Tor: 0\n\n\nisland\nGentoo\n0\n1.00\nFALSE\n1\nBis: 124, Dre: 0, Tor: 0\n\n\nsex\nAdelie\n6\n0.96\nFALSE\n2\nfem: 73, mal: 73\n\n\nsex\nChinstrap\n0\n1.00\nFALSE\n2\nfem: 34, mal: 34\n\n\nsex\nGentoo\n5\n0.96\nFALSE\n2\nmal: 61, fem: 58\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nspecies\nn_missing\ncomplete_rate\nmean\nsd\nhist\n\n\n\nbill_length_mm\nAdelie\n1\n0.99\n38.79\n2.66\n▁▆▇▆▁\n\n\nbill_length_mm\nChinstrap\n0\n1.00\n48.83\n3.34\n▂▇▇▅▁\n\n\nbill_length_mm\nGentoo\n1\n0.99\n47.50\n3.08\n▃▇▆▁▁\n\n\nbill_depth_mm\nAdelie\n1\n0.99\n18.35\n1.22\n▂▆▇▃▁\n\n\nbill_depth_mm\nChinstrap\n0\n1.00\n18.42\n1.14\n▅▇▇▆▂\n\n\nbill_depth_mm\nGentoo\n1\n0.99\n14.98\n0.98\n▅▇▇▆▂\n\n\nflipper_length_mm\nAdelie\n1\n0.99\n189.95\n6.54\n▁▆▇▅▁\n\n\nflipper_length_mm\nChinstrap\n0\n1.00\n195.82\n7.13\n▁▅▇▅▂\n\n\nflipper_length_mm\nGentoo\n1\n0.99\n217.19\n6.48\n▂▇▇▆▃\n\n\nbody_mass_g\nAdelie\n1\n0.99\n3700.66\n458.57\n▅▇▇▃▂\n\n\nbody_mass_g\nChinstrap\n0\n1.00\n3733.09\n384.34\n▁▅▇▃▁\n\n\nbody_mass_g\nGentoo\n1\n0.99\n5076.02\n504.12\n▃▇▇▇▂\n\n\nyear\nAdelie\n0\n1.00\n2008.01\n0.82\n▇▁▇▁▇\n\n\nyear\nChinstrap\n0\n1.00\n2007.97\n0.86\n▇▁▆▁▇\n\n\nyear\nGentoo\n0\n1.00\n2008.08\n0.79\n▆▁▇▁▇\n\n\n\n\n\nSpecific statistics\nWe can also explore specific statistics\nThe penguins split by species show a specific relationship between weight and flipper length, where the Adelie female penguins are the lighest and have the shortest flippers.\n\npenguins %>% \n  group_by(species, sex) %>% \n  summarize(\n    n = n(), \n    weight = mean(body_mass_g, na.rm = TRUE),\n    flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n    ) %>% \n  arrange(desc(weight))\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 5\n# Groups:   species [3]\n  species   sex        n weight flipper_length\n  <fct>     <fct>  <int>  <dbl>          <dbl>\n1 Gentoo    male      61  5485.           222.\n2 Gentoo    female    58  4680.           213.\n3 Gentoo    <NA>       5  4588.           216.\n4 Adelie    male      73  4043.           192.\n5 Chinstrap male      34  3939.           200.\n6 Adelie    <NA>       6  3540            186.\n7 Chinstrap female    34  3527.           192.\n8 Adelie    female    73  3369.           188.\n\n\nLooks like the Adelie are the lightest penguin. I want to see their distribution along with the overall distribution.\n\npenguins %>% \n  filter(is.na(sex))\n\n# A tibble: 11 × 8\n   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 2 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n 3 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n 4 Adelie  Torgersen           37.8          17.1        186    3300 <NA>   2007\n 5 Adelie  Torgersen           37.8          17.3        180    3700 <NA>   2007\n 6 Adelie  Dream               37.5          18.9        179    2975 <NA>   2007\n 7 Gentoo  Biscoe              44.5          14.3        216    4100 <NA>   2007\n 8 Gentoo  Biscoe              46.2          14.4        214    4650 <NA>   2008\n 9 Gentoo  Biscoe              47.3          13.8        216    4725 <NA>   2009\n10 Gentoo  Biscoe              44.5          15.7        217    4875 <NA>   2009\n11 Gentoo  Biscoe              NA            NA           NA      NA <NA>   2009\n# … with abbreviated variable names ¹​flipper_length_mm, ²​body_mass_g\n\n\n\nsmaller <- palmerpenguins::penguins %>% \n  filter(species == \"Adelie\", \n         !is.na(body_mass_g))\n\nCleanup the data\nIf you noticed above, there was some NA or missing data. We can remove those rows for now.\n\npenguins_clean <- penguins %>% \n  na.omit() %>% \n  mutate(species_num = as.numeric(species))\n\nPlot Section\nLet’s move on to some plots, for the overall distributions and for just the Adelie penguins. The overall distribution of the data by species shows some overlap in body weight for Adelie/Chinstrap, but more of a separation for the Gentoo penguins.\n\npenguins %>% \n  ggplot(aes(body_mass_g, fill = species)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Penguin Bins\")\n\n\n\n\nWhen we compare just within the Adelie penguins, we can see more of a specific separation of male vs female. However, there is still a decent amount of overlapping data.\n\npenguin_plot <- smaller %>% \n  filter(!is.na(sex)) %>% \n  ggplot(aes(body_mass_g, fill = sex)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n    scale_fill_manual(values = c(\"darkorange\",\"purple\")) +\n  labs(x = \"Penguin Bins\")\n\npenguin_plot\n\n\n\n\nLastly we can fit a basic linear model comparing body weight in grams to the flipper length of the penguins by specific species. There is a strong linear relationship, although it’s a bit difficult to distinguish between Chinstrap and Adelie penguins.\n\npenguin_size_plot <- penguins_clean %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = species)) + \n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  geom_point(size = 2, alpha = 0.5) +\n  labs(x = \"Mass (g)\", y = \"Flipper Length (mm)\") +\n  geom_smooth(aes(group = \"none\"), method = \"lm\")\n\npenguin_size_plot\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nWe can save the overall distribution and the linear model plot.\n\nggsave(\"penguin-dist.png\", penguin_plot, \n  dpi = \"retina\", height = 8, width = 8)\n\nggsave(\"penguin-smooth.png\", penguin_size_plot, \n  dpi = \"retina\", height = 8, width = 8)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nModeling section\nMoving on to some basic modeling we can see if what kind of relationships we observe in the data. Note that I’m really not following any plan, just indicating how you can fit some different models all at once with dplyr + broom.\n\nmodel_inputs <- tibble(\n  model_form = c(\n    list(flipper_length_mm ~ body_mass_g),\n    list(species_num ~ bill_length_mm + body_mass_g + sex),\n    list(flipper_length_mm ~ bill_length_mm + species)\n    ),\n  data = list(penguins_clean)\n) \n\nmodel_metrics <- model_inputs %>% \n  rowwise(model_form, data) %>% \n  summarize(lm = list(lm(model_form, data = data)), .groups = \"drop\") %>% \n  rowwise(model_form, lm, data) %>% \n  summarise(broom::glance(lm), .groups = \"drop\")\n\nWrap up\nWe can then take the model outcomes and throw them into a quick gt table.\n\nmodel_metrics %>% \n  select(model_form, r.squared:p.value) %>% \n  mutate(model_form = as.character(model_form)) %>% \n  gt::gt() %>% \n  gt::fmt_number(r.squared:statistic) %>% \n  gt::fmt_scientific(p.value) %>% \n  gt::cols_width(\n    model_form ~ px(150)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodel_form\n      r.squared\n      adj.r.squared\n      sigma\n      statistic\n      p.value\n    \n\n\nflipper_length_mm ~ body_mass_g\n0.76\n0.76\n6.85\n1,060.30\n3.13 × 10−105\n\n\n\nspecies_num ~ bill_length_mm + body_mass_g + sex\n0.84\n0.84\n0.36\n583.59\n2.45 × 10−131\n\n\n\nflipper_length_mm ~ bill_length_mm + species\n0.83\n0.83\n5.83\n529.22\n1.66 × 10−125\n\n\n\n\n\n\n\nOverall, this was a quick overview of the beauty of literate programming. We have R code that is self-documenting, as we capture our thoughts and the outputs in a single document. We know at some level that the code works since it “logs” the outputs at various stages and could still output to additional log files. To render it has to run successfully in a linear fashion, and it is human readable as code, via the visual editor or even in version control like Git!"
  },
  {
    "objectID": "content/posts/05-presentations/fragments.html#make-these-columns-appear-in-order",
    "href": "content/posts/05-presentations/fragments.html#make-these-columns-appear-in-order",
    "title": "Presentation with Columns?",
    "section": "Make these columns appear in order",
    "text": "Make these columns appear in order\n\n\nThese appear first\n\nMake\nYour\nList\n\n\nThen this\n\n```{r}\nhead(mtcars)\n```\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#section",
    "href": "content/posts/05-presentations/revealjs-penguins.html#section",
    "title": "Penguin Report Presentation",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#literate-programming",
    "href": "content/posts/05-presentations/revealjs-penguins.html#literate-programming",
    "title": "Penguin Report Presentation",
    "section": "Literate Programming",
    "text": "Literate Programming\nPer Donald Knuth\n\nA programming paradigm introduced by Donald Knuth in which a computer program is given an explanation of its logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which compilable source code can be generated."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#specific-statistics",
    "href": "content/posts/05-presentations/revealjs-penguins.html#specific-statistics",
    "title": "Penguin Report Presentation",
    "section": "Specific statistics",
    "text": "Specific statistics\n\npenguins %>% \n  group_by(species, sex) %>% \n  summarize(\n    n = n(), \n    weight = mean(body_mass_g, na.rm = TRUE),\n    flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n    ) %>% \n  arrange(desc(weight))\n\n# A tibble: 8 × 5\n# Groups:   species [3]\n  species   sex        n weight flipper_length\n  <fct>     <fct>  <int>  <dbl>          <dbl>\n1 Gentoo    male      61  5485.           222.\n2 Gentoo    female    58  4680.           213.\n3 Gentoo    <NA>       5  4588.           216.\n4 Adelie    male      73  4043.           192.\n5 Chinstrap male      34  3939.           200.\n6 Adelie    <NA>       6  3540            186.\n7 Chinstrap female    34  3527.           192.\n8 Adelie    female    73  3369.           188."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#cleanup-the-data",
    "href": "content/posts/05-presentations/revealjs-penguins.html#cleanup-the-data",
    "title": "Penguin Report Presentation",
    "section": "Cleanup the data",
    "text": "Cleanup the data\nIf you noticed above, there was some NA or missing data. We can remove those rows for now.\n\npenguins_clean <- penguins %>% \n  na.omit() %>% \n  mutate(species_num = as.numeric(species))"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#plot-section",
    "href": "content/posts/05-presentations/revealjs-penguins.html#plot-section",
    "title": "Penguin Report Presentation",
    "section": "Plot Section",
    "text": "Plot Section\nLet’s move on to some plots, for the overall distributions and for just the Adelie penguins. The overall distribution of the data by species shows some overlap in body weight for Adelie/Chinstrap, but more of a separation for the Gentoo penguins."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#distribution",
    "href": "content/posts/05-presentations/revealjs-penguins.html#distribution",
    "title": "Penguin Report Presentation",
    "section": "Distribution",
    "text": "Distribution\n\npenguins %>% \n  ggplot(aes(body_mass_g, fill = species)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Penguin Bins\")"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#lm-scatter-plot",
    "href": "content/posts/05-presentations/revealjs-penguins.html#lm-scatter-plot",
    "title": "Penguin Report Presentation",
    "section": "LM + Scatter Plot",
    "text": "LM + Scatter Plot\n\npenguin_size_plot <- penguins_clean %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = species)) + \n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  geom_point(size = 2, alpha = 0.5) +\n  labs(x = \"Mass (g)\", y = \"Flipper Length (mm)\") +\n  geom_smooth(aes(group = \"none\"), method = \"lm\")\n\npenguin_size_plot"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#modeling-section",
    "href": "content/posts/05-presentations/revealjs-penguins.html#modeling-section",
    "title": "Penguin Report Presentation",
    "section": "Modeling section",
    "text": "Modeling section\nMoving on to some basic modeling we can see if what kind of relationships we observe in the data. Note that I’m really not following any plan, just indicating how you can fit some different models all at once with dplyr + broom."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#section-1",
    "href": "content/posts/05-presentations/revealjs-penguins.html#section-1",
    "title": "Penguin Report Presentation",
    "section": "",
    "text": "model_inputs <- tibble(\n  model_form = c(\n    list(flipper_length_mm ~ body_mass_g),\n    list(species_num ~ bill_length_mm + body_mass_g + sex),\n    list(flipper_length_mm ~ bill_length_mm + species)\n    ),\n  data = list(penguins_clean)\n) \n\nmodel_metrics <- model_inputs %>% \n  rowwise(model_form, data) %>% \n  summarize(lm = list(lm(model_form, data = data)), .groups = \"drop\") %>% \n  rowwise(model_form, lm, data) %>% \n  summarise(broom::glance(lm), .groups = \"drop\")"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#section-2",
    "href": "content/posts/05-presentations/revealjs-penguins.html#section-2",
    "title": "Penguin Report Presentation",
    "section": "",
    "text": "model_metrics %>% \n  select(model_form, r.squared:p.value) %>% \n  mutate(model_form = as.character(model_form)) %>% \n  gt::gt() %>% \n  gt::fmt_number(r.squared:statistic) %>% \n  gt::fmt_scientific(p.value) %>% \n  gt::cols_width(\n    model_form ~ px(150)\n  )\n\n\n\n\n\n  \n    \n    \n    \n    \n    \n    \n  \n  \n  \n    \n      model_form\n      r.squared\n      adj.r.squared\n      sigma\n      statistic\n      p.value\n    \n  \n  \n    flipper_length_mm ~ body_mass_g\n0.76\n0.76\n6.85\n1,060.30\n3.13 × 10−105\n    species_num ~ bill_length_mm + body_mass_g + sex\n0.84\n0.84\n0.36\n583.59\n2.45 × 10−131\n    flipper_length_mm ~ bill_length_mm + species\n0.83\n0.83\n5.83\n529.22\n1.66 × 10−125"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout-2.html",
    "href": "content/posts/07-visuals/figure-layout-2.html",
    "title": "Figure Layouts-2",
    "section": "",
    "text": "::: {#fig-bostons layout-nrow=2}\n\n![Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\n![Still Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Still sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard, twice\n\n:::"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout-2.html#subfigures-1",
    "href": "content/posts/07-visuals/figure-layout-2.html#subfigures-1",
    "title": "Figure Layouts-2",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\n\n\n\n\nStill Excited\n\n\n\n\n\n\nStill sleeping\n\n\n\n\nFigure 1: Two states of Howard, twice"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout-2.html#subfigures-2",
    "href": "content/posts/07-visuals/figure-layout-2.html#subfigures-2",
    "title": "Figure Layouts-2",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\nExcited\n\n\n\n\n\n\nSleeping\n\n\n\n\n\n\nStill Excited\n\n\n\n\n\n\n\n\nStill sleeping\n\n\n\n\nTwo states of Howard, twice"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html",
    "href": "content/posts/07-visuals/figure-layout.html",
    "title": "Figure Layout",
    "section": "",
    "text": "library(ggplot2)"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html#figures",
    "href": "content/posts/07-visuals/figure-layout.html#figures",
    "title": "Figure Layout",
    "section": "Figures",
    "text": "Figures\nBasic markdown syntax:\n         ![Boston Terrier](boston-terrier.png)\n\n\nBoston Terrier"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html#fragments",
    "href": "content/posts/07-visuals/figure-layout.html#fragments",
    "title": "Figure Layout",
    "section": "Fragments",
    "text": "Fragments\n\n\n       ![Boston terrier](boston-terrier.png){fig-align=\"left\"}\n\n\n\n ![](boston-terrier.png){fig-align=\"right\" fig-alt=\"A photo a Boston Terrier.\"}"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html#subfigures",
    "href": "content/posts/07-visuals/figure-layout.html#subfigures",
    "title": "Figure Layout",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n![Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard\n\n\n\nFigure 1: ?(caption)"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html#subfigures-1",
    "href": "content/posts/07-visuals/figure-layout.html#subfigures-1",
    "title": "Figure Layout",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\nFigure 2: Two states of Howard"
  },
  {
    "objectID": "content/posts/07-visuals/figure-layout.html#custom-grid",
    "href": "content/posts/07-visuals/figure-layout.html#custom-grid",
    "title": "Figure Layout",
    "section": "Custom grid",
    "text": "Custom grid\n\n\nThis column takes 1/2 of the page\n\nggplot(mtcars, aes(x = cyl, y = disp)) +\n  geom_boxplot()\n\nWarning: Continuous x aesthetic\nℹ did you forget `aes(group = ...)`?\n\n\n\n\n\n\n\nThis column takes 1/2 of the page\n\nhead(mtcars, 5)[1:4] |> knitr::kable()\n\n\n\n\nmpg\ncyl\ndisp\nhp\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n\n\nDatsun 710\n22.8\n4\n108\n93\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n\n\nHornet Sportabout\n18.7\n8\n360\n175"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#introduction",
    "href": "content/posts/07-visuals/gt-summary.html#introduction",
    "title": "Overview of using gtsummary\n",
    "section": "Introduction",
    "text": "Introduction\nReproducible reports are an important part of good practices. We often need to report the results from a table in the text of an Quarto report. Inline reporting has been made simple with inline_text(). The inline_text() function reports statistics from {gtsummary} tables inline in an Quarto report."
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#setup",
    "href": "content/posts/07-visuals/gt-summary.html#setup",
    "title": "Overview of using gtsummary\n",
    "section": "Setup",
    "text": "Setup\nBefore going through the tutorial, install and load {gtsummary}.\n\n# install.packages(\"gtsummary\")\nlibrary(gtsummary)"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#example-data-set",
    "href": "content/posts/07-visuals/gt-summary.html#example-data-set",
    "title": "Overview of using gtsummary\n",
    "section": "Example data set",
    "text": "Example data set\nWe’ll be using the trial data set throughout this example.\n\nThis set contains data from 200 patients who received one of two types of chemotherapy (Drug A or Drug B). The outcomes are tumor response and death.\n\nFor brevity in the tutorial, let’s keep a subset of the variables from the trial data set.\n\ntrial2 <-\n  trial %>%\n  select(trt, marker, stage)"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_summary",
    "href": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_summary",
    "title": "Overview of using gtsummary\n",
    "section": "Inline results from tbl_summary()",
    "text": "Inline results from tbl_summary()\nFirst create a basic summary table using tbl_summary() (review tbl_summary() vignette for detailed overview of this function if needed).\n\ntab1 <- tbl_summary(trial2, by = trt)\ntab1\n\n\n\n\n\n\nCharacteristic\n      \nDrug A, N = 981\n\n      \nDrug B, N = 1021\n\n    \n\n\nMarker Level (ng/mL)\n0.84 (0.24, 1.57)\n0.52 (0.19, 1.20)\n\n\n    Unknown\n6\n4\n\n\nT Stage\n\n\n\n\n    T1\n28 (29%)\n25 (25%)\n\n\n    T2\n25 (26%)\n29 (28%)\n\n\n    T3\n22 (22%)\n21 (21%)\n\n\n    T4\n23 (23%)\n27 (26%)\n\n\n\n\n1 Median (IQR); n (%)\n    \n\n\n\n\nTo report the median (IQR) of the marker levels in each group, use the following commands inline.\n\nThe median (IQR) marker level in the Drug A and Drug B groups are 0.84 (0.24, 1.57) and 0.52 (0.19, 1.20), respectively. Here’s how the line will appear in your report.\n\n\nThe median (IQR) marker level in the Drug A and Drug B groups are 0.84 (0.24, 1.57) and 0.52 (0.19, 1.20), respectively. If you display a statistic from a categorical variable, include the level argument.\n\n\n25 (25%) resolves to “25 (25%)”"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_regression",
    "href": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_regression",
    "title": "Overview of using gtsummary\n",
    "section": "Inline results from tbl_regression()",
    "text": "Inline results from tbl_regression()\nSimilar syntax is used to report results from tbl_regression() and tbl_uvregression() tables. Refer to the tbl_regression() vignette if you need detailed guidance on using these functions.\nLet’s first create a regression model.\n\n# build logistic regression model\nm1 <- glm(response ~ age + stage, trial, family = binomial(link = \"logit\"))\n\nNow summarize the results with tbl_regression(); exponentiate to get the odds ratios.\n\ntbl_m1 <- tbl_regression(m1, exponentiate = TRUE)\ntbl_m1\n\n\n\n\n\n\nCharacteristic\n      \nOR1\n\n      \n95% CI1\n\n      p-value\n    \n\n\nAge\n1.02\n1.00, 1.04\n0.091\n\n\nT Stage\n\n\n\n\n\n    T1\n—\n—\n\n\n\n    T2\n0.58\n0.24, 1.37\n0.2\n\n\n    T3\n0.94\n0.39, 2.28\n0.9\n\n\n    T4\n0.79\n0.33, 1.90\n0.6\n\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval\n    \n\n\n\n\nTo report the result for age, use the following commands inline.\n\n1.02 (95% CI 1.00, 1.04; p=0.091) Here’s how the line will appear in your report.\n\n\n1.02 (95% CI 1.00, 1.04; p=0.091) It is reasonable that you’ll need to modify the text. To do this, use the pattern argument. The pattern argument syntax follows glue::glue() format with referenced R objects being inserted between curly brackets. The default is pattern = \"{estimate} ({conf.level*100}% CI {conf.low}, {conf.high}; {p.value})\". You have access the to following fields within the pattern argument.\n\n\n\n\n\n\n\n\nParameter\n      Description\n    \n\n\n\n{estimate}\n\nprimary estimate (e.g. model coefficient, odds ratio)\n\n\n\n{conf.low}\n\nlower limit of confidence interval\n\n\n\n{conf.high}\n\nupper limit of confidence interval\n\n\n\n{p.value}\n\np-value\n\n\n\n{conf.level}\n\nconfidence level of interval\n\n\n\n{N}\n\nnumber of observations\n\n\n\n\n\n\n\nAge was not significantly associated with tumor response (OR 1.02; 95% CI 1.00, 1.04; p=0.091). Age was not significantly associated with tumor response (OR 1.02; 95% CI 1.00, 1.04; p=0.091). If you’re printing results from a categorical variable, include the level argument, e.g. inline_text(tbl_m1, variable = stage, level = \"T3\") resolves to “0.94 (95% CI 0.39, 2.28; p=0.9)”.\n\nThe inline_text function has arguments for rounding the p-value (pvalue_fun) and the coefficients and confidence interval (estimate_fun). These default to the same rounding performed in the table, but can be modified when reporting inline.\nFor more details about inline code, review to the RStudio documentation page."
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html",
    "href": "content/posts/07-visuals/plot-layout.html",
    "title": "Plot Layout",
    "section": "",
    "text": "library(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union"
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html#figure-layout-ncol",
    "href": "content/posts/07-visuals/plot-layout.html#figure-layout-ncol",
    "title": "Plot Layout",
    "section": "Figure layout, ncol",
    "text": "Figure layout, ncol\n\n```{r}\n#| layout-ncol: 2\n#| fig-cap:\n#|   - \"Speed and Stopping Distances of Cars\"\n#|   - \"Engine displacement and fuel efficiency in Cars\"\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n\n\n\n\nSpeed and Stopping Distances of Cars\n\n\n\n\n\n\nEngine displacement and fuel efficiency in Cars"
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html#subcaptions",
    "href": "content/posts/07-visuals/plot-layout.html#subcaptions",
    "title": "Plot Layout",
    "section": "Subcaptions:",
    "text": "Subcaptions:\n\n```{r}\n#| label: fig-charts\n#| fig-cap: Charts\n#| fig-subcap:\n#|   - \"Cars\"\n#|   - \"mtcars\"\n#| layout-ncol: 2\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n\n\n\n\n(a) Cars\n\n\n\n\n\n\n(b) mtcars\n\n\n\n\nFigure 1: Charts"
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html#figure-layout-custom",
    "href": "content/posts/07-visuals/plot-layout.html#figure-layout-custom",
    "title": "Plot Layout",
    "section": "Figure layout, custom",
    "text": "Figure layout, custom\n\n```{r}\n#| layout: [[45,-10, 45], [50, 50]]\n#| fig-height: 5\n#| fig-align: center\n#| message: false\n#| warning: false\n#| dpi: 300\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_smooth() +\n  theme(text = element_text(size = 20))\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()+\n  theme(text = element_text(size = 20))\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()+\n  theme(text = element_text(size = 20))\n\nmtcars %>% \n  ggplot(aes(x = cyl, y = mpg, group = cyl, color = factor(cyl))) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme(legend.position = \"none\")+\n  theme(text = element_text(size = 20))\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html",
    "href": "content/posts/07-visuals/plots.html",
    "title": "Plots",
    "section": "",
    "text": "library(palmerpenguins)\nlibrary(ggplot2)\nggplot2::theme_set(ggplot2::theme_minimal())\npenguins <- na.omit(penguins)"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#ggplot2",
    "href": "content/posts/07-visuals/plots.html#ggplot2",
    "title": "Plots",
    "section": "ggplot2",
    "text": "ggplot2\nCredit to Alison Hill + Allison Horst\n\n```{r}\nmass_flipper <- ggplot(data = penguins, \n                       aes(x = flipper_length_mm,\n                           y = body_mass_g)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin size, Palmer Station LTER\",\n       subtitle = \"Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins\",\n       x = \"Flipper length (mm)\",\n       y = \"Body mass (g)\",\n       color = \"Penguin species\",\n       shape = \"Penguin species\") +\n  theme(legend.position = c(0.2, 0.7),\n        plot.title.position = \"plot\",\n        plot.caption = element_text(hjust = 0, face= \"italic\"),\n        plot.caption.position = \"plot\",\n        plot.background = element_rect(color = \"black\"))\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#basic-plot",
    "href": "content/posts/07-visuals/plots.html#basic-plot",
    "title": "Plots",
    "section": "Basic plot",
    "text": "Basic plot\n\n```{r}\nmass_flipper\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#basic-plot-1",
    "href": "content/posts/07-visuals/plots.html#basic-plot-1",
    "title": "Plots",
    "section": "Basic plot",
    "text": "Basic plot\nIncreasing the width/DPI only affects the scaling of the image, it will not overflow.\n\n```{r}\n#| fig-width: 10\n#| fig-height: 4\n#| fig-dpi: 600\nmass_flipper\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#aside",
    "href": "content/posts/07-visuals/plots.html#aside",
    "title": "Plots",
    "section": "Aside",
    "text": "Aside\n\n\n\n\n\n\nThe palmerpenguins R package contains two datasets that we believe are a viable alternative to Anderson’s Iris data (see datasets::iris). In this introductory vignette, we’ll highlight some of the properties of these datasets that make them useful for statistics and data science education, as well as software documentation and testing."
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#overflow-content",
    "href": "content/posts/07-visuals/plots.html#overflow-content",
    "title": "Plots",
    "section": "Overflow Content",
    "text": "Overflow Content\nThere are many options for overflow, either left/right\n\n```{r}\n#| column: body-outset-right\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: screen-inset-right\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: page-inset-left\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: screen-left\n#| fig-width: 10\nmass_flipper\n```"
  },
  {
    "objectID": "content/posts/07-visuals/stat-html.html",
    "href": "content/posts/07-visuals/stat-html.html",
    "title": "gtsummary + R Markdown",
    "section": "",
    "text": "library(gtsummary)\nlibrary(tidyverse)\nlibrary(survival)"
  },
  {
    "objectID": "content/posts/07-visuals/stat-html.html#gtsummary-tables",
    "href": "content/posts/07-visuals/stat-html.html#gtsummary-tables",
    "title": "gtsummary + R Markdown",
    "section": "gtsummary tables",
    "text": "gtsummary tables\nTables created with {gtsummary} can be integrated into R markdown documents. The {gtsummary} package was written to be a companion to the {gt} package from RStudio, and {gtsummary} tables are printed using {gt} when possible. Currently, {gt} supports HTML output, with LaTeX and RTF planned for the future.\n\npatient_characteristics <-\n  trial %>%\n  select(trt, age, grade, response) %>%\n  tbl_summary(by = trt)  \npatient_characteristics\n\n\n\n\n\n\nCharacteristic\n      \nDrug A, N = 981\n\n      \nDrug B, N = 1021\n\n    \n\n\nAge\n46 (37, 59)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n\n1 Median (IQR); n (%)\n    \n\n\n\n\nWith HTML output, you can include complex tables with footnotes, indentation, and spanning table headers.\n\n# Side-by-side Regression Models\n# logistic regression model\nt1 <-\n  glm(response ~ trt + grade + age, trial, family = binomial) %>%\n  tbl_regression(exponentiate = TRUE)\n# time to death Cox model\nt2 <-\n  coxph(Surv(ttdeath, death) ~ trt + grade + age, trial) %>%\n  tbl_regression(exponentiate = TRUE)\n\n# printing merged table\ntbl_merge(\n  tbls = list(t1, t2),\n  tab_spanner = c(\"**Tumor Response**\", \"**Time to Death**\")\n)\n\n\n\n\n\n\n\nCharacteristic\n      \n        Tumor Response\n      \n      \n        Time to Death\n      \n    \n\n\nOR1\n\n      \n95% CI1\n\n      p-value\n      \nHR1\n\n      \n95% CI1\n\n      p-value\n    \n\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n\n\n    Drug A\n—\n—\n\n—\n—\n\n\n\n    Drug B\n1.13\n0.60, 2.13\n0.7\n1.30\n0.88, 1.92\n0.2\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n—\n—\n\n—\n—\n\n\n\n    II\n0.85\n0.39, 1.85\n0.7\n1.21\n0.73, 1.99\n0.5\n\n\n    III\n1.01\n0.47, 2.15\n>0.9\n1.79\n1.12, 2.86\n0.014\n\n\nAge\n1.02\n1.00, 1.04\n0.10\n1.01\n0.99, 1.02\n0.3\n\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "content/posts/07-visuals/stat-html.html#inline-reporting",
    "href": "content/posts/07-visuals/stat-html.html#inline-reporting",
    "title": "gtsummary + R Markdown",
    "section": "inline reporting",
    "text": "inline reporting\nAny number/statistic from a {gtsummary} table can be reported inline in a R markdown document using the inline_text() function. See example below:\n\nAmong patients who received Drug A, 31 (32%) had grade III tumors.\n\nFor detailed examples using functions from {gtsummary}, visit the {gtsummary} website."
  },
  {
    "objectID": "content/posts/08-knitr/fa-example.html",
    "href": "content/posts/08-knitr/fa-example.html",
    "title": "Font Awesome Quarto Extension",
    "section": "",
    "text": "This extension allows you to use font-awesome icons in your Quarto HTML and PDF documents. It provides an {{< fa >}} shortcode:\n{{< fa icon-name >}}\nFor example:\n\n\nShortcode\nIcon\n\n\n\n{{< fa thumbs-up >}}\n\n\n\n{{< fa folder >}}\n\n\n\n{{< fa chess-pawn >}}\n\n\n\n{{< fa brands bluetooth >}}"
  },
  {
    "objectID": "content/posts/08-knitr/lightbox-extension.html",
    "href": "content/posts/08-knitr/lightbox-extension.html",
    "title": "Example Lightbox Document",
    "section": "",
    "text": "Here is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "content/posts/08-knitr/lightbox-extension.html#elsewhere",
    "href": "content/posts/08-knitr/lightbox-extension.html#elsewhere",
    "title": "Example Lightbox Document",
    "section": "Elsewhere",
    "text": "Elsewhere\nThe below demonstrates placing more than one image in a gallery. Note the usage of the layout-ncol which arranges the images on the page side by date. Adding the group attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n\n\n\nAquinnah\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\nVineyard lighthouse"
  },
  {
    "objectID": "content/posts/08-knitr/lightbox-extension.html#credits",
    "href": "content/posts/08-knitr/lightbox-extension.html#credits",
    "title": "Example Lightbox Document",
    "section": "Credits",
    "text": "Credits\nThe images in this example were used under the Unsplash license, view originals below:\n\nChilmark Beach\nAquinnah\nGingerbread House\nEdgartown Light\nEdgartown Sailboat"
  },
  {
    "objectID": "content/posts/08-knitr/penguin-params.html",
    "href": "content/posts/08-knitr/penguin-params.html",
    "title": "Penguins Parametric Reports",
    "section": "",
    "text": "We have data about 344 penguins. Only 193 are classified asAdelie. The distribution of the Adelie penguins are shown below:"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html",
    "href": "content/posts/09-using-lordicons/index.html",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "",
    "text": "This is just a compilation of the example files from the Quarto website, so that I can have ready-made code to copy and paste."
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#installation",
    "href": "content/posts/09-using-lordicons/index.html#installation",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Installation",
    "text": "Installation\nType these in your Terminal:\n\nIconify: quarto install extension mcanouil/quarto-iconify\n\nFontAwesome: quarto install extension quarto-ext/fontawesome\n\nLordicons: quarto install extension jmgirard/lordicon\n\nAcademicons: quarto install extension schochastics/academicons\n\n\nThese extensions allows you to use a variety of icons in your Quarto HTML documents."
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-lordicon-shortcodes",
    "href": "content/posts/09-using-lordicons/index.html#using-lordicon-shortcodes",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Lordicon Shortcodes",
    "text": "Using Lordicon Shortcodes\nThe {{< li >}} shortcode renders an icon (specified by its code) after downloading it the lordicon CDN. The {{< lif >}} shortcode renders an icon (specified by its filepath) from a local .json file. Both shortcodes support the same arguments for customization, described below.\n\n\n\n\n\n\n\nPseudocode\nExample Code\nRendered\n\n\n\n{{< li code >}}\n{{< li wlpxtupd >}}\n\n\n\n{{< lif file >}}\n{{< lif church.json >}}\n\n\n\n\nTriggers\ntrigger controls the icon’s animation type. When using the loop or loop-on-hover triggers, you can also set an optional delay (in ms) between loops.\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{< li wxnxiano >}}\n\n\n\n{{< li wxnxiano trigger=click >}}\n\n\n\n{{< li wxnxiano trigger=hover >}}\n\n\n\n{{< li wxnxiano trigger=loop >}}\n\n\n\n{{< li wxnxiano trigger=loop delay=1000 >}}\n\n\n\n{{< li wxnxiano trigger=loop-on-hover >}}\n\n\n\n{{< li wxnxiano trigger=loop-on-hover delay=1000 >}}\n\n\n\n{{< li wxnxiano trigger=morph >}}\n\n\n\n{{< li wxnxiano trigger=boomerang >}}\n\n\n\nSpeed\nspeed controls how quickly the icon’s animation plays.\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc trigger=loop speed=0.5 >}}\n\n\n\n{{< li lupuorrc trigger=loop speed=1.0 >}}\n\n\n\n{{< li lupuorrc trigger=loop speed=2.0 >}}\n\n\n\nColors\ncolors controls the icon’s coloring. Outline icons typically have just a primary and secondary color, but flat and lineal icons can have many more. Each color should be given in rank:color format (where ranks are primary, secondary, tertiary, etc.) and multiple colors should be separated by commas. Colors can be given in HTML color names or hexcodes.\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc >}}\n\n\n\n{{< li lupuorrc colors=primary:gold >}}\n\n\n\n{{< li lupuorrc colors=primary:gray,secondary:orange >}}\n\n\n\n{{< li lupuorrc colors=primary:#4030e8,secondary:#ee66aa >}}\n\n\n\nStroke\nstroke controls how thick the lines in an icon are.\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc stroke=50 >}}\n\n\n\n{{< li lupuorrc stroke=100 >}}\n\n\n\n{{< li lupuorrc stroke=150 >}}\n\n\n\nScale\nscale controls how large or zoomed in the icon is.\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc scale=25 >}}\n\n\n\n{{< li lupuorrc scale=50 >}}\n\n\n\n{{< li lupuorrc scale=100 >}}\n\n\n\nAxis X\nx controls the horizontal position of the center of the icon.\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc x=25 >}}\n\n\n\n{{< li lupuorrc x=50 >}}\n\n\n\n{{< li lupuorrc x=100 >}}\n\n\n\nAxis Y\ny controls the vertical position of the center of the icon.\n\n\nShortcode\nIcon\n\n\n\n{{< li lupuorrc y=25 >}}\n\n\n\n{{< li lupuorrc y=50 >}}\n\n\n\n{{< li lupuorrc y=100 >}}"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-academicons-shortcodes",
    "href": "content/posts/09-using-lordicons/index.html#using-academicons-shortcodes",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Academicons Shortcodes",
    "text": "Using Academicons Shortcodes\nThis extension allows you to use academicons in your Quarto HTML documents. It provides an {{< ai >}} shortcode:\n\n\nMandatory <icon-name>:\n{{< ai <icon-name> >}}\n\n\nOptional <size=...>:\n{{< ai <icon-name> <size=...> >}}\n\n\nFor example:\n\n\nShortcode\nIcon\n\n\n\n{{< ai arxiv >}}\n\n\n\n{{< ai google-scholar >}}\n\n\n\n{{< ai open-access >}}\n\n\n\n{{< ai open-access size=5x >}}"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-fontawesome-icons",
    "href": "content/posts/09-using-lordicons/index.html#using-fontawesome-icons",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Fontawesome Icons",
    "text": "Using Fontawesome Icons\nThis extension allows you to use font-awesome icons in your Quarto HTML and PDF documents. It provides an {{< fa >}} shortcode:\n\n\nMandatory <icon-name>:\n{{< fa <icon-name> >}}\n\n\nOptional <group>, <size=...>, and <title=...>:\n{{< fa <group> <icon-name> <size=...> <title=...> >}}\n\n\nFor example:\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{< fa thumbs-up >}}\n\n\n\n{{< fa folder >}}\n\n\n\n{{< fa chess-pawn >}}\n\n\n\n{{< fa brands bluetooth >}}\n\n\n\n\n{{< fa brands twitter size=2xl >}} (HTML only)\n\n\n\n\n{{< fa brands github size=5x >}} (HTML only)\n\n\n\n{{< fa battery-half size=Huge >}}\n\n\n\n{{< fa envelope title=\"An envelope\" >}}"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-iconify-shortcodes",
    "href": "content/posts/09-using-lordicons/index.html#using-iconify-shortcodes",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Iconify Shortcodes",
    "text": "Using Iconify Shortcodes\nThis extension allows you to use Iconify icons in your Quarto HTML documents. It provides an {{< iconify >}} shortcode:\n\n\nMandatory <icon-name>:\n{{< iconify <icon-name> >}}\n\n\nOptional <set> (default is fluent-emoji) <size=...>, <width=...>, <height=...>, <flip=...>, and <rotate=...>:\n{{< iconify <set> <icon-name> <size=...> <width=...> <height=...> <flip=...> <rotate=...> >}}\nIf <size=...> is defined, <width=...> and <height=...> are not used.\nSee https://docs.iconify.design/iconify-icon/ for more details.\n\n\nFor example:\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{< iconify exploding-head >}}\n\n\n\n{{< iconify exploding-head size=2xl >}}\n\n\n\n{{< iconify exploding-head size=5x rotate=180deg >}}\n\n\n\n{{< iconify exploding-head size=Huge >}}\n\n\n\n{{< iconify fluent-emoji-high-contrast 1st-place-medal >}}\n\n\n\n{{< iconify twemoji 1st-place-medal >}}\n\n\n\n{{< iconify line-md loading-alt-loop >}}\n\n\n\n{{< iconify fa6-brands apple width=50px height=10px rotate=90deg flip=vertical >}}"
  },
  {
    "objectID": "content/posts/10-using-nutshell/index.html",
    "href": "content/posts/10-using-nutshell/index.html",
    "title": "Nutshell: Expandable Explanations",
    "section": "",
    "text": "Nutshell is a tool to make “expandable explanations”, like this! This lets your readers learn only the details they need, just-in-time, always-in-context.\nUnlike links, Nutshell lets you include only the snippet you need, not the whole page. Plus, instead of being lost in a jungle of new tabs, your reader stays on one page, keeping their flow of reading. Even if you interrupt a sentence, Nutshell recaps the sentence afterwards, so your reader never loses context.\nYou can find more information on the nutshell webpage and here is a live demo !"
  },
  {
    "objectID": "content/posts/10-using-nutshell/index.html#test",
    "href": "content/posts/10-using-nutshell/index.html#test",
    "title": "Nutshell: Expandable Explanations",
    "section": "Test",
    "text": "Test\nThis is a senseless paragraph"
  },
  {
    "objectID": "content/posts/10-using-nutshell/index.html#testing-links",
    "href": "content/posts/10-using-nutshell/index.html#testing-links",
    "title": "Nutshell: Expandable Explanations",
    "section": "Testing Links",
    "text": "Testing Links\n\n:link to senseless paragraph\n\n:link to wikipedia article\n:link to invisible sections"
  },
  {
    "objectID": "content/posts/10-using-nutshell/index.html#x-invisible",
    "href": "content/posts/10-using-nutshell/index.html#x-invisible",
    "title": "Nutshell: Expandable Explanations",
    "section": ":x invisible",
    "text": ":x invisible\nUse ## :x header to include an invisible secion that can be linked to via nutshell"
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html",
    "href": "content/posts/12-tufte-style-article/index.html",
    "title": "A Tufte Handout Example",
    "section": "",
    "text": "The Tufte handout style is a style that Edward Tufte uses in his books and handouts. Tufte’s style is known for its extensive use of sidenotes, tight integration of graphics with text, and well-set typography. This style has been implemented in LaTeX and HTML/CSS1, respectively. We have ported both implementations into the tufte package. If you want LaTeX/PDF output, you may use the tufte_handout format for handouts, and tufte_book for books. For HTML output, use tufte_html. These formats can be either specified in the YAML metadata at the beginning of an R Markdown document (see an example below), or passed to the rmarkdown::render() function. See Allaire et al. (2022) for more information about rmarkdown.\n---\ntitle: \"An Example Using the Tufte Style\"\nauthor: \"John Smith\"\noutput:\n  tufte::tufte_handout: default\n  tufte::tufte_html: default\n---\nThere are two goals of this package:\n\nTo produce both PDF and HTML output with similar styles from the same R Markdown document;\nTo provide simple syntax to write elements of the Tufte style such as side notes and margin figures, e.g. when you want a margin figure, all you need to do is the chunk option fig.margin = TRUE, and we will take care of the details for you, so you never need to think about \\begin{marginfigure} \\end{marginfigure} or <span class=\"marginfigure\"> </span>; the LaTeX and HTML code under the hood may be complicated, but you never need to learn or write such code.\n\nIf you have any feature requests or find bugs in tufte, please do not hesitate to file them to https://github.com/rstudio/tufte/issues. For general questions, you may ask them on StackOverflow: https://stackoverflow.com/tags/rmarkdown."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#margin-figures",
    "href": "content/posts/12-tufte-style-article/index.html#margin-figures",
    "title": "A Tufte Handout Example",
    "section": "Margin Figures",
    "text": "Margin Figures\nImages and graphics play an integral role in Tufte’s work. To place figures in the margin you can use the knitr chunk option fig.margin = TRUE. For example:\n\nlibrary(ggplot2)\nmtcars2 <- mtcars\nmtcars2$am <- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() + geom_smooth() +\n  theme(legend.position = 'bottom')\n\n\n\n\nFigure 1: MPG vs horsepower, colored by transmission.\n\n\n\nNote the use of the fig.cap chunk option to provide a figure caption. You can adjust the proportions of figures using the fig.width and fig.height chunk options. These are specified in inches, and will be automatically scaled down to fit within the handout margin."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#arbitrary-margin-content",
    "href": "content/posts/12-tufte-style-article/index.html#arbitrary-margin-content",
    "title": "A Tufte Handout Example",
    "section": "Arbitrary Margin Content",
    "text": "Arbitrary Margin Content\nIn fact, you can include anything in the margin using the knitr engine named marginfigure. Unlike R code chunks ```{r}, you write a chunk starting with ```{marginfigure} instead, then put the content in the chunk. See an example on the right about the first fundamental theorem of calculus.\n\nWe know from _the first fundamental theorem of calculus_ that for $x$ in $[a, b]$:\n$$\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).$$\n\nFor the sake of portability between LaTeX and HTML, you should keep the margin content as simple as possible (syntax-wise) in the marginefigure blocks. You may use simple Markdown syntax like **bold** and _italic_ text, but please refrain from using footnotes, citations, or block-level elements (e.g. blockquotes and lists) there.\nNote: if you set echo = FALSE in your global chunk options, you will have to add echo = TRUE to the chunk to display a margin figure, for example ```{marginfigure, echo = TRUE}."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#full-width-figures",
    "href": "content/posts/12-tufte-style-article/index.html#full-width-figures",
    "title": "A Tufte Handout Example",
    "section": "Full Width Figures",
    "text": "Full Width Figures\nYou can arrange for figures to span across the entire page by using the chunk option fig.fullwidth = TRUE.\n\nggplot(diamonds, aes(carat, price)) + geom_smooth() +\n  facet_grid(~ cut)\n\n\n\nFigure 2: A full width figure.\n\n\n\n\nOther chunk options related to figures can still be used, such as fig.width, fig.cap, out.width, and so on. For full width figures, usually fig.width is large and fig.height is small. In the above example, the plot size is \\(10 \\times 2\\)."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#arbitrary-full-width-content",
    "href": "content/posts/12-tufte-style-article/index.html#arbitrary-full-width-content",
    "title": "A Tufte Handout Example",
    "section": "Arbitrary Full Width Content",
    "text": "Arbitrary Full Width Content\nAny content can span to the full width of the page. This feature requires Pandoc 2.0 or above. All you need is to put your content in a fenced Div with the class fullwidth, e.g.,\n::: {.fullwidth}\nAny _full width_ content here.\n:::\nBelow is an example:\n\nR is free software and comes with ABSOLUTELY NO WARRANTY. You are welcome to redistribute it under the terms of the GNU General Public License versions 2 or 3. For more information about these matters see https://www.gnu.org/licenses/."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#main-column-figures",
    "href": "content/posts/12-tufte-style-article/index.html#main-column-figures",
    "title": "A Tufte Handout Example",
    "section": "Main Column Figures",
    "text": "Main Column Figures\nBesides margin and full width figures, you can of course also include figures constrained to the main column. This is the default type of figures in the LaTeX/HTML output.\n\nggplot(diamonds, aes(cut, price)) + geom_boxplot()\n\n\n\nFigure 3: A figure in the main column."
  },
  {
    "objectID": "content/posts/posts.html",
    "href": "content/posts/posts.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "A Tufte Handout Example\n\n\nAn implementation in R Markdown\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nJJ Allaire and Yihui Xie\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBootswatch Themed QMD\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nBoston Terrier\n\n\nCopied verbatim from Wikipedia, the free encyclopedia\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCallout Boxes\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCallouts in PDF\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nExample Lightbox Document\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nFigure Layout\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nFigure Layouts\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nFigure Layouts-2\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFont Awesome Quarto Extension\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHousing Prices\n\n\n\n\n\n\n\n\n\n\n\n\nJan 8, 2023\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInline Code\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNutshell: Expandable Explanations\n\n\n\n\n\n\n\n\n\n\n\n\nDavid Schoch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOld Markdown - reactable example\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nTom Mock\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOverview of using gtsummary\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nPenguin Report Presentation\n\n\nWith revealjs\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nTom Mock\n\n\n\n\n\n\n  \n\n\n\n\nPenguins Distilled\n\n\n\n\n\nA great new article on Penguins\n\n\n\n\n\n\nInvalid Date\n\n\nTom Mock\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPenguins Parametric Reports\n\n\n\n\n\n\n\n\n\n\n\n\nJul 13, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlot Layout\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlots\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPresentation with Columns?\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Lordicons, Fontawesome Icons,Academicons, and Iconify Icons\n\n\n\n\n\n\n\n\n\n\n\n\nJan 9, 2023\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nVisual Editor for Quarto\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nThomas Mock\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngtsummary + R Markdown\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nArvind Venkatadri\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/projects/project-1/index.html",
    "href": "content/projects/project-1/index.html",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nShow the Codelibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nShow the Codepreds_lm %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nShow the Codeglm.mod <- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds <- dat %>% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit > 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\nShow the Codegeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\n\nShow the Codestat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\nShow the Codeggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "content/projects/project-2/index.html",
    "href": "content/projects/project-2/index.html",
    "title": "Project 2",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nShow the Codelibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nShow the Codepreds_lm %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nShow the Codeglm.mod <- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds <- dat %>% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit > 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\nShow the Codegeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\n\nShow the Codestat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\nShow the Codeggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "content/projects/projects.html",
    "href": "content/projects/projects.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "This is a dummy blog posts\n\n\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\n\nJun 1, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nProject 2\n\n\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\n\nJun 1, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#claude-shannon-and-information",
    "href": "content/slides/r-slides/nature-of-data/index.html#claude-shannon-and-information",
    "title": "The Nature of Data",
    "section": "Claude Shannon and Information",
    "text": "Claude Shannon and Information\n\nhttps://plus.maths.org/content/information-surprise"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#human-experience-is.data",
    "href": "content/slides/r-slides/nature-of-data/index.html#human-experience-is.data",
    "title": "The Nature of Data",
    "section": "Human Experience is….Data??",
    "text": "Human Experience is….Data??"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#experiments-and-hypotheses-a-kitchen-experiment",
    "href": "content/slides/r-slides/nature-of-data/index.html#experiments-and-hypotheses-a-kitchen-experiment",
    "title": "The Nature of Data",
    "section": "Experiments and Hypotheses: A Kitchen Experiment",
    "text": "Experiments and Hypotheses: A Kitchen Experiment\n\n\nInputs are: Ingredients, Recipes, Processes\nOutputs are: Taste, Texture, Colour, Quantity!!\n\nUsed without permission from https://safetyculture.com/topics/design-of-experiments/"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#what-is-the-result-of-an-experiment",
    "href": "content/slides/r-slides/nature-of-data/index.html#what-is-the-result-of-an-experiment",
    "title": "The Nature of Data",
    "section": "What is the Result of an Experiment?",
    "text": "What is the Result of an Experiment?\n\n\n\nAll experiments give us data about phenomena\nWe obtain data about the things that happen: Outputs\nWhat makes things happen?: Inputs\nHow?: Process\nWhen? Factors\nHow much “output” is caused by how much “input”? Effect Size\n\n\nAll Experiments stem from Human Curiosity, a Hypothesis, and a Desire to Find out and Talk about Something"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#a-famous-lady-and-her-famous-experiment",
    "href": "content/slides/r-slides/nature-of-data/index.html#a-famous-lady-and-her-famous-experiment",
    "title": "The Nature of Data",
    "section": "A Famous Lady and her Famous Experiment",
    "text": "A Famous Lady and her Famous Experiment\n\n\n\n\n\n\n\n\n\n\nIn 1853, Turkey declared war on Russia. After the Russian Navy destroyed a Turkish squadron in the Black Sea, Great Britain and France joined with Turkey. In September of the following year, the British landed on the Crimean Peninsula and set out, with the French and Turks, to take the Russian naval base at Sevastopol.\nWhat followed was a tragicomedy of errors – failure of supply, failed communications, international rivalries. Conditions in the armies were terrible, and disease ate through their ranks. They finally did take Sevastopol a year later, after a ghastly assault. It was ugly business all around. Well over half a million soldiers lost their lives during the Crimean War."
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#florence-nightingales-data",
    "href": "content/slides/r-slides/nature-of-data/index.html#florence-nightingales-data",
    "title": "The Nature of Data",
    "section": "Florence Nightingale’s Data",
    "text": "Florence Nightingale’s Data\n\n\n\n\n\nMonth\nYear\nDisease.rate\nWounds.rate\nOther.rate\n\n\n\n\nApr\n1854\n1.4\n0.0\n7.0\n\n\nMay\n1854\n6.2\n0.0\n4.6\n\n\nJun\n1854\n4.7\n0.0\n2.5\n\n\nJul\n1854\n150.0\n0.0\n9.6\n\n\nAug\n1854\n328.5\n0.4\n11.9\n\n\nSep\n1854\n312.2\n32.1\n27.7\n\n\nOct\n1854\n197.0\n51.7\n50.1\n\n\nNov\n1854\n340.6\n115.8\n42.8\n\n\nDec\n1854\n631.5\n41.7\n48.0\n\n\nJan\n1855\n1022.8\n30.7\n120.0"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#how-does-data-look-like-then",
    "href": "content/slides/r-slides/nature-of-data/index.html#how-does-data-look-like-then",
    "title": "The Nature of Data",
    "section": "How Does Data look Like, then?",
    "text": "How Does Data look Like, then?\n\n\n\n\n\nTypes of Variables - Using Interrogative Pronouns\n\nNominal: What? Who? Where? (Factors, Dimensions)\nOrdinal: Which Types? What Sizes? How Big? (Factors, Dimensions)\nInterval: How Often? (Numbers, Facts)\nRatio: How many? How much? How heavy? (Numbers, Facts)"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#types-of-variables---using-interrogative-pronouns",
    "href": "content/slides/r-slides/nature-of-data/index.html#types-of-variables---using-interrogative-pronouns",
    "title": "The Nature of Data",
    "section": "Types of Variables - Using Interrogative Pronouns",
    "text": "Types of Variables - Using Interrogative Pronouns\n\nNominal: What? Who? Where? (Factors, Dimensions)\nOrdinal: Which Types? What Sizes? How Big? (Factors, Dimensions)\nInterval: How Often? (Numbers, Facts)\nRatio: How many? How much? How heavy? (Numbers, Facts)"
  },
  {
    "objectID": "content/slides/r-slides/nature-of-data/index.html#types-of-variables-in-nightingale-data",
    "href": "content/slides/r-slides/nature-of-data/index.html#types-of-variables-in-nightingale-data",
    "title": "The Nature of Data",
    "section": "Types of Variables in Nightingale Data",
    "text": "Types of Variables in Nightingale Data\n\n\n\nUsing Interrogative Pronouns:1\n\nNominal: None\nOrdinal: (Factors, Dimensions)\n\nHOW? War, Disease, Other\n\nInterval: (Numbers, Facts)\n\nWHEN? Year, Month\n\nRatio: (Numbers, Facts)\n\nHOW MANY? Rate of Deaths (War, Disease, Other)\n\n\n\n\n\n\n\nNightingale’s data table had dimensions coded into column names. This is not considered tidy in the modern age."
  },
  {
    "objectID": "content/slides/r-slides/r-slides-listing.html",
    "href": "content/slides/r-slides/r-slides-listing.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "The Nature of Data\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied Metaphorics",
    "section": "",
    "text": "Hi, I’m Arvind Venkatadri.\nI’m an Adjunct Professor at DSU, Bangalore, INDIA, with a passion for R, data visualization, and Creative Thinking and Problem Solving with TRIZ. On this blog, I share and teach what I learn.\nTo get started, you can check out my courses. You can find me on Twitter or GitHub and YouTube. Feel free to reach out to me via mail !"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "The Foundation Series in Quarto",
    "section": "",
    "text": "Preparatory Work to moving my full website to Quarto!"
  },
  {
    "objectID": "content/posts/13-rapp-sample-document/index.html",
    "href": "content/posts/13-rapp-sample-document/index.html",
    "title": "This is a dummy blog post",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nCodepreds_lm %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nCodeglm.mod <- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds <- dat %>% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit > 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  }
]