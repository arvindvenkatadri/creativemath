[
  {
    "objectID": "posts/08-knitr/fa-example.html",
    "href": "posts/08-knitr/fa-example.html",
    "title": "Font Awesome Quarto Extension",
    "section": "",
    "text": "This extension allows you to use font-awesome icons in your Quarto HTML and PDF documents. It provides an {{< fa >}} shortcode:\n{{< fa icon-name >}}\nFor example:\n\n\n\nShortcode\nIcon\n\n\n\n\n{{< fa thumbs-up >}}\n\n\n\n{{< fa folder >}}\n\n\n\n{{< fa chess-pawn >}}\n\n\n\n{{< fa brands bluetooth >}}"
  },
  {
    "objectID": "posts/08-knitr/lightbox-extension.html",
    "href": "posts/08-knitr/lightbox-extension.html",
    "title": "Example Lightbox Document",
    "section": "",
    "text": "Here is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "posts/08-knitr/lightbox-extension.html#elsewhere",
    "href": "posts/08-knitr/lightbox-extension.html#elsewhere",
    "title": "Example Lightbox Document",
    "section": "Elsewhere",
    "text": "Elsewhere\nThe below demonstrates placing more than one image in a gallery. Note the usage of the layout-ncol which arranges the images on the page side by date. Adding the group attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n\n\n\n\nAquinnah\n\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\n\nVineyard lighthouse"
  },
  {
    "objectID": "posts/08-knitr/lightbox-extension.html#credits",
    "href": "posts/08-knitr/lightbox-extension.html#credits",
    "title": "Example Lightbox Document",
    "section": "Credits",
    "text": "Credits\nThe images in this example were used under the Unsplash license, view originals below:\n\nChilmark Beach\nAquinnah\nGingerbread House\nEdgartown Light\nEdgartown Sailboat"
  },
  {
    "objectID": "posts/08-knitr/penguin-params.html",
    "href": "posts/08-knitr/penguin-params.html",
    "title": "Penguins",
    "section": "",
    "text": "We have data about 344 penguins. Only 193 are classified asAdelie. The distribution of the Adelie penguins are shown below:"
  },
  {
    "objectID": "projects/projects.html",
    "href": "projects/projects.html",
    "title": "Projects",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "Preparatory Work to moving my full website to Quarto!"
  },
  {
    "objectID": "posts/07-visuals/figure-layout-2.html",
    "href": "posts/07-visuals/figure-layout-2.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "::: {#fig-bostons layout-nrow=2}\n\n![Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\n![Still Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Still sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard, twice\n\n:::"
  },
  {
    "objectID": "posts/07-visuals/figure-layout-2.html#subfigures-1",
    "href": "posts/07-visuals/figure-layout-2.html#subfigures-1",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\nFigure 1: Excited\n\n\n\n\n\nFigure 2: Sleeping\n\n\n\n\n\nStill Excited\n\n\n\n\n\nStill sleeping\n\n\nTwo states of Howard, twice"
  },
  {
    "objectID": "posts/07-visuals/figure-layout-2.html#subfigures-2",
    "href": "posts/07-visuals/figure-layout-2.html#subfigures-2",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n\n\nExcited\n\n\n\n\n\n\n\nSleeping\n\n\n\n\n\n\n\n\n\nStill Excited\n\n\n\n\n\n\n\nStill sleeping\n\n\n\n\nFigure 3: Two states of Howard, twice"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html",
    "href": "posts/07-visuals/figure-layout.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "library(ggplot2)"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#figures",
    "href": "posts/07-visuals/figure-layout.html#figures",
    "title": "Arvind Venkatadri",
    "section": "Figures",
    "text": "Figures\nBasic markdown syntax:\n![Boston Terrier](../materials/images/boston-terrier.png)\n\n\nBoston Terrier"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#fragments",
    "href": "posts/07-visuals/figure-layout.html#fragments",
    "title": "Arvind Venkatadri",
    "section": "Fragments",
    "text": "Fragments\n\n\n![Boston terrier](boston-terrier.png){fig-align=\"left\"}\n\n\n![](../materials/images/boston-terrier.png){fig-align=\"right\" fig-alt=\"A photo a Boston Terrier.\"}"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#subfigures",
    "href": "posts/07-visuals/figure-layout.html#subfigures",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures\n::: {#fig-bostons layout-ncol=2}\n\n![Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard\n\n:::"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#subfigures-1",
    "href": "posts/07-visuals/figure-layout.html#subfigures-1",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\nFigure 1: Two states of Howard"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#subfigures-2",
    "href": "posts/07-visuals/figure-layout.html#subfigures-2",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#custom-grid",
    "href": "posts/07-visuals/figure-layout.html#custom-grid",
    "title": "Arvind Venkatadri",
    "section": "Custom grid",
    "text": "Custom grid\n\n\nThis column takes 1/2 of the page\n\nggplot(mtcars, aes(x = cyl, y = disp, group = cyl)) +\n  geom_boxplot()\n\n\n\n\n\n\nThis column takes 1/2 of the page\n\nhead(mtcars, 5)[1:4] |> knitr::kable()\n\n\n\n\nmpg\ncyl\ndisp\nhp\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n\n\nDatsun 710\n22.8\n4\n108\n93\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n\n\nHornet Sportabout\n18.7\n8\n360\n175"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "This is my Quarto website. And I cannot get finally got listings and menus going !!!!\nI am going to systematically convert all my Posts and Course materials into .qmd files and also make them into Tufte-style articles. And then I will copy them over the actual website, after I have played with Pandoc and divs and stuff….what fun !!!\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "courses/courses.html",
    "href": "courses/courses.html",
    "title": "Courses",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\nCourse: Data Analytics\n\n\n\n\n\n\n\n\n\n\n\n\n0 min\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Grammar of Diagrams\n\n\nConverting Text to Diagrams in R\n\n\nPart of the R for Artists and Designers workshop course at the School of Foundation Studies, Srishti Manipal Institute of Art, Design, and Technology, Bangalore.\n\n\n\n\n\n\n10 min\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCourse: R for Artists\n\n\n\n\n\n\n\n\n\n\n\n\n0 min\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLab-1: Science, Human Experience, Experiments, and Data\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n36 min\n\n\n\n\n\n\n  \n\n\n\n\nLab 07 - The Grammar of Networks\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n27 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-10: An Invitation from the Queen…to play Croquet\n\n\nThe Grammar of Networks\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-11: The Queen of Hearts, She Made some Tarts\n\n\nThe Grammar of Diagrams\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-12: Time is a Him!!\n\n\nTime Series in R\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n6 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-14: You’re are Nothing but a Pack of Cards!!\n\n\nMaking a website to show it all\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-2: Down the R-abbit Hole…\n\n\nWelcome ! Introduce Yourself to R, RStudio, and to all of Us!\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-3: Drink Me!\n\n\nWorking with R Markdown\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-4: I say what I mean and I mean what I say\n\n\nGetting started with Data in R\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-5: Twas brillig, and the slithy toves…\n\n\nTidy Data at the wabe MoMA\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-6: These Roses have been Painted !!\n\n\nWhy is a Raven like a Writing Desk?\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-7: The Lobster Quadrille\n\n\nFonts and other Wizardy in ggplot\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-9: If you please sir…which way to the Secret Garden?\n\n\nThe Grammar of Maps\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n0 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "courses/R-for-Artists/r-for-artists.html",
    "href": "courses/R-for-Artists/r-for-artists.html",
    "title": "Course: R for Artists",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#where-does-data-come-from",
    "href": "courses/R-for-Artists/10-Basics/index.html#where-does-data-come-from",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "Where does Data come from?",
    "text": "Where does Data come from?\nLet us look at the slides. Click on the slides icon above."
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#why-visualize",
    "href": "courses/R-for-Artists/10-Basics/index.html#why-visualize",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "Why Visualize?",
    "text": "Why Visualize?\n\nWe can digest information more easily when it is pictorial\nOur Working Memories are both short-term and limited in capacity. So a picture abstracts the details and presents us with an overall summary, an insight, or a story that is both easy to recall and easy on retention.\n\nData Viz includes shapes that carry strong cultural memories and impressions for us. These cultural memories help us to use data viz in a universal way to appeal to a wide variety of audiences. (Do humans have a gene for geometry?)\nIt helps sift facts and mere statements: for example:\n\n\n\n\n\nSource https://www.deccanherald.com/national/india-is-known-as-the-rape-capital-of-the-world-rahul-783495.html\n\n\n\n\n\n\n\n\nSource https://datareveals.org/crime-data/"
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#what-are-data-types",
    "href": "courses/R-for-Artists/10-Basics/index.html#what-are-data-types",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "What are Data Types??",
    "text": "What are Data Types??\nhttps://www.youtube.com/watch?v=dwFsRZv4oHA\n{{% youtube \"dwFsRZv4oHA\" %}}\nIn more detail:"
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#how-do-we-spot-data-variable-types",
    "href": "courses/R-for-Artists/10-Basics/index.html#how-do-we-spot-data-variable-types",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "How do we Spot Data Variable Types?",
    "text": "How do we Spot Data Variable Types?\nBy asking questions!\n\n\n\n\n\n\n\n\n\nPronoun\nAnswer\nVariable / Scale\nExample\nWhat Ope rations?\n\n\n\nWhat, Who, Where, Whom, Which\nName, Place, Animal, Thing\nQua litative / N ominal\n\nName\n\n\nCount no. of\ncases\n\nMode\n\n\n\nHow, What Kind, What Sort\nA Manner / Method, Type or Attribute from a list, with list items in some ” order**” ( e.g. good, better, improved, best..)\nQua litative / O rdinal\n\n\n\nSocio\n\n-economic status (“low income, middle income, high income)\n\n\neducation level\n(“high\nschool”, “B S”,” M\nS”,“PhD”)\n\n\nincome level\n(“less than 50K”,\n\n\n“50K-100K”, “over 100K”)\n\nS atisfaction rating (\n\n“extremely\ndislike”,\n“dislike”,\n“neutral”, “like”,\n“extremely like”).\n\n\nMedian\nPer centiles\n\n\n\nHow Many / Much / Heavy? Few? Seldom? Often? When?\n\nQuantities with Scale.\nDifferences are meaningful, but not products or ratios\n\nQuan titative / In terval\n\n\n\npH\nSAT score\n\n(200-800), - Credit score\n(300-850). - Year of\nStarting in College\n\n\nMean\nStandard D eviation\n\n\n\nHow Many / Much / Heavy? Few? Seldom? Often? When?\n\nQuantities, with Scale and a Zero Value.\nDifferences and Ratios /Products are meaningful. (e.g Weight )\n\nQuan titative / R atio**\n\n\nWeight,le ngth,Height\nTemperature in Kelvin\nEnzyme\n\nactivity, dose amount,\nreaction rate, flow rate,co ncentration\n\nPulse\nSurvival time\n\n\n\nCor relation\nCoeff of V ariation\n\n\n\n\nAs you go from Qualitative to Quantitative data types in the table, I hope you can detect a movement from fuzzy groups/categories to more and more crystallized numbers. Each variable/scale can be subjected to the operations of the previous group. In the words of S.S. Stevens ,\n\nthe basic operations needed to create each type of scale is cumulative: to an operation listed opposite a particular scale must be added all those operations preceding it."
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#what-are-the-parts-of-a-data-viz",
    "href": "courses/R-for-Artists/10-Basics/index.html#what-are-the-parts-of-a-data-viz",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "What Are the Parts of a Data Viz?",
    "text": "What Are the Parts of a Data Viz?"
  },
  {
    "objectID": "courses/R-for-Artists/10-Basics/index.html#how-to-pick-a-data-viz",
    "href": "courses/R-for-Artists/10-Basics/index.html#how-to-pick-a-data-viz",
    "title": "Lab-1: Science, Human Experience, Experiments, and Data",
    "section": "How to pick a Data Viz?",
    "text": "How to pick a Data Viz?\nMost Data Visualizations use one or more of the following geometric attributes or aesthetics. These geometric aesthetics are used to represent qualitative or quantitative variables from your data.\n\n\n\n\nFrom Claus Wilke, Fundamentals of Data Visualization\n\n\n\n\nWhat does that mean? We can think of simple visualizations as combinations of these aesthetics. Some examples:\n\n\n\n\n\n\n\n\nAesthetic #1\nAesthetic #2\nShape\nChart Picture\n\n\n\nPosition X = Quant Variable\nPosition Y = Quant Variable\nPoints/Circles with Fixed Size\n[] (https://img.icons8.c om/ios-filled/100/000 000/scatter-plot.png)\n\n\nPosition X = Qual Variable\nPosition Y = Count of Qual var)\nColumns\n\n\n\nPosition X = Qual Variable\nPosition Y = Qual Variable\nRectangles, with area proportional to joint(X,Y) count\n\n\n\n\nPosition X = Qu alitative Variable\nPosition Y = Rank Ordered Quant Variable\nBox + Whisker, Box length proportional to Inter-Quartile Range, whisker-length proportional to upper and lower quartile resp.\n\n\n\nPosition X = Quant Variable\nPostion Y = Quant V ariable + Qual Var\n\n\n\n\nQuant Variable\nShape = Line with Quant Variable"
  },
  {
    "objectID": "courses/R-for-Artists/120-time/index.html#introduction",
    "href": "courses/R-for-Artists/120-time/index.html#introduction",
    "title": "Lab-12: Time is a Him!!",
    "section": "Introduction",
    "text": "Introduction\nTime Series data are important in data visualization where events have a temporal dimension, such as with finance, transportation, music, telecommunications for example."
  },
  {
    "objectID": "courses/R-for-Artists/120-time/index.html#creating-a-time-series",
    "href": "courses/R-for-Artists/120-time/index.html#creating-a-time-series",
    "title": "Lab-12: Time is a Him!!",
    "section": "Creating a time series",
    "text": "Creating a time series\nIn this first example, we will use simple ts data, and then do another with a tibble dataset, and then a third example with an tsibble formatted dataset.\n\nts format data\nThere are a few datasets in base R that are in ts format already.\n\nCodeAirPassengers\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n1949 112 118 132 129 121 135 148 148 136 119 104 118\n1950 115 126 141 135 125 149 170 170 158 133 114 140\n1951 145 150 178 163 172 178 199 199 184 162 146 166\n1952 171 180 193 181 183 218 230 242 209 191 172 194\n1953 196 196 236 235 229 243 264 272 237 211 180 201\n1954 204 188 235 227 234 264 302 293 259 229 203 229\n1955 242 233 267 269 270 315 364 347 312 274 237 278\n1956 284 277 317 313 318 374 413 405 355 306 271 306\n1957 315 301 356 348 355 422 465 467 404 347 305 336\n1958 340 318 362 348 363 435 491 505 404 359 310 337\n1959 360 342 406 396 420 472 548 559 463 407 362 405\n1960 417 391 419 461 472 535 622 606 508 461 390 432\n\nCodestr(AirPassengers)\n\n Time-Series [1:144] from 1949 to 1961: 112 118 132 129 121 135 148 148 136 119 ...\n\n\nThis can be easily plotted using base R:\n\nCodeplot(AirPassengers)\n\n\n\n\nLet us take data that is “time oriented” but not in ts format, and convert it to ts: the syntax of ts() is:\nSyntax:  objectName <- ts(data, start, end, frequency)\n\nwhere,\n\n    `data` represents the data vector\n    `start` represents the first observation in time series\n    `end` represents the last observation in time series\n    frequency represents number of observations per unit time. For \n    example, frequency=1 for monthly data.\nWe will pick simple numerical vector data ChickWeight:\n\nCodeChickWeight %>% head()\n\n\n\n  \n\n\nCodeChickWeight_ts <- ts(ChickWeight$weight, frequency = 2)\nplot(ChickWeight_ts)\n\n\n\n\nThe ts format is not recommended for new analysis since it does not permit inclusion of multiple time series in one dataset, nor other categorical variables for grouping etc.\n\ntibble format data\nSome “time-oriented” datasets are available in tibble form. Let us try to plot one, the walmart_sales_weekly dataset from the timetk package:\n\nCodedata(walmart_sales_weekly, package = \"timetk\")\nwalmart_sales_weekly %>% head()\n\n\n\n  \n\n\n\nThis dataset is a tibble with a Date column. Let us plot the data using this column on the time/X-axis:\n\nCodewalmart_sales_weekly %>% \n  # convert Dept number to a **categorical factor**\n  mutate(Dept = forcats::as_factor(Dept)) %>% \n  ggplot(aes(x = Date, y = Weekly_Sales, group = Dept)) + \n  geom_point(aes(colour = Dept)) +\n  geom_line(aes(colour = Dept))\n\n\n\n\n\ntsibble format data\nFor more analysis and forecasting etc., it is useful to convert this tibble into a tsibble:\n\nCodewalmart_tsibble <- as_tsibble(walmart_sales_weekly,\n                         index = Date,\n                         key = c(id, Dept))\nwalmart_tsibble\n\n\n\n  \n\n\n\nThe 7D states the data is weekly. There is a Date column and all the other numerical variables are time-varying quantities. The categorical variables such as id, and Dept allow us to identify separate time series in the data, and these have 7 combinations hence are 7 time series in this data, as indicated.\nLet us plot Weekly_Sales, colouring the time series by Dept:\n\nCodewalmart_tsibble %>% \n  ggplot(aes( x = Date, y = Weekly_Sales, colour = Dept)) + \n           geom_line() + \n           geom_point() + \n           labs(title = \"Weekly Sales by Dept at Walmart\")\n\n\n\nFigure 1: Walmart Time Series\n\n\n\n\nThis first plot is that of all series together. There does seem to be an annual variation, which we should investigate later.\nNote the blue trend lines that are automatically plotted in the second graph. This is caused by the argument .smooth = TRUE.\n⊕We can also do a quick autoplot that seems to offer less control and is also not interactive.\n\n\n\nCodewalmart_tsibble %>% \n  dplyr::group_by(Dept) %>% \n  autoplot(Weekly_Sales)\n\n`mutate_if()` ignored the following grouping variables:\n• Column `Dept`"
  },
  {
    "objectID": "courses/R-for-Artists/120-time/index.html#one-more-example",
    "href": "courses/R-for-Artists/120-time/index.html#one-more-example",
    "title": "Lab-12: Time is a Him!!",
    "section": "One more example",
    "text": "One more example\nOften we have data in table form, that is time-oriented, with a date like column, and we need to convert it into a tsibble for analysis:\n\nCodeprison <- readr::read_csv(\"https://OTexts.com/fpp3/extrafiles/prison_population.csv\")\n\nRows: 3072 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): State, Gender, Legal, Indigenous\ndbl  (1): Count\ndate (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodeglimpse(prison)\n\nRows: 3,072\nColumns: 6\n$ Date       <date> 2005-03-01, 2005-03-01, 2005-03-01, 2005-03-01, 2005-03-01…\n$ State      <chr> \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"ACT\", \"NS…\n$ Gender     <chr> \"Female\", \"Female\", \"Female\", \"Female\", \"Male\", \"Male\", \"Ma…\n$ Legal      <chr> \"Remanded\", \"Remanded\", \"Sentenced\", \"Sentenced\", \"Remanded…\n$ Indigenous <chr> \"ATSI\", \"Non-ATSI\", \"ATSI\", \"Non-ATSI\", \"ATSI\", \"Non-ATSI\",…\n$ Count      <dbl> 0, 2, 0, 5, 7, 58, 5, 101, 51, 131, 145, 323, 355, 1617, 12…\n\n\nWe have a Date column for the time index, and we have unique key variables like State, Gender, Legal and Indigenous. Count is the value that is variable over time. It also appears that the data is quarterly, since mosaic::inspect reports the max_diff in the Date column as \\(92\\). (Run mosaic::inspect(prison) in your Console).\n\nCodeprison_tsibble <- prison %>% \n  mutate(quarter = yearquarter(Date)) %>% \n  select(-Date) %>% # Remove the Date column now that we have quarters\n  as_tsibble(index = quarter, key = c(State, Gender, Legal, Indigenous))\n\nprison_tsibble\n\n\n\n  \n\n\n\n(Here, ATSI stands for Aboriginal or Torres Strait Islander.). We have \\(64\\) time series here, organized quarterly.\nLet us examine the key variables:\n\nCodeprison_tsibble %>% distinct(Indigenous)\n\n\n\n  \n\n\nCodeprison_tsibble %>% distinct(State)\n\n\n\n  \n\n\n\nSo we can plot the time series, faceted by / coloured by State:\n\nCodeprison_tsibble %>% \n  tsibble::index_by() %>% \n  group_by(Indigenous, State) %>% \n  #filter(State == \"NSW\") %>% \n  summarise(Total = sum(Count))  %>%\n  ggplot(aes(x = quarter, y = Total, colour = Indigenous, \n             shape = Indigenous)) + \n  geom_point() +\n  geom_line()  + \n  facet_wrap(~ State)\n\n\n\n\nHmm…looks like New South Wales(NSW) as something different going on compared to the rest of the states in Aus."
  },
  {
    "objectID": "courses/R-for-Artists/120-time/index.html#decomposing-time-series",
    "href": "courses/R-for-Artists/120-time/index.html#decomposing-time-series",
    "title": "Lab-12: Time is a Him!!",
    "section": "Decomposing Time Series",
    "text": "Decomposing Time Series\nWe can decompose the Weekly_Sales into components representing trends, seasonal events that repeat, and irregular noise. Since each Dept could have a different set of trends, we will do this first for one Dept, say Dept #95:\n\nCodewalmart_decomposed_season <- walmart_tsibble %>% \n  dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n  #\n  # feasts depends upon fabletools.\n  # \n  fabletools::model(\n    season = STL(Weekly_Sales ~ season(window = \"periodic\"))) \n\nwalmart_decomposed_ets <- walmart_tsibble %>% \n  dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n  #\n  # feasts depends upon fabletools.\n  # \n  fabletools::model(\n    ets = ETS(box_cox(Weekly_Sales, 0.3)))\n\nwalmart_decomposed_season %>% fabletools::components()\n\n\n\n  \n\n\nCodewalmart_decomposed_ets %>% fabletools::components()\n\n\n\n  \n\n\nCode# walmart_decomposed_arima <- walmart_tsibble %>% \n#   dplyr::filter(Dept == \"95\") %>% # filter for Dept 95\n#     arima = ARIMA(log(Weekly_Sales))\n\n\n\nCodewalmart_decomposed_season %>% \n  components() %>% \n  autoplot() + \n  labs( title = \"Seasonal Variations in Weekly Sales, Dept #95\")\n\n\n\nCodewalmart_decomposed_ets %>% \n  components() %>% \n  autoplot() + \n  labs( title = \"ETS Variations in Weekly Sales, Dept #95\")\n\nWarning: Removed 1 row containing missing values (`geom_line()`)."
  },
  {
    "objectID": "courses/R-for-Artists/120-time/index.html#references",
    "href": "courses/R-for-Artists/120-time/index.html#references",
    "title": "Lab-12: Time is a Him!!",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "courses/R-for-Artists/140-website/index.html#introduction",
    "href": "courses/R-for-Artists/140-website/index.html#introduction",
    "title": "Lab-14: You’re are Nothing but a Pack of Cards!!",
    "section": "Introduction",
    "text": "Introduction\nLet’s make a website in RStudio to show off our data viz portfolio, and to share with friends, parents, prospective employers…\nWe will encounter a new package called blogdown and use workflows with github and a free web hosting service called Netlify to create a website where all our RMarkdowns become individual blog posts, complete with Titles, Sections, Text, Diagrams and Links!"
  },
  {
    "objectID": "courses/R-for-Artists/140-website/index.html#references",
    "href": "courses/R-for-Artists/140-website/index.html#references",
    "title": "Lab-14: You’re are Nothing but a Pack of Cards!!",
    "section": "References",
    "text": "References\n\nAllison Hill\nSharon Macliss\nYihui Xie"
  },
  {
    "objectID": "courses/R-for-Artists/20-intro/index.html#introduction",
    "href": "courses/R-for-Artists/20-intro/index.html#introduction",
    "title": "Lab-2: Down the R-abbit Hole…",
    "section": "Introduction",
    "text": "Introduction\nWelcome!\nLet’s start our journey to the Garden of Data Visualization, with this terrific presentation by the great ( and sadly late..) Hans Rosling.\nThe best stats you’ve ever seen by Hans Rosling:\n{{% youtube \"hVimVzgtD6w\" %}}\n\nWe will run some boiler-plate R code today! Nothing ( almost! ) to code! We will get used to the tools and words of the trade: R, RStudio, installation, packages, libraries…."
  },
  {
    "objectID": "courses/R-for-Artists/30-rmd/index.html#introduction",
    "href": "courses/R-for-Artists/30-rmd/index.html#introduction",
    "title": "Lab-3: Drink Me!",
    "section": "Introduction",
    "text": "Introduction\nWe will get acquainted with the RMarkdown format, which allows us to mix text narrative, code, code-developed figures and items from the web in a seamless document.\nThen we can try to create something in the lines of what Hans Rosling did.\nSomething that can:\n- provide a visualization\n- provide insight\n- tell a story\n- is reproducible"
  },
  {
    "objectID": "courses/R-for-Artists/30-rmd/index.html#references",
    "href": "courses/R-for-Artists/30-rmd/index.html#references",
    "title": "Lab-3: Drink Me!",
    "section": "References:",
    "text": "References:\n\nhttps://ysc-rmarkdown.netlify.app/slides/01-basics.html Nice RMarkdown presentation and “code movies” !\nhttps://rmarkdown.rstudio.com/index.html\nhttps://www.markdowntutorial.com\nhttps://andrewbtran.github.io/NICAR/2018/workflow/docs/02-rmarkdown.html\nhttps://yihui.name/tinytex/ (install!)\nhttps://github.com/rstudio/cheatsheets/blob/master/rmarkdown-2.0.pdf\nhttps://rmarkdown.rstudio.com/html_document_format.html\nhttps://rmarkdown.rstudio.com/pdf_document_format.html"
  },
  {
    "objectID": "courses/R-for-Artists/30-rmd/index.html#assignments",
    "href": "courses/R-for-Artists/30-rmd/index.html#assignments",
    "title": "Lab-3: Drink Me!",
    "section": "Assignment(s)",
    "text": "Assignment(s)\n\nComplete the markdowntutorial in [reference 1]\nCreate a fresh RMarkdown document and use as many as possible of the RMarkdown constructs from the Cheatsheet [reference 4]"
  },
  {
    "objectID": "courses/R-for-Artists/30-rmd/index.html#optional",
    "href": "courses/R-for-Artists/30-rmd/index.html#optional",
    "title": "Lab-3: Drink Me!",
    "section": "Optional",
    "text": "Optional\n\nGo to reference 3 and install tinytex. Try to knit your document into PDF also, using tinytex."
  },
  {
    "objectID": "courses/R-for-Artists/30-rmd/index.html#fun-stuff",
    "href": "courses/R-for-Artists/30-rmd/index.html#fun-stuff",
    "title": "Lab-3: Drink Me!",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nDesirée De Leon, Alison Hill: rstudio4edu: A Handbook for Teaching and Learning with R and RStudio, https://rstudio4edu.github.io/rstudio4edu-book/"
  },
  {
    "objectID": "courses/R-for-Artists/40-working-in-r/index.html#introduction",
    "href": "courses/R-for-Artists/40-working-in-r/index.html#introduction",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "Introduction",
    "text": "Introduction\nWe will get acquainted with data and its representations in R! We will also form a view of how English Grammar ( pronouns, verbs, adjectives, figures of speech..) get metaphorized into the R World!!"
  },
  {
    "objectID": "courses/R-for-Artists/40-working-in-r/index.html#readings",
    "href": "courses/R-for-Artists/40-working-in-r/index.html#readings",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "Readings",
    "text": "Readings\n\nR for Data Science, Workflow: Basics Chapter: http://r4ds.had.co.nz/workflow-basics.html\nModern Dive, Getting Started Chapter: http://moderndive.com/2-getting-started.html\nR & RStudio Basics: https://bookdown.org/chesterismay/rbasics/3-rstudiobasics.html\nRStudio IDE Cheatsheet: https://github.com/rstudio/cheatsheets/blob/master/rstudio-ide.pdf"
  },
  {
    "objectID": "courses/R-for-Artists/50-working-in-tidyverse/index.html#introduction",
    "href": "courses/R-for-Artists/50-working-in-tidyverse/index.html#introduction",
    "title": "Lab-5: Twas brillig, and the slithy toves…",
    "section": "Introduction",
    "text": "Introduction\nWe meet the most important idea in R: tidy data. Once data is tidy, there is a great deal of insight to be obtained from it, by way of tables, graphs and explorations!\nWe will get hands on with dplyr, the R-package that belongs in the tidyverse and is a terrific toolbox to clean, transform, reorder, and summarize your data. And we will be ready to ask Questions of our data and embark on anlayzing it."
  },
  {
    "objectID": "courses/R-for-Artists/50-working-in-tidyverse/index.html#readings",
    "href": "courses/R-for-Artists/50-working-in-tidyverse/index.html#readings",
    "title": "Lab-5: Twas brillig, and the slithy toves…",
    "section": "Readings",
    "text": "Readings\n\nR4DS dplyr chapter\nModernDive dplyr chapter\nRStudio dplyr Cheatsheet"
  },
  {
    "objectID": "courses/R-for-Artists/60-GoG/index.html#introduction",
    "href": "courses/R-for-Artists/60-GoG/index.html#introduction",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "Introduction",
    "text": "Introduction\nAh…ggplot ! All those wonderful pictures and graphs, that Alice might have relished!\nMetaphors, aesthetics, geometries…and pictures !! ggplot seems to equate ravens to writing desks in its syntax…and out come graphs!!\nAnd colours: Wes Anderson! Tim Burton! The Economist… and many others!!"
  },
  {
    "objectID": "courses/R-for-Artists/60-GoG/index.html#references",
    "href": "courses/R-for-Artists/60-GoG/index.html#references",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "References",
    "text": "References\n\nGeorge Lakoff and Mark Johnson, Metaphors We Live By, https://www.youtube.com/watch?v=lYcQcwUfo8c\nWickham and Grolemund, R for Data Science, ggplot chapter: https://r4ds.had.co.nz/data-visualisation.html\nCMDLineTips, 10 Tips to Customize Text Color, Font, Size in ggplot2 with element_text(), https://cmdlinetips.com/2021/05/tips-to-customize-text-color-font-size-in-ggplot2-with-element_text/\nCMDLineTips, How to write a simple custom ggplot theme from scratch, https://cmdlinetips.com/2022/05/how-to-write-a-simple-custom-ggplot-theme-from-scratch/\nAsha Hill @ mode.com, 12 Extensions to ggplot2 for More Powerful R Visualizations, https://mode.com/blog/r-ggplot-extension-packages/\nEmil Hvitfeldt, ggplot Trial and Error, https://www.emilhvitfeldt.com/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/"
  },
  {
    "objectID": "courses/R-for-Artists/60-GoG/index.html#fun-stuff",
    "href": "courses/R-for-Artists/60-GoG/index.html#fun-stuff",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nYihan Wu, Mapping ggplot geoms and aesthetic parameters, ( An interactive view of which aesthetic parameters work with which ggplot geom!! ) https://www.yihanwu.ca/post/geoms-and-aesthetic-parameters/\nhttps://www.theartstory.org/artist/kandinsky-wassily/"
  },
  {
    "objectID": "courses/R-for-Artists/70-wizardy/index.html#introduction",
    "href": "courses/R-for-Artists/70-wizardy/index.html#introduction",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Introduction",
    "text": "Introduction\nWe will hear at icing and froth to our vanilla ggplots:\n\n\nfonts, annotations, highlights and even pictures!!"
  },
  {
    "objectID": "courses/R-for-Artists/70-wizardy/index.html#references",
    "href": "courses/R-for-Artists/70-wizardy/index.html#references",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "References",
    "text": "References\n\nThomas Lin Pedersen, https://www.data-imaginist.com/. The creator of ggforce, and patchwork packages.\nClaus Wilke, cowplot – Streamlined plot theme and plot annotations for ggplot2, https://wilkelab.org/cowplot/index.html\nClaus Wilke, Spruce up your ggplot2 visualizations with formatted text, https://clauswilke.com/talk/rstudio_conf_2020/. Slides, Code, and Video !\nRobert Kabacoff, ggplot theme cheatsheet, https://rkabacoff.github.io/datavis/modifyingthemes.pdf"
  },
  {
    "objectID": "courses/R-for-Artists/70-wizardy/index.html#fun-stuff",
    "href": "courses/R-for-Artists/70-wizardy/index.html#fun-stuff",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nZuguang Gu, Circular Visualization in R,\n\n\n\n\n\n\n\n\n\nhttps://jokergoo.github.io/circlize_book/book/"
  },
  {
    "objectID": "courses/R-for-Artists/90-GoM/index.html#introduction",
    "href": "courses/R-for-Artists/90-GoM/index.html#introduction",
    "title": "Lab-9: If you please sir…which way to the Secret Garden?",
    "section": "Introduction",
    "text": "Introduction\nWhat is there to not like about maps!!!\nWe will learn to make static and interactive maps and to show off different kinds of data on them, data that have an inherently “spatial” spread or significance!\nTrade Routes? Populations? Street Crime hotspots? Theatre and Food districts and popular Restaurants? Literary Paris, London and Barcelona?\nAll possible !!"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/index.html#introduction",
    "href": "courses/R-for-Artists/100-GoN/index.html#introduction",
    "title": "Lab-10: An Invitation from the Queen…to play Croquet",
    "section": "Introduction",
    "text": "Introduction\nNetwork Diagrams are important in data visualization to bring out relationships between diverse entities. They are used in ecology, biology, transportation, and even history!\nAnd hey, whom did Jon Snow marry?"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/index.html#references",
    "href": "courses/R-for-Artists/100-GoN/index.html#references",
    "title": "Lab-10: An Invitation from the Queen…to play Croquet",
    "section": "References",
    "text": "References\n\nMichael Gastner, Data Analysis and Visualisation with R, Chapter 23: Networks\nDavid Schoch, Network Visualizations in R using ggraph and graphlayouts\nKonrad M. Lawson, Toilers and Gangsters:Simple Network Visualization with R for Historians"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "",
    "text": "This RMarkdown document is part of the Generic Skills Component (GSK) of the Course of the Foundation Studies Programme at Srishti Manipal Institute of Art, Design, and Technology, Bangalore India. The material is based on A Layered Grammar of Graphics by Hadley Wickham. The course is meant for First Year students pursuing a Degree in Art and Design.\nThe intent of this GSK part is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll RMarkdown files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#using-tidygraph-and-ggraph",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#using-tidygraph-and-ggraph",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Using tidygraph and ggraph\n",
    "text": "Using tidygraph and ggraph\n\ntidygraph and ggraph are modern R packages for network data. Graph Data setup and manipulation is done in tidygraph and graph visualization with ggraph.\n\n\ntidygraph Data -> “Network Object” in R.\n\nggraph Network Object -> Plots using a chosen layout/algo.\n\nBoth leverage the power of igraph, which is the Big Daddy of all network packages. We will be using the Grey’s Anatomy dataset in our first foray into networks."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step1.-read-the-data",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step1.-read-the-data",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Step1. Read the data",
    "text": "Step1. Read the data\n\nCodegrey_nodes <- read_csv(\"Data/greys-nodes.csv\")\ngrey_edges <- read_csv(\"Data/greys-edges.csv\")\n\n\n# grey_nodes <- read_delim(\"./Data/greys-nodes.csv\", delim = \";\")\n# ger_edges <- read_delim(\"~/Downloads/grey-edges.csv\", \n#     delim = \";\", escape_double = FALSE, trim_ws = TRUE)\n\ngrey_nodes\n\n# A tibble: 54 × 7\n   name               sex   race  birthyear position  season sign    \n   <chr>              <chr> <chr>     <dbl> <chr>      <dbl> <chr>   \n 1 Addison Montgomery F     White      1967 Attending      1 Libra   \n 2 Adele Webber       F     Black      1949 Non-Staff      2 Leo     \n 3 Teddy Altman       F     White      1969 Attending      6 Pisces  \n 4 Amelia Shepherd    F     White      1981 Attending      7 Libra   \n 5 Arizona Robbins    F     White      1976 Attending      5 Leo     \n 6 Rebecca Pope       F     White      1975 Non-Staff      3 Gemini  \n 7 Jackson Avery      M     Black      1981 Resident       6 Leo     \n 8 Miranda Bailey     F     Black      1969 Attending      1 Virgo   \n 9 Ben Warren         M     Black      1972 Other          6 Aquarius\n10 Henry Burton       M     White      1972 Non-Staff      7 Cancer  \n# … with 44 more rows\n\nCodegrey_edges\n\n# A tibble: 57 × 4\n   from            to              weight type        \n   <chr>           <chr>            <dbl> <chr>       \n 1 Leah Murphy     Arizona Robbins      2 friends     \n 2 Leah Murphy     Alex Karev           4 benefits    \n 3 Lauren Boswell  Arizona Robbins      1 friends     \n 4 Arizona Robbins Callie Torres        1 friends     \n 5 Callie Torres   Erica Hahn           6 friends     \n 6 Callie Torres   Alex Karev          12 benefits    \n 7 Callie Torres   Mark Sloan           5 professional\n 8 Callie Torres   George O'Malley      2 professional\n 9 George O'Malley Izzie Stevens        3 professional\n10 George O'Malley Meredith Grey        4 friends     \n# … with 47 more rows\n\n\n\n\n\n Download Grey Nodes as csv\n\n\n\n\n Download Grey Edges data as csv\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #1:\n\n\n\nLook at the console output thumbnail.\n\nWhat does for example name = col_character mean?\nWhat attributes (i.e. extra information) are seen for Nodes and Edges?\nUnderstand the data in both nodes and edges as shown in the second and third thumbnails. Write some comments and inferences here."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step-2.create-a-network-object-using-tidygraph",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step-2.create-a-network-object-using-tidygraph",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Step 2.Create a network object using tidygraph:",
    "text": "Step 2.Create a network object using tidygraph:\nKey function:\n\n\ntbl_graph(): (aka “tibble graph”). Key arguments: nodes, edges and directed. Note this is a very versatile command and can take many input forms, such as data structures that result from other packages. Type ?tbl_graph in the Console and see the Usage section.\n\n\nCodega <- tbl_graph(nodes = grey_nodes, \n                edges = grey_edges, \n                directed = FALSE)\nga\n\n# A tbl_graph: 54 nodes and 57 edges\n#\n# An undirected simple graph with 4 components\n#\n# Node Data: 54 × 7 (active)\n  name               sex   race  birthyear position  season sign  \n  <chr>              <chr> <chr>     <dbl> <chr>      <dbl> <chr> \n1 Addison Montgomery F     White      1967 Attending      1 Libra \n2 Adele Webber       F     Black      1949 Non-Staff      2 Leo   \n3 Teddy Altman       F     White      1969 Attending      6 Pisces\n4 Amelia Shepherd    F     White      1981 Attending      7 Libra \n5 Arizona Robbins    F     White      1976 Attending      5 Leo   \n6 Rebecca Pope       F     White      1975 Non-Staff      3 Gemini\n# … with 48 more rows\n#\n# Edge Data: 57 × 4\n   from    to weight type    \n  <int> <int>  <dbl> <chr>   \n1     5    47      2 friends \n2    21    47      4 benefits\n3     5    46      1 friends \n# … with 54 more rows\n\n\n\n\n\n\n\n\nQuestions and Inferences #2:\n\n\n\n\nWhat information does the graph object contain?\nWhat attributes do the nodes have? What about the edges?"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step-3.-plot-using-ggraph",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#step-3.-plot-using-ggraph",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Step 3. Plot using ggraph\n",
    "text": "Step 3. Plot using ggraph\n\n3a. Quick Plot: autograph() This is to check quickly is the data is imported properly and to decide upon going on to a more elaborate plotting.\n\nCodeautograph(ga)\n\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #3:\n\n\n\n\nDescribe this graph, in simple words here.\nTry to use some of the new domain words we have just acquired: nodes/edges, connected/disconnected, directed/undirected.\n\n\n\n3b. More elaborate plot\nKey functions:\n\n\nggraph(layout = \"......\"): Create classic node-edge diagrams; i.e. Sets up the graph. Rather like ggplot for networks!\n\nTwo kinds of geom: one set for nodes, and another for edges\n\ngeom_node_point(aes(.....)): Draws node as “points”. Alternatives are circle / arc_bar / tile / voronoi. Remember the geoms that we have seen before in Grammar of Graphics!\ngeom_edge_link(aes(.....)): Draws edges as “links”. Alternatives are arc / bend / elbow / hive / loop / parallel / diagonal / point / span /tile.\ngeom_node_text(aes(label = ......), repel = TRUE): Adds text labels (non-overlapping). Alternatives are label /...\nlabs(title = \"....\", subtitle = \"....\", caption = \"....\"): Change main titles, axis labels and legend titles. We know this from our work with ggplot.\n\n\nCode# Write Comments next to each line \n# About what that line does for the overall graph\n\nggraph(graph = ga,  layout = \"kk\") +\n  #\n  \n  geom_edge_link(width = 2, color = \"pink\") +\n  #\n  \n  geom_node_point(\n    shape = 21,\n    size = 8,\n    fill = \"blue\",\n    color = \"green\",\n    stroke = 2\n  ) +\n  #\n  \n  labs(title = \"Whoo Hoo! My first silly Grey's Anatomy graph in R!\",\n       subtitle = \"Why did Ramesh put me in this course...\",\n       caption = \"Bro, they are doing **cool** things in the other\n       classes...\")\n\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #4:\n\n\n\n\nWhat parameters have been changed here, compared to the earlier graph?\nWhere do you see these changes in the code above?\n\n\n\nLet us Play with this graph and see if we can make some small changes. Colour? Fill? Width? Size? Stroke? Labs? Of course!\n\nCode# Change the parameters in each of the commands here to new ones\n# Use fixed values for colours or sizes...etc. \n\nggraph(graph = ga,  layout = \"kk\") + \n  geom_edge_link(width = 2) + \n  geom_node_point(shape = 21, size = 8, \n                  fill = \"blue\", \n                  color = \"green\", \n                  stroke = 2) +\n  labs(title = \"Whoo Hoo! My next silly Grey's Anatomy graph in R!\",\n       subtitle = \"Why did Ramesh put me in this course...\",\n       caption = \"Bro, they are doing cool things in the other \n       classes...\")\n\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #5:\n\n\n\n\nWhat did the shape parameter achieve?\nWhat are the possibilities with shape?\nHow about including alpha?\n\n\n\n3c. Aesthetic Mapping from Node and Edge attribute columns\nUp to now, we have assigned specific numbers to geometric aesthetics such as shape and size. Now we are ready ( maybe ?) change the meaning and significance of the entire graph and each element within it, and use aesthetics / metaphoric mappings to achieve new meanings or insights. Let us try using aes() inside each geom to map a variable to a geometric aspect.\nDon’t try to use more than 2 aesthetic mappings simultaneously!!\nThe node elements we can tweak are:\n\nTypes of Nodes: geom_node_****()\n\nNode Parameters: inside geom_node_****(aes(...............))\n\naes(alpha  = node-variable) : opacity; a value between 0 and 1\naes(shape  = node-variable) : node shape\naes(colour = node-variable) : node colour\naes(fill   = node-variable) : fill colour for node\naes(size   = node-variable) : size of node\n\n\n\nThe edge elements we can tweak are:\n\nType of Edges” geom_edge_****()\n\nEdge Parameters: inside geom_edge_****(aes(...............))\n\naes(colour = edge-variable) : colour of the edge\naes(width  = edge-variable) : width of the edge\naes(label  = some_variable) : labels for the edge\n\n\n\nType ?geom_node_point and ?geom-edge_link in your Console for more information.\n\nCodeggraph(graph = ga, layout = \"fr\") +\n  geom_edge_link0(aes(width = weight)) + # add mapping here\n  \n  geom_node_point(aes(color = race), size = 6) + # add mapping here\n\n  # geom_node_label(aes(label = name), # modify this mapping\n  #                 repel = TRUE, max.overlaps = 20,\n  #                 alpha = 0.6,\n  #                 size = 3) +\n\n  labs(title = \"Whoo Hoo! Yet another Grey's Anatomy graph in R!\")\n\n\n\n\nQuestions and Inferences: What did the shape parameter achieve? What are the possibilities with shape? How about including alpha?\n\n\n\n\n\n\nQuestions and Inferences #6:\n\n\n\n\nDescribe some of the changes here.\nWhat types of edges worked?\nWhich variables were you able to use for nodes and edges and how?\ndid not work with either of the two?"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#network-centrality",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#network-centrality",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Network Centrality",
    "text": "Network Centrality\nCentrality is a an “ill-defined” metric of node and edge importance in a network. It is therefore calculated in many ways. Type ?centrality in your Console.\n\n\nStandards\n\n\nLet’s add a few columns to the nodes and edges based on network centrality measures:\n\nCodega %>% \n  activate(nodes) %>% \n  \n  # Most connections?\n  mutate(degree = centrality_degree(mode = c(\"in\"))) %>% \n  filter(degree > 0) %>% \n  \n  activate(edges) %>% \n  # \"Busiest\" edge?\n  mutate(betweenness = centrality_edge_betweenness())\n\n# A tbl_graph: 54 nodes and 57 edges\n#\n# An undirected simple graph with 4 components\n#\n# Edge Data: 57 × 5 (active)\n   from    to weight type     betweenness\n  <int> <int>  <dbl> <chr>          <dbl>\n1     5    47      2 friends         20.3\n2    21    47      4 benefits        44.7\n3     5    46      1 friends         39  \n4     5    41      1 friends         66.3\n5    18    41      6 friends         39  \n6    21    41     12 benefits        91.5\n# … with 51 more rows\n#\n# Node Data: 54 × 8\n  name               sex   race  birthyear position  season sign   degree\n  <chr>              <chr> <chr>     <dbl> <chr>      <dbl> <chr>   <dbl>\n1 Addison Montgomery F     White      1967 Attending      1 Libra       3\n2 Adele Webber       F     Black      1949 Non-Staff      2 Leo         1\n3 Teddy Altman       F     White      1969 Attending      6 Pisces      4\n# … with 51 more rows\n\n\nPackages tidygraph and ggraph can be pipelined to perform analysis and visualization tasks in one go.\n\nCode# setting theme_graph \nset_graph_style()\n\nga %>% \n  activate(nodes) %>% \n  \n  # Who has the most connections?\n  mutate(degree = centrality_degree()) %>% \n  \n  activate(edges) %>% \n  # Who is the go-through person?\n  mutate(betweenness = centrality_edge_betweenness()) %>%\n  \n  # Now to continue with plotting\n  ggraph(layout = \"nicely\") +\n  geom_edge_link(aes(alpha = betweenness)) +\n  geom_node_point(aes(size = degree, colour = degree)) + \n  \n  # discrete colour legend\n  scale_color_gradient(guide = \"legend\")\n\n\n\nCode# or even less typing\n  ggraph(ga,layout = \"nicely\") +\n  geom_edge_link(aes(alpha = centrality_edge_betweenness())) +\n  geom_node_point(aes(colour = centrality_degree(), \n                      size = centrality_degree())) + \n  scale_color_gradient(guide = \"legend\",\n                       low = \"green\",\n                       high = \"red\")\n\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #11:\n\n\n\n\nHow do the Centrality Measures show up in the graph?\nWould you “agree” with the way we have done it?\nTry to modify the aesthetics by copy-pasting this chunk below and see how you can make an alternative representation."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#analyse-and-visualize-network-communities",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#analyse-and-visualize-network-communities",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Analyse and visualize network: communities",
    "text": "Analyse and visualize network: communities\nWho is close to whom? Which are the groups you can see?\n\nCode# setting theme_graph \nset_graph_style()\n\n\n# visualize communities of nodes\nga %>% \n  activate(nodes) %>%\n  mutate(community = as.factor(group_louvain())) %>% \n  ggraph(layout = \"graphopt\") + \n  geom_edge_link() + \n  geom_node_point(aes(color = community), size = 5)\n\n\n\n\n\n\n\n\n\n\nQuestions and Inferences #12:\n\n\n\n\nIs the Community depiction clear?\nHow would you do it, with which aesthetic?\nCopy Paste this chunk below and try an alternative representation."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make-1-with-a-ready-made-dataset",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make-1-with-a-ready-made-dataset",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Make-1 : With a ready made dataset",
    "text": "Make-1 : With a ready made dataset\nStep 1. Fire up a new RMarkdown. Write your name, file_name and date.\nStep 2. Take any one of the “Make1-Datasets” datasets decribed below.\nStep 3. RMarkdown contents:\n\nIntroduce / Inspect in R your data and describe\nIntroduce your Purpose\nCreate graph objects.\nWrite comments in the code\nWrite narrative in text with sections, bold ,italic etc.\n\nStep 4. Knit before you submit. Submit only your knittable .Rmd file."
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make1---datasets",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make1---datasets",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Make1 - Datasets:",
    "text": "Make1 - Datasets:\n\nAirline Data:\n\n\nStart with this bit of code in your second chunk, after set up\n\n\n\nCodeairline_nodes <- read_csv(\"./Data/AIRLINES-NODES.csv\") %>% mutate(Id = Id + 1)\nairline_edges <- read_csv(\"./Data/AIRLINES-EDGES.csv\") %>%\nmutate(Source = Source + 1, Target = Target + 1)\n\n\n\n\n\n Download data as csv\n\n\n\n\n Download data as csv\n\n\n\n\nThe Famous Zachary Karate Club dataset\n\n\nStart with pulling this data into your Rmarkdown:\n\ndata(\"karate\",package= \"igraphdata\")\nkarate\n\nTry ?karate in the console\nNote that this is not a set of nodes, nor edges, but already a graph-object!\nSo no need to create a graph object using tbl_graph.\nYou will need to just go ahead and plot using ggraph.\n\n\nGame of Thrones:\n\n\nStart with pulling this data into your Rmarkdown:\n\n\nCodeGoT <- read_rds(\"./Data/GoT.RDS\")\n\n\n\n\n\n Download data as RDS\n\n\n\n\nNote that this is a list of 7 graphs from Game of Thrones.\nSelect one using GoT[[index]] where index = 1…7 and then plot directly.\nTry to access the nodes and edges and modify them using any attribute data\n\n\nAny other graph dataset from igraphdata (type ?igraphdata in console)\n\n\nAsk me for help if you need any"
  },
  {
    "objectID": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make-2-literary-network-with-tv-show-book-story-play",
    "href": "courses/R-for-Artists/100-GoN/07-Grammar-of-Networks.html#make-2-literary-network-with-tv-show-book-story-play",
    "title": "Lab 07 - The Grammar of Networks",
    "section": "Make-2: Literary Network with TV Show / Book / Story / Play",
    "text": "Make-2: Literary Network with TV Show / Book / Story / Play\nThis is in groups. Groups of 4. To be announced\nYou need to create a Network Graph for your favourite Book, play, TV serial or Show. (E.g. Friends, BBT, or LB or HIMYM…or Hamlet, Little Women , Pride and Prejudice, or LoTR)\nStep 1. Go to: Literary Networks for instructions. (Instructions are on also Teams -> Files.)\nStep 2. Make your data using the instructions.\n\nIn the nodes excel, use id and names as your columns. Any other details in other columns to the right.\nIn your edges excel, use from and to are your first columns. Entries in these columns can be names or ids but be consistent and don’t mix.\n\nStep 3. Decide on 3 answers that you to seek and plan to make graphs for.\nStep 4. Create graph objects. Say 3 visualizations.\nStep 5. Write comments/answers in the code and narrative text. Add pictures from the web using Markdown syntax.\nStep 6. Write Reflection ( ok, a short one!) inside your RMarkdown. Make sure it knits!!\nStep 7. Group Submission: Submit the knittable .Rmd file AND the data. RMarkdown with joint authorship. Each person submits on their Assignments. All get the same grade on this one.\nAsk me for clarifications on what to do after you have read the Instructions in your group."
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/index.html#introduction",
    "href": "courses/R-for-Artists/110-GoD/index.html#introduction",
    "title": "Lab-11: The Queen of Hearts, She Made some Tarts",
    "section": "Introduction",
    "text": "Introduction\nWe can use R to create complicated diagrams too ! Flow charts, Gantt charts, Org charts…all with R. We will use packages such as nomnoml and DiagrammeR to achieve these ends."
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html",
    "title": "The Grammar of Diagrams",
    "section": "",
    "text": "There are many presentation and drawing tools out there. And these allow the user full control over the diagram so generally result in prettier diagrams that can convey more information to the audience at that point in time.\nBut that point in time passes, and pretty pictures can quickly become out-of-date and, ironically, misinforming if they don’t match the reality of the system they are describing. This is especially so if one team is drawing the pretty pictures, and another team is writing the software/implementing the system.\nHaving diagrams as code that can live beside the system design/code, that the stakeholders are equally comfortable editing and viewing,reduces the gap i.e. “Where system diagrams meet system reality”.\nWe will “explore” two packages to do this: DiagrammeR and nomnoml. Each of these follows a specific grammar so that sets of “sentences” will morph into very different kinds of diagrams."
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram",
    "text": "Sequence Diagram\nLook at the code below: What do you think it represents?\n\nCodeDiagrammeR(\"\nsequenceDiagram\nArvind ->> Anamika: Why are you late today?\nAnamika ->> Anamika: Ulp...\nAnamika ->> Arvind: I am sorry... <br> may I come in please?\n\nArvind ->> Komal: And you? What kept you?\nKomal ->> Anamika: (Quietly) He's having a bad day, dude...\nAnamika ->> Komal: (Whisper) Boomer...\n\")\n\n\n\n\n\nThis is a simple Sequence Diagram! Shows a strictly imaginary exchange between a pair of students and an unknown Faculty Member.\nLet us now see how we can embellish this kind of diagram. Can we have a Garden of Forking Paths?\n\nCodeDiagrammeR(\"\n  graph LR\n    A-->B\n    A-->C\n    C-->E\n    B-->D\n    C-->D\n    D-->F\n    E-->F\n\")\n\n\n\n\n\n\nCodeDiagrammeR(\"\n        sequenceDiagram\n        \n        alt Anamika is always punctual\n        Arvind ->> Anamika: Why haven't you put up your Daily Reflection?\n        Anamika ->> Anamika: Ulp...\n        Note right of Anamika : I have had it today..\n        Anamika ->> Arvind: I am sorry... \n        Arvind ->> Anamika: Ok write it today\n        \n        else Anamika is usually tardy\n        Arvind ->> Anamika: Why haven't you put up your Daily Reflection?\n        Anamika ->> Anamika: Ulp...\n        Anamika ->> Arvind: I am sorry... \n        Arvind ->> Anamika: This is not acceptable and will reflect in your grade\n        end\n        \n        Arvind ->> Komal: And you? What kept you?\n        Komal ->> Anamika: (Quietly) He's having a bad day, dude...\n        Anamika ->> Komal: (Whisper) Boomer...\n        Note over Anamika,Komal: Giggle...\n\")\n\n\n\n\n\n\nFrom here: https://cyberhelp.sesync.org/blog/visualization-with-diagrammeR.html\n\nCodegrViz(\"digraph{\n\n      graph[rankdir = LR]\n  \n      node[shape = rectangle, style = filled]\n  \n      node[fillcolor = Coral, margin = 0.2]\n      A[label = 'Figure 1: Map']\n      B[label = 'Figure 2: Metrics']\n  \n      node[fillcolor = Cyan, margin = 0.2]\n      C[label = 'Figures.Rmd']\n  \n      node[fillcolor = Violet, margin = 0.2]\n      D[label = 'Analysis_1.R']\n      E[label = 'Analysis_2.R']\n  \n      subgraph cluster_0 {\n        graph[shape = rectangle]\n        style = rounded\n        bgcolor = Gold\n    \n        label = 'Data Source 1'\n        node[shape = rectangle, fillcolor = LemonChiffon, margin = 0.25]\n        F[label = 'my_dataframe_1.csv']\n        G[label = 'my_dataframe_2.csv']\n      }\n  \n      subgraph cluster_1 {\n         graph[shape = rectangle]\n         style = rounded\n         bgcolor = Gold\n    \n         label = 'Data Source 2'\n         node[shape = rectangle, fillcolor = LemonChiffon, margin = 0.25]\n         H[label = 'my_dataframe_3.csv']\n         I[label = 'my_dataframe_4.csv']\n      }\n  \n      edge[color = black, arrowhead = vee, arrowsize = 1.25]\n      C -> {A B}\n      D -> C\n      E -> C\n      F -> D\n      G -> D\n      H -> E\n      I -> E\n      \n      }\")\n\n\n\n\n\n\nCodemermaid(\"\n        graph BT\n        A((Salinity))\n        A-->B(Barnacles)\n        B-.->|-0.10|B1{Mussels}\n        A-- 0.30 -->B1\n\n        C[Air Temp]\n        C-->B\n        C-.->E(Macroalgae)\n        E-->B1\n        C== 0.89 ==>B1\n\n        style A fill:#FFF, stroke:#333, stroke-width:4px\n        style B fill:#9AA, stroke:#9AA, stroke-width:2px\n        style B1 fill:#879, stroke:#333, stroke-width:1px\n        style C fill:#ADF, stroke:#333, stroke-width:2px\n        style E fill:#9C2, stroke:#9C2, stroke-width:2px\n\n        \")\n\n\n\n\n\n\nCodeDiagrammeR(\"\nsequenceDiagram\n  Arvind ->>ticket seller: ask ticket\n  ticket seller->>database: seats\n  alt tickets available\n    database->>ticket seller: ok\n    ticket seller->>customer: confirm\n    Arvind ->>ticket seller: ok\n    ticket seller->>database: book a seat\n    ticket seller->>printer: print ticket\n  else sold out\n    database->>ticket seller: none left\n    ticket seller->>customer: sorry\n  end\n\")\n\n\n\n\n\n\nCodeDiagrammeR(\n\"graph TB;\nA(Rounded)-->B[Squared];\nB-->C{A Decision};\nC-->D[Square One];\nC-->E[Square Two];\n\n%% Now styling these blocks\nstyle A fill:#E5E25F;  \nstyle B fill:#87AB51; \nstyle C fill:#3C8937;\nstyle D fill:#23772C;  \nstyle E fill:#B6E6E6;\n\"\n)\n\n\n\n\n\n\nCode  grViz(\"\ndigraph boxes_and_circles {\n\n  # a 'graph' statement\n  graph [overlap = true, fontsize = 10,forcelabels = true]\n\n  # several 'node' statements\n  node [shape = box,fontname = Helvetica, color = red, style = filled]\n  A[label = 'This is \\\\n an internal \\\\n label', xlabel = 'This is \\\\nan external \\\\nlabel']; B; C; D; E; F\n\n  node [shape = circle, fixedsize = true, color = palegreen, width = 0.9] // sets as circles\n  1; 2; 3; 4; 5; 6; 7; 8\n\n  # several 'edge' statements\n  A->{1,2,3,4} B->2 B->3 B->4 C->A\n  1->D E->A 2->4 1->5 1->F\n  E->6 4->6 5->7 6->7 3->8 3->1\n}\n\")"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-2",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-2",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram-2",
    "text": "Sequence Diagram-2"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-3",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#sequence-diagram-3",
    "title": "The Grammar of Diagrams",
    "section": "Sequence Diagram 3",
    "text": "Sequence Diagram 3"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#mindmap",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#mindmap",
    "title": "The Grammar of Diagrams",
    "section": "Mindmap",
    "text": "Mindmap"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#gantt-chart",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#gantt-chart",
    "title": "The Grammar of Diagrams",
    "section": "Gantt Chart",
    "text": "Gantt Chart"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#flow-chart",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#flow-chart",
    "title": "The Grammar of Diagrams",
    "section": "Flow chart",
    "text": "Flow chart"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#some-definitions-on-the-grammar-of-shapes-in-nomnoml",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#some-definitions-on-the-grammar-of-shapes-in-nomnoml",
    "title": "The Grammar of Diagrams",
    "section": "Some definitions on the “grammar of shapes” in nomnoml\n",
    "text": "Some definitions on the “grammar of shapes” in nomnoml\n\n\nAssociation Types: Connectors between blocks( i.e. Classifiers)\nClassifier Types: Kinds of blocks.\nDirective Types: Directives change the nature of the diagram rendered, by affective parameters like colour, direction and margins. ( Ha! VC people!!)\n\nCSS colours https://www.w3schools.com/cssref/css_colors.asp Only these colours are permitted, so use either the names or these specific colour hash codes. Any general hash code will not render.\n\nCode//association-1\n[a] - [b] \n\n//association-2\n[b] -> [c] \n\n//association_3\n[c] <-> [a]\n\n//dependency-1\n[a] <-->[d]\n\n//dependency-2\n#.ell: visual=ellipse fill=#fbfb09 bold\n#.arvind: visual=rhomb fill=#ff2234 bold\n[<ell>e]-->[a]\n//generalization-1\n[c]-:>[<arvind>k]\n\n//implementation --:>\n[k]--:>[d]\n\n\n\n\n\n\nCode//composition +-\n[a]+-[b]\n//composition +->\n[b]-+[c]\n//aggregation o-\n[c]o->[d]\n//aggregation o->\n[d]o->[a]\n//note --\n[d]--[everything happens;here]\n//hidden -/-\n[d]-/-[f]\n////////////////////////\n//weightless edge _>\n//[k]_>[d] //not working\n//weightless dashed__\n//[d]__[j] //not working\n\n\n\n\n\nClassifier Types\nThese are different kinds of blocks.\n\nCode[class]->[<abstract> abstract]\n[<abstract> abstract]-:>[<instance> instance]\n[<instance> instance]-:>[<note> note]\n[<note> note]-->[<reference> reference]\n\n\n\n\n\n\nCode[<package> package|components]-->[<frame> frame|]\n[<database> database]-->[<start> start]\n[<end> end]-o>[<state> state]\n\n\n\n\n\n\nCode[<choice> choice]--->[<sync> sync]\n[<input> input]->[<sender> sender]\n[<receiver> receiver]o-[<transceiver> transceiver]\n\n\n\n\n\n\nCode#direction:down\n#background:lightgrey\n#fill: fuchsia; green; purple\n#fillArrows: false\n#font: Courier\n[class]->[<abstract> abstract]\n[<abstract> abstract]-:>[<instance> instance]\n[<instance> instance]-:>[<note> note]\n[<note> note]-->[<reference> reference]\n\n\n\n\n\n\nCode#font: CenturySchoolbook\n#fill: lightyellow\n#stroke: green\n\n[<actor> actor]---[<usecase> usecase]\n[<usecase> usecase]<-->[<label> label]\n[<usecase> usecase]-/-[<hidden> hidden]\n\n\n\n\n\n\nCode[<table> table| a | 5 || b | 7]\n\n\n\n\n\n\n\nCode[<table> table| c | 9 ]"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#directives",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#directives",
    "title": "The Grammar of Diagrams",
    "section": "Directives",
    "text": "Directives\nDirectives change the nature of the diagram rendered, by affective parameters like colour, direction and margins."
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#custom-classifier-styles",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#custom-classifier-styles",
    "title": "The Grammar of Diagrams",
    "section": "Custom classifier styles",
    "text": "Custom classifier styles\nA directive that starts with “.” define a classifier’s style. The style is written as a space separated list of modifiers and key/value pairs.\n\nCode#.box: fill=#8f8 dashed\n#.blob: visual=ellipse title=bold\n#.arvind: visual=rhomb title=bold dashed fill=CornFlowerBlue\n[<box> GreenBox]\n[<blob> Blobby]\n[<arvind> Someone]"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#nomnoml-keyvalue-pairs",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#nomnoml-keyvalue-pairs",
    "title": "The Grammar of Diagrams",
    "section": "\nnomnoml Key/value pairs",
    "text": "nomnoml Key/value pairs\n\nfill=(any css color)\nstroke=(any css color)\nalign=center align=left\ndirection=right direction=down\nvisual=actor\nvisual=class\nvisual=database\nvisual=ellipse\nvisual=end\nvisual=frame\nvisual=hidden\nvisual=input\nvisual=none\nvisual=note\nvisual=package\nvisual=receiver\nvisual=rhomb\nvisual=roundrect\nvisual=sender\nvisual=start\nvisual=sync\nvisual=table\nvisual=transceiver"
  },
  {
    "objectID": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#text-modifiers",
    "href": "courses/R-for-Artists/110-GoD/08-Grammar-of-Diagrams.html#text-modifiers",
    "title": "The Grammar of Diagrams",
    "section": "Text modifiers",
    "text": "Text modifiers\nbold center italic left underline\n\nCode# .box: fill=#8f8 dashed\n# .blob: visual=rhomb title=bold fill=#8f8 dashed\n\n[A]-[B]\n[B]--[<usecase>C]\n[C]-[<box> D]\n[B]--[<blob> Jabba;TheHut]\n\n\n\n\n\n\nCode[a] ->[b]\n[b] -:> [c]\n[c]o->[d]\n[d]-/-[e]\n\n\n\n\n\n\nCode#fill: lightgreen; lightblue; lightyellow; grey; white\n\n[<table> table | c | 9 ]\n\n[R | [<table> Packages |\n         Base R |\n         [ <table> tidyverse| ggplot | tidyr | readr |\n             [<table> dplyr|\n                 magrittr | Others]]]]\n\n\n\n\n\n\n\nCode#fill: lightgreen; lightblue; lightyellow; pink; white\n\n[RStudio | [R | [<table> Packages |\n                   Base R | [ tidyverse |\n                               ggplot | tidyr | readr |\n                               [dplyr]--[magrittr]\n                               [dplyr]--[Others]\n                             | tibble\n                             ]\n                 | lubridate | DiagrammeR | Lattice]]]\n\n\n\n\n\n\n\nCode[Linux]+-[Ubuntu]\n[Linux]+-[Mint]\n[Ubuntu]--[Mint]\n[Linux]+-[Rosa Linux]\n[Linux]+-[Mx Linux]\n[Debian]-+[Linux]\n\n\n[Fedora]-+[Linux]\n[Puppy Linux]-+[Linux]\n[Personal Pups]-+[Puppy Linux]"
  }
]