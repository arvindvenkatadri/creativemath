[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Quarto Website",
    "section": "",
    "text": "This is a Quarto website. And I cannot get menus going !!!!!\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n\n\n\nggplot(diamonds, aes(x = carat, y = price)) + geom_point(alpha = 0.2) + theme_classic()"
  },
  {
    "objectID": "posts/01-intro/history.html",
    "href": "posts/01-intro/history.html",
    "title": "Boston Terrier",
    "section": "",
    "text": "The Boston Terrier is a breed of dog originating in the United States of America. This “American Gentleman” was accepted in 1893 by the American Kennel Club as a non-sporting breed.1 Color and markings are important when distinguishing this breed from the AKC standard. They should be either black, brindle or seal with white markings.2 Boston Terriers are small and compact with a short tail and erect ears. The AKC says they are highly intelligent and very easily trained.3 They are friendly and can be stubborn at times. The average life span of a Boston Terrier is around 11 to 13 years.4 The American Kennel Club ranked the Boston Terrier as the 21st most popular breed in 2019.5"
  },
  {
    "objectID": "posts/01-intro/history.html#history",
    "href": "posts/01-intro/history.html#history",
    "title": "Boston Terrier",
    "section": "History",
    "text": "History\n\n\n\n\n\n\nTerrier Seated\n\n\n\n\nThe Boston terrier breed originated around 1875, when Robert C. Hooper of Boston purchased from Edward Burnett a dog named Judge (known later as Hooper’s Judge), which was of a bull and terrier type lineage. Hooper’s Judge is directly related to the original bull and terrier breeds of the 19th and early 20th centuries. The American Kennel Club cites Hooper’s Judge as the ancestor of all true modern Boston Terriers. Judge weighed about 32 pounds (15 kg).\n\n\n\n\nJudge was bred to Burnett’s Gyp (or Kate). Gyp was a white bulldog-type female, owned by Edward Burnett, of Southboro, Massachusetts. She weighed about 20 pounds (9.1 kg), was stocky and strong and had the typical blocky head now shown in Bostons. From this foundation of the breed, subsequent breeders refined the breed into its modern day presentation. Bred down in size from fighting dogs of the bull and terrier types, the Boston Terrier originally weighed up to 44 pounds (20 kg) (Old Boston Bulldogs).\n\n\n\n\n\n\n\nA young male Boston Terrier with a Brown brindle coat\n\nThe breed was first shown in Boston in 1870. By 1889 the breed had become sufficiently popular in Boston that fanciers formed the American Bull Terrier Club, the breed’s nickname, “roundheads”. Shortly after, at the suggestion of James Watson (a noted writer and authority), the club changed its name to the Boston Terrier Club and in 1893 it was admitted to membership in the American Kennel Club, thus making it the first US breed to be recognized. It is one of a small number of breeds to have originated in the United States. The Boston Terrier was the first non-sporting dog breed in the US.\nIn the early years, the color and markings were not very important to the breed’s standard. By the 20th century the breed’s distinctive markings and color were written into the standard, becoming an essential feature. The Boston Terrier has lost most of its aggressive nature, preferring the company of humans, although some males will still challenge other dogs if they feel their territory is being invaded. Boston University has used Rhett the Boston Terrier as their mascot since 1922. Wofford College in Spartanburg, SC has had a live Boston Terrier mascot named Blitz since 2003 that attends home football games. The Boston Terrier has also been the official state dog of Massachusetts since 1979."
  },
  {
    "objectID": "posts/01-intro/history.html#description",
    "href": "posts/01-intro/history.html#description",
    "title": "Boston Terrier",
    "section": "Description",
    "text": "Description\nThe Boston Terrier is a compactly built, well-proportioned dog. It has a square-looking head with erect ears and a slightly arched neck. The muzzle is short and generally wrinkle-free, with an even or a slightly undershot bite. The chest is broad and the tail is short. According to international breed standards, the dog should weigh no more than 25 pounds (11 kg). Boston Terriers usually stand up to 15–17 inches (380–430 mm) at the withers.\nThe American Kennel Club divides the breed into three classes: under 15 pounds, 15 pounds and under 20 pounds, 20 pounds and not exceeding 25 pounds.\n\nCoat and color\nThe Boston Terrier is characteristically marked with white in proportion to either black, brindle, seal (color of a wet seal, a very dark brown that looks black except in the bright sun), or a combination of the three. Any other color is not accepted as a Boston Terrier by the American Kennel Club, as they are usually obtained by crossbreeding with other breeds and the dog loses its characteristic “tuxedo” appearance.6 Any Boston Terrier from AKC parentage regardless of the color, or if it is a splash or has a blue eye or weak ears, can be and are registered by the AKC and participate in any AKC sporting events.\n\n\n\n\nA female Boston Terrier with a black coat\n\nAccording to the American Kennel Club, the Boston Terrier’s markings are broken down into two categories: Required, which consists of a white chest, white muzzle band, and a white band between the eyes; and Desired, which includes the Required markings plus a white collar, white on the forelegs, forelegs, up to the hocks on the rear legs. For conformation showing, symmetrical markings are preferred. Due to the Boston Terrier’s markings resembling formal wear, in addition to its refined and pleasant personality, the breed is commonly referred to as “the American Gentleman.”\n\n\n\n\nAn adult male Boston Terrier with a black coat"
  },
  {
    "objectID": "posts/01-intro/history.html#temperment",
    "href": "posts/01-intro/history.html#temperment",
    "title": "Boston Terrier",
    "section": "Temperment",
    "text": "Temperment\nBoston Terrier is a gentle breed that typically has a strong, happy-go-lucky, and friendly personality with a merry sense of humor. Boston Terriers are generally eager to please their owner and can be easily trained. They can be very protective of their owners, which may result in aggressive and territorial behavior toward other pets and strangers. The breed requires only a minimal amount of grooming.\nWhile originally bred for fighting as well as hunting rats in garment factories, they were later bred for companionship. They are not considered terriers by the American Kennel Club, however, but are part of the non-sporting group.\nBoth females and males are generally quiet and bark only when necessary, Their usually sensible attitude toward barking makes them excellent choices for apartment dwellers. They enjoy being around people, get along well with children, the elderly, other canines, and non-canine pets, if properly socialized."
  },
  {
    "objectID": "posts/01-intro/history.html#grooming",
    "href": "posts/01-intro/history.html#grooming",
    "title": "Boston Terrier",
    "section": "Grooming",
    "text": "Grooming\nWith a short, shiny, smooth coat, Boston Terriers require little grooming. Bostons produce light shedding, and weekly brushing of their fine coat is effective at removing loose hair. Brushing promotes the health of the coat because it distributes skin oils, and it also encourages new hair growth. Occasional bathing is suitable for the breed.7\nThe nails of Boston Terriers require regular trimming. Overgrown nails not only have the potential to inflict pain on the breed, but they can also make walking difficult or tear off after getting snagged on something.\nSimilarly to nail trimming, tooth brushing should also be done regularly to promote good oral health. The risk of the breed developing oral pain, gum infection, or bad breath can be decreased with regular tooth brushing that removes plaque buildup and other bacteria. In addition, poor dental hygiene can lead to tooth root abscesses that can lead to damage around the tissue and eventually lead to the loss of teeth."
  },
  {
    "objectID": "posts/02-authoring/callout-boxes.html",
    "href": "posts/02-authoring/callout-boxes.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": ":::{.callout-note}\nNote that there are five types of callouts, including:\n`note`, `warning`, `important`, `tip`, and `caution`.\n:::\n\n:::{.callout-tip}\n## Tip With Caption\n\nThis is an example of a callout with a caption.\n:::\n:::{.callout-caution collapse=\"true\"}\n## Expand To Learn About Collapse\n\nThis is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make a collapsible callout that is expanded by default.\n:::"
  },
  {
    "objectID": "posts/02-authoring/figure-layout.html",
    "href": "posts/02-authoring/figure-layout.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "# returns a tibble of the files\nfs::dir_info(here::here(\"materials/images\"))\n\n# A tibble: 6 × 18\n  path              type    size permi…¹ modification_time   user  group devic…²\n  <fs::path>        <fct> <fs::> <fs::p> <dttm>              <chr> <chr>   <dbl>\n1 …nTerrier001.jpeg file   31.1K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n2 …den_Forever.jpeg file   18.7K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n3 …errier_male.jpeg file   54.8K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n4 …boston-sleep.png file  101.6K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n5 …ston-terrier.png file   72.7K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n6 …ic_Library).jpeg file   32.1K rw-     2022-12-29 16:20:01 <NA>  <NA>   2.93e9\n# … with 10 more variables: hard_links <dbl>, special_device_id <dbl>,\n#   inode <dbl>, block_size <dbl>, blocks <dbl>, flags <int>, generation <dbl>,\n#   access_time <dttm>, change_time <dttm>, birth_time <dttm>, and abbreviated\n#   variable names ¹​permissions, ²​device_id\n\n\n\n# returns paths/files\nfs::dir_ls(here::here(\"materials/images\"))\n\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/330px-BostonTerrier001.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/330px-Boston_Terrier_Eden_Forever.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/330px-Boston_Terrier_male.jpeg\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/boston-sleep.png\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/boston-terrier.png\nC:/Users/Arvind/Documents/R work/MyWebsites/my-quarto-website/materials/images/Terrier_Seated_(Boston_Public_Library).jpeg"
  },
  {
    "objectID": "posts/02-authoring/figure-layout.html#figures",
    "href": "posts/02-authoring/figure-layout.html#figures",
    "title": "Arvind Venkatadri",
    "section": "Figures",
    "text": "Figures\nBasic markdown syntax:\n![Boston Terrier](materials/images/boston-terrier.png)\n\n\n\nBoston Terrier"
  },
  {
    "objectID": "posts/02-authoring/figure-layout.html#fragments",
    "href": "posts/02-authoring/figure-layout.html#fragments",
    "title": "Arvind Venkatadri",
    "section": "Fragments",
    "text": "Fragments\n\n\n![Boston terrier](images/boston-terrier.png){fig-align=\"left\"}\n\n\n![](images/boston-terrier.png){fig-align=\"right\" fig-alt=\"A photo a Boston Terrier.\"}"
  },
  {
    "objectID": "posts/02-authoring/figure-layout.html#subfigures",
    "href": "posts/02-authoring/figure-layout.html#subfigures",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures\n::: {#fig-bostons layout-ncol=2}\n\n![Excited](images/boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](images/boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard\n\n:::"
  },
  {
    "objectID": "posts/02-authoring/figure-layout.html#subfigures-1",
    "href": "posts/02-authoring/figure-layout.html#subfigures-1",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\nFigure 1: Two states of Howard"
  },
  {
    "objectID": "posts/02-authoring/markdown-syntax.html",
    "href": "posts/02-authoring/markdown-syntax.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "DELETE THIS SECTION WHEN COMPLETED\n\nAdd a title and author to the YAML header. Add a table of contents as well.\nAdd two major sections with level two headers\n\n\nAdd a subsection to one of your major sections\n\n\nCreate a 3 row x 2 col table, populate with a column for restaurant + column for cuisine, and then add 3 examples.\nAdd an image link to a web image you have chosen and a local image.\nUse any markdown syntax that you can recall from the slides or refresh your memory from https://quarto.org/docs/authoring/markdown-basics.html"
  },
  {
    "objectID": "posts/03-computation/auto-complete.html",
    "href": "posts/03-computation/auto-complete.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "In the above YAML section, try out tab-autocompletion.\n\nWe want format of html\nadd a theme\nadd a table of contents and position on left\nAdd a title and author\n\n\n\nIn the below code-chunk\n\nUse the hashpipe\nAdd an echo with fenced code\nMake the chunk not evaluate\nSet the figure width to 6\nSet the figure height to 4\nRemember there is tab-completion AND ctrl + space for “search”"
  },
  {
    "objectID": "posts/03-computation/inline-code.html",
    "href": "posts/03-computation/inline-code.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.0 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(palmerpenguins)\nThe dataset contains 344 penguin size measurements from Adelie, Gentoo, Chinstrap species across Torgersen, Biscoe, Dream islands.."
  },
  {
    "objectID": "posts/03-computation/inline-code.html#what-about-formatting",
    "href": "posts/03-computation/inline-code.html#what-about-formatting",
    "title": "Arvind Venkatadri",
    "section": "What about formatting?",
    "text": "What about formatting?\n\npen_summary <- penguins |> \n  group_by(species) |> \n  summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))\n\nThe average body mass by species is 3700.6622517, 3733.0882353, 5076.0162602.\nWe can do better!\n\nbody_mass <- scales::label_number(big.mark = \",\", accuracy = 0.1, suffix = \"g\")(pull(pen_summary, avg_mass))\n\nbody_mass\n\n[1] \"3,700.7g\" \"3,733.1g\" \"5,076.0g\"\n\n\nThe average body mass by species is 3,700.7g, 3,733.1g, 5,076.0g.\nWe can still do better!\n\nmass_reporter <- glue::glue_collapse(body_mass, sep = \", \", last = \", and \")\n\nThe average body mass by species is 3,700.7g, 3,733.1g, and 5,076.0g."
  },
  {
    "objectID": "posts/03-computation/inline-code.html#reporting-with-lists",
    "href": "posts/03-computation/inline-code.html#reporting-with-lists",
    "title": "Arvind Venkatadri",
    "section": "Reporting with lists",
    "text": "Reporting with lists\nCredit to TJ Mahr\n\nknitted <- list(\n  when = format(Sys.Date()),\n  with = system(\"quarto --version\", intern = TRUE)\n)\n\nReported prepared on 2023-01-01 with quarto version 1.2.280."
  },
  {
    "objectID": "posts/03-computation/penguin-analysis.html",
    "href": "posts/03-computation/penguin-analysis.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "Insert three total code chunks\nChunk 1: load tidyverse and palmerpenguins R packages and print the penguins dataset with glimpse()\nChunk 2: Create a summary by sex/species of the average and median body weight and bill length\nChunk 3: Create a plot of body mass (x) by bill length (y)\nRender it!"
  },
  {
    "objectID": "posts/03-computation/visual-editor.html",
    "href": "posts/03-computation/visual-editor.html",
    "title": "Visual Editor for Quarto",
    "section": "",
    "text": "RStudio 2022.07.1 comes with support for the Visual Mode of editing Quarto and other markdown-based files!\nThis is a WYSIWYM editor, meaning:\n\nWYSIWYM is an acronym that stands for What you see is what you mean. This was positioned to not be confused with WYSIWYG (what you see is what you get). The idea behind WYSIWYG is to display text on screen in much the exact same way as they will appear when printed on paper.\n\n\nWYSIWYM means that it can be translated differently, (where) the same content can lead to different output formats .\n\nThe Visual Markdown mode in RStudio allows for editing in plain text or visual mode, along with a visual representation of what it will actually look like while maintaining the ability to output to HTML or PDF.\nFull guide guide from the RStudio dev team that covers all the major topics and sub topics of the new features.\n\n\n\nOS\nDownload\nSize\nSHA-256\n\n\n\n\nWindows 10/11\nRStudio-2022.07.1-554.exe(opens in a new tab)\n\n190.14 MB\n5ab6215b\n\n\nmacOS 10.15+\nRStudio-2022.07.1-554.dmg(opens in a new tab)\n\n221.04 MB\n7b1a2285\n\n\nUbuntu 18+/Debian 10+\nrstudio-2022.07.1-554-amd64.deb(opens in a new tab)\n\n132.91 MB\n74b9e751\n\n\nUbuntu 22\nrstudio-2022.07.1-554-amd64.deb(opens in a new tab)\n\n145.33 MB\n92f2ab75\n\n\nFedora 19/Red Hat 7\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n103.29 MB\n0fc15d16\n\n\nFedora 34/Red Hat 8\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n149.77 MB\n0c4ef334\n\n\nOpenSUSE 15\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n133.76 MB\n45f277d0\n\n\n\n\n\n\n\nMarkdown documents can be edited in either source or visual button at the top-right of the document toolbar (or alternatively the ⌘ + ⇧ + F4 keyboard shortcut):\n\n\n\n\nPlease see long section of the guide.\n\n\n\nIf you have a workflow that involves editing in both visual and source mode, you may want to ensure that the same markdown is written no matter which mode edits originate from. You can accomplish this using the canonical option. For example:\n---\ntitle: \"My Document\"\neditor_options:\n  markdown:\n    wrap: 72\n    references: \n      location: block\n    canonical: true\n---\n\n\n\nThe editor toolbar includes buttons for the most commonly used formatting commands:\n\nAdditional commands are available on the Format, Insert, and Table menus:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommand\nKeyboard Shortcut\nMarkdown Shortcut\n\n\n\n\nBold\n⌘ B\n**bold**\n\n\nItalic\n⌘ I\n*italic*\n\n\nCode\n⌘ D\n`code`\n\n\nLink\n⌘ K\n<href>\n\n\nHeading 1\n⌥⌘ 1\n#\n\n\nHeading 2\n⌥⌘ 2\n##\n\n\nHeading 3\n⌥⌘ 3\n###\n\n\nR Code Chunk\n⌥⌘ I\n```{r}\n\n\n\nYou can also use the catch-all ⌘/ shortcut to insert just about anything. Just execute the shortcut then type what you want to insert. For example:\nUse the bullet\n\nOutput\n\nOr numbered\n\nNumber list!\n\nHere’s a link - how to turn into an image?\n\n\n\nEXAMPLE LINK: https://rstudio.github.io/visual-markdown-editing/images/visual-editing-omni-list.png"
  },
  {
    "objectID": "posts/03-computation/visual-editor.html#equations",
    "href": "posts/03-computation/visual-editor.html#equations",
    "title": "Visual Editor for Quarto",
    "section": "Equations",
    "text": "Equations\nLaTeX equations are authored using standard Pandoc markdown syntax (the editor will automatically recognize the syntax and treat the equation as math). When you aren’t directly editing an equation it will appear as rendered math:\n\\[\nP(E) = {n \\choose k} p^k (2-p)^{n-k}\n\\]\n\n\nFootnotes\n\nYou can include footnotes using the Insert -> Footnote command (or the ⇧ ⌘ F7 keyboard shortcut). Footnote editing occurs in a pane immediately below the main document:1 <- NOTE THE FOOTMARK"
  },
  {
    "objectID": "posts/03-computation/visual-editor.html#inserting-citations",
    "href": "posts/03-computation/visual-editor.html#inserting-citations",
    "title": "Visual Editor for Quarto",
    "section": "Inserting Citations",
    "text": "Inserting Citations\nYou insert citations by either using the Insert -> Citation command or by using markdown syntax directly (e.g. [@cite]).\nCitations go inside square brackets and are separated by semicolons. Each citation must have a key, composed of ‘@’ + the citation identifier from the database, and may optionally have a prefix, a locator, and a suffix. The citation key must begin with a letter, digit, or _, and may contain alphanumerics, _, and internal punctuation characters (:.#$%&-+?<>~/). Here are some examples:\n\n(Rottman-Sagebiel et al. 2018)\n\nDEMO OF CITATION WITH INSERT"
  },
  {
    "objectID": "posts/03-computation/visual-editor.html#embedded-code",
    "href": "posts/03-computation/visual-editor.html#embedded-code",
    "title": "Visual Editor for Quarto",
    "section": "Embedded Code",
    "text": "Embedded Code\nSource code which you include in an Quarto document can either by for display only or can be executed by knitr as part of rendering. Code can furthermore be either inline or block (e.g. an Rmd code chunk).\n\nDisplaying Code\nTo display but not execute code, either use the Insert -> Code Block menu item, or start a new line and type either:\n\n``` (for a plain code block); or\n```<lang> (where <lang> is a language) for a code block with syntax highlighting.\n\nThen press the Enter key. To display code inline, simply surround text with backticks (`code`), or use the Format -> Code menu item.\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %>% \n  ggplot(aes(x = body_weight_g, y = flipper_length_mm, color = species)) +\n  geom_point()\n\n\nCode Chunks\nTo insert an executable code chunk, use the Insert -> Code Chunk menu item, or start a new line and type:\n```{r}\nThen press the Enter key. Note that r could be another language supported by knitr (e.g. python or sql) and you can also include a chunk label and other chunk options.\nTo include inline R code, you just create normal inline code (e.g. by using backticks or the ⌘ D shortcut) but preface it with r. For example, this inline code will be executed by knitr: 2023-01-01. Note that when the code displays in visual mode it won’t have the backticks (but they will still appear in source mode).\n\npenguin_plot <- penguins %>% \n  na.omit() %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_point(aes(color = species)) +\n  labs(title = \"Important Penguins\") +\n  geom_smooth(method = \"lm\", color = \"black\")\n\npenguin_plot\n\n\n\n\n\n\nR generated Tables\n\nlibrary(gt)\n\npenguins %>% \n  na.omit() %>% \n  select(species, bill_length_mm, body_mass_g) %>% \n  head() %>% \n  gt()\n\n\n\n\n\n  \n  \n    \n      species\n      bill_length_mm\n      body_mass_g\n    \n  \n  \n    Adelie\n39.1\n3750\n    Adelie\n39.5\n3800\n    Adelie\n40.3\n3250\n    Adelie\n36.7\n3450\n    Adelie\n39.3\n3650\n    Adelie\n38.9\n3625\n  \n  \n  \n\n\n\n\n\nlibrary(reactable)\npenguins %>% \n  filter(species == \"Adelie\") %>% \n  na.omit() %>% \n  select(species, bill_length_mm, body_mass_g) %>% \n  reactable(defaultPageSize = 5)"
  },
  {
    "objectID": "posts/04-static/bootswatch-themed.html",
    "href": "posts/04-static/bootswatch-themed.html",
    "title": "Bootswatch Themed QMD",
    "section": "",
    "text": "Plots\nThis is the world’s most amazing plot. Everyone loves penguins.\nPenguins are fancy.\nThere are 344 in the dataset of interest.\n\n\nShow the code\npenguins %>% \n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point()\n\n\n\n\n\nYou can also include tables. Tables are super cool. I love tables and I love penguins. I am subject to oversight by the penguin overlords. The eternals are friends with the penguins.\n\n\nShow the code\npenguins %>% \n  na.omit() %>% \n  group_by(species, sex) %>% \n  rename(\n    body_mass = body_mass_g, bill_length = bill_length_mm, \n    bill_depth = bill_depth_mm\n    ) %>% \n  summarise(\n    n = n(),\n    across(\n      .cols = c(body_mass, bill_length, bill_depth),\n      .fns = list(mean = mean, sd = sd)\n    ),\n    .groups = \"drop\"\n  ) %>% \n  gt(rowname_col = \"sex\") %>% \n  cols_label(\n    n = \"N\", body_mass_mean = \"Mean\", body_mass_sd = \"SD\", \n    bill_length_mean= \"Mean\", bill_length_sd = \"SD\",\n    bill_depth_mean = \"Mean\", bill_depth_sd = \"SD\"\n    ) %>% \n  gt::tab_spanner(\n    label = \"Body Mass (g)\",\n    columns = 4:5\n  ) %>% \n  gt::tab_spanner(\n    label = \"Bill Length (mm)\",\n    columns = 6:7\n  ) %>% \n  gt::tab_spanner(\n    label = \"Bill Depth (mm)\",\n    columns = 8:9\n  ) %>% \n  fmt_number(\n    columns = c(where(is.numeric), -n)\n  )\n\n\n\n\n\n\n  \n  \n    \n      \n      species\n      N\n      \n        Body Mass (g)\n      \n      \n        Bill Length (mm)\n      \n      \n        Bill Depth (mm)\n      \n    \n    \n      Mean\n      SD\n      Mean\n      SD\n      Mean\n      SD\n    \n  \n  \n    female\nAdelie\n73\n3,368.84\n269.38\n37.26\n2.03\n17.62\n0.94\n    male\nAdelie\n73\n4,043.49\n346.81\n40.39\n2.28\n19.07\n1.02\n    female\nChinstrap\n34\n3,527.21\n285.33\n46.57\n3.11\n17.59\n0.78\n    male\nChinstrap\n34\n3,938.97\n362.14\n51.09\n1.56\n19.25\n0.76\n    female\nGentoo\n58\n4,679.74\n281.58\n45.56\n2.05\n14.24\n0.54\n    male\nGentoo\n61\n5,484.84\n313.16\n49.47\n2.72\n15.72\n0.74"
  },
  {
    "objectID": "posts/04-static/old-rmarkdown.html",
    "href": "posts/04-static/old-rmarkdown.html",
    "title": "reactable example",
    "section": "",
    "text": "This is an example from reactable documentation - showing the Twitter followers of some politicians.\nExample adapted from {reactable} documentation"
  },
  {
    "objectID": "posts/04-static/penguin-report.html",
    "href": "posts/04-static/penguin-report.html",
    "title": "Penguins Distilled",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth.\n\n\n\nLiterate Programming\nPer Donald Knuth\n\nA programming paradigm introduced by Donald Knuth in which a computer program is given an explanation of its logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which compilable source code can be generated.\n\n\n\nInitial explore\nWe can do a quick exploration of the data with skimr::skim(). This will report the counts of various variables, along with some basic descriptive statistics. The skimr package is fantastic for quickly getting a sense of your datasets.\nAhead of skimr there are 344 penguins in this dataset, and the unique species are Adelie, Gentoo, Chinstrap.\nPer the rOpenSci skimr docs:\n\nskimr provides a frictionless approach to summary statistics which conforms to the principle of least surprise, displaying summary statistics the user can skim quickly to understand their data. It handles different data types and returns a skim_df object which can be included in a pipeline or displayed nicely for the human reader.\n\n\npenguins %>% \n  group_by(species) %>% \n  skimr::skim() %>% \n  select(-contains(\"numeric.p\"))\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n344\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nspecies\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nspecies\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nisland\nAdelie\n0\n1.00\nFALSE\n3\nDre: 56, Tor: 52, Bis: 44\n\n\nisland\nChinstrap\n0\n1.00\nFALSE\n1\nDre: 68, Bis: 0, Tor: 0\n\n\nisland\nGentoo\n0\n1.00\nFALSE\n1\nBis: 124, Dre: 0, Tor: 0\n\n\nsex\nAdelie\n6\n0.96\nFALSE\n2\nfem: 73, mal: 73\n\n\nsex\nChinstrap\n0\n1.00\nFALSE\n2\nfem: 34, mal: 34\n\n\nsex\nGentoo\n5\n0.96\nFALSE\n2\nmal: 61, fem: 58\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nspecies\nn_missing\ncomplete_rate\nmean\nsd\nhist\n\n\n\n\nbill_length_mm\nAdelie\n1\n0.99\n38.79\n2.66\n▁▆▇▆▁\n\n\nbill_length_mm\nChinstrap\n0\n1.00\n48.83\n3.34\n▂▇▇▅▁\n\n\nbill_length_mm\nGentoo\n1\n0.99\n47.50\n3.08\n▃▇▆▁▁\n\n\nbill_depth_mm\nAdelie\n1\n0.99\n18.35\n1.22\n▂▆▇▃▁\n\n\nbill_depth_mm\nChinstrap\n0\n1.00\n18.42\n1.14\n▅▇▇▆▂\n\n\nbill_depth_mm\nGentoo\n1\n0.99\n14.98\n0.98\n▅▇▇▆▂\n\n\nflipper_length_mm\nAdelie\n1\n0.99\n189.95\n6.54\n▁▆▇▅▁\n\n\nflipper_length_mm\nChinstrap\n0\n1.00\n195.82\n7.13\n▁▅▇▅▂\n\n\nflipper_length_mm\nGentoo\n1\n0.99\n217.19\n6.48\n▂▇▇▆▃\n\n\nbody_mass_g\nAdelie\n1\n0.99\n3700.66\n458.57\n▅▇▇▃▂\n\n\nbody_mass_g\nChinstrap\n0\n1.00\n3733.09\n384.34\n▁▅▇▃▁\n\n\nbody_mass_g\nGentoo\n1\n0.99\n5076.02\n504.12\n▃▇▇▇▂\n\n\nyear\nAdelie\n0\n1.00\n2008.01\n0.82\n▇▁▇▁▇\n\n\nyear\nChinstrap\n0\n1.00\n2007.97\n0.86\n▇▁▆▁▇\n\n\nyear\nGentoo\n0\n1.00\n2008.08\n0.79\n▆▁▇▁▇\n\n\n\n\n\n\n\n\nSpecific statistics\nWe can also explore specific statistics\nThe penguins split by species show a specific relationship between weight and flipper length, where the Adelie female penguins are the lighest and have the shortest flippers.\n\npenguins %>% \n  group_by(species, sex) %>% \n  summarize(\n    n = n(), \n    weight = mean(body_mass_g, na.rm = TRUE),\n    flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n    ) %>% \n  arrange(desc(weight))\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 5\n# Groups:   species [3]\n  species   sex        n weight flipper_length\n  <fct>     <fct>  <int>  <dbl>          <dbl>\n1 Gentoo    male      61  5485.           222.\n2 Gentoo    female    58  4680.           213.\n3 Gentoo    <NA>       5  4588.           216.\n4 Adelie    male      73  4043.           192.\n5 Chinstrap male      34  3939.           200.\n6 Adelie    <NA>       6  3540            186.\n7 Chinstrap female    34  3527.           192.\n8 Adelie    female    73  3369.           188.\n\n\nLooks like the Adelie are the lightest penguin. I want to see their distribution along with the overall distribution.\n\npenguins %>% \n  filter(is.na(sex))\n\n# A tibble: 11 × 8\n   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 2 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n 3 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n 4 Adelie  Torgersen           37.8          17.1        186    3300 <NA>   2007\n 5 Adelie  Torgersen           37.8          17.3        180    3700 <NA>   2007\n 6 Adelie  Dream               37.5          18.9        179    2975 <NA>   2007\n 7 Gentoo  Biscoe              44.5          14.3        216    4100 <NA>   2007\n 8 Gentoo  Biscoe              46.2          14.4        214    4650 <NA>   2008\n 9 Gentoo  Biscoe              47.3          13.8        216    4725 <NA>   2009\n10 Gentoo  Biscoe              44.5          15.7        217    4875 <NA>   2009\n11 Gentoo  Biscoe              NA            NA           NA      NA <NA>   2009\n# … with abbreviated variable names ¹​flipper_length_mm, ²​body_mass_g\n\n\n\nsmaller <- palmerpenguins::penguins %>% \n  filter(species == \"Adelie\", \n         !is.na(body_mass_g))\n\n\n\nCleanup the data\nIf you noticed above, there was some NA or missing data. We can remove those rows for now.\n\npenguins_clean <- penguins %>% \n  na.omit() %>% \n  mutate(species_num = as.numeric(species))\n\n\n\nPlot Section\nLet’s move on to some plots, for the overall distributions and for just the Adelie penguins. The overall distribution of the data by species shows some overlap in body weight for Adelie/Chinstrap, but more of a separation for the Gentoo penguins.\n\npenguins %>% \n  ggplot(aes(body_mass_g, fill = species)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Penguin Bins\")\n\n\n\n\nWhen we compare just within the Adelie penguins, we can see more of a specific separation of male vs female. However, there is still a decent amount of overlapping data.\n\npenguin_plot <- smaller %>% \n  filter(!is.na(sex)) %>% \n  ggplot(aes(body_mass_g, fill = sex)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n    scale_fill_manual(values = c(\"darkorange\",\"purple\")) +\n  labs(x = \"Penguin Bins\")\n\npenguin_plot\n\n\n\n\nLastly we can fit a basic linear model comparing body weight in grams to the flipper length of the penguins by specific species. There is a strong linear relationship, although it’s a bit difficult to distinguish between Chinstrap and Adelie penguins.\n\npenguin_size_plot <- penguins_clean %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = species)) + \n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  geom_point(size = 2, alpha = 0.5) +\n  labs(x = \"Mass (g)\", y = \"Flipper Length (mm)\") +\n  geom_smooth(aes(group = \"none\"), method = \"lm\")\n\npenguin_size_plot\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nWe can save the overall distribution and the linear model plot.\n\nggsave(\"penguin-dist.png\", penguin_plot, \n  dpi = \"retina\", height = 8, width = 8)\n\nggsave(\"penguin-smooth.png\", penguin_size_plot, \n  dpi = \"retina\", height = 8, width = 8)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nModeling section\nMoving on to some basic modeling we can see if what kind of relationships we observe in the data. Note that I’m really not following any plan, just indicating how you can fit some different models all at once with dplyr + broom.\n\nmodel_inputs <- tibble(\n  model_form = c(\n    list(flipper_length_mm ~ body_mass_g),\n    list(species_num ~ bill_length_mm + body_mass_g + sex),\n    list(flipper_length_mm ~ bill_length_mm + species)\n    ),\n  data = list(penguins_clean)\n) \n\nmodel_metrics <- model_inputs %>% \n  rowwise(model_form, data) %>% \n  summarize(lm = list(lm(model_form, data = data)), .groups = \"drop\") %>% \n  rowwise(model_form, lm, data) %>% \n  summarise(broom::glance(lm), .groups = \"drop\")\n\n\n\nWrap up\nWe can then take the model outcomes and throw them into a quick gt table.\n\nmodel_metrics %>% \n  select(model_form, r.squared:p.value) %>% \n  mutate(model_form = as.character(model_form)) %>% \n  gt::gt() %>% \n  gt::fmt_number(r.squared:statistic) %>% \n  gt::fmt_scientific(p.value) %>% \n  gt::cols_width(\n    model_form ~ px(150)\n  )\n\n\n\n\n\n  \n    \n    \n    \n    \n    \n    \n  \n  \n  \n    \n      model_form\n      r.squared\n      adj.r.squared\n      sigma\n      statistic\n      p.value\n    \n  \n  \n    flipper_length_mm ~ body_mass_g\n0.76\n0.76\n6.85\n1,060.30\n3.13 × 10−105\n    species_num ~ bill_length_mm + body_mass_g + sex\n0.84\n0.84\n0.36\n583.59\n2.45 × 10−131\n    flipper_length_mm ~ bill_length_mm + species\n0.83\n0.83\n5.83\n529.22\n1.66 × 10−125\n  \n  \n  \n\n\n\n\nOverall, this was a quick overview of the beauty of literate programming. We have R code that is self-documenting, as we capture our thoughts and the outputs in a single document. We know at some level that the code works since it “logs” the outputs at various stages and could still output to additional log files. To render it has to run successfully in a linear fashion, and it is human readable as code, via the visual editor or even in version control like Git!"
  },
  {
    "objectID": "posts/05-presentations/fragments.html#make-these-columns-appear-in-order",
    "href": "posts/05-presentations/fragments.html#make-these-columns-appear-in-order",
    "title": "Arvind Venkatadri",
    "section": "Make these columns appear in order",
    "text": "Make these columns appear in order\n\n\nThese appear first\n\nMake\nYour\nList\n\n\nThen this\n\n```{r}\nhead(mtcars)\n```\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"
  },
  {
    "objectID": "posts/05-presentations/revealjs-penguins.html#section",
    "href": "posts/05-presentations/revealjs-penguins.html#section",
    "title": "Penguin Report",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth."
  },
  {
    "objectID": "posts/05-presentations/revealjs-penguins.html#literate-programming",
    "href": "posts/05-presentations/revealjs-penguins.html#literate-programming",
    "title": "Penguin Report",
    "section": "Literate Programming",
    "text": "Literate Programming\nPer Donald Knuth\n\nA programming paradigm introduced by Donald Knuth in which a computer program is given an explanation of its logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which compilable source code can be generated."
  },
  {
    "objectID": "posts/05-presentations/revealjs-penguins.html#specific-statistics",
    "href": "posts/05-presentations/revealjs-penguins.html#specific-statistics",
    "title": "Penguin Report",
    "section": "Specific statistics",
    "text": "Specific statistics\n\npenguins %>% \n  group_by(species, sex) %>% \n  summarize(\n    n = n(), \n    weight = mean(body_mass_g, na.rm = TRUE),\n    flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n    ) %>% \n  arrange(desc(weight))\n\n# A tibble: 8 × 5\n# Groups:   species [3]\n  species   sex        n weight flipper_length\n  <fct>     <fct>  <int>  <dbl>          <dbl>\n1 Gentoo    male      61  5485.           222.\n2 Gentoo    female    58  4680.           213.\n3 Gentoo    <NA>       5  4588.           216.\n4 Adelie    male      73  4043.           192.\n5 Chinstrap male      34  3939.           200.\n6 Adelie    <NA>       6  3540            186.\n7 Chinstrap female    34  3527.           192.\n8 Adelie    female    73  3369.           188."
  },
  {
    "objectID": "posts/05-presentations/revealjs-penguins.html#cleanup-the-data",
    "href": "posts/05-presentations/revealjs-penguins.html#cleanup-the-data",
    "title": "Penguin Report",
    "section": "Cleanup the data",
    "text": "Cleanup the data\nIf you noticed above, there was some NA or missing data. We can remove those rows for now.\n\npenguins_clean <- penguins %>% \n  na.omit() %>% \n  mutate(species_num = as.numeric(species))"
  },
  {
    "objectID": "posts/05-presentations/revealjs-penguins.html#plot-section",
    "href": "posts/05-presentations/revealjs-penguins.html#plot-section",
    "title": "Penguin Report",
    "section": "Plot Section",
    "text": "Plot Section\nLet’s move on to some plots, for the overall distributions and for just the Adelie penguins. The overall distribution of the data by species shows some overlap in body weight for Adelie/Chinstrap, but more of a separation for the Gentoo penguins."
  },
  {
    "objectID": "posts/05-presentations/revealjs-penguins.html#distribution",
    "href": "posts/05-presentations/revealjs-penguins.html#distribution",
    "title": "Penguin Report",
    "section": "Distribution",
    "text": "Distribution\n\npenguins %>% \n  ggplot(aes(body_mass_g, fill = species)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Penguin Bins\")"
  },
  {
    "objectID": "posts/05-presentations/revealjs-penguins.html#lm-scatter-plot",
    "href": "posts/05-presentations/revealjs-penguins.html#lm-scatter-plot",
    "title": "Penguin Report",
    "section": "LM + Scatter Plot",
    "text": "LM + Scatter Plot\n\npenguin_size_plot <- penguins_clean %>% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = species)) + \n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  geom_point(size = 2, alpha = 0.5) +\n  labs(x = \"Mass (g)\", y = \"Flipper Length (mm)\") +\n  geom_smooth(aes(group = \"none\"), method = \"lm\")\n\npenguin_size_plot"
  },
  {
    "objectID": "posts/05-presentations/revealjs-penguins.html#modeling-section",
    "href": "posts/05-presentations/revealjs-penguins.html#modeling-section",
    "title": "Penguin Report",
    "section": "Modeling section",
    "text": "Modeling section\nMoving on to some basic modeling we can see if what kind of relationships we observe in the data. Note that I’m really not following any plan, just indicating how you can fit some different models all at once with dplyr + broom."
  },
  {
    "objectID": "posts/05-presentations/revealjs-penguins.html#section-1",
    "href": "posts/05-presentations/revealjs-penguins.html#section-1",
    "title": "Penguin Report",
    "section": "",
    "text": "model_inputs <- tibble(\n  model_form = c(\n    list(flipper_length_mm ~ body_mass_g),\n    list(species_num ~ bill_length_mm + body_mass_g + sex),\n    list(flipper_length_mm ~ bill_length_mm + species)\n    ),\n  data = list(penguins_clean)\n) \n\nmodel_metrics <- model_inputs %>% \n  rowwise(model_form, data) %>% \n  summarize(lm = list(lm(model_form, data = data)), .groups = \"drop\") %>% \n  rowwise(model_form, lm, data) %>% \n  summarise(broom::glance(lm), .groups = \"drop\")"
  },
  {
    "objectID": "posts/05-presentations/revealjs-penguins.html#section-2",
    "href": "posts/05-presentations/revealjs-penguins.html#section-2",
    "title": "Penguin Report",
    "section": "",
    "text": "model_metrics %>% \n  select(model_form, r.squared:p.value) %>% \n  mutate(model_form = as.character(model_form)) %>% \n  gt::gt() %>% \n  gt::fmt_number(r.squared:statistic) %>% \n  gt::fmt_scientific(p.value) %>% \n  gt::cols_width(\n    model_form ~ px(150)\n  )\n\n\n\n\n\n  \n    \n    \n    \n    \n    \n    \n  \n  \n  \n    \n      model_form\n      r.squared\n      adj.r.squared\n      sigma\n      statistic\n      p.value\n    \n  \n  \n    flipper_length_mm ~ body_mass_g\n0.76\n0.76\n6.85\n1,060.30\n3.13 × 10−105\n    species_num ~ bill_length_mm + body_mass_g + sex\n0.84\n0.84\n0.36\n583.59\n2.45 × 10−131\n    flipper_length_mm ~ bill_length_mm + species\n0.83\n0.83\n5.83\n529.22\n1.66 × 10−125"
  },
  {
    "objectID": "posts/07-visuals/figure-layout-2.html",
    "href": "posts/07-visuals/figure-layout-2.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "::: {#fig-bostons layout-nrow=2}\n\n![Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\n![Still Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Still sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard, twice\n\n:::"
  },
  {
    "objectID": "posts/07-visuals/figure-layout-2.html#subfigures-1",
    "href": "posts/07-visuals/figure-layout-2.html#subfigures-1",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\n\n\n\n\n\n(c) Still Excited\n\n\n\n\n\n\n\n(d) Still sleeping\n\n\n\n\nFigure 1: Two states of Howard, twice"
  },
  {
    "objectID": "posts/07-visuals/figure-layout-2.html#subfigures-2",
    "href": "posts/07-visuals/figure-layout-2.html#subfigures-2",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\n\n\n\n\n\n(c) Still Excited\n\n\n\n\n\n\n\n(d) Still sleeping\n\n\n\n\nFigure 2: Two states of Howard, twice"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html",
    "href": "posts/07-visuals/figure-layout.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "library(ggplot2)"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#figures",
    "href": "posts/07-visuals/figure-layout.html#figures",
    "title": "Arvind Venkatadri",
    "section": "Figures",
    "text": "Figures\nBasic markdown syntax:\n![Boston Terrier](boston-terrier.png)\n\n\n\nBoston Terrier"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#fragments",
    "href": "posts/07-visuals/figure-layout.html#fragments",
    "title": "Arvind Venkatadri",
    "section": "Fragments",
    "text": "Fragments\n\n\n![Boston terrier](boston-terrier.png){fig-align=\"left\"}\n\n\n![](boston-terrier.png){fig-align=\"right\" fig-alt=\"A photo a Boston Terrier.\"}"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#subfigures",
    "href": "posts/07-visuals/figure-layout.html#subfigures",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures\n::: {#fig-bostons layout-ncol=2}\n\n![Excited](boston-terrier.png){#fig-boston width=\"250px\"}\n\n![Sleeping](boston-sleep.png){#fig-sleep width=\"250px\"}\n\nTwo states of Howard\n\n:::"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#subfigures-1",
    "href": "posts/07-visuals/figure-layout.html#subfigures-1",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures\n\n\n\n\n\n\n\n(a) Excited\n\n\n\n\n\n\n\n(b) Sleeping\n\n\n\n\nFigure 1: Two states of Howard"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#subfigures-2",
    "href": "posts/07-visuals/figure-layout.html#subfigures-2",
    "title": "Arvind Venkatadri",
    "section": "Subfigures",
    "text": "Subfigures"
  },
  {
    "objectID": "posts/07-visuals/figure-layout.html#custom-grid",
    "href": "posts/07-visuals/figure-layout.html#custom-grid",
    "title": "Arvind Venkatadri",
    "section": "Custom grid",
    "text": "Custom grid\n\n\nThis column takes 1/2 of the page\n\nggplot(mtcars, aes(x = cyl, y = disp)) +\n  geom_boxplot()\n\nWarning: Continuous x aesthetic\nℹ did you forget `aes(group = ...)`?\n\n\n\n\n\n\n\nThis column takes 1/2 of the page\n\nhead(mtcars, 5)[1:4] |> knitr::kable()\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n\n\nDatsun 710\n22.8\n4\n108\n93\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n\n\nHornet Sportabout\n18.7\n8\n360\n175"
  },
  {
    "objectID": "posts/07-visuals/gt-summary.html#introduction",
    "href": "posts/07-visuals/gt-summary.html#introduction",
    "title": "Overview of using gtsummary",
    "section": "Introduction",
    "text": "Introduction\nReproducible reports are an important part of good practices. We often need to report the results from a table in the text of an Quarto report. Inline reporting has been made simple with inline_text(). The inline_text() function reports statistics from {gtsummary} tables inline in an Quarto report."
  },
  {
    "objectID": "posts/07-visuals/gt-summary.html#setup",
    "href": "posts/07-visuals/gt-summary.html#setup",
    "title": "Overview of using gtsummary",
    "section": "Setup",
    "text": "Setup\nBefore going through the tutorial, install and load {gtsummary}.\n\n# install.packages(\"gtsummary\")\nlibrary(gtsummary)"
  },
  {
    "objectID": "posts/07-visuals/gt-summary.html#example-data-set",
    "href": "posts/07-visuals/gt-summary.html#example-data-set",
    "title": "Overview of using gtsummary",
    "section": "Example data set",
    "text": "Example data set\nWe’ll be using the trial data set throughout this example.\n\nThis set contains data from 200 patients who received one of two types of chemotherapy (Drug A or Drug B). The outcomes are tumor response and death.\n\nFor brevity in the tutorial, let’s keep a subset of the variables from the trial data set.\n\ntrial2 <-\n  trial %>%\n  select(trt, marker, stage)"
  },
  {
    "objectID": "posts/07-visuals/gt-summary.html#inline_text_tbl_summary",
    "href": "posts/07-visuals/gt-summary.html#inline_text_tbl_summary",
    "title": "Overview of using gtsummary",
    "section": "Inline results from tbl_summary()",
    "text": "Inline results from tbl_summary()\nFirst create a basic summary table using tbl_summary() (review tbl_summary() vignette for detailed overview of this function if needed).\n\ntab1 <- tbl_summary(trial2, by = trt)\ntab1\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Drug A, N = 981\n      Drug B, N = 1021\n    \n  \n  \n    Marker Level (ng/mL)\n0.84 (0.24, 1.57)\n0.52 (0.19, 1.20)\n        Unknown\n6\n4\n    T Stage\n\n\n        T1\n28 (29%)\n25 (25%)\n        T2\n25 (26%)\n29 (28%)\n        T3\n22 (22%)\n21 (21%)\n        T4\n23 (23%)\n27 (26%)\n  \n  \n  \n    \n      1 Median (IQR); n (%)\n    \n  \n\n\n\n\nTo report the median (IQR) of the marker levels in each group, use the following commands inline.\n\nThe median (IQR) marker level in the Drug A and Drug B groups are `r inline_text(tab1, variable = marker, column = \"Drug A\")` and `r inline_text(tab1, variable = marker, column = \"Drug B\")`, respectively. Here’s how the line will appear in your report.\n\n\nThe median (IQR) marker level in the Drug A and Drug B groups are 0.84 (0.24, 1.57) and 0.52 (0.19, 1.20), respectively. If you display a statistic from a categorical variable, include the level argument.\n\n\n`r inline_text(tab1, variable = stage, level = \"T1\", column = \"Drug B\")` resolves to “25 (25%)”"
  },
  {
    "objectID": "posts/07-visuals/gt-summary.html#inline_text_tbl_regression",
    "href": "posts/07-visuals/gt-summary.html#inline_text_tbl_regression",
    "title": "Overview of using gtsummary",
    "section": "Inline results from tbl_regression()",
    "text": "Inline results from tbl_regression()\nSimilar syntax is used to report results from tbl_regression() and tbl_uvregression() tables. Refer to the tbl_regression() vignette if you need detailed guidance on using these functions.\nLet’s first create a regression model.\n\n# build logistic regression model\nm1 <- glm(response ~ age + stage, trial, family = binomial(link = \"logit\"))\n\nNow summarize the results with tbl_regression(); exponentiate to get the odds ratios.\n\ntbl_m1 <- tbl_regression(m1, exponentiate = TRUE)\ntbl_m1\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      OR1\n      95% CI1\n      p-value\n    \n  \n  \n    Age\n1.02\n1.00, 1.04\n0.091\n    T Stage\n\n\n\n        T1\n—\n—\n\n        T2\n0.58\n0.24, 1.37\n0.2\n        T3\n0.94\n0.39, 2.28\n0.9\n        T4\n0.79\n0.33, 1.90\n0.6\n  \n  \n  \n    \n      1 OR = Odds Ratio, CI = Confidence Interval\n    \n  \n\n\n\n\nTo report the result for age, use the following commands inline.\n\n`r inline_text(tbl_m1, variable = age)` Here’s how the line will appear in your report.\n\n\n1.02 (95% CI 1.00, 1.04; p=0.091) It is reasonable that you’ll need to modify the text. To do this, use the pattern argument. The pattern argument syntax follows glue::glue() format with referenced R objects being inserted between curly brackets. The default is pattern = \"{estimate} ({conf.level*100}% CI {conf.low}, {conf.high}; {p.value})\". You have access the to following fields within the pattern argument.\n\n\n\n\n\n\n\n  \n  \n    \n      Parameter\n      Description\n    \n  \n  \n    {estimate}\n\nprimary estimate (e.g. model coefficient, odds ratio)\n    {conf.low}\n\nlower limit of confidence interval\n    {conf.high}\n\nupper limit of confidence interval\n    {p.value}\n\np-value\n    {conf.level}\n\nconfidence level of interval\n    {N}\n\nnumber of observations\n  \n  \n  \n\n\n\n\n\nAge was not significantly associated with tumor response `r inline_text(tbl_m1, variable = age, pattern = \"(OR {estimate}; 95% CI {conf.low}, {conf.high}; {p.value})\")`. Age was not significantly associated with tumor response (OR 1.02; 95% CI 1.00, 1.04; p=0.091). If you’re printing results from a categorical variable, include the level argument, e.g. inline_text(tbl_m1, variable = stage, level = \"T3\") resolves to “0.94 (95% CI 0.39, 2.28; p=0.9)”.\n\nThe inline_text function has arguments for rounding the p-value (pvalue_fun) and the coefficients and confidence interval (estimate_fun). These default to the same rounding performed in the table, but can be modified when reporting inline.\nFor more details about inline code, review to the RStudio documentation page."
  },
  {
    "objectID": "posts/07-visuals/plot-layout.html",
    "href": "posts/07-visuals/plot-layout.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "library(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union"
  },
  {
    "objectID": "posts/07-visuals/plot-layout.html#figure-layout-ncol",
    "href": "posts/07-visuals/plot-layout.html#figure-layout-ncol",
    "title": "Arvind Venkatadri",
    "section": "Figure layout, ncol",
    "text": "Figure layout, ncol\n\n```{r}\n#| layout-ncol: 2\n#| fig-cap:\n#|   - \"Speed and Stopping Distances of Cars\"\n#|   - \"Engine displacement and fuel efficiency in Cars\"\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n\n\n\n\n\nSpeed and Stopping Distances of Cars\n\n\n\n\n\n\n\nEngine displacement and fuel efficiency in Cars"
  },
  {
    "objectID": "posts/07-visuals/plot-layout.html#subcaptions",
    "href": "posts/07-visuals/plot-layout.html#subcaptions",
    "title": "Arvind Venkatadri",
    "section": "Subcaptions:",
    "text": "Subcaptions:\n\n```{r}\n#| label: fig-charts\n#| fig-cap: Charts\n#| fig-subcap:\n#|   - \"Cars\"\n#|   - \"mtcars\"\n#| layout-ncol: 2\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n\n\n\n\n\n\n(a) Cars\n\n\n\n\n\n\n\n(b) mtcars\n\n\n\n\nFigure 1: Charts"
  },
  {
    "objectID": "posts/07-visuals/plot-layout.html#figure-layout-custom",
    "href": "posts/07-visuals/plot-layout.html#figure-layout-custom",
    "title": "Arvind Venkatadri",
    "section": "Figure layout, custom",
    "text": "Figure layout, custom\n\n```{r}\n#| layout: [[45,-10, 45], [50, 50]]\n#| fig-height: 5\n#| fig-align: center\n#| message: false\n#| warning: false\n#| dpi: 300\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_smooth() +\n  theme(text = element_text(size = 20))\n\ncars %>% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()+\n  theme(text = element_text(size = 20))\n\nmtcars %>% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()+\n  theme(text = element_text(size = 20))\n\nmtcars %>% \n  ggplot(aes(x = cyl, y = mpg, group = cyl, color = factor(cyl))) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme(legend.position = \"none\")+\n  theme(text = element_text(size = 20))\n```"
  },
  {
    "objectID": "posts/07-visuals/plots.html",
    "href": "posts/07-visuals/plots.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "library(palmerpenguins)\nlibrary(ggplot2)\nggplot2::theme_set(ggplot2::theme_minimal())\npenguins <- na.omit(penguins)"
  },
  {
    "objectID": "posts/07-visuals/plots.html#ggplot2",
    "href": "posts/07-visuals/plots.html#ggplot2",
    "title": "Arvind Venkatadri",
    "section": "ggplot2",
    "text": "ggplot2\nCredit to Alison Hill + Allison Horst\n\n```{r}\nmass_flipper <- ggplot(data = penguins, \n                       aes(x = flipper_length_mm,\n                           y = body_mass_g)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin size, Palmer Station LTER\",\n       subtitle = \"Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins\",\n       x = \"Flipper length (mm)\",\n       y = \"Body mass (g)\",\n       color = \"Penguin species\",\n       shape = \"Penguin species\") +\n  theme(legend.position = c(0.2, 0.7),\n        plot.title.position = \"plot\",\n        plot.caption = element_text(hjust = 0, face= \"italic\"),\n        plot.caption.position = \"plot\",\n        plot.background = element_rect(color = \"black\"))\n```"
  },
  {
    "objectID": "posts/07-visuals/plots.html#basic-plot",
    "href": "posts/07-visuals/plots.html#basic-plot",
    "title": "Arvind Venkatadri",
    "section": "Basic plot",
    "text": "Basic plot\n\n```{r}\nmass_flipper\n```"
  },
  {
    "objectID": "posts/07-visuals/plots.html#basic-plot-1",
    "href": "posts/07-visuals/plots.html#basic-plot-1",
    "title": "Arvind Venkatadri",
    "section": "Basic plot",
    "text": "Basic plot\nIncreasing the width/DPI only affects the scaling of the image, it will not overflow.\n\n```{r}\n#| fig-width: 10\n#| fig-height: 4\n#| fig-dpi: 600\nmass_flipper\n```"
  },
  {
    "objectID": "posts/07-visuals/plots.html#aside",
    "href": "posts/07-visuals/plots.html#aside",
    "title": "Arvind Venkatadri",
    "section": "Aside",
    "text": "Aside\n\n\n\n\n\n\nThe palmerpenguins R package contains two datasets that we believe are a viable alternative to Anderson’s Iris data (see datasets::iris). In this introductory vignette, we’ll highlight some of the properties of these datasets that make them useful for statistics and data science education, as well as software documentation and testing."
  },
  {
    "objectID": "posts/07-visuals/plots.html#overflow-content",
    "href": "posts/07-visuals/plots.html#overflow-content",
    "title": "Arvind Venkatadri",
    "section": "Overflow Content",
    "text": "Overflow Content\nThere are many options for overflow, either left/right\n\n```{r}\n#| column: body-outset-right\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: screen-inset-right\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: page-inset-left\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: screen-left\n#| fig-width: 10\nmass_flipper\n```"
  },
  {
    "objectID": "posts/07-visuals/stat-html.html",
    "href": "posts/07-visuals/stat-html.html",
    "title": "gtsummary + R Markdown",
    "section": "",
    "text": "library(gtsummary)\nlibrary(tidyverse)\nlibrary(survival)"
  },
  {
    "objectID": "posts/07-visuals/stat-html.html#gtsummary-tables",
    "href": "posts/07-visuals/stat-html.html#gtsummary-tables",
    "title": "gtsummary + R Markdown",
    "section": "gtsummary tables",
    "text": "gtsummary tables\nTables created with {gtsummary} can be integrated into R markdown documents. The {gtsummary} package was written to be a companion to the {gt} package from RStudio, and {gtsummary} tables are printed using {gt} when possible. Currently, {gt} supports HTML output, with LaTeX and RTF planned for the future.\n\npatient_characteristics <-\n  trial %>%\n  select(trt, age, grade, response) %>%\n  tbl_summary(by = trt)  \npatient_characteristics\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Drug A, N = 981\n      Drug B, N = 1021\n    \n  \n  \n    Age\n46 (37, 59)\n48 (39, 56)\n        Unknown\n7\n4\n    Grade\n\n\n        I\n35 (36%)\n33 (32%)\n        II\n32 (33%)\n36 (35%)\n        III\n31 (32%)\n33 (32%)\n    Tumor Response\n28 (29%)\n33 (34%)\n        Unknown\n3\n4\n  \n  \n  \n    \n      1 Median (IQR); n (%)\n    \n  \n\n\n\n\nWith HTML output, you can include complex tables with footnotes, indentation, and spanning table headers.\n\n# Side-by-side Regression Models\n# logistic regression model\nt1 <-\n  glm(response ~ trt + grade + age, trial, family = binomial) %>%\n  tbl_regression(exponentiate = TRUE)\n# time to death Cox model\nt2 <-\n  coxph(Surv(ttdeath, death) ~ trt + grade + age, trial) %>%\n  tbl_regression(exponentiate = TRUE)\n\n# printing merged table\ntbl_merge(\n  tbls = list(t1, t2),\n  tab_spanner = c(\"**Tumor Response**\", \"**Time to Death**\")\n)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      \n        Tumor Response\n      \n      \n        Time to Death\n      \n    \n    \n      OR1\n      95% CI1\n      p-value\n      HR1\n      95% CI1\n      p-value\n    \n  \n  \n    Chemotherapy Treatment\n\n\n\n\n\n\n        Drug A\n—\n—\n\n—\n—\n\n        Drug B\n1.13\n0.60, 2.13\n0.7\n1.30\n0.88, 1.92\n0.2\n    Grade\n\n\n\n\n\n\n        I\n—\n—\n\n—\n—\n\n        II\n0.85\n0.39, 1.85\n0.7\n1.21\n0.73, 1.99\n0.5\n        III\n1.01\n0.47, 2.15\n>0.9\n1.79\n1.12, 2.86\n0.014\n    Age\n1.02\n1.00, 1.04\n0.10\n1.01\n0.99, 1.02\n0.3\n  \n  \n  \n    \n      1 OR = Odds Ratio, CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "posts/07-visuals/stat-html.html#inline-reporting",
    "href": "posts/07-visuals/stat-html.html#inline-reporting",
    "title": "gtsummary + R Markdown",
    "section": "inline reporting",
    "text": "inline reporting\nAny number/statistic from a {gtsummary} table can be reported inline in a R markdown document using the inline_text() function. See example below:\n\nAmong patients who received Drug A, 31 (32%) had grade III tumors.\n\nFor detailed examples using functions from {gtsummary}, visit the {gtsummary} website."
  },
  {
    "objectID": "posts/08-knitr/fa-example.html",
    "href": "posts/08-knitr/fa-example.html",
    "title": "Font Awesome Quarto Extension",
    "section": "",
    "text": "This extension allows you to use font-awesome icons in your Quarto HTML and PDF documents. It provides an {{< fa >}} shortcode:\n{{< fa icon-name >}}\nFor example:\n\n\n\nShortcode\nIcon\n\n\n\n\n{{< fa thumbs-up >}}\n\n\n\n{{< fa folder >}}\n\n\n\n{{< fa chess-pawn >}}\n\n\n\n{{< fa brands bluetooth >}}"
  },
  {
    "objectID": "posts/08-knitr/lightbox-extension.html",
    "href": "posts/08-knitr/lightbox-extension.html",
    "title": "Example Lightbox Document",
    "section": "",
    "text": "Here is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "posts/08-knitr/lightbox-extension.html#elsewhere",
    "href": "posts/08-knitr/lightbox-extension.html#elsewhere",
    "title": "Example Lightbox Document",
    "section": "Elsewhere",
    "text": "Elsewhere\nThe below demonstrates placing more than one image in a gallery. Note the usage of the layout-ncol which arranges the images on the page side by date. Adding the group attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n\n\n\n\nAquinnah\n\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\n\nVineyard lighthouse"
  },
  {
    "objectID": "posts/08-knitr/lightbox-extension.html#credits",
    "href": "posts/08-knitr/lightbox-extension.html#credits",
    "title": "Example Lightbox Document",
    "section": "Credits",
    "text": "Credits\nThe images in this example were used under the Unsplash license, view originals below:\n\nChilmark Beach\nAquinnah\nGingerbread House\nEdgartown Light\nEdgartown Sailboat"
  },
  {
    "objectID": "posts/08-knitr/penguin-params.html",
    "href": "posts/08-knitr/penguin-params.html",
    "title": "Penguins",
    "section": "",
    "text": "We have data about 344 penguins. Only 193 are classified asAdelie. The distribution of the Adelie penguins are shown below:"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "Arvind Venkatadri",
    "section": "",
    "text": "This is the companion “Get started with Quarto” workshop materials for rstudio::conf 2022.\nFor the full workshop materials, please see the workshop website: https://rstudio-conf-2022.github.io/get-started-quarto/"
  }
]