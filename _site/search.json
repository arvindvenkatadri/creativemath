[
  {
    "objectID": "content/courses/R4Artists/Modules/130-purrr/purrr.html",
    "href": "content/courses/R4Artists/Modules/130-purrr/purrr.html",
    "title": "Iteration: Learning to purrr",
    "section": "",
    "text": "knitr::opts_chunk$set(message = FALSE)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(fs)\nlibrary(tidystringdist)\n\nlibrary(gapminder)\nlibrary(ggformula)"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/130-purrr/purrr.html#setting-up-the-r-packages",
    "href": "content/courses/R4Artists/Modules/130-purrr/purrr.html#setting-up-the-r-packages",
    "title": "Iteration: Learning to purrr",
    "section": "",
    "text": "knitr::opts_chunk$set(message = FALSE)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(fs)\nlibrary(tidystringdist)\n\nlibrary(gapminder)\nlibrary(ggformula)"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/130-purrr/purrr.html#introduction",
    "href": "content/courses/R4Artists/Modules/130-purrr/purrr.html#introduction",
    "title": "Iteration: Learning to purrr",
    "section": "Introduction",
    "text": "Introduction\nOften we want to perform the same operation on several different sets of data. Rather than repeat the operation for each instance of data, it is faster, more intuitive, and less error-prone if we create a data structure that holds all the data, and use the map-* series functions from the purrr package to perform all the repeated operations in one shot.\nThis requires getting used to. We need to understand: - the data structure - the iteration mechanism using map functions - the form of the results"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/130-purrr/purrr.html#case-study-1-multiple-models-for-life-expectancy-with-gapminder",
    "href": "content/courses/R4Artists/Modules/130-purrr/purrr.html#case-study-1-multiple-models-for-life-expectancy-with-gapminder",
    "title": "Iteration: Learning to purrr",
    "section": "Case Study #1: Multiple Models for Life Expectancy with gapminder\n",
    "text": "Case Study #1: Multiple Models for Life Expectancy with gapminder\n\nWe will start with a complete case study and then work backwards to understand the various pieces of code that make it up.\nLet us look at the gapminder dataset:\n\nskimr::skim(gapminder)\n\n\n\n\n\nName\ngapminder\n\n\nNumber of rows\n1704\n\n\nNumber of columns\n6\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nData summaryVariable type: factor\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\ncountry\n0\n1\nFALSE\n142\nAfg: 12, Alb: 12, Alg: 12, Ang: 12\n\n\ncontinent\n0\n1\nFALSE\n5\nAfr: 624, Asi: 396, Eur: 360, Ame: 300\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\nyear\n0\n1\n1979.50\n17.27\n1952.00\n1965.75\n1979.50\n1993.25\n2007.0\n▇▅▅▅▇\n\n\nlifeExp\n0\n1\n59.47\n12.92\n23.60\n48.20\n60.71\n70.85\n82.6\n▁▆▇▇▇\n\n\npop\n0\n1\n29601212.32\n106157896.74\n60011.00\n2793664.00\n7023595.50\n19585221.75\n1318683096.0\n▇▁▁▁▁\n\n\ngdpPercap\n0\n1\n7215.33\n9857.45\n241.17\n1202.06\n3531.85\n9325.46\n113523.1\n▇▁▁▁▁\n\n\n\n\n\nWe have lifeExp, gdpPerCap, and pop as Quant variables over time (year) for each country in the world. Suppose now that we wish to create Linear Regression Models predicting lifeExp using year, gdpPercap and pop for each country. The straightforward by labourious and naive way would be to use the lm command after filtering the dataset for each country, creating 140+ Linear Models manually! This would be horribly tedious!\nThere is a better way with purrr, and also more recently, with dplyr itself. Let us see both methods, the established purrr method first, and the new dplyr based method thereafter."
  },
  {
    "objectID": "content/courses/R4Artists/Modules/130-purrr/purrr.html#eda-plots",
    "href": "content/courses/R4Artists/Modules/130-purrr/purrr.html#eda-plots",
    "title": "Iteration: Learning to purrr",
    "section": "EDA Plots",
    "text": "EDA Plots\nWe can first plot lifeExp over year, grouped by country:\n\nggplot(gapminder,aes(x = year, y = lifeExp, colour = country)) + \n  geom_line(show.legend = FALSE) + \n  theme_classic()\nggplot(gapminder,aes(x = year, y = lifeExp, colour = country)) + \n  geom_line(show.legend = FALSE) + \n  facet_wrap(~ continent) + \n  theme_classic()\n\n\n\n\n\n\n\n\n\n\n\nConstructing a Linear Model:\n\nmodel &lt;- lm(lifeExp ~ year, data = gapminder)\nsummary(model)\n\n\nCall:\nlm(formula = lifeExp ~ year, data = gapminder)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-39.949  -9.651   1.697  10.335  22.158 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -585.65219   32.31396  -18.12   &lt;2e-16 ***\nyear           0.32590    0.01632   19.96   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.63 on 1702 degrees of freedom\nMultiple R-squared:  0.1898,    Adjusted R-squared:  0.1893 \nF-statistic: 398.6 on 1 and 1702 DF,  p-value: &lt; 2.2e-16\n\n\n\nmodel %&gt;% broom::tidy() # Parameters of the Model\nmodel %&gt;% broom::glance() # Statistics of the Model\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n\nSince the slope 0.3259038 is positive, life expectancy has been increasing over the years. How do we do this for each country? We need to use the split-apply-combine method to achieve this.\nThe combination of group_by and summarise is a example of the split &gt; apply &gt; combine method. For example, we could (split) the data by country, calculate the linear model each group (apply), and (combine) the results in a data frame.\nHowever, this first-attempt code for a per-country linear model does not work:\n\n```{r}\n#| eval: false\ngapminder %&gt;% \n  group_by(country) %&gt;% \n  summarise(linmod = lm(lifeExp ~ year, data = .))\n```\n\nThis is because the linmod variable is a list variable and cannot be accommodated in a simple column, which is what summarize will try to create.\nCounter-intuitively, we do need to be able to create “list” columns in a data frame! The purrr package contains a new class of functions, that can take vectors/tibbles/lists as input, and perform an identical function over each component of these, and generate a vectors/tibbles/lists as output. These are the map_* functions that are part of the purrr package. The * in the map_* function defines what kind of output (vector/tibble/list) the function generates. Let us look at a few short examples."
  },
  {
    "objectID": "content/courses/R4Artists/Modules/130-purrr/purrr.html#using-map_-functions-from-purrr",
    "href": "content/courses/R4Artists/Modules/130-purrr/purrr.html#using-map_-functions-from-purrr",
    "title": "Iteration: Learning to purrr",
    "section": "Using map_* functions from purrr\n",
    "text": "Using map_* functions from purrr\n\nThe basic structure of the map_* functions is:\n\n```{r}\n#| eval: false\nmap_typeOfResult(.x = what_to_iterate_with, \n                  .f = function_to_apply)\n\nmap_typeOfResult(.x = what_to_iterate_with, \n                  .f = \\(x) function_to_apply(x, additional_parameters))\n```\n\nTwo examples:\n\n# Example 1\ndiamonds %&gt;% \n  select(where(is.numeric)) %&gt;% \n  # We need dbl-type numbers in output **vector**\nmap_dbl(.x = ., \n        .f = mean)\ndiamonds %&gt;% \n  select(where(is.numeric)) %&gt;% \n  # We need dbl-type numbers in output **vector**\nmap_df(.x = ., \n        .f = mean)\n\n\n\n       carat        depth        table        price            x            y \n   0.7979397   61.7494049   57.4571839 3932.7997219    5.7311572    5.7345260 \n           z \n   3.5387338 \n\n\n\n\n  \n\n\n\n\n\nSometimes the function .f may need some additional parameters to be specified, and these may not come from the .x:\n\n# Example 3, with additional parameters to .f\npalmerpenguins::penguins %&gt;% \n  select(where(is.numeric)) %&gt;% \n  map_dbl(.x = ., \n          .f = \\(x) mean(x, \n                         \n  # penguins has two rows of NA entries which need to be dropped\n  # Hence this additional parameter for the `mean` function\n                         na.rm = TRUE))\n# Example 4: if we want a tibble output\npalmerpenguins::penguins %&gt;% \n  select(where(is.numeric)) %&gt;% \n  map_df(.x = ., \n          .f = \\(x) mean(x, \n                         \n  # penguins has two rows of NA entries which need to be dropped\n  # Hence this additional parameter for the `mean` function\n                         na.rm = TRUE))\n\n\n\n   bill_length_mm     bill_depth_mm flipper_length_mm       body_mass_g \n         43.92193          17.15117         200.91520        4201.75439 \n             year \n       2008.02907 \n\n\n\n\n  \n\n\n\n\n\nThe .f function can be anything, even a ggformula plot command; in this case the output will not be a vector or a tibble, but a list:\n\n#library(ggformula)\npalmerpenguins::penguins %&gt;% \n  select(where(is.numeric)) %&gt;% select(-year) %&gt;% drop_na() %&gt;% \n  \n  # `map` gives a list output\n  map(.x = .,\n      .f = \\(x) gf_histogram(~x, bins = 30) %&gt;%\n        gf_refine(theme_classic())\n      )\n\n\n\n$bill_length_mm\n\n\n\n\n\n\n$bill_depth_mm\n\n\n\n\n\n\n\n\n$flipper_length_mm\n\n\n\n\n\n\n\n\n$body_mass_g\n\n\n\n\n\n\n\nNote: we need to do just a bit of extra pre-work to get the variable names on the x-axis of the histograms.\nSo in summary, we need to create a tibble with column(s) that are the inputs to the map function. We then provide map with a function that it will apply to each of these columns. The function can take additional parameters too. Finally, depending upon the kind of output the function generates, we need to choose the map function."
  },
  {
    "objectID": "content/courses/R4Artists/Modules/130-purrr/purrr.html#using-purrr-to-create-multiple-models",
    "href": "content/courses/R4Artists/Modules/130-purrr/purrr.html#using-purrr-to-create-multiple-models",
    "title": "Iteration: Learning to purrr",
    "section": "Using purrr to create multiple models",
    "text": "Using purrr to create multiple models\nNow that we have some handle on purrr’s map functions, we can see how to develop a linear regression model for every country in the gapminder dataset.\nHere is the process:\n\nGroup the data by country\n\nCreate a nested column of data for each country (i.e nest the columns other than country into a list column). This list column is the first argument .x formap_*.\n\nUse map to create an lm object for each country (in another list column)\nUse map again with broom::tidy as the function to give us clean columns for the model per country.\nUse that multi-model tibble to plot graphs for each country\nEtc.\n\nLet us do this now!\n\n  gapminder_models &lt;- gapminder %&gt;% \n  group_by(country) %&gt;% \n  nest(.key = \"list\") %&gt;% # Name the column as \"list\"\n  \n  # We use mutate + map to add a list column containing linear models\n  mutate(model = map(.x = list, \n                     \n          # One column to iterate over\n          # The list column contains data frames\n          # So we access individual columns \n          # within these individual data frames\n                     .f = \\(.x) lm(lifeExp ~ year, data = .x)\n          )) %&gt;% \n  # Use mutate + map again to expose the columns of the models\n  \n  mutate(model_params = map(.x = model, \n                      .f = \\(.x) broom::tidy(.x, \n                                             conf.int = TRUE, \n                                             conf.lvel = 0.95)),\n         model_metrics = map(.x = model,\n                      .f = \\(x) broom::glance(x))) \ngapminder_models\nparams &lt;- gapminder_models %&gt;% \n  select(country,model_params, model_metrics) %&gt;% \n  ungroup() %&gt;% \n  # Now unpack the linear model parameters into columns\n  unnest(cols = model_params)\n\nmetrics &lt;- gapminder_models %&gt;% \n  select(country,model_metrics) %&gt;% \n  ungroup() %&gt;% \n  # Now unpack the linear model parameters into columns\n  unnest(cols = model_metrics)\nparams\nmetrics\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n\nWe can now plot these models and their uncertainty (i.e Confidence Intervals). We can select a few of the countries and plot:\n\nparams %&gt;% \n  filter(country %in% c(\"India\", \"United States\", \"Brazil\", \"China\"), term == \"year\") %&gt;% \n  gf_errorbar(conf.high + conf.low ~ country, \n              color = ~ -log10(p.value),\n              linewidth = ~ -log10(p.value), width = 0.3,\n              ylab = \"Effect Size\", title = \"Effect of years on Life Expectancy\") %&gt;% \n  gf_theme(theme_classic()) %&gt;% \n  gf_refine(scale_color_viridis_c(\"significance\"), scale_linewidth_continuous(\"significance\", range = c(0.2,3)))\n\n\n\n\nWe can look at the model metrics and see for which countries the model fares the worst. We will reverse sort on r.squared and choose the 5 worst models:\n\nmetrics %&gt;% slice_min(order_by = r.squared, n = 5)\n\n\n\n  \n\n\n\nWe see that for a few African countries, the linear model for Life Expectancy fails. There are of course political reasons for this: genocide in Rwanda, and hyper-inflation in Zimbabwe."
  },
  {
    "objectID": "content/courses/R4Artists/Modules/130-purrr/purrr.html#recent-developments-in-dplyr",
    "href": "content/courses/R4Artists/Modules/130-purrr/purrr.html#recent-developments-in-dplyr",
    "title": "Iteration: Learning to purrr",
    "section": "Recent developments in dplyr\n",
    "text": "Recent developments in dplyr\n\nIn recent times, the familiar dplyr package also has experimental functions that are syntactically easier and offer pretty much purrr-like capability, and without introducing the complexity of the list columns or list output.\nLook the code below and decipher how it works:\n\n# Using group_modify\ngapminder_model_dplyr &lt;- gapminder %&gt;%\n  group_by(continent, country) %&gt;%\n  \n  dplyr::group_modify(\n             .data = .,\n             .f = ~ lm(lifeExp ~ year, data = .) %&gt;% \n      \n      # glance/tidy is part of the group_map's .f variable.\n      # Applies to each model\n      # .f MUST generate a tibble here and *not* a list\n      # Hence broom::tidy is essential!\n      \n      broom::glance(conf.int = TRUE,  # try `tidy()` and `augment()`\n                    conf.lvel = 0.95)) %&gt;% \n  \n  # We already have a grouped tibble from `group_modify()`\n  # Just ungroup()\n  ungroup()\n\ngapminder_model_dplyr\n\n\n\n  \n\n\n\nThere is no nesting and unnesting; the data is the familiar tibble throughout! This seems like a simple and elegant method.\n\n\n\n\n\n\nUsing dplyr::group_modify\n\n\n\nNote: group_modify is new experimental functions in dplyr, as is list_rbind. The second-named requires that the operation in .f generates a tibble, not a list, and we can retain the grouping variable easily too. We can remove the groups with ungroup.\ngroup_modify() looks very clear and crisp, in my opinion. And very learner-friendly!"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/130-purrr/purrr.html#conclusion",
    "href": "content/courses/R4Artists/Modules/130-purrr/purrr.html#conclusion",
    "title": "Iteration: Learning to purrr",
    "section": "Conclusion",
    "text": "Conclusion\nWe have seen how purrr simplifies the application of functions iteratively to large groups of data, in a faster, replicable, and less error-prone manner."
  },
  {
    "objectID": "content/courses/R4Artists/Modules/130-purrr/purrr.html#references",
    "href": "content/courses/R4Artists/Modules/130-purrr/purrr.html#references",
    "title": "Iteration: Learning to purrr",
    "section": "References",
    "text": "References\n\n\nRebecca Barter, Learn to purrr. https://www.rebeccabarter.com/blog/2019-08-19_purrr\nEmorie Beck, Introduction to purrr. https://emoriebeck.github.io/R-tutorials/purrr/#\nSander Wuyts, purrr Tutorial. https://sanderwuyts.com/en/blog/purrr-tutorial/\nJared Wilber, Using the tidyverse for Machine Learning. https://www.jwilber.me/nest/"
  },
  {
    "objectID": "content/courses/R4Artists/listing.html",
    "href": "content/courses/R4Artists/listing.html",
    "title": "R for Artists and Managers",
    "section": "",
    "text": "🕶 Lab-1: Science, Human Experience, Experiments, and Data\n\n\nWhy do we visualize data\n\n\n\n\n\n\nNov 1, 2021\n\n\n10 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-2: Down the R-abbit Hole…\n\n\nWelcome ! Introduce Yourself to R, RStudio, and to all of Us!\n\n\n\n\n\n\nJul 9, 2021\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-3: Drink Me!\n\n\nWorking with Quarto\n\n\n\n\n\n\nMar 10, 2023\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-4: I say what I mean and I mean what I say\n\n\nGetting started with Data in R\n\n\n\n\n\n\nJul 12, 2022\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-5: Twas brillig, and the slithy toves…\n\n\nTidy Data at the wabe MoMA\n\n\n\n\n\n\nNov 22, 2022\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-6: These Roses have been Painted !!\n\n\nThe Grammar of Graphics in R\n\n\n\n\n\n\nAug 21, 2022\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-7: The Lobster Quadrille\n\n\nFonts and other Wizardy in ggplot\n\n\n\n\n\n\nInvalid Date\n\n\n31 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-8: Did you ever see such a thing as a drawing of a muchness?\n\n\nWorking with htmlwidgets in R!\n\n\n\n\n\n\nInvalid Date\n\n\n9 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-9: If you please sir…which way to the Secret Garden?\n\n\nThe Grammar of Maps\n\n\n\n\n\n\nJul 10, 2022\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-10: An Invitation from the Queen…to play Croquet\n\n\nThe Grammar of Networks\n\n\n\n\n\n\nJun 6, 2022\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-11: The Queen of Hearts, She Made some Tarts\n\n\nThe Grammar of Diagrams\n\n\n\n\n\n\nInvalid Date\n\n\n11 min\n\n\n\n\n\n\n  \n\n\n\n\nLab-12: Time is a Him!!\n\n\nTime Series in R\n\n\n\n\n\n\nFeb 14, 2022\n\n\n7 min\n\n\n\n\n\n\n  \n\n\n\n\nIteration: Learning to purrr\n\n\nPerforming Iterations in R\n\n\n\n\n\n\nJun 14, 2023\n\n\n11 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/20-intro/intro.html#introduction",
    "href": "content/courses/R4Artists/Modules/20-intro/intro.html#introduction",
    "title": "Lab-2: Down the R-abbit Hole…",
    "section": "Introduction",
    "text": "Introduction\nWelcome!\nLet’s start our journey to the Garden of Data Visualization, with this terrific presentation by the great ( and sadly late..) Hans Rosling.\nThe best stats you’ve ever seen by Hans Rosling:\n\nWe will run some boiler-plate R code today! Nothing ( almost! ) to code! We will get used to the tools and words of the trade: R, RStudio, installation, packages, libraries…."
  },
  {
    "objectID": "content/courses/R4Artists/Modules/200-wrap/index.html#introduction",
    "href": "content/courses/R4Artists/Modules/200-wrap/index.html#introduction",
    "title": "Lab-13: Old Tortoise Taught Us",
    "section": "Introduction",
    "text": "Introduction\nWe will spend a little time wrapping up everything that we have learnt so far, in R.\nWe will take one large dataset that has numerical, spatial and network type data, and see how we can make multiple visual depictions of it. We will use most of the packages that we have encountered so far and try to make a polished info visualization with all the graphs, text, and descriptions put together!"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/200-wrap/index.html#references",
    "href": "content/courses/R4Artists/Modules/200-wrap/index.html#references",
    "title": "Lab-13: Old Tortoise Taught Us",
    "section": "References",
    "text": "References\n\nAlex Cookson, Great Data Sets github repo, https://github.com/tacookson/data"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/30-rmd/rmd.html",
    "href": "content/courses/R4Artists/Modules/30-rmd/rmd.html",
    "title": "Lab-3: Drink Me!",
    "section": "",
    "text": "We will get acquainted with the RMarkdown Quarto Document format, which allows us to mix text narrative, code, code-developed figures and items from the web in a seamless document.Then we can try to create something in the lines of what Hans Rosling did.\nSomething that can:\n\nprovide a visualization\nprovide insight\ntell a story\nis reproducible"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/30-rmd/rmd.html#introduction",
    "href": "content/courses/R4Artists/Modules/30-rmd/rmd.html#introduction",
    "title": "Lab-3: Drink Me!",
    "section": "",
    "text": "We will get acquainted with the RMarkdown Quarto Document format, which allows us to mix text narrative, code, code-developed figures and items from the web in a seamless document.Then we can try to create something in the lines of what Hans Rosling did.\nSomething that can:\n\nprovide a visualization\nprovide insight\ntell a story\nis reproducible"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/30-rmd/rmd.html#setting-up-quarto",
    "href": "content/courses/R4Artists/Modules/30-rmd/rmd.html#setting-up-quarto",
    "title": "Lab-3: Drink Me!",
    "section": "Setting up Quarto",
    "text": "Setting up Quarto\nQuarto is installed along with RStudio. We can check if all is in order by running a check in the Terminal in RStudio. \nThe commands are:\n\nquarto check install\nquarto check knitr\n\nIf these come out with no errors then we are ready to fire up our first Quarto document."
  },
  {
    "objectID": "content/courses/R4Artists/Modules/30-rmd/rmd.html#practice",
    "href": "content/courses/R4Artists/Modules/30-rmd/rmd.html#practice",
    "title": "Lab-3: Drink Me!",
    "section": "Practice",
    "text": "Practice\nFire up a new Quarto document by going to: File -&gt; New File -&gt; Quarto Document.Switch to Visual mode, if it is not already there.\nUse the visual mode tool bar.\nTry to create Sections, code chunks, embedding images and tables.\nHit the Render button to see how the documents is converted into an html document."
  },
  {
    "objectID": "content/courses/R4Artists/Modules/30-rmd/rmd.html#references",
    "href": "content/courses/R4Artists/Modules/30-rmd/rmd.html#references",
    "title": "Lab-3: Drink Me!",
    "section": "References:",
    "text": "References:\n\nhttps://rmarkdown.rstudio.com/index.html\nhttps://ysc-rmarkdown.netlify.app/slides/01-basics.html Nice RMarkdown presentation and “code movies” !\nhttps://www.markdowntutorial.com\nhttps://quarto.org/docs/authoring/markdown-basics.html"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/30-rmd/rmd.html#assignments",
    "href": "content/courses/R4Artists/Modules/30-rmd/rmd.html#assignments",
    "title": "Lab-3: Drink Me!",
    "section": "Assignment(s)",
    "text": "Assignment(s)\n\nComplete the markdown tutorial in [reference 1]\nCreate a fresh Quarto document and use as many as possible of the RMarkdown constructs from the Cheatsheet [reference 1]"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/30-rmd/rmd.html#fun-stuff",
    "href": "content/courses/R4Artists/Modules/30-rmd/rmd.html#fun-stuff",
    "title": "Lab-3: Drink Me!",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nhttps://rmarkdown.rstudio.com/lesson-1.html\nDesirée De Leon, Alison Hill: rstudio4edu: A Handbook for Teaching and Learning with R and RStudio, https://rstudio4edu.github.io/rstudio4edu-book/"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/300-website/index.html#introduction",
    "href": "content/courses/R4Artists/Modules/300-website/index.html#introduction",
    "title": "Lab-14: You’re are Nothing but a Pack of Cards!!",
    "section": "Introduction",
    "text": "Introduction\nLet’s make a website in RStudio to show off our data viz portfolio, and to share with friends, parents, prospective employers…\nWe will encounter a new package called blogdown and use workflows with github and a free web hosting service called Netlify to create a website where all our RMarkdowns become individual blog posts, complete with Titles, Sections, Text, Diagrams and Links!\nNOTE: Need to update this to Quarto!!!"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/300-website/index.html#references",
    "href": "content/courses/R4Artists/Modules/300-website/index.html#references",
    "title": "Lab-14: You’re are Nothing but a Pack of Cards!!",
    "section": "References",
    "text": "References\n\nAllison Hill\nSharon Macliss\nYihui Xie"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/40-working-in-r/working.html",
    "href": "content/courses/R4Artists/Modules/40-working-in-r/working.html",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "",
    "text": "R Tutorial\n Slides"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/40-working-in-r/working.html#fa-folder-open-slides-and-tutorials",
    "href": "content/courses/R4Artists/Modules/40-working-in-r/working.html#fa-folder-open-slides-and-tutorials",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "",
    "text": "R Tutorial\n Slides"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/40-working-in-r/working.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "href": "content/courses/R4Artists/Modules/40-working-in-r/working.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": " Introduction",
    "text": "Introduction\nWe will get acquainted with data and its representations in R! We will also form a view of how English Grammar ( pronouns, verbs, adjectives, figures of speech..) get metaphorized into the R World!!"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/40-working-in-r/working.html#readings",
    "href": "content/courses/R4Artists/Modules/40-working-in-r/working.html#readings",
    "title": "Lab-4: I say what I mean and I mean what I say",
    "section": "Readings",
    "text": "Readings\n\nR for Data Science, Workflow: Basics Chapter: http://r4ds.had.co.nz/workflow-basics.html\nModern Dive, Getting Started Chapter: http://moderndive.com/2-getting-started.html\nR & RStudio Basics: https://bookdown.org/chesterismay/rbasics/3-rstudiobasics.html\nRStudio IDE Cheatsheet: https://github.com/rstudio/cheatsheets/blob/master/rstudio-ide.pdf"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/50-working-in-tidyverse/tidy.html",
    "href": "content/courses/R4Artists/Modules/50-working-in-tidyverse/tidy.html",
    "title": "Lab-5: Twas brillig, and the slithy toves…",
    "section": "",
    "text": "R Tutorial\n  Slides\n dplyr Tutorial"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/50-working-in-tidyverse/tidy.html#fa-folder-open-slides-and-tutorials",
    "href": "content/courses/R4Artists/Modules/50-working-in-tidyverse/tidy.html#fa-folder-open-slides-and-tutorials",
    "title": "Lab-5: Twas brillig, and the slithy toves…",
    "section": "",
    "text": "R Tutorial\n  Slides\n dplyr Tutorial"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/50-working-in-tidyverse/tidy.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "href": "content/courses/R4Artists/Modules/50-working-in-tidyverse/tidy.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "title": "Lab-5: Twas brillig, and the slithy toves…",
    "section": " Introduction",
    "text": "Introduction\nWe meet the most important idea in R: tidy data. Once data is tidy, there is a great deal of insight to be obtained from it, by way of tables, graphs and explorations!\nWe will get hands on with dplyr, the R-package that belongs in the tidyverse and is a terrific toolbox to clean, transform, reorder, and summarize your data. And we will be ready to ask Questions of our data and embark on analyzing it."
  },
  {
    "objectID": "content/courses/R4Artists/Modules/50-working-in-tidyverse/tidy.html#readings",
    "href": "content/courses/R4Artists/Modules/50-working-in-tidyverse/tidy.html#readings",
    "title": "Lab-5: Twas brillig, and the slithy toves…",
    "section": "Readings",
    "text": "Readings\n\nR4DS dplyr chapter\nModernDive dplyr chapter\nRStudio dplyr Cheatsheet"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/60-GoG/gog.html",
    "href": "content/courses/R4Artists/Modules/60-GoG/gog.html",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "",
    "text": "R Tutorial  \n  Slides \n  Colour in R \nAdvanced Graphics"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/60-GoG/gog.html#fa-folder-open-slides-and-tutorials",
    "href": "content/courses/R4Artists/Modules/60-GoG/gog.html#fa-folder-open-slides-and-tutorials",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": "",
    "text": "R Tutorial  \n  Slides \n  Colour in R \nAdvanced Graphics"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/60-GoG/gog.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "href": "content/courses/R4Artists/Modules/60-GoG/gog.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": " Introduction",
    "text": "Introduction\nAh…ggplot ! All those wonderful pictures and graphs, that Alice might have relished!\nMetaphors, aesthetics, geometries…and pictures !! ggplot seems to equate ravens to writing desks in its syntax…and out come graphs!!\nAnd colours: Wes Anderson! Tim Burton! The Economist… and many others!!"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/60-GoG/gog.html#fa-asterisk-references",
    "href": "content/courses/R4Artists/Modules/60-GoG/gog.html#fa-asterisk-references",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": " References",
    "text": "References\n\nGeorge Lakoff and Mark Johnson, Metaphors We Live By, https://www.youtube.com/watch?v=lYcQcwUfo8c\nWickham and Grolemund, R for Data Science, ggplot chapter: https://r4ds.had.co.nz/data-visualisation.html\nCMDLineTips, 10 Tips to Customize Text Color, Font, Size in ggplot2 with element_text(), https://cmdlinetips.com/2021/05/tips-to-customize-text-color-font-size-in-ggplot2-with-element_text/\nCMDLineTips, How to write a simple custom ggplot theme from scratch, https://cmdlinetips.com/2022/05/how-to-write-a-simple-custom-ggplot-theme-from-scratch/\nAsha Hill @ mode.com, 12 Extensions to ggplot2 for More Powerful R Visualizations, https://mode.com/blog/r-ggplot-extension-packages/\nEmil Hvitfeldt, ggplot Trial and Error, https://www.emilhvitfeldt.com/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/60-GoG/gog.html#fa-icons-fun-stuff",
    "href": "content/courses/R4Artists/Modules/60-GoG/gog.html#fa-icons-fun-stuff",
    "title": "Lab-6: These Roses have been Painted !!",
    "section": " Fun Stuff",
    "text": "Fun Stuff\n\nYihan Wu, Mapping ggplot geoms and aesthetic parameters, ( An interactive view of which aesthetic parameters work with which ggplot geom!! ) https://www.yihanwu.ca/post/geoms-and-aesthetic-parameters/\nhttps://www.theartstory.org/artist/kandinsky-wassily/"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "",
    "text": "This Quarto document is part of my Course, R for Artists and Managers. The material is based on A Layered Grammar of Graphics by Hadley Wickham.\nThe intent of this Tutorial is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll RMarkdown files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#iconify-noto-v1-package-setting-up-r-packages",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#iconify-noto-v1-package-setting-up-r-packages",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": " Setting up R Packages",
    "text": "Setting up R Packages\n\n## packages\nlibrary(tidyverse)   ## data science package collection (incl. the ggplot2 package)\nlibrary(systemfonts) ## use custom fonts (need to be installed on your OS)  \nlibrary(paletteer)   ## scico  and many other colour palettes palettes(http://www.fabiocrameri.ch/colourmaps.php) in R \nlibrary(ggtext)      ## add improved text rendering to ggplot2\nlibrary(ggforce)     ## add missing functionality to ggplot2\nlibrary(ggdist)      ## add uncertainty visualizations to ggplot2\nlibrary(ggformula)   ## Formula interface to ggplot\nlibrary(magick)      ## load images into R\nlibrary(patchwork)   ## combine outputs from ggplot2\nlibrary(palmerpenguins)\n\nlibrary(showtext)   ## add google fonts to plots\n\nknitr::opts_chunk$set(\n  error = TRUE,\n  comment = NA,\n  warning = FALSE,\n  errors = FALSE,\n  message = FALSE,\n  tidy = FALSE,\n  cache = FALSE,\n  echo = TRUE,\n  warning = FALSE,\n# from the vignette for the showtext package\n  fig.showtext = TRUE,\n  fig.retina = 1,\n\n  fig.width = 9,\n  fig.height = 8,\n  fig.path = \"06a-figs/\"\n)"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#using-google-fonts",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#using-google-fonts",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Using Google Fonts",
    "text": "Using Google Fonts\nWe will want to add a few new fonts to our graphs. The best way (currently) is to use the showtext package ( which we loaded above) to bring into our work fonts from Google. To view and select the fonts you might want to work with, spend some time looking over:\n\nGoogle Webfonts Helper App\nGoogle Fonts\n\n\nsysfonts::font_add_google(\"Gochi Hand\", \"gochi\")\nfont_add_google(\"Schoolbell\", \"bell\")\nfont_add_google(\"Galada\", \"galada\")\nfont_add_google(\"Schoolbell\", \"bell\")\nfont_add_google(\"Roboto\", \"roboto\")\nfont_add_google(\"Noto Sans\", \"noto\")\nfont_add_google(\"Uchen\", \"uchen\")\nfont_add_google(\"Ibarra Real Nova\", \"ibarra\")\nfont_add_google(\"Open Sans\", \"open\")\nfont_add_google(\"Anton\", \"anton\")\nfont_add_google(\"Tangerine\", \"tangerine\")\n\n # set the google fonts as default\nshowtext::showtext_auto()\n\nWe will work with a familiar dataset, so that we can concentrate on the chart aesthetics, without having to spend time getting used to the data: the penguins dataset again, from the palmerpenguins package.\n\n\n\n\n\n\nggformula and ggplot worlds\n\n\n\nIt seems we can mix `ggformula` code with `ggtext` code, using the `+` sign!! What joy !!! Need to find out if this works for other `ggplot` extensions as well !!!"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#data",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#data",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Data",
    "text": "Data\nAlways start your work with a table of the data:\n\npenguins &lt;- penguins %&gt;% drop_na() # remove data containing missing data\npenguins"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#basic-plot",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#basic-plot",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Basic Plot",
    "text": "Basic Plot\nA basic scatter plot, which we will progressively dress up.\n\nUsing ggformulaUsing ggplot\n\n\n\n## simple plot: data + mappings + geometry\n## no colour or fill yet\ngf &lt;-  gf_point(bill_depth_mm ~ bill_length_mm, \n                 data = penguins, \n                 alpha = 0.6, size = 3.5)\ngf\n\n\n\n\n\n\n\n## simple plot: data + mappings + geometry\n## no colour or fill yet\ngg &lt;- ggplot(penguins, aes(x = bill_length_mm,\n                     y = bill_depth_mm)) +\n  geom_point(alpha = .6, size = 3.5)\ngg"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#customized-plot",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#customized-plot",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Customized Plot",
    "text": "Customized Plot\nLet us set some ggplot theme aspects now!! Here is a handy picture showing (most of) the theme-able aspects of a ggplot plot.\n\n\n\nRosana Ferrero (@RosanaFerrero) on Twitter Sept 11, 2022\n\n\nFor more info, type ?theme in your console.\n\n## change global theme settings (for all following plots)\ntheme_set(theme_minimal(base_size = 12, base_family = \"open\"))\n\n## modify plot elements globally (for all following plots)\ntheme_update(\n  axis.ticks = element_line(color = \"grey92\"),\n  axis.ticks.length = unit(.5, \"lines\"),\n  panel.grid.minor = element_blank(),\n  legend.title = element_text(size = 12),\n  legend.text = element_text(color = \"grey30\"),\n  plot.title = element_text(size = 18, face = \"bold\"),\n  plot.subtitle = element_text(size = 12, color = \"grey30\"),\n  plot.caption = element_text(size = 9, margin = margin(t = 15))\n)\n\nSince we know what the basic plot looks like, let’s add titles, labels and colours. We will also set limits and scales.\n\nUsing ggformulaUsing ggplot\n\n\n\ngf1 &lt;- penguins %&gt;% \n  gf_point(bill_depth_mm ~ bill_length_mm, \n           \n1           # colour by continuous variable\n           color =  ~ body_mass_g, \n           alpha = .6, size = 3.5) %&gt;% \n\n  \n  ## custom axes scaling\n  gf_refine(\n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)),\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)), \n  \n  ## custom colors from the scico package\n  ## using the paletteer super package\n  paletteer:: scale_color_paletteer_c(`\"scico::bamako\"`, direction = -1),\n1  \n  ## custom labels\n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (Pygoscelis)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) PLoS ONE',\n    x = 'Bill Length (mm)', \n    y = 'Bill Depth (mm)',\n1    color = 'Body mass (g)'\n  ))\n\ngf1\n\n\n1\n\nNote this neat way of naming a scale and the legend!\n\n\n\n\n\n\n\n\n\n\ngg1 &lt;- penguins %&gt;% \n  ggplot(aes(y = bill_depth_mm, x = bill_length_mm), alpha = .6, \n         size = 3.5) +\n  geom_point(aes(colour = body_mass_g)) + \n\n  \n  ## custom axes scaling\n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) + \n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) + \n  \n  ## custom colors from the scico package\n  paletteer:: scale_color_paletteer_c(`\"scico::bamako\"`, \n                                      direction = -1) + \n  \n  ## custom labels\n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (Pygoscelis)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) PLoS ONE',\n    x = 'Bill Length (mm)', \n    y = 'Bill Depth (mm)',\n    color = 'Body mass (g)' \n  )\ngg1"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#using-element_markdown",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#using-element_markdown",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Using element_markdown()",
    "text": "Using element_markdown()\n\nUsing ggformulaUsing ggplot\n\n\nWe can use our familiar markdown syntax right inside the titles and captions of the plot. element_markdown() is a theme-ing command made available by the ggtext package.\nelement_markdown() → formatted text elements, e.g. titles, caption, axis text, striptext\n\ngf2 &lt;- penguins %&gt;% gf_point(bill_depth_mm ~ bill_length_mm, \n                            color = ~ body_mass_g, \n                            alpha = 0.6, size = 3.5) %&gt;% \n gf_refine(\n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)),\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)), \n  \n  ## custom colors from the scico package\n  paletteer:: scale_color_paletteer_c(\"scico::bamako\", \n                                      direction = -1),\n  \n  ## custom labels using element_markdown()\n   labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)', \n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)')\n  ) %&gt;% \n  \n  # New code from here\n  # Enables markdown titles, captions and labels\n  gf_theme(theme(\n    plot.title = ggtext::element_markdown(),\n    plot.caption = ggtext::element_markdown(),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown()\n  ))\n\n gf2\n\n\n\n\n\n\n\ngg2 &lt;- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5) + \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n   paletteer:: scale_color_paletteer_c(`\"scico::bamako\"`, direction = -1) +\n   \n  ## New code starts here: Two Step Procedure with ggtext\n  ## 1. Markdown formatting of labels and title, using asterisks\n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)', \n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n   \n  ## 2. Add theme related commands from ggtext\n  ## render respective text elements\n  theme(\n    plot.title = ggtext::element_markdown(),\n    plot.caption = ggtext::element_markdown(),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown()\n  )\ngg2"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#element_markdown-in-combination-with-html",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#element_markdown-in-combination-with-html",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "element_markdown() in combination with HTML",
    "text": "element_markdown() in combination with HTML\nThis allows us to change fonts in titles, labels, and captions.\n\nUsing ggformulaUsing ggplot\n\n\n\n## use HTML syntax to change text color\n## \ngf2 %&gt;% \n  \n  # html in labels\n  gf_labs(title = 'Bill Dimensions of Brush-Tailed Penguins\n          &lt;i style = \"color:#28A87D;\"&gt;Pygoscelis &lt;/i&gt;'\n            ) \n\n\n\n## use HTML syntax to change font and text size\ngf2 %&gt;% \n  gf_labs(title = 'Bill Dimensions of Brush-Tailed Penguins &lt;b style=\"font-size:32pt;font-family:tangerine;\"&gt;Pygoscelis&lt;/b&gt;') \n\n\n\n\n\n\n\n## use HTML syntax to change text color\ngg2 +\n  labs(title = 'Bill Dimensions of Brush-Tailed Penguins &lt;i style=\"color:#28A87D;\"&gt;Pygoscelis&lt;/i&gt;') +\n  theme(plot.margin = margin(t = 25))\n\n\n\n## use HTML syntax to change font and text size\ngg2 +\n  labs(title = 'Bill Dimensions of Brush-Tailed Penguins &lt;b style=\"font-size:32pt;font-family:tangerine;\"&gt;Pygoscelis&lt;/b&gt;')"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#adding-images-to-ggplot",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#adding-images-to-ggplot",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Adding images to ggplot",
    "text": "Adding images to ggplot\nSave an image from the web in the same folder as your RMarkdown. Use html tags to include it, say as part of your plot title, as shown below.\n\nUsing ggformulaUsing ggplot\n\n\n\n## use HTML syntax to add images to text elements\ngf2 %&gt;% \n  gf_labs(title = 'Bill Dimensions of Brush-Tailed Penguins &nbsp;&nbsp;&nbsp; &lt;img src=\"../images/culmen_depth.png\"‚ width=\"480\"/&gt;') \n\n\n\n\n\n\n\n## use HTML syntax to add images to text elements\ngg2 + \n  labs(title = 'Bill Dimensions of Brush-Tailed Penguins &nbsp;&nbsp;&nbsp; &lt;img src=\"../images/culmen_depth.png\"‚ width=\"480\"/&gt;')"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#annotations-with-geom_richtext-and-geom_textbox",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#annotations-with-geom_richtext-and-geom_textbox",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Annotations with geom_richtext() and geom_textbox()",
    "text": "Annotations with geom_richtext() and geom_textbox()\nFurther ggplot annotations can be achieved using geom_richtext() and geom_textbox(). geom_richtext() also allows formatted text labels with 360° rotation. One needs to pass a dataframe to geom_richtext() giving the location, colour, rotation etc of the label annotation.\n\nUsing ggformulaUsing ggplot\n\n\n\n# Create a label tibble\n# Three rich text labels, \n# so three sets of locations x and y, and angle of rotation\nlabels &lt;- tibble(\n      x = c(34, 56, 54), \n      y = c(20, 18.5, 14.5),\n      angle = c(12, 20, 335),\n      species = c(\"Adelie\", \"Chinstrap\", \"Gentoo\"),\n      \n      lab = c(\"&lt;b style='font-family:anton;font-size:24pt;'&gt;Adélie&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. adéliae&lt;/i&gt;\", \n              \"&lt;b style='font-family:anton;font-size:24pt;'&gt;Chinstrap&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. antarctica&lt;/i&gt;\", \n              \"&lt;b style='font-family:anton;font-size:24pt;'&gt;Gentoo&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. papua&lt;/i&gt;\"))\nlabels\n\ngf_rich &lt;- penguins %&gt;% \n  gf_point(bill_depth_mm ~ bill_length_mm, \n                      color = ~ species, \n                      alpha = 0.6, size = 3.5, data = penguins) +\n  \n  \n    ## add text annotations for each species\n    ggtext::geom_richtext(\n    data = labels,\n    # Now pass the data variables as aesthetics\n    aes(x, y, label = lab, color = species, angle = angle), \n    size = 4, fill = NA, label.color = NA,\n    lineheight = .3) +\n    # show.legend = FALSE else we get some unusual legends!\n    # fill = NA makes the labels' fill transparent\n  \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n  scale_colour_paletteer_d(palette = `\"rcartocolor::Bold\"`, guide = \"none\") +\n  \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)', \n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n  \n  # Use theme and element_markdown() to format axes and titles as usual\n  theme(\n    plot.title = ggtext::element_markdown(),\n    plot.caption = ggtext::element_markdown(),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown(),\n    plot.margin = margin(25, 6, 15, 6)\n  )\n\n\ngf_rich\n\n\n1\n\nNote the plus sign usage here!!We are combining the ggformula and ggplot syntax, and it works!\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\ngg_rich &lt;- ggplot(penguins, aes(x = bill_length_mm, \n                                y = bill_depth_mm)) +\n  geom_point(aes(color = species), alpha = .6, size = 3.5) + \n  \n  ## add text annotations for each species\n  ggtext::geom_richtext(\n    data = labels,\n    # Now pass the data variables as aesthetics\n    aes(x, y, label = lab, color = species, angle = angle), \n    size = 4, fill = NA, label.color = NA,\n    lineheight = .3) +\n  \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n  scale_colour_paletteer_d(`\"rcartocolor::Bold\"`, guide = \"none\")+\n  \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)', \n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n  \n  # Use theme and element_markdown() to format axes and titles as usual\n  theme(\n    plot.title = ggtext::element_markdown(),\n    plot.caption = ggtext::element_markdown(),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown(),\n    plot.margin = margin(25, 6, 15, 6)\n  )\n  \ngg_rich"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#formatted-text-boxes-on-plots",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#formatted-text-boxes-on-plots",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Formatted Text boxes on plots",
    "text": "Formatted Text boxes on plots\nelement_textbox() and element_textbox_simple() → formatted text boxes with word wrapping.\n\nUsing ggformulaUsing ggplot\n\n\n\ngf_box &lt;- penguins %&gt;% \n  gf_point(bill_depth_mm ~ bill_length_mm, \n                      color = ~ species, \n                      alpha = 0.6, size = 3.5, data = penguins) +\n  \n  \n    ## add text annotations for each species\n    ggtext::geom_richtext(\n    data = labels,\n    # Now pass the data variables as aesthetics\n    aes(x, y, label = lab, color = species, angle = angle), \n    size = 4, fill = NA, label.color = NA,\n    lineheight = .3) +\n    # show.legend = FALSE else we get some unusual legends!\n    # fill = NA makes the labels' fill transparent\n  \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n  scale_colour_paletteer_d(palette = `\"rcartocolor::Bold\"`, guide = \"none\") +\n  \n  \n# Now for the Plot Titles and Labels, as before  \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)',\n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n  \n# Add the ggtext theme related commands\n  theme(\n    ## turn title into filled textbox\n    plot.title = ggtext::element_textbox_simple(\n      color = \"white\",\n      fill = \"#28A78D\",\n      size = 32,\n      padding = margin(8, 4, 8, 4),\n      margin = margin(b = 5),\n      lineheight = .9\n    ),\n    plot.subtitle = ggtext::element_textbox_simple(\n      size = 10,\n      padding = margin(5.5, 5.5, 5.5, 5.5),\n      margin = margin(0, 0, 5.5, 0),\n      fill = \"orange1\"\n    ),\n    \n    ## add round outline to caption\n    plot.caption = ggtext::element_textbox_simple(\n      width = NULL,\n      linetype = 1,\n      fill = \"grey\",\n      padding = margin(4, 8, 4, 8),\n      margin = margin(t = 15),\n      r = grid::unit(8, \"pt\")\n    ),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown(),\n    plot.margin = margin(25, 6, 15, 6)\n  )\n\ngf_box\n\n\n1\n\nNote again the use of the plus sign with ggformula. This works!\n\n\n\n\n\n\n\n\n\n\ngg_box &lt;- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(color = species), alpha = .6, size = 3.5) +\n  \n     ## add text annotations for each species\n    ggtext::geom_richtext(\n    data = labels,\n    # Now pass the data variables as aesthetics\n    aes(x, y, label = lab, color = species, angle = angle), \n    size = 4, fill = NA, label.color = NA,\n    lineheight = .3) +\n    # show.legend = FALSE else we get some unusual legends!\n    # fill = NA makes the labels' fill transparent\n  \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n  scale_colour_paletteer_d(palette = `\"rcartocolor::Bold\"`, guide = \"none\") +\n  \n  \n# Now for the Plot Titles and Labels, as before  \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)',\n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n  \n# Add the ggtext theme related commands\n  theme(\n    ## turn title into filled textbox\n    plot.title = ggtext::element_textbox_simple(\n      color = \"white\",\n      fill = \"#28A78D\",\n      size = 32,\n      padding = margin(8, 4, 8, 4),\n      margin = margin(b = 5),\n      lineheight = .9\n    ),\n    plot.subtitle = ggtext::element_textbox_simple(\n      size = 10,\n      padding = margin(5.5, 5.5, 5.5, 5.5),\n      margin = margin(0, 0, 5.5, 0),\n      fill = \"orange1\"\n    ),\n    \n    ## add round outline to caption\n    plot.caption = ggtext::element_textbox_simple(\n      width = NULL,\n      linetype = 1,\n      fill = \"grey\",\n      padding = margin(4, 8, 4, 8),\n      margin = margin(t = 15),\n      r = grid::unit(8, \"pt\")\n    ),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown(),\n    plot.margin = margin(25, 6, 15, 6)\n  )\n\ngg_box"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#using-geom_texbox-for-formatted-text-boxes-with-word-wrapping",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#using-geom_texbox-for-formatted-text-boxes-with-word-wrapping",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Using geom_texbox() for formatted text boxes with word wrapping",
    "text": "Using geom_texbox() for formatted text boxes with word wrapping\n\nUsing ggformulaUsing ggplot\n\n\n\ntext_box &lt;- tibble(x = 34, y = 13.7, label = \"&lt;span style='font-size:12pt;font-family:anton;'&gt;Lorem Ipsum Dolor Sit Amet&lt;/span&gt;&lt;br&gt;&lt;br&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\")\n\n\ngf_box +\n  ## add textbox with long paragraphs\n  ggtext::geom_textbox(\n    data = text_box,\n    aes(x, y, \n        label = label),\n    size = 2.2, family = \"sans\",\n    fill = \"cornsilk\", \n    \n    colour = \"black\",\n# This is ESSENTIAL !!!\n# It appears that the original colour aesthetic mapping in `gf_box` and a possible colour aesthetic with `geom_textbox` have a clash, *only* with ggformula. No such issues below with the ggplot.\n# So declaring a colour here is essential\n\n    box.color = \"cornsilk3\",\n    #box.padding = c(2,2,2,2),\n    width = unit(11, \"lines\")\n  ) +\n  coord_cartesian(clip = \"off\") # ensure no clipping of labels near the edge\n\n\n\n\n\n\n\ngg_box +\n  ## add textbox with long paragraphs\n  ggtext::geom_textbox(\n    data = text_box,\n    aes(x, y, label = label),\n    size = 2.2, family = \"sans\",\n    fill = \"cornsilk\", box.color = \"cornsilk3\",\n    width = unit(11, \"lines\")\n  ) +\n  coord_cartesian(clip = \"off\") # ensure no clipping of labels near the edge"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#using-ggforce",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#using-ggforce",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Using {ggforce}",
    "text": "Using {ggforce}\nFrom Thomas Lin Pedersen’s website → www.ggforce.data-imaginist.com\n\nggforce is a package aimed at providing missing functionality to ggplot2 through the extension system introduced with ggplot2 v2.0.0. Broadly speaking ggplot2 has been aimed primarily at explorative data visualization in order to investigate the data at hand, and less at providing utilities for composing custom plots a la D3.js. ggforce is mainly an attempt to address these “shortcoming” (design choices might be a better description). The goal is to provide a repository of geoms, stats, etc. that are as well documented and implemented as the official ones found in ggplot2.\n\nWe will start with the basic plot, with the ggtext related work done up to now:\n\n## use ggtext rendering for the following plots\ntheme_update(\n  plot.title = ggtext::element_markdown(),\n  plot.caption = ggtext::element_markdown(),\n  axis.title.x = ggtext::element_markdown(),\n  axis.title.y = ggtext::element_markdown()\n)\n\n\nUsing ggformula and ggforceUsing ggplot and ggforce\n\n\n\n## plot that we will annotate with ggforce afterwards\ngf3 &lt;- penguins %&gt;% \n  gf_point(bill_depth_mm ~ bill_length_mm,\n           color = ~ body_mass_g,\n           alpha = .6, \n           size = 3.5) + \n  \n  coord_cartesian(xlim = c(25, 65), ylim = c(10, 25)) +\n  \n  # Add Colour scales\n  scale_color_paletteer_c(`\"grDevices::Lajolla\"`, direction = -1) +\n  \n  # Add labels\n  labs(\n    title = \"Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)\",\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE*\",\n    x = \"**Bill Length** (mm)\",\n    y = \"**Bill Depth** (mm)\",\n    color = \"Body mass (g)\",\n    fill = \"Species\"\n  )\n\n\n\n## ellipsoids for all groups\ngf3 +\n  ggforce::geom_mark_ellipse(\n    aes(fill = species, \n        label = species), \n    \n    color = \"black\", \n    # This is good to include\n    # Else ellipses get coloured too\n    \n    alpha = .15, \n    show.legend = FALSE\n  ) \n\n\n\n\n\n\n\n## plot that we will annotate with ggforce afterwards\ngg3 &lt;- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(color = body_mass_g), \n             alpha = .6, \n             size = 3.5) + \n\n  coord_cartesian(xlim = c(25, 65), ylim = c(10, 25)) +\n  \n  # Add Colour scales\n  scale_color_paletteer_c(`\"grDevices::Lajolla\"`, direction = -1) +\n  # rcartocolor::scale_fill_carto_d(palette = \"Bold\") +\n  \n  # Add labels\n  labs(\n    title = \"Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)\",\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE*\",\n    x = \"**Bill Length** (mm)\",\n    y = \"**Bill Depth** (mm)\",\n    color = \"Body mass (g)\",\n    fill = \"Species\"\n  )\n\n\n## ellipsoids for all groups\ngg3 +\n  ggforce::geom_mark_ellipse(\n    aes(fill = species, \n        label = species), \n    alpha = .15, \n    show.legend = FALSE\n  ) \n\n\n\n\n\n## ellipsoids for specific subset\ngg3 +\n  ggforce::geom_mark_ellipse(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)\n\n\n\n\n\n## circles\ngg3 +\n  ggforce::geom_mark_circle(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)\n\n\n\n\n\n## rectangles\ngg3 +\n  ggforce::geom_mark_rect(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5) \n\n\n\n\n\nlibrary(concaveman)\n## hull\ngg3 +\n  ggforce::geom_mark_hull(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#ggplot-tricks",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#ggplot-tricks",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "ggplot tricks",
    "text": "ggplot tricks\n\ngg0 &lt;- \n  ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n    ggforce::geom_mark_ellipse(\n    aes(fill = species, \n        label = species), \n    alpha = .15, \n    show.legend = FALSE\n  ) +\n    geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5) + \n    scale_x_continuous(breaks = seq(25, 65, by = 5), limits = c(25, 65)) +\n    scale_y_continuous(breaks = seq(12, 24, by = 2), limits = c(12, 24)) +\n    scico::scale_color_scico(palette = \"bamako\", direction = -1) +\n    labs(\n      title = \"Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)\",\n      subtitle = 'A scatter plot of bill depth versus bill length.',\n      caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE*\",\n      x = \"Bill Length (mm)\", \n      y = \"Bill Depth (mm)\",\n      color = \"Body mass (g)\"\n    )\ngg0\n\n\n\n\n\nLeft-Aligned Title\n\n(gg1 &lt;- gg0 + theme(plot.title.position = \"plot\"))\n\n\n\n\n\n\nRight-Aligned Caption\n\ngg1b &lt;- gg1 +  theme(plot.caption.position = \"panel\")\ngg1b\n\n\n\n\n\n\nLegend Design\n\ngg1b + theme(legend.position = \"top\")\n\n\n\n#ggsave(\"06a_legend_position.pdf\", width = 9, height = 8, device = cairo_pdf)\n\ngg1b + \n  theme(legend.position = \"top\") +\n  guides(color = guide_colorbar(title.position = \"top\", \n                                title.hjust = .5, \n                                barwidth = unit(20, \"lines\"), \n                                barheight = unit(.5, \"lines\")))\n\n\n\n\n\n\nAdd Images\n\n## read PNG file from web\npng &lt;- magick::image_read(\"../images/culmen_depth.png\")\n## turn image into `rasterGrob`\nimg &lt;- grid::rasterGrob(png, interpolate = TRUE)\n\ngg5 &lt;- gg2 + \n  annotation_custom(img, ymin = 18, ymax = 28, xmin = 58, xmax = 65) +\n    labs(caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE* &bull; Illustration: Allison Horst\")\ngg5"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#using-patchwork",
    "href": "content/courses/R4Artists/Modules/70-wizardy/files/07-wizardy.html#using-patchwork",
    "title": "Fonts, Themes, and other Wizardy in ggplot",
    "section": "Using {patchwork}",
    "text": "Using {patchwork}\n\nThe goal of patchwork is to make it ridiculously simple to combine separate ggplots into the same graphic. As such it tries to solve the same problem as gridExtra::grid.arrange() and cowplot::plot_grid but using an API that incites exploration and iteration, and scales to arbitrily complex layouts.\n\n→ https://patchwork.data-imaginist.com/\nLet us make two plots and combine them into a single patchwork plot.\n\n## calculate bill ratio\npenguins_stats &lt;- penguins %&gt;% \n  mutate(bill_ratio = bill_length_mm / bill_depth_mm) %&gt;% \n  filter(!is.na(bill_ratio))\n\n## create a second chart\ngg6 &lt;- ggplot(penguins_stats, aes(y = bill_ratio, x = species, fill = species, color = species)) + geom_violin() + \n  labs(\n    y = \"Bill ratio\",\n    x = \"Species\",\n    subtitle = \"\",\n    caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE* &bull; Illustration: Allison Horst\"\n  ) +\n  theme(\n    panel.grid.major.x = element_line(size = .35),\n    panel.grid.major.y = element_blank(),\n    axis.text.y = element_text(size = 13),\n    axis.ticks.length = unit(0, \"lines\"),\n    plot.title.position = 'plot',\n    plot.subtitle = element_text(margin = margin(t = 5, b = 10)),\n    plot.margin = margin(10, 25, 10, 25)\n  )\n\nNow to combine both plots into one using simple operators:\n\nFor the special case of putting plots besides each other or on top of each other patchwork provides 2 shortcut operators. | will place plots next to each other while / will place them on top of each other.\n\nFirst we stack up the graphs side by side:\n\n## combine both plots\ngg5 | (gg6 + labs(title = \"Bill Ratios of Brush-Tailed Penguins\",\n                  subtitle = \"Violin Plots of Bill Ration versus species\"))\n\n\n\n\nWe can place them in one column:\n\ngg5 / (gg6 + labs(title = \"Bill Ratios of Brush-Tailed Penguins\",\n                  subtitle = \"Violin Plots of Bill Ration versus species\")) +\n  plot_layout(heights = c(0.4, 0.4))"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#introduction",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#introduction",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Introduction",
    "text": "Introduction\nWe will add icing and froth to our vanilla ggplots: fonts, annotations, highlights and even pictures!!"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#using-google-fonts",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#using-google-fonts",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Using Google Fonts",
    "text": "Using Google Fonts\nWe will want to add a few new fonts to our graphs. The best way (currently) is to use the showtext package ( which we loaded above) to bring into our work fonts from Google. To view and select the fonts you might want to work with, spend some time looking over:\n\nGoogle Webfonts Helper App\nGoogle Fonts\n\n\nsysfonts::font_add_google(\"Gochi Hand\", \"gochi\")\nfont_add_google(\"Schoolbell\", \"bell\")\nfont_add_google(\"Galada\", \"galada\")\nfont_add_google(\"Schoolbell\", \"bell\")\nfont_add_google(\"Roboto\", \"roboto\")\nfont_add_google(\"Noto Sans\", \"noto\")\nfont_add_google(\"Uchen\", \"uchen\")\nfont_add_google(\"Ibarra Real Nova\", \"ibarra\")\nfont_add_google(\"Open Sans\", \"open\")\nfont_add_google(\"Anton\", \"anton\")\nfont_add_google(\"Tangerine\", \"tangerine\")\n\n # set the google fonts as default\nshowtext::showtext_auto()\n\nWe will work with a familiar dataset, so that we can concentrate on the chart aesthetics, without having to spend time getting used to the data: the penguins dataset again, from the palmerpenguins package.\n\n\n\n\n\n\nggformula and ggplot worlds\n\n\n\nIt seems we can mix `ggformula` code with `ggtext` code, using the `+` sign!! What joy !!! Need to find out if this works for other `ggplot` extensions as well !!!"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#data",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#data",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Data",
    "text": "Data\nAlways start your work with a table of the data:\n\npenguins &lt;- penguins %&gt;% drop_na() # remove data containing missing data\npenguins"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#basic-plot",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#basic-plot",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Basic Plot",
    "text": "Basic Plot\nA basic scatter plot, which we will progressively dress up.\n\nUsing ggformulaUsing ggplot\n\n\n\n## simple plot: data + mappings + geometry\n## no colour or fill yet\ngf &lt;-  gf_point(bill_depth_mm ~ bill_length_mm, \n                 data = penguins, \n                 alpha = 0.6, size = 3.5)\ngf\n\n\n\n\n\n\n\n## simple plot: data + mappings + geometry\n## no colour or fill yet\ngg &lt;- ggplot(penguins, aes(x = bill_length_mm,\n                     y = bill_depth_mm)) +\n  geom_point(alpha = .6, size = 3.5)\ngg"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#customized-plot",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#customized-plot",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Customized Plot",
    "text": "Customized Plot\nLet us set some ggplot theme aspects now!! Here is a handy picture showing (most of) the theme-able aspects of a ggplot plot.\n\n\n\nRosana Ferrero (@RosanaFerrero) on Twitter Sept 11, 2022\n\n\nFor more info, type ?theme in your console.\n\n## change global theme settings (for all following plots)\ntheme_set(theme_minimal(base_size = 12, base_family = \"open\"))\n\n## modify plot elements globally (for all following plots)\ntheme_update(\n  axis.ticks = element_line(color = \"grey92\"),\n  axis.ticks.length = unit(.5, \"lines\"),\n  panel.grid.minor = element_blank(),\n  legend.title = element_text(size = 12),\n  legend.text = element_text(color = \"grey30\"),\n  plot.title = element_text(size = 18, face = \"bold\"),\n  plot.subtitle = element_text(size = 12, color = \"grey30\"),\n  plot.caption = element_text(size = 9, margin = margin(t = 15))\n)\n\nSince we know what the basic plot looks like, let’s add titles, labels and colours. We will also set limits and scales.\n\nUsing ggformulaUsing ggplot\n\n\n\ngf1 &lt;- penguins %&gt;% \n  gf_point(bill_depth_mm ~ bill_length_mm, \n           \n1           # colour by continuous variable\n           color =  ~ body_mass_g, \n           alpha = .6, size = 3.5) %&gt;% \n\n  \n  ## custom axes scaling\n  gf_refine(\n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)),\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)), \n  \n  ## custom colors from the scico package\n  ## using the paletteer super package\n  paletteer:: scale_color_paletteer_c(`\"scico::bamako\"`, direction = -1),\n1  \n  ## custom labels\n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (Pygoscelis)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) PLoS ONE',\n    x = 'Bill Length (mm)', \n    y = 'Bill Depth (mm)',\n1    color = 'Body mass (g)'\n  ))\n\ngf1\n\n\n1\n\nNote this neat way of naming a scale and the legend!\n\n\n\n\n\n\n\n\n\n\ngg1 &lt;- penguins %&gt;% \n  ggplot(aes(y = bill_depth_mm, x = bill_length_mm), alpha = .6, \n         size = 3.5) +\n  geom_point(aes(colour = body_mass_g)) + \n\n  \n  ## custom axes scaling\n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) + \n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) + \n  \n  ## custom colors from the scico package\n  paletteer:: scale_color_paletteer_c(`\"scico::bamako\"`, \n                                      direction = -1) + \n  \n  ## custom labels\n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (Pygoscelis)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) PLoS ONE',\n    x = 'Bill Length (mm)', \n    y = 'Bill Depth (mm)',\n    color = 'Body mass (g)' \n  )\ngg1"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#using-element_markdown",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#using-element_markdown",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Using element_markdown()",
    "text": "Using element_markdown()\n\nUsing ggformulaUsing ggplot\n\n\nWe can use our familiar markdown syntax right inside the titles and captions of the plot. element_markdown() is a theme-ing command made available by the ggtext package.\nelement_markdown() → formatted text elements, e.g. titles, caption, axis text, striptext\n\ngf2 &lt;- penguins %&gt;% gf_point(bill_depth_mm ~ bill_length_mm, \n                            color = ~ body_mass_g, \n                            alpha = 0.6, size = 3.5) %&gt;% \n gf_refine(\n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)),\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)), \n  \n  ## custom colors from the scico package\n  paletteer:: scale_color_paletteer_c(\"scico::bamako\", \n                                      direction = -1),\n  \n  ## custom labels using element_markdown()\n   labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)', \n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)')\n  ) %&gt;% \n  \n  # New code from here\n  # Enables markdown titles, captions and labels\n  gf_theme(theme(\n    plot.title = ggtext::element_markdown(),\n    plot.caption = ggtext::element_markdown(),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown()\n  ))\n\n gf2\n\n\n\n\n\n\n\ngg2 &lt;- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5) + \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n   paletteer:: scale_color_paletteer_c(`\"scico::bamako\"`, direction = -1) +\n   \n  ## New code starts here: Two Step Procedure with ggtext\n  ## 1. Markdown formatting of labels and title, using asterisks\n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)', \n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n   \n  ## 2. Add theme related commands from ggtext\n  ## render respective text elements\n  theme(\n    plot.title = ggtext::element_markdown(),\n    plot.caption = ggtext::element_markdown(),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown()\n  )\ngg2"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#element_markdown-in-combination-with-html",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#element_markdown-in-combination-with-html",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "element_markdown() in combination with HTML",
    "text": "element_markdown() in combination with HTML\nThis allows us to change fonts in titles, labels, and captions.\n\nUsing ggformulaUsing ggplot\n\n\n\n## use HTML syntax to change text color\n## \ngf2 %&gt;% \n  \n  # html in labels\n  gf_labs(title = 'Bill Dimensions of Brush-Tailed Penguins\n          &lt;i style = \"color:#28A87D;\"&gt;Pygoscelis &lt;/i&gt;'\n            ) \n\n\n\n## use HTML syntax to change font and text size\ngf2 %&gt;% \n  gf_labs(title = 'Bill Dimensions of Brush-Tailed Penguins &lt;b style=\"font-size:32pt;font-family:tangerine;\"&gt;Pygoscelis&lt;/b&gt;') \n\n\n\n\n\n\n\n## use HTML syntax to change text color\ngg2 +\n  labs(title = 'Bill Dimensions of Brush-Tailed Penguins &lt;i style=\"color:#28A87D;\"&gt;Pygoscelis&lt;/i&gt;') +\n  theme(plot.margin = margin(t = 25))\n\n\n\n## use HTML syntax to change font and text size\ngg2 +\n  labs(title = 'Bill Dimensions of Brush-Tailed Penguins &lt;b style=\"font-size:32pt;font-family:tangerine;\"&gt;Pygoscelis&lt;/b&gt;')"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#adding-images-to-ggplot",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#adding-images-to-ggplot",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Adding images to ggplot",
    "text": "Adding images to ggplot\nSave an image from the web in the same folder as your RMarkdown. Use html tags to include it, say as part of your plot title, as shown below.\n\nUsing ggformulaUsing ggplot\n\n\n\n## use HTML syntax to add images to text elements\ngf2 %&gt;% \n  gf_labs(title = 'Bill Dimensions of Brush-Tailed Penguins &nbsp;&nbsp;&nbsp; &lt;img src=\"../images/culmen_depth.png\"‚ width=\"480\"/&gt;') \n\n\n\n\n\n\n\n## use HTML syntax to add images to text elements\ngg2 + \n  labs(title = 'Bill Dimensions of Brush-Tailed Penguins &nbsp;&nbsp;&nbsp; &lt;img src=\"../images/culmen_depth.png\"‚ width=\"480\"/&gt;')"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#annotations-with-geom_richtext-and-geom_textbox",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#annotations-with-geom_richtext-and-geom_textbox",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Annotations with geom_richtext() and geom_textbox()",
    "text": "Annotations with geom_richtext() and geom_textbox()\nFurther ggplot annotations can be achieved using geom_richtext() and geom_textbox(). geom_richtext() also allows formatted text labels with 360° rotation. One needs to pass a dataframe to geom_richtext() giving the location, colour, rotation etc of the label annotation.\n\nUsing ggformulaUsing ggplot\n\n\n\n# Create a label tibble\n# Three rich text labels, \n# so three sets of locations x and y, and angle of rotation\nlabels &lt;- tibble(\n      x = c(34, 56, 54), \n      y = c(20, 18.5, 14.5),\n      angle = c(12, 20, 335),\n      species = c(\"Adelie\", \"Chinstrap\", \"Gentoo\"),\n      \n      lab = c(\"&lt;b style='font-family:anton;font-size:24pt;'&gt;Adélie&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. adéliae&lt;/i&gt;\", \n              \"&lt;b style='font-family:anton;font-size:24pt;'&gt;Chinstrap&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. antarctica&lt;/i&gt;\", \n              \"&lt;b style='font-family:anton;font-size:24pt;'&gt;Gentoo&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. papua&lt;/i&gt;\"))\nlabels\n\ngf_rich &lt;- penguins %&gt;% \n  gf_point(bill_depth_mm ~ bill_length_mm, \n                      color = ~ species, \n                      alpha = 0.6, size = 3.5, data = penguins) +\n  \n  \n    ## add text annotations for each species\n    ggtext::geom_richtext(\n    data = labels,\n    # Now pass the data variables as aesthetics\n    aes(x, y, label = lab, color = species, angle = angle), \n    size = 4, fill = NA, label.color = NA,\n    lineheight = .3) +\n    # show.legend = FALSE else we get some unusual legends!\n    # fill = NA makes the labels' fill transparent\n  \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n  scale_colour_paletteer_d(palette = `\"rcartocolor::Bold\"`, guide = \"none\") +\n  \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)', \n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n  \n  # Use theme and element_markdown() to format axes and titles as usual\n  theme(\n    plot.title = ggtext::element_markdown(),\n    plot.caption = ggtext::element_markdown(),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown(),\n    plot.margin = margin(25, 6, 15, 6)\n  )\n\n\ngf_rich\n\n\n1\n\nNote the plus sign usage here!!We are combining the ggformula and ggplot syntax, and it works!\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\ngg_rich &lt;- ggplot(penguins, aes(x = bill_length_mm, \n                                y = bill_depth_mm)) +\n  geom_point(aes(color = species), alpha = .6, size = 3.5) + \n  \n  ## add text annotations for each species\n  ggtext::geom_richtext(\n    data = labels,\n    # Now pass the data variables as aesthetics\n    aes(x, y, label = lab, color = species, angle = angle), \n    size = 4, fill = NA, label.color = NA,\n    lineheight = .3) +\n  \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n  scale_colour_paletteer_d(`\"rcartocolor::Bold\"`, guide = \"none\")+\n  \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)', \n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n  \n  # Use theme and element_markdown() to format axes and titles as usual\n  theme(\n    plot.title = ggtext::element_markdown(),\n    plot.caption = ggtext::element_markdown(),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown(),\n    plot.margin = margin(25, 6, 15, 6)\n  )\n  \ngg_rich"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#formatted-text-boxes-on-plots",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#formatted-text-boxes-on-plots",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Formatted Text boxes on plots",
    "text": "Formatted Text boxes on plots\nelement_textbox() and element_textbox_simple() → formatted text boxes with word wrapping.\n\nUsing ggformulaUsing ggplot\n\n\n\ngf_box &lt;- penguins %&gt;% \n  gf_point(bill_depth_mm ~ bill_length_mm, \n                      color = ~ species, \n                      alpha = 0.6, size = 3.5, data = penguins) +\n  \n  \n    ## add text annotations for each species\n    ggtext::geom_richtext(\n    data = labels,\n    # Now pass the data variables as aesthetics\n    aes(x, y, label = lab, color = species, angle = angle), \n    size = 4, fill = NA, label.color = NA,\n    lineheight = .3) +\n    # show.legend = FALSE else we get some unusual legends!\n    # fill = NA makes the labels' fill transparent\n  \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n  scale_colour_paletteer_d(palette = `\"rcartocolor::Bold\"`, guide = \"none\") +\n  \n  \n# Now for the Plot Titles and Labels, as before  \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)',\n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n  \n# Add the ggtext theme related commands\n  theme(\n    ## turn title into filled textbox\n    plot.title = ggtext::element_textbox_simple(\n      color = \"white\",\n      fill = \"#28A78D\",\n      size = 32,\n      padding = margin(8, 4, 8, 4),\n      margin = margin(b = 5),\n      lineheight = .9\n    ),\n    plot.subtitle = ggtext::element_textbox_simple(\n      size = 10,\n      padding = margin(5.5, 5.5, 5.5, 5.5),\n      margin = margin(0, 0, 5.5, 0),\n      fill = \"orange1\"\n    ),\n    \n    ## add round outline to caption\n    plot.caption = ggtext::element_textbox_simple(\n      width = NULL,\n      linetype = 1,\n      fill = \"grey\",\n      padding = margin(4, 8, 4, 8),\n      margin = margin(t = 15),\n      r = grid::unit(8, \"pt\")\n    ),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown(),\n    plot.margin = margin(25, 6, 15, 6)\n  )\n\ngf_box\n\n\n1\n\nNote again the use of the plus sign with ggformula. This works!\n\n\n\n\n\n\n\n\n\n\ngg_box &lt;- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(color = species), alpha = .6, size = 3.5) +\n  \n     ## add text annotations for each species\n    ggtext::geom_richtext(\n    data = labels,\n    # Now pass the data variables as aesthetics\n    aes(x, y, label = lab, color = species, angle = angle), \n    size = 4, fill = NA, label.color = NA,\n    lineheight = .3) +\n    # show.legend = FALSE else we get some unusual legends!\n    # fill = NA makes the labels' fill transparent\n  \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n  scale_colour_paletteer_d(palette = `\"rcartocolor::Bold\"`, guide = \"none\") +\n  \n  \n# Now for the Plot Titles and Labels, as before  \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)',\n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n  \n# Add the ggtext theme related commands\n  theme(\n    ## turn title into filled textbox\n    plot.title = ggtext::element_textbox_simple(\n      color = \"white\",\n      fill = \"#28A78D\",\n      size = 32,\n      padding = margin(8, 4, 8, 4),\n      margin = margin(b = 5),\n      lineheight = .9\n    ),\n    plot.subtitle = ggtext::element_textbox_simple(\n      size = 10,\n      padding = margin(5.5, 5.5, 5.5, 5.5),\n      margin = margin(0, 0, 5.5, 0),\n      fill = \"orange1\"\n    ),\n    \n    ## add round outline to caption\n    plot.caption = ggtext::element_textbox_simple(\n      width = NULL,\n      linetype = 1,\n      fill = \"grey\",\n      padding = margin(4, 8, 4, 8),\n      margin = margin(t = 15),\n      r = grid::unit(8, \"pt\")\n    ),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown(),\n    plot.margin = margin(25, 6, 15, 6)\n  )\n\ngg_box"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#using-geom_texbox-for-formatted-text-boxes-with-word-wrapping",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#using-geom_texbox-for-formatted-text-boxes-with-word-wrapping",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Using geom_texbox() for formatted text boxes with word wrapping",
    "text": "Using geom_texbox() for formatted text boxes with word wrapping\n\nUsing ggformulaUsing ggplot\n\n\n\ntext_box &lt;- tibble(x = 34, y = 13.7, label = \"&lt;span style='font-size:12pt;font-family:anton;'&gt;Lorem Ipsum Dolor Sit Amet&lt;/span&gt;&lt;br&gt;&lt;br&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\")\n\n\ngf_box +\n  ## add textbox with long paragraphs\n  ggtext::geom_textbox(\n    data = text_box,\n    aes(x, y, \n        label = label),\n    size = 2.2, family = \"sans\",\n    fill = \"cornsilk\", \n    \n    colour = \"black\",\n# This is ESSENTIAL !!!\n# It appears that the original colour aesthetic mapping in `gf_box` and a possible colour aesthetic with `geom_textbox` have a clash, *only* with ggformula. No such issues below with the ggplot.\n# So declaring a colour here is essential\n\n    box.color = \"cornsilk3\",\n    #box.padding = c(2,2,2,2),\n    width = unit(11, \"lines\")\n  ) +\n  coord_cartesian(clip = \"off\") # ensure no clipping of labels near the edge\n\n\n\n\n\n\n\ngg_box +\n  ## add textbox with long paragraphs\n  ggtext::geom_textbox(\n    data = text_box,\n    aes(x, y, label = label),\n    size = 2.2, family = \"sans\",\n    fill = \"cornsilk\", box.color = \"cornsilk3\",\n    width = unit(11, \"lines\")\n  ) +\n  coord_cartesian(clip = \"off\") # ensure no clipping of labels near the edge"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#using-ggforce",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#using-ggforce",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Using {ggforce}",
    "text": "Using {ggforce}\nFrom Thomas Lin Pedersen’s website → www.ggforce.data-imaginist.com\n\nggforce is a package aimed at providing missing functionality to ggplot2 through the extension system introduced with ggplot2 v2.0.0. Broadly speaking ggplot2 has been aimed primarily at explorative data visualization in order to investigate the data at hand, and less at providing utilities for composing custom plots a la D3.js. ggforce is mainly an attempt to address these “shortcoming” (design choices might be a better description). The goal is to provide a repository of geoms, stats, etc. that are as well documented and implemented as the official ones found in ggplot2.\n\nWe will start with the basic plot, with the ggtext related work done up to now:\n\n## use ggtext rendering for the following plots\ntheme_update(\n  plot.title = ggtext::element_markdown(),\n  plot.caption = ggtext::element_markdown(),\n  axis.title.x = ggtext::element_markdown(),\n  axis.title.y = ggtext::element_markdown()\n)\n\n\nUsing ggformula and ggforceUsing ggplot and ggforce\n\n\n\n## plot that we will annotate with ggforce afterwards\ngf3 &lt;- penguins %&gt;% \n  gf_point(bill_depth_mm ~ bill_length_mm,\n           color = ~ body_mass_g,\n           alpha = .6, \n           size = 3.5) + \n  \n  coord_cartesian(xlim = c(25, 65), ylim = c(10, 25)) +\n  \n  # Add Colour scales\n  scale_color_paletteer_c(`\"grDevices::Lajolla\"`, direction = -1) +\n  \n  # Add labels\n  labs(\n    title = \"Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)\",\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE*\",\n    x = \"**Bill Length** (mm)\",\n    y = \"**Bill Depth** (mm)\",\n    color = \"Body mass (g)\",\n    fill = \"Species\"\n  )\n\n\n\n## ellipsoids for all groups\ngf3 +\n  ggforce::geom_mark_ellipse(\n    aes(fill = species, \n        label = species), \n    \n    color = \"black\", \n    # This is good to include\n    # Else ellipses get coloured too\n    \n    alpha = .15, \n    show.legend = FALSE\n  ) \n\n\n\n\n\n\n\n## plot that we will annotate with ggforce afterwards\ngg3 &lt;- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(color = body_mass_g), \n             alpha = .6, \n             size = 3.5) + \n\n  coord_cartesian(xlim = c(25, 65), ylim = c(10, 25)) +\n  \n  # Add Colour scales\n  scale_color_paletteer_c(`\"grDevices::Lajolla\"`, direction = -1) +\n  # rcartocolor::scale_fill_carto_d(palette = \"Bold\") +\n  \n  # Add labels\n  labs(\n    title = \"Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)\",\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE*\",\n    x = \"**Bill Length** (mm)\",\n    y = \"**Bill Depth** (mm)\",\n    color = \"Body mass (g)\",\n    fill = \"Species\"\n  )\n\n\n## ellipsoids for all groups\ngg3 +\n  ggforce::geom_mark_ellipse(\n    aes(fill = species, \n        label = species), \n    alpha = .15, \n    show.legend = FALSE\n  ) \n\n\n\n\n\n## ellipsoids for specific subset\ngg3 +\n  ggforce::geom_mark_ellipse(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)\n\n\n\n\n\n## circles\ngg3 +\n  ggforce::geom_mark_circle(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)\n\n\n\n\n\n## rectangles\ngg3 +\n  ggforce::geom_mark_rect(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5) \n\n\n\n\n\nlibrary(concaveman)\n## hull\ngg3 +\n  ggforce::geom_mark_hull(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#ggplot-tricks",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#ggplot-tricks",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "ggplot tricks",
    "text": "ggplot tricks\n\ngg0 &lt;- \n  ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n    ggforce::geom_mark_ellipse(\n    aes(fill = species, \n        label = species), \n    alpha = .15, \n    show.legend = FALSE\n  ) +\n    geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5) + \n    scale_x_continuous(breaks = seq(25, 65, by = 5), limits = c(25, 65)) +\n    scale_y_continuous(breaks = seq(12, 24, by = 2), limits = c(12, 24)) +\n    scico::scale_color_scico(palette = \"bamako\", direction = -1) +\n    labs(\n      title = \"Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)\",\n      subtitle = 'A scatter plot of bill depth versus bill length.',\n      caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE*\",\n      x = \"Bill Length (mm)\", \n      y = \"Bill Depth (mm)\",\n      color = \"Body mass (g)\"\n    )\ngg0\n\n\n\n\n\nLeft-Aligned Title\n\n(gg1 &lt;- gg0 + theme(plot.title.position = \"plot\"))\n\n\n\n\n\n\nRight-Aligned Caption\n\ngg1b &lt;- gg1 +  theme(plot.caption.position = \"panel\")\ngg1b\n\n\n\n\n\n\nLegend Design\n\ngg1b + theme(legend.position = \"top\")\n\n\n\n#ggsave(\"06a_legend_position.pdf\", width = 9, height = 8, device = cairo_pdf)\n\ngg1b + \n  theme(legend.position = \"top\") +\n  guides(color = guide_colorbar(title.position = \"top\", \n                                title.hjust = .5, \n                                barwidth = unit(20, \"lines\"), \n                                barheight = unit(.5, \"lines\")))\n\n\n\n\n\n\nAdd Images\n\n## read PNG file from web\npng &lt;- magick::image_read(\"../images/culmen_depth.png\")\n\nError in eval(expr, envir, enclos): Rscript.exe: UnableToOpenBlob `C:\\Users\\Arvind\\Documents\\R work\\MyWebsites\\my-quarto-website\\content\\courses\\R4Artists\\Modules\\images\\culmen_depth.png': No such file or directory @ error/blob.c/OpenBlob/2924\n\n## turn image into `rasterGrob`\nimg &lt;- grid::rasterGrob(png, interpolate = TRUE)\n\nError in UseMethod(\"as.raster\"): no applicable method for 'as.raster' applied to an object of class \"function\"\n\ngg5 &lt;- gg2 + \n  annotation_custom(img, ymin = 18, ymax = 28, xmin = 58, xmax = 65) +\n    labs(caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE* &bull; Illustration: Allison Horst\")\n\nError in eval(expr, envir, enclos): object 'img' not found\n\ngg5\n\nError in eval(expr, envir, enclos): object 'gg5' not found"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#using-patchwork",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#using-patchwork",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Using {patchwork}",
    "text": "Using {patchwork}\n\nThe goal of patchwork is to make it ridiculously simple to combine separate ggplots into the same graphic. As such it tries to solve the same problem as gridExtra::grid.arrange() and cowplot::plot_grid but using an API that incites exploration and iteration, and scales to arbitrily complex layouts.\n\n→ https://patchwork.data-imaginist.com/\nLet us make two plots and combine them into a single patchwork plot.\n\n## calculate bill ratio\npenguins_stats &lt;- penguins %&gt;% \n  mutate(bill_ratio = bill_length_mm / bill_depth_mm) %&gt;% \n  filter(!is.na(bill_ratio))\n\n## create a second chart\ngg6 &lt;- ggplot(penguins_stats, aes(y = bill_ratio, x = species, fill = species, color = species)) + geom_violin() + \n  labs(\n    y = \"Bill ratio\",\n    x = \"Species\",\n    subtitle = \"\",\n    caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE* &bull; Illustration: Allison Horst\"\n  ) +\n  theme(\n    panel.grid.major.x = element_line(size = .35),\n    panel.grid.major.y = element_blank(),\n    axis.text.y = element_text(size = 13),\n    axis.ticks.length = unit(0, \"lines\"),\n    plot.title.position = 'plot',\n    plot.subtitle = element_text(margin = margin(t = 5, b = 10)),\n    plot.margin = margin(10, 25, 10, 25)\n  )\n\nNow to combine both plots into one using simple operators:\n\nFor the special case of putting plots besides each other or on top of each other patchwork provides 2 shortcut operators. | will place plots next to each other while / will place them on top of each other.\n\nFirst we stack up the graphs side by side:\n\n## combine both plots\ngg5 | (gg6 + labs(title = \"Bill Ratios of Brush-Tailed Penguins\",\n                  subtitle = \"Violin Plots of Bill Ration versus species\"))\n\nError in eval(expr, envir, enclos): object 'gg5' not found\n\n\nWe can place them in one column:\n\ngg5 / (gg6 + labs(title = \"Bill Ratios of Brush-Tailed Penguins\",\n                  subtitle = \"Violin Plots of Bill Ration versus species\")) +\n  plot_layout(heights = c(0.4, 0.4))\n\nError in eval(expr, envir, enclos): object 'gg5' not found"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#references",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#references",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "References",
    "text": "References\n\nThomas Lin Pedersen, https://www.data-imaginist.com/. The creator of ggforce, and patchwork packages.\nClaus Wilke, cowplot – Streamlined plot theme and plot annotations for ggplot2, https://wilkelab.org/cowplot/index.html\nClaus Wilke, Spruce up your ggplot2 visualizations with formatted text, https://clauswilke.com/talk/rstudio_conf_2020/. Slides, Code, and Video !\nRobert Kabacoff, ggplot theme cheatsheet, https://rkabacoff.github.io/datavis/modifyingthemes.pdf"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/70-wizardy/index.html#fun-stuff",
    "href": "content/courses/R4Artists/Modules/70-wizardy/index.html#fun-stuff",
    "title": "Lab-7: The Lobster Quadrille",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nZuguang Gu, Circular Visualization in R,\n\n\n\n\n\n\n\n\n\n\nhttps://jokergoo.github.io/circlize_book/book/"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#iconify-noto-v1-package-setting-up-r-packages",
    "href": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#iconify-noto-v1-package-setting-up-r-packages",
    "title": "Lab-8: Did you ever see such a thing as a drawing of a muchness?",
    "section": "\n Setting up R Packages",
    "text": "Setting up R Packages\n\n# Data manipulation and data sources\noptions(htmltools.preserve.raw = FALSE, echo = TRUE)\nlibrary(tidyverse)\nlibrary(tidygraph)\nlibrary(igraph)\nlibrary(palmerpenguins)\nlibrary(igraphdata)\n\n\n# To render htmlwidgets as iframe widgets\n# https://communicate-data-with-r.netlify.app/docs/communicate/htmlwidgets-in-documents/\nlibrary(widgetframe)\n\n\n# htmlwidget related libraries\nlibrary(htmlwidgets)\nlibrary(crosstalk)\n\n# Widget Libraries\nlibrary(leaflet)\nlibrary(plotly)\nlibrary(DT)\nlibrary(echarts4r)\nlibrary(echarts4r.assets)\nlibrary(canvasXpress)\nlibrary(rgl)\nlibrary(networkD3)\nlibrary(threejs)\nlibrary(slickR)\n# Linkable widgets in crosstalk - github repo only\n#devtools::install_github(\"kent37/summarywidget\")\nlibrary(summarywidget)"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#introduction",
    "href": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#introduction",
    "title": "Lab-8: Did you ever see such a thing as a drawing of a muchness?",
    "section": "Introduction",
    "text": "Introduction\nThere are very many great JavaScript libraries for creating eye-popping and even interactive charts! And these are now available in R, and can be invoked using R code! So we can “use JavaScript” in R, as it were, without knowing JavaScript! And create something like this:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUnlike the Dormouse, no complaints!\nWe will explore a few them, as an alternative to ggplot !!\nThis may be too much of a good thing, or a much of muchness but then, we can always use more then one way of telling our stories!!"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#htmlwidgets-usage",
    "href": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#htmlwidgets-usage",
    "title": "Lab-8: Did you ever see such a thing as a drawing of a muchness?",
    "section": "\nhtmlwidgets usage",
    "text": "htmlwidgets usage\nhtmlwidgets creates, well, widgets, that can visualize data in many ways. HTML widgets work just like R plots except they produce interactive web visualizations. These can be used in RMarkdown, in flexdashboards, and in shiny apps.\nAll the possible widgets ( 127 of them on CRAN ) are listed here: https://gallery.htmlwidgets.org/\nSome packages that offer widgets for use in htmlwidgets:\n\n\nnetworkD3:\n\n\nForce directed networks with simpleNetwork and forceNetwork\n\nSankey diagrams with sankeyNetwork\n\nRadial networks with radialNetwork\n\nDendro networks with dendroNetwork\n\n\nUsing networkD3\n\n\nlibrary(networkD3)\ndata(\"karate\")\n\n# Make separate data frames for edges and nodes\n# networkD3 needs indices starting from 1\nkarate_edges &lt;- karate %&gt;% \n  as_tbl_graph() %&gt;% \n  tidygraph::activate(edges) %&gt;% \n  as.data.frame() %&gt;% \n  dplyr::mutate(source = from - 1, target = to - 1) %&gt;% \n  rename(value = weight) %&gt;% \n  select(source, target, value)\nkarate_edges\n\n\n\n  \n\n\nkarate_nodes &lt;- karate %&gt;% \n  as_tbl_graph() %&gt;% \n  tidygraph::activate(nodes) %&gt;% \n  as.data.frame() %&gt;% \n  dplyr::mutate(group = as.character(Faction)) %&gt;% \n  select(name, label, group, color)\nkarate_nodes\n\n\n\n  \n\n\nsimpleNetwork(karate_edges, \n              charge = -50, \n              fontSize = 12, zoom = FALSE, \n              fontFamily = \"serif\")\n\n\n\n\n\n\n\nforceNetwork(\n  Links = karate_edges,\n  Nodes = karate_nodes,\n  Value = \"value\",\n  # width of edges, dbl\n  NodeID = \"name\",\n  # chr\n  Group = \"group\",\n  # Node group, chr\n  # Nodesize = \"label\" # chr !!!\n  # linkColour = \"value\"\n)\n\n\n\n\n\n\nCreating a Sankey Diagram.\n\nUCB_graph &lt;-\n  UCBAdmissions %&gt;% \n  as.data.frame() %&gt;% \n  select(Gender, Admit, Dept, Freq) %&gt;% \n  as_tbl_graph()\nUCB_graph\n\n# A tbl_graph: 4 nodes and 24 edges\n#\n# A directed acyclic multigraph with 1 component\n#\n# A tibble: 4 × 1\n  name    \n  &lt;chr&gt;   \n1 Male    \n2 Female  \n3 Admitted\n4 Rejected\n#\n# A tibble: 24 × 4\n   from    to Dept   Freq\n  &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;dbl&gt;\n1     1     3 A       512\n2     1     4 A       313\n3     2     3 A        89\n# ℹ 21 more rows\n\nUCB_nodes &lt;- UCB_graph %&gt;% activate(nodes) %&gt;% as_tibble()\nUCB_nodes\n\n\n\n  \n\n\nUCB_links &lt;- UCB_graph %&gt;% \n  activate(edges) %&gt;% \n  as_tibble() %&gt;%\n  dplyr::mutate(from = from - 1, to = to - 1)\nUCB_links\n\n\n\n  \n\n\nsankeyNetwork(\n  Links = UCB_links,\n  Nodes = UCB_nodes,\n  Source = \"from\",\n  Target = \"to\",\n  Value = \"Freq\",\n  LinkGroup = \"Dept\",\n  fontSize = 20,\n  fontFamily = \"Arial\"\n)\n\n\n\n\n\n\nsimpleNetwork, forceNetwork and sankeyNetwork use a similar node and link data structure, organized as two data frames (not tibbles)\nchordNetwork uses an association matrix type of matrix or a data frame organized in the same way, where entry (n,m) represents the strength of the link from group n to group m. Matrix needs to be square !! “Column names” and “Row names” need to be the same if the data is a data.frame.\n\ndata &lt;- matrix(rpois(n = 16, lambda = 50), \n               nrow = 4, ncol = 4)\nchordNetwork(data,\n             labels = c(\"A\", \"B\", \"C\", \"D\"))"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#using-threejs",
    "href": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#using-threejs",
    "title": "Lab-8: Did you ever see such a thing as a drawing of a muchness?",
    "section": "Using threejs",
    "text": "Using threejs\n\nhttps://bwlewis.github.io/rthreejs/\nhttps://bwlewis.github.io/rthreejs/crosstalk.html\n\n\ngraphjs usage\n\ndata(\"LeMis\") # igraph object\nLeMis\n\nIGRAPH b7852d9 U--- 77 254 -- \n+ attr: label (v/c), color (v/c), size (v/n)\n+ edges from b7852d9:\n [1]  1-- 2  1-- 3  1-- 4  3-- 4  1-- 5  1-- 6  1-- 7  1-- 8  1-- 9  1--10\n[11] 11--12  4--12  3--12  1--12 12--13 12--14 12--15 12--16 17--18 17--19\n[21] 18--19 17--20 18--20 19--20 17--21 18--21 19--21 20--21 17--22 18--22\n[31] 19--22 20--22 21--22 17--23 18--23 19--23 20--23 21--23 22--23 17--24\n[41] 18--24 19--24 20--24 21--24 22--24 23--24 13--24 12--24 24--25 12--25\n[51] 25--26 24--26 12--26 25--27 12--27 17--27 26--27 12--28 24--28 26--28\n[61] 25--28 27--28 12--29 28--29 24--30 28--30 12--30 24--31 31--32 12--32\n[71] 24--32 28--32 12--33 12--34 28--34 12--35 30--35 12--36 35--36 30--36\n+ ... omitted several edges\n\n#V(LeMis)$label\n#V(LeMis)$color\ngraphjs(LeMis,\n    layout=list( # animates between a list of layouts\n      # layouts need to be 3D layouts\n      # Or each can be a 3 column matrix with n(rows) = n(vertices)\n    layout_randomly(LeMis, dim=3),\n    layout_on_sphere(LeMis),\n    layout_with_drl(LeMis, dim=3),  # note! somewhat slow...\n    layout_with_fr(LeMis, dim=3, niter=30)\n    ),\n  main=list(\"random layout\", \"sphere layout\", \"drl layout\", \"fr layout\"),\n  fpl=300)"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#globejs-usage",
    "href": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#globejs-usage",
    "title": "Lab-8: Did you ever see such a thing as a drawing of a muchness?",
    "section": "\nglobejs usage",
    "text": "globejs usage\nPlot points, arcs and images on a globe in 3D using three.js. The globe can be rotated and and zoomed. Great Circles and historical routes are a good idea for this perhaps.\nRefer to this page for more ideas http://bwlewis.github.io/rthreejs/globejs.html\n\n# Random Lats and Longs\nlat &lt;- rpois(10, 60) + rnorm(10, 80)\nlong &lt;- rpois(10, 60) + rnorm(10, 10)\n\n# Random \"Spike\" heights for each location. Population? Tourists? GDP?\nvalue &lt;- rpois(10, lambda = 80)\n \nglobejs(lat = lat, long = long)\n\n\n\n\n\nglobejs(\n  lat = lat,\n  long = long,\n  \n  # random heights of the Spikes (!!) at lat-long combo\n  value = value,\n  color = \"red\",\n  # Zoom factor, default is 35\n  fov = 50\n)\n\n\n\n\n\nglobejs(\n  lat = lat,\n  long = long,\n  value = value,\n  color = \"red\",\n  pointsize = 4, # width of the columns\n  # Zoom position\n  fov = 35,\n  # initial position of the globe\n  rotationlat = 0.6, #  in RADIANS !!! Good Heavens!!\n  rotationlong = 0.2 #  in RADIANS !!! Good Heavens!!\n)\n\n\n\n\n\nglobejs(\n  lat = lat,\n  long = long,\n  value = value,\n  color = \"red\",\n  pointsize = 4,\n  fov = 35,\n  rotationlat = 0.6,\n  rotationlong = 0.2,\n  lightcolor = \"#aaeeff\",\n  emissive = \"#0000ee\",\n  bodycolor = \"#ffffff\",\n  bg = \"grey\"\n)\n\n\n\n\n\n\n\n# Plotting arcs on the globe\n# Requires 4 column data frame for start and end lat and long\n\narcs &lt;- data.frame(start_lat = runif(10, min = -20, max = 20), \n                   start_lon = runif(10, min = -20, max = 20), \n                   end_lat = runif(10, min = -20, max = 20),\n                   end_lon = runif(10, min = -20, max = 20) + 60)\narcs\n\n\n\n  \n\n\nglobejs(arcs = arcs,\n        arcsColor = \"gold\",\n        arcsLwd = 4,\n        arcsHeight = 0.6,\n        arcsOpacity = 1,\n        rotationlat = 0,\n        rotationlong = -2.2,\n        bg = \"lightblue\",atmosphere = FALSE,\n        pointsize = 2)\n\n\n\n\n\n\nthreejs contains a dataset called flights obtained from Callum Prentice’s FlightStream page: http://callumprentice.github.io/apps/flight_stream/index.html\n\ndata(\"flights\",package = \"threejs\")\nflights %&gt;% head()\n\n\n\n  \n\n\nfrequent_destinations &lt;-\n  flights %&gt;% group_by(dest_lat, dest_long) %&gt;% \n  count(sort = TRUE) %&gt;% \n  ungroup() %&gt;% \n  slice_max(n = 10, order_by = n)\nfrequent_destinations\n\n\n\n  \n\n\nfrequent_flights &lt;- flights %&gt;% \n  semi_join(frequent_destinations,\n            by = c(\"dest_lat\" = \"dest_lat\", \"dest_long\" = \"dest_long\")) %&gt;% unique() \n\nfrequent_flights %&gt;% \n  kableExtra::kbl() %&gt;%\n  kableExtra::kable_paper(full_width = TRUE) %&gt;%\n  kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"condensed\", \"responsive\")) %&gt;%\n  kableExtra::scroll_box(width = \"700px\", height = \"500px\")\n\n\n\n\n\n\norigin_lat\norigin_long\ndest_lat\ndest_long\n\n\n\n1\n40.657633\n17.947033\n47.464722\n8.549167\n\n\n2\n44.828335\n-0.715556\n47.464722\n8.549167\n\n\n3\n51.382669\n-2.719089\n47.464722\n8.549167\n\n\n4\n34.875117\n33.624850\n47.464722\n8.549167\n\n\n5\n27.931886\n-15.386586\n47.464722\n8.549167\n\n\n6\n25.557111\n34.583711\n47.464722\n8.549167\n\n\n7\n40.783200\n-91.125500\n41.978603\n-87.904842\n\n\n8\n39.834564\n-88.865689\n41.978603\n-87.904842\n\n\n9\n13.681108\n100.747283\n1.350189\n103.994433\n\n\n10\n-12.408333\n130.872660\n1.350189\n103.994433\n\n\n11\n19.934856\n110.458961\n1.350189\n103.994433\n\n\n12\n30.229503\n120.434453\n1.350189\n103.994433\n\n\n13\n22.308919\n113.914603\n1.350189\n103.994433\n\n\n14\n8.113200\n98.316872\n1.350189\n103.994433\n\n\n15\n34.434722\n135.244167\n25.077731\n121.232822\n\n\n16\n2.745578\n101.709917\n1.350189\n103.994433\n\n\n17\n14.508647\n121.019581\n1.350189\n103.994433\n\n\n18\n5.297139\n100.276864\n1.350189\n103.994433\n\n\n19\n-31.940278\n115.966944\n1.350189\n103.994433\n\n\n20\n11.546556\n104.844139\n1.350189\n103.994433\n\n\n21\n13.410666\n103.812840\n1.350189\n103.994433\n\n\n22\n16.907305\n96.133222\n1.350189\n103.994433\n\n\n23\n10.818797\n106.651856\n1.350189\n103.994433\n\n\n24\n1.350189\n103.994433\n25.077731\n121.232822\n\n\n25\n51.132767\n13.767161\n47.464722\n8.549167\n\n\n26\n42.760277\n10.239445\n47.464722\n8.549167\n\n\n27\n46.991067\n15.439628\n47.464722\n8.549167\n\n\n28\n47.793304\n13.004333\n47.464722\n8.549167\n\n\n29\n21.539400\n109.294000\n34.447119\n108.751592\n\n\n30\n29.719217\n106.641678\n40.080111\n116.584556\n\n\n31\n29.719217\n106.641678\n31.143378\n121.805214\n\n\n32\n29.719217\n106.641678\n34.447119\n108.751592\n\n\n33\n30.578528\n103.947086\n40.080111\n116.584556\n\n\n34\n30.578528\n103.947086\n31.143378\n121.805214\n\n\n35\n30.578528\n103.947086\n34.447119\n108.751592\n\n\n36\n25.935064\n119.663272\n34.447119\n108.751592\n\n\n37\n34.490900\n102.371900\n34.447119\n108.751592\n\n\n38\n45.623403\n126.250328\n34.447119\n108.751592\n\n\n39\n24.992364\n102.743536\n25.077731\n121.232822\n\n\n40\n24.992364\n102.743536\n34.447119\n108.751592\n\n\n41\n29.297778\n90.911944\n34.447119\n108.751592\n\n\n42\n35.046100\n118.412000\n34.447119\n108.751592\n\n\n43\n36.857214\n117.215992\n34.447119\n108.751592\n\n\n44\n43.907106\n87.474244\n34.447119\n108.751592\n\n\n45\n38.269200\n109.731000\n34.447119\n108.751592\n\n\n46\n36.898731\n30.800461\n47.464722\n8.549167\n\n\n47\n27.178317\n33.799436\n47.464722\n8.549167\n\n\n48\n42.572778\n21.035833\n47.464722\n8.549167\n\n\n50\n41.961622\n21.621381\n47.464722\n8.549167\n\n\n51\n50.865917\n7.142744\n51.477500\n-0.461389\n\n\n52\n50.865917\n7.142744\n48.110278\n16.569722\n\n\n53\n50.865917\n7.142744\n47.464722\n8.549167\n\n\n54\n52.461056\n9.685078\n48.110278\n16.569722\n\n\n55\n53.630389\n9.988228\n51.477500\n-0.461389\n\n\n56\n53.630389\n9.988228\n48.110278\n16.569722\n\n\n57\n53.630389\n9.988228\n47.464722\n8.549167\n\n\n58\n48.689878\n9.221964\n48.110278\n16.569722\n\n\n59\n52.559686\n13.287711\n48.110278\n16.569722\n\n\n60\n10.307542\n123.979439\n1.350189\n103.994433\n\n\n61\n15.185833\n120.560278\n1.350189\n103.994433\n\n\n62\n10.713044\n122.545297\n1.350189\n103.994433\n\n\n63\n14.508647\n121.019581\n40.080111\n116.584556\n\n\n64\n14.508647\n121.019581\n31.143378\n121.805214\n\n\n66\n14.508647\n121.019581\n25.077731\n121.232822\n\n\n67\n12.994414\n80.180517\n1.350189\n103.994433\n\n\n68\n40.560000\n109.997000\n34.447119\n108.751592\n\n\n69\n31.780019\n117.298436\n31.143378\n121.805214\n\n\n70\n24.992364\n102.743536\n40.080111\n116.584556\n\n\n71\n24.992364\n102.743536\n31.143378\n121.805214\n\n\n73\n26.538522\n106.800703\n1.350189\n103.994433\n\n\n74\n26.883333\n100.233330\n34.447119\n108.751592\n\n\n75\n24.401100\n98.531700\n40.080111\n116.584556\n\n\n77\n5.937208\n116.051181\n31.143378\n121.805214\n\n\n78\n13.681108\n100.747283\n31.143378\n121.805214\n\n\n79\n43.541200\n125.120100\n31.143378\n121.805214\n\n\n80\n33.511306\n126.493028\n31.143378\n121.805214\n\n\n82\n18.766847\n98.962644\n31.143378\n121.805214\n\n\n83\n38.965667\n121.538600\n31.143378\n121.805214\n\n\n84\n29.102800\n110.443000\n31.143378\n121.805214\n\n\n85\n22.308919\n113.914603\n31.143378\n121.805214\n\n\n86\n8.113200\n98.316872\n31.143378\n121.805214\n\n\n87\n45.623403\n126.250328\n31.143378\n121.805214\n\n\n88\n33.149700\n130.302000\n31.143378\n121.805214\n\n\n89\n36.181083\n140.415444\n31.143378\n121.805214\n\n\n90\n22.577094\n120.350006\n31.143378\n121.805214\n\n\n91\n34.434722\n135.244167\n31.143378\n121.805214\n\n\n93\n25.218106\n110.039197\n31.143378\n121.805214\n\n\n94\n36.117000\n103.617000\n31.143378\n121.805214\n\n\n95\n22.149556\n113.591558\n31.143378\n121.805214\n\n\n96\n31.143378\n121.805214\n1.350189\n103.994433\n\n\n97\n31.143378\n121.805214\n25.077731\n121.232822\n\n\n98\n31.197875\n121.336319\n34.447119\n108.751592\n\n\n99\n41.382400\n123.290100\n34.447119\n108.751592\n\n\n100\n38.280686\n114.697300\n25.077731\n121.232822\n\n\n102\n22.006400\n113.376000\n31.143378\n121.805214\n\n\n103\n19.088686\n72.867919\n51.477500\n-0.461389\n\n\n104\n19.088686\n72.867919\n1.350189\n103.994433\n\n\n105\n50.901389\n4.484444\n43.677223\n-79.630556\n\n\n106\n28.566500\n77.103088\n51.477500\n-0.461389\n\n\n107\n28.566500\n77.103088\n1.350189\n103.994433\n\n\n109\n37.936358\n23.944467\n51.477500\n-0.461389\n\n\n110\n37.936358\n23.944467\n48.110278\n16.569722\n\n\n111\n35.339719\n25.180297\n48.110278\n16.569722\n\n\n112\n41.669167\n44.954722\n48.110278\n16.569722\n\n\n113\n35.040222\n-106.609194\n41.978603\n-87.904842\n\n\n114\n57.201944\n-2.197778\n51.477500\n-0.461389\n\n\n115\n5.605186\n-0.166786\n51.477500\n-0.461389\n\n\n116\n36.674900\n-4.499106\n51.477500\n-0.461389\n\n\n117\n42.557100\n-92.400300\n41.978603\n-87.904842\n\n\n118\n31.722556\n35.993214\n41.978603\n-87.904842\n\n\n119\n52.308613\n4.763889\n51.477500\n-0.461389\n\n\n120\n59.651944\n17.918611\n51.477500\n-0.461389\n\n\n121\n43.991922\n-76.021739\n41.978603\n-87.904842\n\n\n123\n33.636719\n-84.428067\n51.477500\n-0.461389\n\n\n124\n33.636719\n-84.428067\n41.978603\n-87.904842\n\n\n125\n24.432972\n54.651138\n51.477500\n-0.461389\n\n\n126\n24.432972\n54.651138\n41.978603\n-87.904842\n\n\n127\n30.194528\n-97.669889\n51.477500\n-0.461389\n\n\n128\n30.194528\n-97.669889\n41.978603\n-87.904842\n\n\n129\n42.234875\n-85.552058\n41.978603\n-87.904842\n\n\n130\n26.270834\n50.633610\n51.477500\n-0.461389\n\n\n131\n41.297078\n2.078464\n51.477500\n-0.461389\n\n\n132\n41.938889\n-72.683222\n41.978603\n-87.904842\n\n\n133\n60.293386\n5.218142\n51.477500\n-0.461389\n\n\n134\n54.618056\n-5.872500\n51.477500\n-0.461389\n\n\n135\n44.535444\n11.288667\n51.477500\n-0.461389\n\n\n136\n12.949986\n77.668206\n51.477500\n-0.461389\n\n\n137\n40.477111\n-88.915917\n41.978603\n-87.904842\n\n\n138\n36.124472\n-86.678194\n41.978603\n-87.904842\n\n\n140\n42.364347\n-71.005181\n51.477500\n-0.461389\n\n\n141\n42.364347\n-71.005181\n41.978603\n-87.904842\n\n\n142\n50.901389\n4.484444\n51.477500\n-0.461389\n\n\n143\n47.590000\n7.529167\n51.477500\n-0.461389\n\n\n144\n47.436933\n19.255592\n51.477500\n-0.461389\n\n\n145\n42.940525\n-78.732167\n41.978603\n-87.904842\n\n\n146\n39.175361\n-76.668333\n51.477500\n-0.461389\n\n\n147\n39.175361\n-76.668333\n41.978603\n-87.904842\n\n\n148\n49.012779\n2.550000\n51.477500\n-0.461389\n\n\n149\n49.012779\n2.550000\n41.978603\n-87.904842\n\n\n150\n35.035278\n-85.203808\n41.978603\n-87.904842\n\n\n151\n38.138639\n-78.452861\n41.978603\n-87.904842\n\n\n152\n41.884694\n-91.710806\n41.978603\n-87.904842\n\n\n153\n41.411689\n-81.849794\n41.978603\n-87.904842\n\n\n154\n35.214000\n-80.943139\n51.477500\n-0.461389\n\n\n155\n35.214000\n-80.943139\n41.978603\n-87.904842\n\n\n156\n35.214000\n-80.943139\n43.677223\n-79.630556\n\n\n157\n39.997972\n-82.891889\n41.978603\n-87.904842\n\n\n158\n40.039250\n-88.278056\n41.978603\n-87.904842\n\n\n159\n38.818094\n-92.219631\n41.978603\n-87.904842\n\n\n160\n55.617917\n12.655972\n51.477500\n-0.461389\n\n\n161\n-33.964806\n18.601667\n51.477500\n-0.461389\n\n\n162\n21.036528\n-86.877083\n41.978603\n-87.904842\n\n\n163\n39.048836\n-84.667822\n41.978603\n-87.904842\n\n\n164\n44.772726\n-89.646635\n41.978603\n-87.904842\n\n\n165\n39.902375\n-84.219375\n41.978603\n-87.904842\n\n\n166\n42.402000\n-90.709472\n41.978603\n-87.904842\n\n\n167\n38.852083\n-77.037722\n41.978603\n-87.904842\n\n\n168\n38.852083\n-77.037722\n43.677223\n-79.630556\n\n\n170\n39.861656\n-104.673178\n51.477500\n-0.461389\n\n\n171\n39.861656\n-104.673178\n41.978603\n-87.904842\n\n\n172\n32.896828\n-97.037997\n51.477500\n-0.461389\n\n\n173\n32.896828\n-97.037997\n41.978603\n-87.904842\n\n\n174\n32.896828\n-97.037997\n43.677223\n-79.630556\n\n\n175\n25.261125\n51.565056\n41.978603\n-87.904842\n\n\n176\n41.533972\n-93.663083\n41.978603\n-87.904842\n\n\n177\n42.212444\n-83.353389\n41.978603\n-87.904842\n\n\n178\n53.421333\n-6.270075\n51.477500\n-0.461389\n\n\n179\n53.421333\n-6.270075\n41.978603\n-87.904842\n\n\n180\n51.289453\n6.766775\n51.477500\n-0.461389\n\n\n181\n51.289453\n6.766775\n41.978603\n-87.904842\n\n\n182\n25.252778\n55.364444\n51.477500\n-0.461389\n\n\n183\n0.042386\n32.443503\n51.477500\n-0.461389\n\n\n184\n55.950000\n-3.372500\n51.477500\n-0.461389\n\n\n185\n31.807250\n-106.377583\n41.978603\n-87.904842\n\n\n186\n38.036997\n-87.532364\n41.978603\n-87.904842\n\n\n187\n40.692500\n-74.168667\n51.477500\n-0.461389\n\n\n188\n40.692500\n-74.168667\n41.978603\n-87.904842\n\n\n189\n46.920650\n-96.815764\n41.978603\n-87.904842\n\n\n190\n41.804475\n12.250797\n51.477500\n-0.461389\n\n\n191\n41.804475\n12.250797\n41.978603\n-87.904842\n\n\n192\n26.072583\n-80.152750\n41.978603\n-87.904842\n\n\n193\n42.965424\n-83.743629\n41.978603\n-87.904842\n\n\n194\n50.026421\n8.543125\n51.477500\n-0.461389\n\n\n195\n43.582014\n-96.741914\n41.978603\n-87.904842\n\n\n196\n40.978472\n-85.195139\n41.978603\n-87.904842\n\n\n197\n36.151219\n-5.349664\n51.477500\n-0.461389\n\n\n198\n55.871944\n-4.433056\n51.477500\n-0.461389\n\n\n199\n57.662836\n12.279819\n51.477500\n-0.461389\n\n\n200\n44.485072\n-88.129589\n41.978603\n-87.904842\n\n\n201\n42.880833\n-85.522806\n41.978603\n-87.904842\n\n\n202\n46.238064\n6.108950\n51.477500\n-0.461389\n\n\n203\n52.461056\n9.685078\n51.477500\n-0.461389\n\n\n205\n60.317222\n24.963333\n51.477500\n-0.461389\n\n\n206\n22.308919\n113.914603\n41.978603\n-87.904842\n\n\n207\n41.066959\n-73.707575\n41.978603\n-87.904842\n\n\n208\n34.637194\n-86.775056\n41.978603\n-87.904842\n\n\n209\n17.453117\n78.467586\n51.477500\n-0.461389\n\n\n210\n38.944533\n-77.455811\n51.477500\n-0.461389\n\n\n211\n29.984433\n-95.341442\n51.477500\n-0.461389\n\n\n212\n29.984433\n-95.341442\n41.978603\n-87.904842\n\n\n213\n37.649944\n-97.433056\n41.978603\n-87.904842\n\n\n214\n39.717331\n-86.294383\n41.978603\n-87.904842\n\n\n215\n40.976922\n28.814606\n51.477500\n-0.461389\n\n\n216\n30.494056\n-81.687861\n41.978603\n-87.904842\n\n\n217\n40.639751\n-73.778925\n51.477500\n-0.461389\n\n\n218\n40.639751\n-73.778925\n41.978603\n-87.904842\n\n\n219\n40.639751\n-73.778925\n43.677223\n-79.630556\n\n\n220\n40.639751\n-73.778925\n47.464722\n8.549167\n\n\n221\n-26.139166\n28.246000\n51.477500\n-0.461389\n\n\n222\n2.745578\n101.709917\n51.477500\n-0.461389\n\n\n224\n29.226567\n47.968928\n51.477500\n-0.461389\n\n\n225\n36.080056\n-115.152250\n51.477500\n-0.461389\n\n\n226\n36.080056\n-115.152250\n41.978603\n-87.904842\n\n\n227\n36.080056\n-115.152250\n43.677223\n-79.630556\n\n\n228\n33.942536\n-118.408075\n51.477500\n-0.461389\n\n\n229\n33.942536\n-118.408075\n41.978603\n-87.904842\n\n\n230\n33.942536\n-118.408075\n31.143378\n121.805214\n\n\n231\n33.942536\n-118.408075\n43.677223\n-79.630556\n\n\n232\n53.865897\n-1.660569\n51.477500\n-0.461389\n\n\n233\n34.875117\n33.624850\n51.477500\n-0.461389\n\n\n234\n38.036500\n-84.605889\n41.978603\n-87.904842\n\n\n235\n40.777245\n-73.872608\n41.978603\n-87.904842\n\n\n236\n40.777245\n-73.872608\n43.677223\n-79.630556\n\n\n237\n51.477500\n-0.461389\n41.978603\n-87.904842\n\n\n238\n51.477500\n-0.461389\n48.110278\n16.569722\n\n\n239\n51.477500\n-0.461389\n43.677223\n-79.630556\n\n\n240\n51.477500\n-0.461389\n47.464722\n8.549167\n\n\n241\n34.729444\n-92.224306\n41.978603\n-87.904842\n\n\n242\n43.878986\n-91.256711\n41.978603\n-87.904842\n\n\n243\n40.493556\n-3.566764\n41.978603\n-87.904842\n\n\n244\n53.353744\n-2.274950\n41.978603\n-87.904842\n\n\n245\n18.503717\n-77.913358\n41.978603\n-87.904842\n\n\n246\n39.297606\n-94.713905\n41.978603\n-87.904842\n\n\n247\n28.429394\n-81.308994\n41.978603\n-87.904842\n\n\n248\n28.429394\n-81.308994\n43.677223\n-79.630556\n\n\n249\n40.193494\n-76.763403\n41.978603\n-87.904842\n\n\n250\n35.042417\n-89.976667\n41.978603\n-87.904842\n\n\n251\n19.436303\n-99.072097\n41.978603\n-87.904842\n\n\n252\n39.140972\n-96.670833\n41.978603\n-87.904842\n\n\n253\n25.793250\n-80.290556\n41.978603\n-87.904842\n\n\n254\n25.793250\n-80.290556\n43.677223\n-79.630556\n\n\n255\n42.947222\n-87.896583\n41.978603\n-87.904842\n\n\n256\n41.448528\n-90.507539\n41.978603\n-87.904842\n\n\n257\n46.353611\n-87.395278\n41.978603\n-87.904842\n\n\n258\n43.139858\n-89.337514\n41.978603\n-87.904842\n\n\n259\n44.881956\n-93.221767\n41.978603\n-87.904842\n\n\n260\n29.993389\n-90.258028\n41.978603\n-87.904842\n\n\n261\n35.764722\n140.386389\n41.978603\n-87.904842\n\n\n262\n35.764722\n140.386389\n1.350189\n103.994433\n\n\n263\n35.764722\n140.386389\n25.077731\n121.232822\n\n\n264\n35.393089\n-97.600733\n41.978603\n-87.904842\n\n\n265\n41.303167\n-95.894069\n41.978603\n-87.904842\n\n\n266\n41.978603\n-87.904842\n40.080111\n116.584556\n\n\n267\n41.978603\n-87.904842\n31.143378\n121.805214\n\n\n268\n41.978603\n-87.904842\n43.677223\n-79.630556\n\n\n269\n39.871944\n-75.241139\n43.677223\n-79.630556\n\n\n270\n39.871944\n-75.241139\n47.464722\n8.549167\n\n\n271\n28.945464\n-13.605225\n47.464722\n8.549167\n\n\n272\n36.674900\n-4.499106\n48.110278\n16.569722\n\n\n273\n38.282169\n-0.558156\n47.464722\n8.549167\n\n\n274\n31.722556\n35.993214\n48.110278\n16.569722\n\n\n275\n59.651944\n17.918611\n48.110278\n16.569722\n\n\n276\n24.432972\n54.651138\n40.080111\n116.584556\n\n\n277\n24.432972\n54.651138\n1.350189\n103.994433\n\n\n278\n41.297078\n2.078464\n48.110278\n16.569722\n\n\n280\n-27.384167\n153.117500\n1.350189\n103.994433\n\n\n282\n49.012779\n2.550000\n48.110278\n16.569722\n\n\n283\n39.601944\n19.911667\n48.110278\n16.569722\n\n\n284\n35.531747\n24.149678\n48.110278\n16.569722\n\n\n285\n55.617917\n12.655972\n48.110278\n16.569722\n\n\n286\n37.466781\n15.066400\n47.464722\n8.549167\n\n\n288\n51.289453\n6.766775\n48.110278\n16.569722\n\n\n289\n51.289453\n6.766775\n47.464722\n8.549167\n\n\n290\n41.804475\n12.250797\n48.110278\n16.569722\n\n\n291\n43.809953\n11.205100\n48.110278\n16.569722\n\n\n292\n32.697889\n-16.774453\n48.110278\n16.569722\n\n\n293\n32.697889\n-16.774453\n47.464722\n8.549167\n\n\n295\n50.026421\n8.543125\n48.110278\n16.569722\n\n\n296\n28.452717\n-13.863761\n48.110278\n16.569722\n\n\n297\n28.452717\n-13.863761\n47.464722\n8.549167\n\n\n298\n54.913250\n8.340472\n47.464722\n8.549167\n\n\n303\n60.317222\n24.963333\n48.110278\n16.569722\n\n\n304\n60.317222\n24.963333\n47.464722\n8.549167\n\n\n306\n35.339719\n25.180297\n47.464722\n8.549167\n\n\n307\n38.872858\n1.373117\n47.464722\n8.549167\n\n\n308\n37.435128\n25.348103\n48.110278\n16.569722\n\n\n309\n36.399169\n25.479333\n48.110278\n16.569722\n\n\n310\n37.068319\n22.025525\n48.110278\n16.569722\n\n\n311\n34.875117\n33.624850\n48.110278\n16.569722\n\n\n312\n51.505278\n0.055278\n47.464722\n8.549167\n\n\n315\n27.931886\n-15.386586\n48.110278\n16.569722\n\n\n317\n40.493556\n-3.566764\n48.110278\n16.569722\n\n\n318\n40.493556\n-3.566764\n47.464722\n8.549167\n\n\n319\n35.857497\n14.477500\n48.110278\n16.569722\n\n\n320\n48.353783\n11.786086\n48.110278\n16.569722\n\n\n321\n45.630606\n8.728111\n48.110278\n16.569722\n\n\n322\n40.886033\n14.290781\n47.464722\n8.549167\n\n\n323\n43.658411\n7.215872\n48.110278\n16.569722\n\n\n324\n49.498700\n11.066897\n48.110278\n16.569722\n\n\n325\n40.898661\n9.517628\n48.110278\n16.569722\n\n\n326\n40.898661\n9.517628\n47.464722\n8.549167\n\n\n327\n39.553610\n2.727778\n48.110278\n16.569722\n\n\n328\n39.553610\n2.727778\n47.464722\n8.549167\n\n\n329\n38.925467\n20.765311\n48.110278\n16.569722\n\n\n330\n36.405419\n28.086192\n48.110278\n16.569722\n\n\n331\n40.519725\n22.970950\n48.110278\n16.569722\n\n\n332\n38.905394\n16.242269\n47.464722\n8.549167\n\n\n333\n47.793304\n13.004333\n48.110278\n16.569722\n\n\n334\n28.044475\n-16.572489\n48.110278\n16.569722\n\n\n335\n28.044475\n-16.572489\n47.464722\n8.549167\n\n\n337\n52.559686\n13.287711\n47.464722\n8.549167\n\n\n338\n48.110278\n16.569722\n47.464722\n8.549167\n\n\n339\n17.136749\n-61.792667\n43.677223\n-79.630556\n\n\n340\n33.636719\n-84.428067\n43.677223\n-79.630556\n\n\n341\n12.501389\n-70.015221\n43.677223\n-79.630556\n\n\n342\n24.432972\n54.651138\n43.677223\n-79.630556\n\n\n343\n19.267000\n-69.742000\n43.677223\n-79.630556\n\n\n344\n41.297078\n2.078464\n43.677223\n-79.630556\n\n\n345\n32.364042\n-64.678703\n43.677223\n-79.630556\n\n\n346\n41.938889\n-72.683222\n43.677223\n-79.630556\n\n\n347\n13.074603\n-59.492456\n43.677223\n-79.630556\n\n\n348\n36.124472\n-86.678194\n43.677223\n-79.630556\n\n\n349\n4.701594\n-74.146947\n43.677223\n-79.630556\n\n\n350\n42.364347\n-71.005181\n43.677223\n-79.630556\n\n\n352\n39.175361\n-76.668333\n43.677223\n-79.630556\n\n\n353\n22.513200\n-78.511000\n43.677223\n-79.630556\n\n\n354\n49.012779\n2.550000\n43.677223\n-79.630556\n\n\n355\n41.411689\n-81.849794\n43.677223\n-79.630556\n\n\n357\n39.997972\n-82.891889\n43.677223\n-79.630556\n\n\n358\n55.617917\n12.655972\n43.677223\n-79.630556\n\n\n359\n21.036528\n-86.877083\n43.677223\n-79.630556\n\n\n360\n39.048836\n-84.667822\n43.677223\n-79.630556\n\n\n362\n39.861656\n-104.673178\n43.677223\n-79.630556\n\n\n364\n42.212444\n-83.353389\n43.677223\n-79.630556\n\n\n365\n53.421333\n-6.270075\n43.677223\n-79.630556\n\n\n366\n40.692500\n-74.168667\n43.677223\n-79.630556\n\n\n367\n41.804475\n12.250797\n43.677223\n-79.630556\n\n\n368\n26.072583\n-80.152750\n43.677223\n-79.630556\n\n\n369\n50.026421\n8.543125\n43.677223\n-79.630556\n\n\n370\n19.292778\n-81.357750\n43.677223\n-79.630556\n\n\n371\n23.562631\n-75.877958\n43.677223\n-79.630556\n\n\n372\n12.004247\n-61.786192\n43.677223\n-79.630556\n\n\n373\n-23.432075\n-46.469511\n43.677223\n-79.630556\n\n\n374\n22.989153\n-82.409086\n43.677223\n-79.630556\n\n\n375\n22.308919\n113.914603\n43.677223\n-79.630556\n\n\n376\n20.785589\n-76.315108\n43.677223\n-79.630556\n\n\n377\n38.944533\n-77.455811\n43.677223\n-79.630556\n\n\n378\n29.984433\n-95.341442\n43.677223\n-79.630556\n\n\n379\n39.717331\n-86.294383\n43.677223\n-79.630556\n\n\n380\n40.976922\n28.814606\n43.677223\n-79.630556\n\n\n382\n17.935667\n-76.787500\n43.677223\n-79.630556\n\n\n387\n-12.021889\n-77.114319\n43.677223\n-79.630556\n\n\n388\n10.593289\n-85.544408\n43.677223\n-79.630556\n\n\n389\n18.503717\n-77.913358\n43.677223\n-79.630556\n\n\n390\n39.297606\n-94.713905\n43.677223\n-79.630556\n\n\n392\n40.193494\n-76.763403\n43.677223\n-79.630556\n\n\n393\n19.436303\n-99.072097\n43.677223\n-79.630556\n\n\n395\n42.947222\n-87.896583\n43.677223\n-79.630556\n\n\n396\n44.881956\n-93.221767\n43.677223\n-79.630556\n\n\n398\n29.993389\n-90.258028\n43.677223\n-79.630556\n\n\n399\n48.353783\n11.786086\n43.677223\n-79.630556\n\n\n400\n25.038958\n-77.466231\n43.677223\n-79.630556\n\n\n401\n35.764722\n140.386389\n43.677223\n-79.630556\n\n\n403\n40.080111\n116.584556\n43.677223\n-79.630556\n\n\n405\n33.434278\n-112.011583\n43.677223\n-79.630556\n\n\n406\n40.491467\n-80.232872\n43.677223\n-79.630556\n\n\n407\n21.773625\n-72.265886\n43.677223\n-79.630556\n\n\n408\n19.757900\n-70.570033\n43.677223\n-79.630556\n\n\n409\n18.567367\n-68.363431\n43.677223\n-79.630556\n\n\n410\n31.143378\n121.805214\n43.677223\n-79.630556\n\n\n411\n35.877639\n-78.787472\n43.677223\n-79.630556\n\n\n412\n43.118866\n-77.672389\n43.677223\n-79.630556\n\n\n413\n26.536167\n-81.755167\n43.677223\n-79.630556\n\n\n414\n32.733556\n-117.189667\n43.677223\n-79.630556\n\n\n415\n-33.392975\n-70.785803\n43.677223\n-79.630556\n\n\n416\n47.449000\n-122.309306\n43.677223\n-79.630556\n\n\n417\n37.618972\n-122.374889\n43.677223\n-79.630556\n\n\n418\n9.993861\n-84.208806\n43.677223\n-79.630556\n\n\n419\n22.492192\n-79.943611\n43.677223\n-79.630556\n\n\n420\n38.748697\n-90.370028\n43.677223\n-79.630556\n\n\n421\n43.111187\n-76.106311\n43.677223\n-79.630556\n\n\n422\n32.011389\n34.886667\n43.677223\n-79.630556\n\n\n423\n27.975472\n-82.533250\n43.677223\n-79.630556\n\n\n424\n13.733194\n-60.952597\n43.677223\n-79.630556\n\n\n425\n48.110278\n16.569722\n43.677223\n-79.630556\n\n\n426\n23.034445\n-81.435278\n43.677223\n-79.630556\n\n\n427\n52.165750\n20.967122\n43.677223\n-79.630556\n\n\n428\n46.485001\n-84.509445\n43.677223\n-79.630556\n\n\n429\n49.210833\n-57.391388\n43.677223\n-79.630556\n\n\n430\n53.309723\n-113.579722\n43.677223\n-79.630556\n\n\n431\n45.868889\n-66.537222\n43.677223\n-79.630556\n\n\n432\n44.225277\n-76.596944\n43.677223\n-79.630556\n\n\n433\n44.880833\n-63.508610\n43.677223\n-79.630556\n\n\n434\n56.653333\n-111.221944\n43.677223\n-79.630556\n\n\n435\n45.322500\n-75.669167\n43.677223\n-79.630556\n\n\n436\n46.791111\n-71.393333\n43.677223\n-79.630556\n\n\n437\n42.275556\n-82.955556\n43.677223\n-79.630556\n\n\n438\n46.112221\n-64.678611\n43.677223\n-79.630556\n\n\n439\n50.431944\n-104.665833\n43.677223\n-79.630556\n\n\n440\n48.371944\n-89.323889\n43.677223\n-79.630556\n\n\n441\n46.161388\n-60.047779\n43.677223\n-79.630556\n\n\n442\n46.625000\n-80.798889\n43.677223\n-79.630556\n\n\n443\n45.316111\n-65.890278\n43.677223\n-79.630556\n\n\n444\n48.569721\n-81.376667\n43.677223\n-79.630556\n\n\n445\n45.470556\n-73.740833\n43.677223\n-79.630556\n\n\n446\n45.470556\n-73.740833\n47.464722\n8.549167\n\n\n447\n49.193889\n-123.184444\n43.677223\n-79.630556\n\n\n448\n49.910036\n-97.239886\n43.677223\n-79.630556\n\n\n449\n52.170834\n-106.699722\n43.677223\n-79.630556\n\n\n450\n43.033056\n-81.151111\n43.677223\n-79.630556\n\n\n451\n46.363611\n-79.422778\n43.677223\n-79.630556\n\n\n452\n51.113888\n-114.020278\n43.677223\n-79.630556\n\n\n453\n46.290001\n-63.121111\n43.677223\n-79.630556\n\n\n454\n48.646944\n-123.425833\n43.677223\n-79.630556\n\n\n455\n47.618610\n-52.751945\n43.677223\n-79.630556\n\n\n456\n43.677223\n-79.630556\n47.464722\n8.549167\n\n\n457\n34.519672\n113.840889\n25.077731\n121.232822\n\n\n458\n28.189158\n113.219633\n25.077731\n121.232822\n\n\n459\n26.883333\n100.233330\n25.077731\n121.232822\n\n\n460\n29.826683\n121.461906\n25.077731\n121.232822\n\n\n461\n31.742042\n118.862025\n25.077731\n121.232822\n\n\n462\n41.382400\n123.290100\n25.077731\n121.232822\n\n\n463\n52.308613\n4.763889\n25.077731\n121.232822\n\n\n468\n23.392436\n113.298786\n1.350189\n103.994433\n\n\n471\n49.012779\n2.550000\n40.080111\n116.584556\n\n\n472\n49.012779\n2.550000\n31.143378\n121.805214\n\n\n473\n49.012779\n2.550000\n1.350189\n103.994433\n\n\n476\n49.012779\n2.550000\n47.464722\n8.549167\n\n\n477\n42.212444\n-83.353389\n51.477500\n-0.461389\n\n\n479\n45.726387\n5.090833\n48.110278\n16.569722\n\n\n481\n36.691014\n3.215408\n51.477500\n-0.461389\n\n\n482\n36.691014\n3.215408\n40.080111\n116.584556\n\n\n483\n36.691014\n3.215408\n48.110278\n16.569722\n\n\n486\n19.088686\n72.867919\n47.464722\n8.549167\n\n\n487\n22.654739\n88.446722\n1.350189\n103.994433\n\n\n489\n28.566500\n77.103088\n41.978603\n-87.904842\n\n\n490\n28.566500\n77.103088\n31.143378\n121.805214\n\n\n492\n28.566500\n77.103088\n48.110278\n16.569722\n\n\n493\n28.566500\n77.103088\n47.464722\n8.549167\n\n\n495\n37.469075\n126.450517\n1.350189\n103.994433\n\n\n500\n5.937208\n116.051181\n1.350189\n103.994433\n\n\n501\n5.937208\n116.051181\n25.077731\n121.232822\n\n\n502\n6.166850\n102.293014\n1.350189\n103.994433\n\n\n503\n1.484697\n110.346933\n1.350189\n103.994433\n\n\n505\n6.329728\n99.728667\n1.350189\n103.994433\n\n\n506\n4.322014\n113.986806\n1.350189\n103.994433\n\n\n508\n20.521800\n-103.311167\n41.978603\n-87.904842\n\n\n510\n37.466781\n15.066400\n48.110278\n16.569722\n\n\n511\n61.174361\n-149.996361\n41.978603\n-87.904842\n\n\n514\n33.367467\n-7.589967\n51.477500\n-0.461389\n\n\n515\n33.367467\n-7.589967\n47.464722\n8.549167\n\n\n518\n13.440947\n-89.055728\n43.677223\n-79.630556\n\n\n535\n60.317222\n24.963333\n40.080111\n116.584556\n\n\n536\n60.317222\n24.963333\n31.143378\n121.805214\n\n\n537\n60.317222\n24.963333\n1.350189\n103.994433\n\n\n539\n60.317222\n24.963333\n34.447119\n108.751592\n\n\n551\n41.248055\n-8.681389\n47.464722\n8.549167\n\n\n557\n28.566500\n77.103088\n25.077731\n121.232822\n\n\n560\n41.804475\n12.250797\n31.143378\n121.805214\n\n\n563\n41.804475\n12.250797\n47.464722\n8.549167\n\n\n565\n45.445103\n9.276739\n48.110278\n16.569722\n\n\n566\n53.882469\n28.030731\n48.110278\n16.569722\n\n\n569\n29.719217\n106.641678\n25.077731\n121.232822\n\n\n570\n38.965667\n121.538600\n25.077731\n121.232822\n\n\n571\n25.935064\n119.663272\n25.077731\n121.232822\n\n\n575\n22.639258\n113.810664\n25.077731\n121.232822\n\n\n576\n36.266108\n120.374436\n25.077731\n121.232822\n\n\n577\n25.077731\n121.232822\n34.447119\n108.751592\n\n\n578\n9.006792\n7.263172\n51.477500\n-0.461389\n\n\n582\n43.352072\n77.040508\n51.477500\n-0.461389\n\n\n583\n31.722556\n35.993214\n51.477500\n-0.461389\n\n\n593\n33.820931\n35.488389\n51.477500\n-0.461389\n\n\n596\n13.681108\n100.747283\n51.477500\n-0.461389\n\n\n597\n55.740322\n9.151778\n47.464722\n8.549167\n\n\n606\n30.121944\n31.405556\n51.477500\n-0.461389\n\n\n611\n30.578528\n103.947086\n51.477500\n-0.461389\n\n\n615\n55.408611\n37.906111\n51.477500\n-0.461389\n\n\n624\n-34.822222\n-58.535833\n51.477500\n-0.461389\n\n\n625\n37.014425\n-7.965911\n51.477500\n-0.461389\n\n\n628\n8.616444\n-13.195489\n51.477500\n-0.461389\n\n\n631\n-22.808903\n-43.243647\n51.477500\n-0.461389\n\n\n634\n-23.432075\n-46.469511\n51.477500\n-0.461389\n\n\n636\n40.467500\n50.046667\n51.477500\n-0.461389\n\n\n640\n22.308919\n113.914603\n51.477500\n-0.461389\n\n\n641\n35.552258\n139.779694\n51.477500\n-0.461389\n\n\n645\n38.872858\n1.373117\n51.477500\n-0.461389\n\n\n646\n37.469075\n126.450517\n51.477500\n-0.461389\n\n\n648\n21.679564\n39.156536\n51.477500\n-0.461389\n\n\n650\n37.435128\n25.348103\n51.477500\n-0.461389\n\n\n652\n36.399169\n25.479333\n51.477500\n-0.461389\n\n\n653\n50.345000\n30.894722\n51.477500\n-0.461389\n\n\n655\n-8.858375\n13.231178\n51.477500\n-0.461389\n\n\n661\n59.800292\n30.262503\n51.477500\n-0.461389\n\n\n663\n51.477500\n-0.461389\n40.080111\n116.584556\n\n\n664\n51.477500\n-0.461389\n31.143378\n121.805214\n\n\n665\n51.477500\n-0.461389\n1.350189\n103.994433\n\n\n672\n23.843333\n90.397781\n51.477500\n-0.461389\n\n\n673\n23.843333\n90.397781\n1.350189\n103.994433\n\n\n674\n4.944200\n114.928353\n31.143378\n121.805214\n\n\n675\n4.944200\n114.928353\n1.350189\n103.994433\n\n\n676\n24.550560\n55.103174\n51.477500\n-0.461389\n\n\n677\n28.189158\n113.219633\n34.447119\n108.751592\n\n\n678\n22.608267\n108.172442\n34.447119\n108.751592\n\n\n679\n39.124353\n117.346183\n34.447119\n108.751592\n\n\n681\n43.670833\n142.447500\n25.077731\n121.232822\n\n\n683\n13.681108\n100.747283\n25.077731\n121.232822\n\n\n684\n13.681108\n100.747283\n48.110278\n16.569722\n\n\n685\n-27.384167\n153.117500\n25.077731\n121.232822\n\n\n686\n23.392436\n113.298786\n25.077731\n121.232822\n\n\n687\n49.012779\n2.550000\n25.077731\n121.232822\n\n\n688\n-6.125567\n106.655897\n25.077731\n121.232822\n\n\n690\n42.775200\n141.692283\n25.077731\n121.232822\n\n\n691\n30.578528\n103.947086\n25.077731\n121.232822\n\n\n692\n-8.748169\n115.167172\n25.077731\n121.232822\n\n\n693\n33.585942\n130.450686\n25.077731\n121.232822\n\n\n694\n13.483450\n144.795983\n25.077731\n121.232822\n\n\n695\n21.221192\n105.807178\n25.077731\n121.232822\n\n\n696\n40.851422\n111.824103\n25.077731\n121.232822\n\n\n697\n30.229503\n120.434453\n25.077731\n121.232822\n\n\n698\n41.770000\n140.821944\n25.077731\n121.232822\n\n\n699\n22.308919\n113.914603\n25.077731\n121.232822\n\n\n700\n45.623403\n126.250328\n25.077731\n121.232822\n\n\n701\n37.469075\n126.450517\n25.077731\n121.232822\n\n\n702\n40.639751\n-73.778925\n25.077731\n121.232822\n\n\n705\n36.394611\n136.406544\n25.077731\n121.232822\n\n\n706\n2.745578\n101.709917\n25.077731\n121.232822\n\n\n707\n25.218106\n110.039197\n25.077731\n121.232822\n\n\n708\n33.942536\n-118.408075\n25.077731\n121.232822\n\n\n709\n22.149556\n113.591558\n25.077731\n121.232822\n\n\n712\n34.756944\n133.855278\n25.077731\n121.232822\n\n\n713\n40.080111\n116.584556\n25.077731\n121.232822\n\n\n714\n11.546556\n104.844139\n25.077731\n121.232822\n\n\n716\n38.139722\n140.916944\n25.077731\n121.232822\n\n\n717\n47.449000\n-122.309306\n25.077731\n121.232822\n\n\n718\n37.618972\n-122.374889\n25.077731\n121.232822\n\n\n719\n10.818797\n106.651856\n25.077731\n121.232822\n\n\n721\n-7.379831\n112.786858\n25.077731\n121.232822\n\n\n722\n36.857214\n117.215992\n25.077731\n121.232822\n\n\n723\n25.077731\n121.232822\n43.677223\n-79.630556\n\n\n724\n56.923611\n23.971111\n48.110278\n16.569722\n\n\n725\n56.923611\n23.971111\n47.464722\n8.549167\n\n\n726\n6.498553\n-58.254119\n43.677223\n-79.630556\n\n\n729\n10.595369\n-61.337242\n43.677223\n-79.630556\n\n\n730\n35.179528\n128.938222\n25.077731\n121.232822\n\n\n731\n35.179528\n128.938222\n34.447119\n108.751592\n\n\n732\n8.977889\n38.799319\n40.080111\n116.584556\n\n\n733\n-37.008056\n174.791667\n31.143378\n121.805214\n\n\n734\n59.651944\n17.918611\n40.080111\n116.584556\n\n\n735\n40.560000\n109.997000\n40.080111\n116.584556\n\n\n737\n21.539400\n109.294000\n40.080111\n116.584556\n\n\n738\n13.681108\n100.747283\n40.080111\n116.584556\n\n\n739\n30.121944\n31.405556\n40.080111\n116.584556\n\n\n740\n23.392436\n113.298786\n40.080111\n116.584556\n\n\n741\n23.392436\n113.298786\n31.143378\n121.805214\n\n\n742\n23.392436\n113.298786\n34.447119\n108.751592\n\n\n745\n34.519672\n113.840889\n40.080111\n116.584556\n\n\n746\n43.541200\n125.120100\n40.080111\n116.584556\n\n\n747\n41.538100\n120.435000\n40.080111\n116.584556\n\n\n748\n42.235000\n118.908000\n40.080111\n116.584556\n\n\n749\n36.716600\n127.499119\n40.080111\n116.584556\n\n\n754\n18.766847\n98.962644\n40.080111\n116.584556\n\n\n755\n55.617917\n12.655972\n40.080111\n116.584556\n\n\n756\n28.189158\n113.219633\n40.080111\n116.584556\n\n\n757\n42.775200\n141.692283\n40.080111\n116.584556\n\n\n760\n30.578528\n103.947086\n1.350189\n103.994433\n\n\n763\n31.941667\n119.711667\n40.080111\n116.584556\n\n\n764\n40.060300\n113.482000\n40.080111\n116.584556\n\n\n765\n31.300000\n107.500000\n40.080111\n116.584556\n\n\n766\n40.025500\n124.286600\n40.080111\n116.584556\n\n\n767\n28.566500\n77.103088\n40.080111\n116.584556\n\n\n768\n38.965667\n121.538600\n40.080111\n116.584556\n\n\n770\n38.965667\n121.538600\n34.447119\n108.751592\n\n\n771\n39.850000\n110.033000\n40.080111\n116.584556\n\n\n772\n51.289453\n6.766775\n40.080111\n116.584556\n\n\n773\n25.252778\n55.364444\n40.080111\n116.584556\n\n\n774\n29.102800\n110.443000\n40.080111\n116.584556\n\n\n775\n40.692500\n-74.168667\n40.080111\n116.584556\n\n\n776\n40.692500\n-74.168667\n31.143378\n121.805214\n\n\n777\n41.804475\n12.250797\n40.080111\n116.584556\n\n\n778\n39.224061\n125.670150\n40.080111\n116.584556\n\n\n779\n25.935064\n119.663272\n40.080111\n116.584556\n\n\n780\n50.026421\n8.543125\n40.080111\n116.584556\n\n\n781\n50.026421\n8.543125\n31.143378\n121.805214\n\n\n782\n32.900000\n115.816667\n40.080111\n116.584556\n\n\n783\n33.585942\n130.450686\n31.143378\n121.805214\n\n\n784\n37.558311\n126.790586\n40.080111\n116.584556\n\n\n785\n46.238064\n6.108950\n40.080111\n116.584556\n\n\n786\n32.391100\n105.702000\n40.080111\n116.584556\n\n\n787\n19.934856\n110.458961\n40.080111\n116.584556\n\n\n790\n40.851422\n111.824103\n40.080111\n116.584556\n\n\n791\n40.851422\n111.824103\n31.143378\n121.805214\n\n\n793\n31.780019\n117.298436\n40.080111\n116.584556\n\n\n794\n30.229503\n120.434453\n40.080111\n116.584556\n\n\n796\n30.229503\n120.434453\n34.447119\n108.751592\n\n\n797\n22.308919\n113.914603\n40.080111\n116.584556\n\n\n798\n8.113200\n98.316872\n40.080111\n116.584556\n\n\n799\n49.204997\n119.825000\n40.080111\n116.584556\n\n\n800\n46.083000\n122.017000\n40.080111\n116.584556\n\n\n801\n42.841400\n93.669200\n40.080111\n116.584556\n\n\n802\n35.552258\n139.779694\n40.080111\n116.584556\n\n\n803\n21.318681\n-157.922428\n40.080111\n116.584556\n\n\n804\n45.623403\n126.250328\n40.080111\n116.584556\n\n\n806\n28.562200\n121.429000\n40.080111\n116.584556\n\n\n807\n38.944533\n-77.455811\n40.080111\n116.584556\n\n\n808\n29.984433\n-95.341442\n40.080111\n116.584556\n\n\n809\n37.469075\n126.450517\n40.080111\n116.584556\n\n\n810\n38.481944\n106.009167\n40.080111\n116.584556\n\n\n811\n38.481944\n106.009167\n31.143378\n121.805214\n\n\n812\n38.481944\n106.009167\n34.447119\n108.751592\n\n\n813\n40.976922\n28.814606\n40.080111\n116.584556\n\n\n814\n40.976922\n28.814606\n31.143378\n121.805214\n\n\n815\n29.338600\n117.176000\n40.080111\n116.584556\n\n\n816\n29.338600\n117.176000\n34.447119\n108.751592\n\n\n817\n40.639751\n-73.778925\n40.080111\n116.584556\n\n\n818\n26.899700\n114.737500\n40.080111\n116.584556\n\n\n819\n29.733000\n115.983000\n40.080111\n116.584556\n\n\n820\n24.796400\n118.590000\n31.143378\n121.805214\n\n\n821\n46.843394\n130.465389\n40.080111\n116.584556\n\n\n822\n32.857000\n103.683000\n31.143378\n121.805214\n\n\n823\n28.865000\n115.900000\n40.080111\n116.584556\n\n\n824\n28.865000\n115.900000\n31.143378\n121.805214\n\n\n825\n34.434722\n135.244167\n40.080111\n116.584556\n\n\n829\n25.825800\n114.912000\n40.080111\n116.584556\n\n\n830\n26.538522\n106.800703\n40.080111\n116.584556\n\n\n831\n26.538522\n106.800703\n31.143378\n121.805214\n\n\n832\n26.538522\n106.800703\n34.447119\n108.751592\n\n\n833\n25.218106\n110.039197\n40.080111\n116.584556\n\n\n835\n25.218106\n110.039197\n34.447119\n108.751592\n\n\n836\n33.942536\n-118.408075\n40.080111\n116.584556\n\n\n838\n51.148056\n-0.190278\n40.080111\n116.584556\n\n\n841\n36.117000\n103.617000\n40.080111\n116.584556\n\n\n842\n36.117000\n103.617000\n34.447119\n108.751592\n\n\n843\n26.883333\n100.233330\n40.080111\n116.584556\n\n\n844\n29.297778\n90.911944\n40.080111\n116.584556\n\n\n845\n24.207500\n109.391000\n40.080111\n116.584556\n\n\n846\n40.493556\n-3.566764\n40.080111\n116.584556\n\n\n847\n44.523889\n129.568889\n40.080111\n116.584556\n\n\n848\n-37.673333\n144.843333\n31.143378\n121.805214\n\n\n849\n22.149556\n113.591558\n40.080111\n116.584556\n\n\n851\n31.428100\n104.741000\n40.080111\n116.584556\n\n\n853\n48.353783\n11.786086\n40.080111\n116.584556\n\n\n854\n48.353783\n11.786086\n31.143378\n121.805214\n\n\n855\n34.991389\n126.382778\n40.080111\n116.584556\n\n\n856\n45.630606\n8.728111\n40.080111\n116.584556\n\n\n857\n45.630606\n8.728111\n31.143378\n121.805214\n\n\n858\n47.239628\n123.918131\n40.080111\n116.584556\n\n\n859\n29.826683\n121.461906\n40.080111\n116.584556\n\n\n860\n34.858414\n136.805408\n31.143378\n121.805214\n\n\n861\n31.742042\n118.862025\n40.080111\n116.584556\n\n\n862\n31.742042\n118.862025\n34.447119\n108.751592\n\n\n863\n22.608267\n108.172442\n40.080111\n116.584556\n\n\n865\n35.764722\n140.386389\n40.080111\n116.584556\n\n\n866\n35.764722\n140.386389\n31.143378\n121.805214\n\n\n867\n32.070800\n120.976000\n40.080111\n116.584556\n\n\n868\n26.195814\n127.645869\n40.080111\n116.584556\n\n\n871\n40.080111\n116.584556\n31.143378\n121.805214\n\n\n872\n40.080111\n116.584556\n1.350189\n103.994433\n\n\n874\n40.080111\n116.584556\n48.110278\n16.569722\n\n\n875\n40.080111\n116.584556\n34.447119\n108.751592\n\n\n878\n31.143378\n121.805214\n34.447119\n108.751592\n\n\n881\n22.639258\n113.810664\n34.447119\n108.751592\n\n\n882\n36.266108\n120.374436\n34.447119\n108.751592\n\n\n886\n27.912200\n120.852000\n34.447119\n108.751592\n\n\n887\n31.494400\n120.429000\n34.447119\n108.751592\n\n\n898\n50.026421\n8.543125\n25.077731\n121.232822\n\n\n899\n34.796111\n138.189444\n25.077731\n121.232822\n\n\n902\n19.934856\n110.458961\n25.077731\n121.232822\n\n\n904\n34.436111\n132.919444\n25.077731\n121.232822\n\n\n906\n21.318681\n-157.922428\n25.077731\n121.232822\n\n\n908\n24.344525\n124.186983\n25.077731\n121.232822\n\n\n909\n22.577094\n120.350006\n40.080111\n116.584556\n\n\n911\n22.577094\n120.350006\n1.350189\n103.994433\n\n\n912\n28.865000\n115.900000\n25.077731\n121.232822\n\n\n914\n31.877222\n131.448611\n25.077731\n121.232822\n\n\n915\n31.803397\n130.719408\n25.077731\n121.232822\n\n\n919\n34.858414\n136.805408\n25.077731\n121.232822\n\n\n921\n26.195814\n127.645869\n25.077731\n121.232822\n\n\n923\n5.297139\n100.276864\n25.077731\n121.232822\n\n\n927\n16.907305\n96.133222\n25.077731\n121.232822\n\n\n928\n7.367303\n134.544278\n25.077731\n121.232822\n\n\n932\n-33.946111\n151.177222\n25.077731\n121.232822\n\n\n933\n18.302897\n109.412272\n25.077731\n121.232822\n\n\n935\n34.214167\n134.015556\n25.077731\n121.232822\n\n\n937\n36.648333\n137.187500\n25.077731\n121.232822\n\n\n938\n25.077731\n121.232822\n48.110278\n16.569722\n\n\n940\n9.071364\n-79.383453\n43.677223\n-79.630556\n\n\n946\n21.420428\n-77.847433\n43.677223\n-79.630556\n\n\n950\n7.180756\n79.884117\n1.350189\n103.994433\n\n\n958\n22.308919\n113.914603\n34.447119\n108.751592\n\n\n966\n52.308613\n4.763889\n40.080111\n116.584556\n\n\n967\n52.308613\n4.763889\n31.143378\n121.805214\n\n\n968\n23.392436\n113.298786\n51.477500\n-0.461389\n\n\n974\n28.918900\n111.640000\n40.080111\n116.584556\n\n\n976\n34.519672\n113.840889\n31.143378\n121.805214\n\n\n980\n43.541200\n125.120100\n25.077731\n121.232822\n\n\n981\n36.247500\n113.126000\n40.080111\n116.584556\n\n\n985\n28.189158\n113.219633\n31.143378\n121.805214\n\n\n990\n40.025500\n124.286600\n31.143378\n121.805214\n\n\n995\n40.094000\n94.481800\n34.447119\n108.751592\n\n\n996\n42.212444\n-83.353389\n40.080111\n116.584556\n\n\n997\n42.212444\n-83.353389\n31.143378\n121.805214\n\n\n999\n29.102800\n110.443000\n25.077731\n121.232822\n\n\n1001\n25.935064\n119.663272\n1.350189\n103.994433\n\n\n1005\n19.934856\n110.458961\n31.143378\n121.805214\n\n\n1006\n21.221192\n105.807178\n40.080111\n116.584556\n\n\n1007\n31.780019\n117.298436\n34.447119\n108.751592\n\n\n1015\n29.934200\n122.362000\n40.080111\n116.584556\n\n\n1017\n37.469075\n126.450517\n31.143378\n121.805214\n\n\n1020\n33.616653\n73.099233\n40.080111\n116.584556\n\n\n1021\n24.796400\n118.590000\n40.080111\n116.584556\n\n\n1022\n46.843394\n130.465389\n31.143378\n121.805214\n\n\n1023\n28.865000\n115.900000\n34.447119\n108.751592\n\n\n1027\n2.745578\n101.709917\n31.143378\n121.805214\n\n\n1030\n26.538522\n106.800703\n25.077731\n121.232822\n\n\n1037\n44.523889\n129.568889\n31.143378\n121.805214\n\n\n1038\n30.754000\n106.062000\n40.080111\n116.584556\n\n\n1039\n42.088056\n127.548889\n40.080111\n116.584556\n\n\n1040\n47.239628\n123.918131\n31.143378\n121.805214\n\n\n1045\n22.608267\n108.172442\n25.077731\n121.232822\n\n\n1054\n18.302897\n109.412272\n34.447119\n108.751592\n\n\n1060\n37.746897\n112.628428\n34.447119\n108.751592\n\n\n1064\n30.783758\n114.208100\n34.447119\n108.751592\n\n\n1065\n30.836100\n108.406000\n34.447119\n108.751592\n\n\n1067\n2.745578\n101.709917\n40.080111\n116.584556\n\n\n1071\n11.679431\n122.376294\n1.350189\n103.994433\n\n\n1072\n52.308613\n4.763889\n41.978603\n-87.904842\n\n\n1073\n52.308613\n4.763889\n43.677223\n-79.630556\n\n\n1077\n33.636719\n-84.428067\n47.464722\n8.549167\n\n\n1094\n37.469075\n126.450517\n41.978603\n-87.904842\n\n\n1097\n40.639751\n-73.778925\n31.143378\n121.805214\n\n\n1115\n-8.858375\n13.231178\n40.080111\n116.584556\n\n\n1116\n60.193917\n11.100361\n48.110278\n16.569722\n\n\n1121\n53.421333\n-6.270075\n48.110278\n16.569722\n\n\n1123\n53.421333\n-6.270075\n47.464722\n8.549167\n\n\n1128\n25.252778\n55.364444\n31.143378\n121.805214\n\n\n1129\n25.252778\n55.364444\n1.350189\n103.994433\n\n\n1130\n25.252778\n55.364444\n25.077731\n121.232822\n\n\n1131\n25.252778\n55.364444\n48.110278\n16.569722\n\n\n1132\n25.252778\n55.364444\n43.677223\n-79.630556\n\n\n1133\n25.252778\n55.364444\n47.464722\n8.549167\n\n\n1134\n-37.673333\n144.843333\n1.350189\n103.994433\n\n\n1136\n8.977889\n38.799319\n51.477500\n-0.461389\n\n\n1138\n8.977889\n38.799319\n31.143378\n121.805214\n\n\n1139\n-34.945000\n138.530556\n1.350189\n103.994433\n\n\n1140\n-37.008056\n174.791667\n1.350189\n103.994433\n\n\n1143\n-43.489358\n172.532225\n1.350189\n103.994433\n\n\n1146\n50.026421\n8.543125\n47.464722\n8.549167\n\n\n1157\n24.432972\n54.651138\n31.143378\n121.805214\n\n\n1160\n44.818444\n20.309139\n51.477500\n-0.461389\n\n\n1165\n43.809953\n11.205100\n47.464722\n8.549167\n\n\n1166\n46.238064\n6.108950\n47.464722\n8.549167\n\n\n1167\n51.432447\n12.241633\n47.464722\n8.549167\n\n\n1168\n45.200761\n7.649631\n47.464722\n8.549167\n\n\n1170\n42.695194\n23.406167\n48.110278\n16.569722\n\n\n1171\n42.695194\n23.406167\n47.464722\n8.549167\n\n\n1172\n13.912583\n100.606750\n1.350189\n103.994433\n\n\n1173\n13.912583\n100.606750\n34.447119\n108.751592\n\n\n1175\n8.095969\n98.988764\n1.350189\n103.994433\n\n\n1176\n31.780019\n117.298436\n25.077731\n121.232822\n\n\n1177\n38.481944\n106.009167\n25.077731\n121.232822\n\n\n1180\n63.985000\n-22.605556\n51.477500\n-0.461389\n\n\n1181\n63.985000\n-22.605556\n43.677223\n-79.630556\n\n\n1182\n63.985000\n-22.605556\n47.464722\n8.549167\n\n\n1189\n39.850000\n110.033000\n34.447119\n108.751592\n\n\n1198\n41.101400\n121.062000\n31.143378\n121.805214\n\n\n1203\n31.428100\n104.741000\n31.143378\n121.805214\n\n\n1204\n35.179528\n128.938222\n31.143378\n121.805214\n\n\n1208\n4.567972\n101.092194\n1.350189\n103.994433\n\n\n1209\n3.775389\n103.209056\n1.350189\n103.994433\n\n\n1210\n35.417000\n116.533000\n34.447119\n108.751592\n\n\n1211\n-6.900625\n107.576294\n1.350189\n103.994433\n\n\n1213\n-1.268272\n116.894478\n1.350189\n103.994433\n\n\n1214\n-6.125567\n106.655897\n40.080111\n116.584556\n\n\n1215\n-6.125567\n106.655897\n31.143378\n121.805214\n\n\n1216\n-6.125567\n106.655897\n1.350189\n103.994433\n\n\n1219\n-8.748169\n115.167172\n1.350189\n103.994433\n\n\n1221\n40.976922\n28.814606\n1.350189\n103.994433\n\n\n1222\n-7.788181\n110.431758\n1.350189\n103.994433\n\n\n1223\n-8.757322\n116.276675\n1.350189\n103.994433\n\n\n1225\n1.549447\n124.925878\n1.350189\n103.994433\n\n\n1226\n0.460786\n101.444539\n1.350189\n103.994433\n\n\n1227\n-2.898250\n104.699903\n1.350189\n103.994433\n\n\n1231\n33.511306\n126.493028\n25.077731\n121.232822\n\n\n1232\n18.766847\n98.962644\n25.077731\n121.232822\n\n\n1239\n43.041000\n144.193000\n25.077731\n121.232822\n\n\n1244\n13.410666\n103.812840\n25.077731\n121.232822\n\n\n1247\n30.582200\n117.050200\n40.080111\n116.584556\n\n\n1249\n28.918900\n111.640000\n34.447119\n108.751592\n\n\n1252\n40.060300\n113.482000\n34.447119\n108.751592\n\n\n1254\n32.900000\n115.816667\n34.447119\n108.751592\n\n\n1255\n40.851422\n111.824103\n34.447119\n108.751592\n\n\n1257\n33.777200\n119.147800\n34.447119\n108.751592\n\n\n1258\n42.841400\n93.669200\n34.447119\n108.751592\n\n\n1259\n35.799700\n107.603000\n34.447119\n108.751592\n\n\n1264\n28.852200\n105.393000\n34.447119\n108.751592\n\n\n1265\n30.754000\n106.062000\n34.447119\n108.751592\n\n\n1267\n40.926389\n107.738889\n34.447119\n108.751592\n\n\n1274\n36.898731\n30.800461\n48.110278\n16.569722\n\n\n1280\n55.408611\n37.906111\n48.110278\n16.569722\n\n\n1287\n27.178317\n33.799436\n48.110278\n16.569722\n\n\n1302\n25.557111\n34.583711\n48.110278\n16.569722\n\n\n1306\n32.011389\n34.886667\n48.110278\n16.569722\n\n\n1308\n40.560000\n109.997000\n31.143378\n121.805214\n\n\n1309\n21.539400\n109.294000\n31.143378\n121.805214\n\n\n1318\n37.271600\n118.281900\n31.143378\n121.805214\n\n\n1319\n25.935064\n119.663272\n31.143378\n121.805214\n\n\n1329\n26.195814\n127.645869\n31.143378\n121.805214\n\n\n1334\n43.352072\n77.040508\n40.080111\n116.584556\n\n\n1339\n50.901389\n4.484444\n40.080111\n116.584556\n\n\n1354\n37.271600\n118.281900\n40.080111\n116.584556\n\n\n1355\n36.636900\n109.554000\n40.080111\n116.584556\n\n\n1374\n48.528044\n135.188361\n40.080111\n116.584556\n\n\n1375\n56.180000\n92.475000\n40.080111\n116.584556\n\n\n1381\n59.800292\n30.262503\n40.080111\n116.584556\n\n\n1384\n36.117000\n103.617000\n25.077731\n121.232822\n\n\n1387\n4.191833\n73.529128\n40.080111\n116.584556\n\n\n1392\n49.566667\n117.329444\n40.080111\n116.584556\n\n\n1395\n55.012622\n82.650656\n40.080111\n116.584556\n\n\n1408\n39.794444\n106.799444\n34.447119\n108.751592\n\n\n1410\n51.956944\n4.437222\n48.110278\n16.569722\n\n\n1424\n41.297078\n2.078464\n47.464722\n8.549167\n\n\n1426\n43.301097\n-2.910608\n51.477500\n-0.461389\n\n\n1450\n43.302061\n-8.377256\n51.477500\n-0.461389\n\n\n1467\n35.416111\n51.152222\n51.477500\n-0.461389\n\n\n1468\n35.416111\n51.152222\n40.080111\n116.584556\n\n\n1469\n35.416111\n51.152222\n48.110278\n16.569722\n\n\n1471\n40.467500\n50.046667\n40.080111\n116.584556\n\n\n1472\n40.467500\n50.046667\n48.110278\n16.569722\n\n\n1473\n5.765280\n103.007000\n1.350189\n103.994433\n\n\n1474\n44.941444\n17.297501\n47.464722\n8.549167\n\n\n1476\n29.102800\n110.443000\n34.447119\n108.751592\n\n\n1478\n19.934856\n110.458961\n34.447119\n108.751592\n\n\n1484\n45.306110\n130.996670\n40.080111\n116.584556\n\n\n1490\n38.280686\n114.697300\n34.447119\n108.751592\n\n\n1495\n29.733300\n118.256000\n34.447119\n108.751592\n\n\n1500\n42.775200\n141.692283\n31.143378\n121.805214\n\n\n1501\n34.796111\n138.189444\n31.143378\n121.805214\n\n\n1504\n34.436111\n132.919444\n31.143378\n121.805214\n\n\n1508\n35.552258\n139.779694\n1.350189\n103.994433\n\n\n1509\n37.571100\n139.064600\n31.143378\n121.805214\n\n\n1513\n36.394611\n136.406544\n31.143378\n121.805214\n\n\n1514\n31.803397\n130.719408\n31.143378\n121.805214\n\n\n1515\n33.827222\n132.699722\n31.143378\n121.805214\n\n\n1518\n32.916944\n129.913611\n31.143378\n121.805214\n\n\n1525\n34.756944\n133.855278\n31.143378\n121.805214\n\n\n1527\n46.223686\n14.457611\n48.110278\n16.569722\n\n\n1528\n46.223686\n14.457611\n47.464722\n8.549167\n\n\n1536\n44.818444\n20.309139\n48.110278\n16.569722\n\n\n1537\n44.818444\n20.309139\n47.464722\n8.549167\n\n\n1539\n54.377569\n18.466222\n47.464722\n8.549167\n\n\n1540\n50.077731\n19.784836\n47.464722\n8.549167\n\n\n1541\n51.102683\n16.885836\n47.464722\n8.549167\n\n\n1542\n11.546556\n104.844139\n31.143378\n121.805214\n\n\n1550\n51.022222\n71.466944\n48.110278\n16.569722\n\n\n1551\n33.511306\n126.493028\n40.080111\n116.584556\n\n\n1559\n37.469075\n126.450517\n48.110278\n16.569722\n\n\n1560\n37.469075\n126.450517\n34.447119\n108.751592\n\n\n1561\n37.469075\n126.450517\n43.677223\n-79.630556\n\n\n1568\n52.308613\n4.763889\n1.350189\n103.994433\n\n\n1570\n52.308613\n4.763889\n48.110278\n16.569722\n\n\n1572\n52.308613\n4.763889\n47.464722\n8.549167\n\n\n1588\n35.857497\n14.477500\n47.464722\n8.549167\n\n\n1593\n19.292778\n-81.357750\n41.978603\n-87.904842\n\n\n1597\n49.626575\n6.211517\n48.110278\n16.569722\n\n\n1612\n50.026421\n8.543125\n41.978603\n-87.904842\n\n\n1615\n50.026421\n8.543125\n1.350189\n103.994433\n\n\n1619\n52.461056\n9.685078\n47.464722\n8.549167\n\n\n1625\n51.432447\n12.241633\n48.110278\n16.569722\n\n\n1628\n48.353783\n11.786086\n41.978603\n-87.904842\n\n\n1633\n48.353783\n11.786086\n47.464722\n8.549167\n\n\n1634\n-1.319167\n36.927500\n47.464722\n8.549167\n\n\n1635\n49.498700\n11.066897\n47.464722\n8.549167\n\n\n1637\n48.689878\n9.221964\n47.464722\n8.549167\n\n\n1643\n50.077731\n19.784836\n48.110278\n16.569722\n\n\n1645\n52.165750\n20.967122\n47.464722\n8.549167\n\n\n1646\n53.353744\n-2.274950\n48.110278\n16.569722\n\n\n1648\n4.191833\n73.529128\n31.143378\n121.805214\n\n\n1650\n36.674900\n-4.499106\n47.464722\n8.549167\n\n\n1652\n59.651944\n17.918611\n47.464722\n8.549167\n\n\n1653\n37.936358\n23.944467\n47.464722\n8.549167\n\n\n1657\n52.453856\n-1.748028\n47.464722\n8.549167\n\n\n1658\n13.681108\n100.747283\n47.464722\n8.549167\n\n\n1660\n42.364347\n-71.005181\n47.464722\n8.549167\n\n\n1661\n50.901389\n4.484444\n47.464722\n8.549167\n\n\n1662\n47.590000\n7.529167\n48.110278\n16.569722\n\n\n1663\n47.436933\n19.255592\n47.464722\n8.549167\n\n\n1664\n30.121944\n31.405556\n47.464722\n8.549167\n\n\n1667\n55.617917\n12.655972\n47.464722\n8.549167\n\n\n1669\n42.561353\n18.268244\n47.464722\n8.549167\n\n\n1671\n55.408611\n37.906111\n47.464722\n8.549167\n\n\n1675\n40.692500\n-74.168667\n47.464722\n8.549167\n\n\n1681\n-23.432075\n-46.469511\n47.464722\n8.549167\n\n\n1683\n46.238064\n6.108950\n48.110278\n16.569722\n\n\n1687\n22.989153\n-82.409086\n47.464722\n8.549167\n\n\n1689\n22.308919\n113.914603\n47.464722\n8.549167\n\n\n1691\n38.944533\n-77.455811\n47.464722\n8.549167\n\n\n1692\n40.976922\n28.814606\n47.464722\n8.549167\n\n\n1694\n-26.139166\n28.246000\n47.464722\n8.549167\n\n\n1695\n50.345000\n30.894722\n47.464722\n8.549167\n\n\n1696\n36.080056\n-115.152250\n47.464722\n8.549167\n\n\n1697\n33.942536\n-118.408075\n47.464722\n8.549167\n\n\n1700\n59.800292\n30.262503\n47.464722\n8.549167\n\n\n1704\n46.004275\n8.910578\n47.464722\n8.549167\n\n\n1705\n49.626575\n6.211517\n47.464722\n8.549167\n\n\n1706\n45.726387\n5.090833\n47.464722\n8.549167\n\n\n1708\n53.353744\n-2.274950\n47.464722\n8.549167\n\n\n1709\n25.793250\n-80.290556\n47.464722\n8.549167\n\n\n1712\n45.630606\n8.728111\n47.464722\n8.549167\n\n\n1714\n43.658411\n7.215872\n47.464722\n8.549167\n\n\n1715\n35.764722\n140.386389\n47.464722\n8.549167\n\n\n1718\n41.978603\n-87.904842\n47.464722\n8.549167\n\n\n1719\n60.193917\n11.100361\n47.464722\n8.549167\n\n\n1720\n44.572161\n26.102178\n47.464722\n8.549167\n\n\n1721\n40.080111\n116.584556\n47.464722\n8.549167\n\n\n1723\n50.100833\n14.260000\n47.464722\n8.549167\n\n\n1725\n18.567367\n-68.363431\n47.464722\n8.549167\n\n\n1726\n31.143378\n121.805214\n47.464722\n8.549167\n\n\n1727\n31.606886\n-8.036300\n47.464722\n8.549167\n\n\n1729\n37.618972\n-122.374889\n47.464722\n8.549167\n\n\n1730\n1.350189\n103.994433\n47.464722\n8.549167\n\n\n1732\n43.538944\n16.297964\n47.464722\n8.549167\n\n\n1735\n32.011389\n34.886667\n47.464722\n8.549167\n\n\n1736\n27.975472\n-82.533250\n47.464722\n8.549167\n\n\n1738\n45.505278\n12.351944\n47.464722\n8.549167\n\n\n1740\n39.489314\n-0.481625\n47.464722\n8.549167\n\n\n1745\n45.742931\n16.068778\n47.464722\n8.549167\n\n\n1766\n24.796400\n118.590000\n25.077731\n121.232822\n\n\n1794\n12.949986\n77.668206\n1.350189\n103.994433\n\n\n1798\n11.030031\n77.043383\n1.350189\n103.994433\n\n\n1799\n29.719217\n106.641678\n1.350189\n103.994433\n\n\n1800\n18.766847\n98.962644\n1.350189\n103.994433\n\n\n1801\n10.155556\n76.391389\n1.350189\n103.994433\n\n\n1802\n28.189158\n113.219633\n1.350189\n103.994433\n\n\n1804\n16.043917\n108.199370\n1.350189\n103.994433\n\n\n1805\n-8.546553\n125.524719\n1.350189\n103.994433\n\n\n1807\n7.125522\n125.645778\n1.350189\n103.994433\n\n\n1808\n21.221192\n105.807178\n1.350189\n103.994433\n\n\n1810\n17.453117\n78.467586\n1.350189\n103.994433\n\n\n1813\n24.992364\n102.743536\n1.350189\n103.994433\n\n\n1814\n27.696583\n85.359100\n1.350189\n103.994433\n\n\n1828\n-20.430235\n57.683600\n40.080111\n116.584556\n\n\n1829\n-20.430235\n57.683600\n31.143378\n121.805214\n\n\n1834\n30.121944\n31.405556\n48.110278\n16.569722\n\n\n1835\n30.121944\n31.405556\n43.677223\n-79.630556\n\n\n1838\n25.088200\n104.958700\n31.143378\n121.805214\n\n\n1852\n43.541200\n125.120100\n34.447119\n108.751592\n\n\n1864\n31.941667\n119.711667\n34.447119\n108.751592\n\n\n1865\n40.060300\n113.482000\n31.143378\n121.805214\n\n\n1866\n31.300000\n107.500000\n31.143378\n121.805214\n\n\n1872\n-8.748169\n115.167172\n31.143378\n121.805214\n\n\n1884\n34.633000\n98.867000\n34.447119\n108.751592\n\n\n1886\n21.221192\n105.807178\n31.143378\n121.805214\n\n\n1887\n36.524000\n114.430000\n31.143378\n121.805214\n\n\n1895\n33.777200\n119.147800\n40.080111\n116.584556\n\n\n1900\n42.841400\n93.669200\n31.143378\n121.805214\n\n\n1902\n21.318681\n-157.922428\n31.143378\n121.805214\n\n\n1906\n29.934200\n122.362000\n31.143378\n121.805214\n\n\n1914\n39.856900\n98.341400\n34.447119\n108.751592\n\n\n1915\n26.899700\n114.737500\n34.447119\n108.751592\n\n\n1916\n29.515000\n108.830000\n40.080111\n116.584556\n\n\n1917\n35.417000\n116.533000\n40.080111\n116.584556\n\n\n1921\n32.857000\n103.683000\n34.447119\n108.751592\n\n\n1922\n39.542922\n76.019956\n34.447119\n108.751592\n\n\n1948\n34.410000\n112.280000\n40.080111\n116.584556\n\n\n1949\n34.550000\n119.250000\n40.080111\n116.584556\n\n\n1950\n35.046100\n118.412000\n40.080111\n116.584556\n\n\n1951\n35.046100\n118.412000\n31.143378\n121.805214\n\n\n1952\n24.207500\n109.391000\n31.143378\n121.805214\n\n\n1953\n28.852200\n105.393000\n40.080111\n116.584556\n\n\n1954\n28.852200\n105.393000\n31.143378\n121.805214\n\n\n1960\n34.991389\n126.382778\n31.143378\n121.805214\n\n\n1962\n30.754000\n106.062000\n31.143378\n121.805214\n\n\n1965\n29.826683\n121.461906\n34.447119\n108.751592\n\n\n1969\n31.742042\n118.862025\n31.143378\n121.805214\n\n\n1972\n22.608267\n108.172442\n1.350189\n103.994433\n\n\n2010\n33.585942\n130.450686\n1.350189\n103.994433\n\n\n2018\n34.434722\n135.244167\n1.350189\n103.994433\n\n\n2023\n34.858414\n136.805408\n1.350189\n103.994433\n\n\n2029\n35.764722\n140.386389\n48.110278\n16.569722\n\n\n2036\n39.457583\n-74.577167\n41.978603\n-87.904842\n\n\n2047\n33.679750\n-78.928333\n41.978603\n-87.904842\n\n\n2048\n37.721278\n-122.220722\n41.978603\n-87.904842\n\n\n2050\n31.428100\n104.741000\n34.447119\n108.751592\n\n\n2074\n44.535444\n11.288667\n48.110278\n16.569722\n\n\n2075\n50.901389\n4.484444\n48.110278\n16.569722\n\n\n2077\n47.436933\n19.255592\n48.110278\n16.569722\n\n\n2082\n46.785167\n23.686167\n48.110278\n16.569722\n\n\n2085\n42.561353\n18.268244\n48.110278\n16.569722\n\n\n2087\n36.713056\n28.792500\n48.110278\n16.569722\n\n\n2089\n48.357222\n35.100556\n48.110278\n16.569722\n\n\n2092\n36.237611\n43.963158\n48.110278\n16.569722\n\n\n2093\n40.147275\n44.395881\n48.110278\n16.569722\n\n\n2098\n46.991067\n15.439628\n48.110278\n16.569722\n\n\n2105\n49.924786\n36.289986\n48.110278\n16.569722\n\n\n2106\n38.944533\n-77.455811\n48.110278\n16.569722\n\n\n2107\n47.178492\n27.620631\n48.110278\n16.569722\n\n\n2109\n47.260219\n11.343964\n48.110278\n16.569722\n\n\n2110\n40.976922\n28.814606\n48.110278\n16.569722\n\n\n2111\n40.639751\n-73.778925\n48.110278\n16.569722\n\n\n2113\n50.345000\n30.894722\n48.110278\n16.569722\n\n\n2114\n46.927744\n28.930978\n48.110278\n16.569722\n\n\n2115\n46.642514\n14.337739\n48.110278\n16.569722\n\n\n2117\n45.034689\n39.170539\n48.110278\n16.569722\n\n\n2118\n48.663055\n21.241112\n48.110278\n16.569722\n\n\n2120\n59.800292\n30.262503\n48.110278\n16.569722\n\n\n2123\n38.781311\n-9.135919\n48.110278\n16.569722\n\n\n2125\n48.233219\n14.187511\n48.110278\n16.569722\n\n\n2128\n49.812500\n23.956111\n48.110278\n16.569722\n\n\n2134\n40.886033\n14.290781\n48.110278\n16.569722\n\n\n2137\n46.426767\n30.676464\n48.110278\n16.569722\n\n\n2139\n41.978603\n-87.904842\n48.110278\n16.569722\n\n\n2141\n44.572161\n26.102178\n48.110278\n16.569722\n\n\n2144\n38.175958\n13.091019\n48.110278\n16.569722\n\n\n2145\n50.100833\n14.260000\n48.110278\n16.569722\n\n\n2146\n42.572778\n21.035833\n48.110278\n16.569722\n\n\n2149\n47.258208\n39.818089\n48.110278\n16.569722\n\n\n2150\n45.785597\n24.091342\n48.110278\n16.569722\n\n\n2151\n43.824583\n18.331467\n48.110278\n16.569722\n\n\n2153\n41.961622\n21.621381\n48.110278\n16.569722\n\n\n2155\n43.538944\n16.297964\n48.110278\n16.569722\n\n\n2157\n38.905394\n16.242269\n48.110278\n16.569722\n\n\n2161\n42.359392\n19.251894\n48.110278\n16.569722\n\n\n2162\n41.414742\n19.720561\n48.110278\n16.569722\n\n\n2166\n43.232072\n27.825106\n48.110278\n16.569722\n\n\n2167\n45.505278\n12.351944\n48.110278\n16.569722\n\n\n2187\n-26.139166\n28.246000\n1.350189\n103.994433\n\n\n2191\n40.128082\n32.995083\n48.110278\n16.569722\n\n\n2192\n40.898553\n29.309219\n48.110278\n16.569722\n\n\n2193\n40.898553\n29.309219\n47.464722\n8.549167\n\n\n2194\n47.485033\n9.560775\n48.110278\n16.569722\n\n\n2197\n33.616653\n73.099233\n51.477500\n-0.461389\n\n\n2199\n33.616653\n73.099233\n43.677223\n-79.630556\n\n\n2200\n24.906547\n67.160797\n51.477500\n-0.461389\n\n\n2201\n24.906547\n67.160797\n43.677223\n-79.630556\n\n\n2202\n31.521564\n74.403594\n51.477500\n-0.461389\n\n\n2203\n31.521564\n74.403594\n43.677223\n-79.630556\n\n\n2206\n11.679431\n122.376294\n25.077731\n121.232822\n\n\n2217\n-9.443383\n147.220050\n1.350189\n103.994433\n\n\n2232\n25.261125\n51.565056\n51.477500\n-0.461389\n\n\n2234\n25.261125\n51.565056\n40.080111\n116.584556\n\n\n2235\n25.261125\n51.565056\n31.143378\n121.805214\n\n\n2236\n25.261125\n51.565056\n1.350189\n103.994433\n\n\n2237\n25.261125\n51.565056\n48.110278\n16.569722\n\n\n2238\n25.261125\n51.565056\n47.464722\n8.549167\n\n\n2251\n31.722556\n35.993214\n47.464722\n8.549167\n\n\n2262\n38.781311\n-9.135919\n43.677223\n-79.630556\n\n\n2263\n41.248055\n-8.681389\n43.677223\n-79.630556\n\n\n2264\n37.741184\n-25.697870\n43.677223\n-79.630556\n\n\n2266\n52.268028\n104.388975\n40.080111\n116.584556\n\n\n2283\n27.701900\n118.001000\n34.447119\n108.751592\n\n\n2284\n49.207947\n-2.195508\n47.464722\n8.549167\n\n\n2286\n59.651944\n17.918611\n41.978603\n-87.904842\n\n\n2291\n55.617917\n12.655972\n41.978603\n-87.904842\n\n\n2293\n55.617917\n12.655972\n31.143378\n121.805214\n\n\n2294\n55.617917\n12.655972\n1.350189\n103.994433\n\n\n2300\n50.901389\n4.484444\n41.978603\n-87.904842\n\n\n2306\n23.077242\n72.634650\n1.350189\n103.994433\n\n\n2308\n41.297078\n2.078464\n1.350189\n103.994433\n\n\n2334\n55.408611\n37.906111\n1.350189\n103.994433\n\n\n2339\n41.804475\n12.250797\n1.350189\n103.994433\n\n\n2363\n4.191833\n73.529128\n1.350189\n103.994433\n\n\n2365\n48.353783\n11.786086\n1.350189\n103.994433\n\n\n2366\n45.630606\n8.728111\n1.350189\n103.994433\n\n\n2378\n24.957640\n46.698776\n1.350189\n103.994433\n\n\n2382\n53.047500\n8.786667\n48.110278\n16.569722\n\n\n2385\n55.972642\n37.414589\n48.110278\n16.569722\n\n\n2386\n55.972642\n37.414589\n43.677223\n-79.630556\n\n\n2387\n55.972642\n37.414589\n47.464722\n8.549167\n\n\n2389\n21.679564\n39.156536\n1.350189\n103.994433\n\n\n2390\n21.679564\n39.156536\n43.677223\n-79.630556\n\n\n2392\n46.914100\n7.497153\n48.110278\n16.569722\n\n\n2393\n37.986814\n58.360967\n51.477500\n-0.461389\n\n\n2408\n40.976922\n28.814606\n41.978603\n-87.904842\n\n\n2436\n6.933206\n100.392975\n1.350189\n103.994433\n\n\n2445\n26.883333\n100.233330\n1.350189\n103.994433\n\n\n2447\n22.149556\n113.591558\n1.350189\n103.994433\n\n\n2450\n29.826683\n121.461906\n1.350189\n103.994433\n\n\n2458\n37.936358\n23.944467\n43.677223\n-79.630556\n\n\n2465\n55.871944\n-4.433056\n43.677223\n-79.630556\n\n\n2467\n51.148056\n-0.190278\n43.677223\n-79.630556\n\n\n2469\n53.353744\n-2.274950\n43.677223\n-79.630556\n\n\n2474\n45.505278\n12.351944\n43.677223\n-79.630556\n\n\n2477\n33.875031\n10.775461\n47.464722\n8.549167\n\n\n2478\n36.075833\n10.438611\n47.464722\n8.549167\n\n\n2479\n36.851033\n10.227217\n48.110278\n16.569722\n\n\n2480\n36.851033\n10.227217\n47.464722\n8.549167\n\n\n2485\n31.742042\n118.862025\n1.350189\n103.994433\n\n\n2487\n-28.164444\n153.504722\n1.350189\n103.994433\n\n\n2490\n51.148056\n-0.190278\n48.110278\n16.569722\n\n\n2491\n51.148056\n-0.190278\n47.464722\n8.549167\n\n\n2492\n51.874722\n-0.368333\n47.464722\n8.549167\n\n\n2493\n40.652083\n-75.440806\n41.978603\n-87.904842\n\n\n2496\n42.748267\n-73.801692\n41.978603\n-87.904842\n\n\n2501\n44.257526\n-88.507576\n41.978603\n-87.904842\n\n\n2503\n35.436194\n-82.541806\n41.978603\n-87.904842\n\n\n2504\n41.338478\n-75.723403\n41.978603\n-87.904842\n\n\n2507\n33.562942\n-86.753550\n41.978603\n-87.904842\n\n\n2509\n43.564361\n-116.222861\n41.978603\n-87.904842\n\n\n2514\n44.471861\n-73.153278\n41.978603\n-87.904842\n\n\n2517\n45.777643\n-111.160151\n41.978603\n-87.904842\n\n\n2518\n33.938833\n-81.119528\n41.978603\n-87.904842\n\n\n2519\n40.916083\n-81.442194\n41.978603\n-87.904842\n\n\n2521\n32.898647\n-80.040528\n41.978603\n-87.904842\n\n\n2528\n47.168400\n-88.489100\n41.978603\n-87.904842\n\n\n2529\n38.805805\n-104.700778\n41.978603\n-87.904842\n\n\n2539\n46.842091\n-92.193649\n41.978603\n-87.904842\n\n\n2546\n44.865800\n-91.484300\n41.978603\n-87.904842\n\n\n2547\n42.159889\n-76.891611\n41.978603\n-87.904842\n\n\n2557\n38.950944\n-95.663611\n41.978603\n-87.904842\n\n\n2563\n-23.432075\n-46.469511\n41.978603\n-87.904842\n\n\n2564\n36.097750\n-79.937306\n41.978603\n-87.904842\n\n\n2565\n34.895556\n-82.218889\n41.978603\n-87.904842\n\n\n2568\n21.318681\n-157.922428\n41.978603\n-87.904842\n\n\n2573\n38.944533\n-77.455811\n41.978603\n-87.904842\n\n\n2584\n32.311167\n-90.075889\n41.978603\n-87.904842\n\n\n2589\n42.778700\n-84.587357\n41.978603\n-87.904842\n\n\n2603\n40.850971\n-96.759250\n41.978603\n-87.904842\n\n\n2604\n43.532913\n-84.079647\n41.978603\n-87.904842\n\n\n2610\n42.932556\n-71.435667\n41.978603\n-87.904842\n\n\n2614\n43.169500\n-86.238200\n41.978603\n-87.904842\n\n\n2616\n30.691231\n-88.242814\n41.978603\n-87.904842\n\n\n2622\n25.778489\n-100.106878\n41.978603\n-87.904842\n\n\n2625\n25.038958\n-77.466231\n41.978603\n-87.904842\n\n\n2629\n20.898650\n-156.430458\n41.978603\n-87.904842\n\n\n2644\n7.180756\n79.884117\n51.477500\n-0.461389\n\n\n2645\n7.180756\n79.884117\n40.080111\n116.584556\n\n\n2646\n7.180756\n79.884117\n31.143378\n121.805214\n\n\n2648\n6.284467\n81.124128\n40.080111\n116.584556\n\n\n2649\n6.284467\n81.124128\n31.143378\n121.805214\n\n\n2650\n23.593278\n58.284444\n47.464722\n8.549167\n\n\n2659\n55.591531\n37.261486\n43.677223\n-79.630556\n\n\n2783\n16.043917\n108.199370\n31.143378\n121.805214\n\n\n2817\n53.047500\n8.786667\n47.464722\n8.549167\n\n\n2818\n52.134642\n7.684831\n47.464722\n8.549167\n\n\n2819\n35.416111\n51.152222\n31.143378\n121.805214\n\n\n2843\n33.679750\n-78.928333\n43.677223\n-79.630556\n\n\n2851\n18.439417\n-66.001833\n43.677223\n-79.630556\n\n\n2853\n18.040953\n-63.108900\n43.677223\n-79.630556\n\n\n2860\n49.956112\n-119.377778\n43.677223\n-79.630556\n\n\n2877\n38.292392\n27.156953\n48.110278\n16.569722\n\n\n2878\n38.292392\n27.156953\n47.464722\n8.549167\n\n\n2885\n42.359392\n19.251894\n47.464722\n8.549167\n\n\n\n\n\n\n\n# Get a nice image of the globe from NASA\nearth &lt;- \"http://eoimages.gsfc.nasa.gov/images/imagerecords/73000/73909/world.topo.bathy.200412.3x5400x2700.jpg\"\n\nglobejs(\n  img = earth,\n  lat = frequent_flights$dest_lat,\n  long = frequent_flights$dest_long,\n  arcs = frequent_flights,\n  #value = frequent_destinations$n,\n  color = \"red\",\n  #bodycolor = \"#aaaaff\",\n  arcsHeight = 0.3,\n  arcsLwd = 2,\n  arcsColor = \"#ffff00\",\n  arcsOpacity = 0.35,\n  atmosphere = FALSE,\n  #color=\"#00aaff\",\n  pointsize = 2,\n  rotationlat = 0.6,\n  rotationlong = 0.2,\n  # lightcolor = \"#aaeeff\",\n  # emissive = \"#0000ee\",\n  # bodycolor = \"#ffffff\",\n  bg = \"grey\"\n        )"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#using-scatterplot3js-and-friends",
    "href": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#using-scatterplot3js-and-friends",
    "title": "Lab-8: Did you ever see such a thing as a drawing of a muchness?",
    "section": "Using scatterplot3js and friends",
    "text": "Using scatterplot3js and friends\n3D scatter plots with points and lines can be achieved using scatterplot3js, points3D, and lines3D.\n\nlibrary(palmerpenguins)\npenguins &lt;- penguins %&gt;% drop_na()\nscatterplot3js(x = penguins$bill_length_mm, \n               y = penguins$flipper_length_mm, \n               z = penguins$body_mass_g)\n\n\n\n\n\n\n\nlibrary(palmerpenguins)\npenguins &lt;- penguins %&gt;% drop_na()\nscatterplot3js(x = penguins$bill_length_mm, \n               y = penguins$flipper_length_mm, \n               z = penguins$body_mass_g,\n               cex.symbols = 0.2) # Smaller Points\n\n\n\n\n\n\n\nlibrary(palmerpenguins)\npenguins &lt;- penguins %&gt;% drop_na()\n\nscatterplot3js(x = penguins$bill_length_mm, \n               y = penguins$flipper_length_mm, \n               z = penguins$body_mass_g,\n               cex.symbols = 0.2) # Smaller Points"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#references",
    "href": "content/courses/R4Artists/Modules/80-htmlwidgets/htmlwidgets.html#references",
    "title": "Lab-8: Did you ever see such a thing as a drawing of a muchness?",
    "section": "References",
    "text": "References\n\nBring the best of JavaScript data visualization to R, https://www.htmlwidgets.org/\nUsing htmlwidgets in Rmarkdown, https://communicate-data-with-r.netlify.app/docs/communicate/htmlwidgets-in-documents/&gt;\nKarambelkar et al, htmlwidgets and knitr , https://cran.r-project.org/web/packages/widgetframe/vignettes/widgetframe_and_knitr.html\nhttps://patchwork.data-imaginist.com/\nThe threejs package: three.js widgets for R https://bwlewis.github.io/rthreejs/"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/90-GoM/spatial.html",
    "href": "content/courses/R4Artists/Modules/90-GoM/spatial.html",
    "title": "Lab-9: If you please sir…which way to the Secret Garden?",
    "section": "",
    "text": "Alice asks the Catterpillar the Way"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/90-GoM/spatial.html#fa-folder-open-slides-and-tutorials",
    "href": "content/courses/R4Artists/Modules/90-GoM/spatial.html#fa-folder-open-slides-and-tutorials",
    "title": "Lab-9: If you please sir…which way to the Secret Garden?",
    "section": "\n Slides and Tutorials",
    "text": "Slides and Tutorials\n\n\n\n\n\n\n\n\n R Tutorial\n Slides \n Leaflet Tutorial\n Leaflet Tutorial"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/90-GoM/spatial.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "href": "content/courses/R4Artists/Modules/90-GoM/spatial.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "title": "Lab-9: If you please sir…which way to the Secret Garden?",
    "section": "\n Introduction",
    "text": "Introduction\nChoropleth Map\nWhat does choropleth1 mean? And what kind of information could this map represent?1 Etymology. From Ancient Greek χώρα (khṓra, “location”) + πλῆθος (plêthos, “a great number”) + English map. First proposed in 1938 by American geographer John Kirtland Wright to mean “quantity in area,” although maps of the type have been used since the early 19th century.\n\n\nBubble Map\nWhat information could this map below represent?\n\n\nWhat is there to not like about maps!!! Let us now look at the slides. Then we will understand how the R packages sf, tmap work to create maps, using data downloadable into R using osmdata, osmplotr and rnaturalearth.\nWe will learn to make static and interactive maps and to show off different kinds of data on them, data that have an inherently “spatial” spread or significance! sf + ggplot and tmap give us great static maps. Interactive maps we will make with leaflet and mapview; tmap is also capable of creating interactive maps.\nTrade Routes? Populations? Street Crime hotspots? Theatre and Food districts and popular Restaurants? Literary Paris, London and Barcelona?\nAll possible !!"
  },
  {
    "objectID": "content/courses/R4Artists/Modules/90-GoM/spatial.html#references",
    "href": "content/courses/R4Artists/Modules/90-GoM/spatial.html#references",
    "title": "Lab-9: If you please sir…which way to the Secret Garden?",
    "section": "References",
    "text": "References\n\nOSM Basic Maps Vignette\nNikita Voevodin, R, Not the Best Practices\nNico Hahn, Making Maps with R\nEmine Fidan, Interactive Maps in R\nLovelace et al, Geocomputation in R"
  },
  {
    "objectID": "content/courses/TRIZ4ProbSolving/listing.html",
    "href": "content/courses/TRIZ4ProbSolving/listing.html",
    "title": "TRIZ for Innovation",
    "section": "",
    "text": "Title\n\n\nReading Time\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/labs/doe/index.html",
    "href": "content/labs/doe/index.html",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "",
    "text": "This project is a quick analysis of the Design of Experiments class carried out in the Order and Chaos course, FSP-2021-2022, at SMI MAHE, Bangalore.\nThe methodology followed was that in A.J. Lawrance’s paper 1 describing a Statistics module based on the method of Design of Experiments. The inquiry relates to Short Term Memory (STM) among students.1 Lawrance, A. J. 1996. “A Design of Experiments Workshop as an Introduction to Statistics.” American Statistician 50 (2): 156–58. doi:10.1080/00031305.1996.10474364."
  },
  {
    "objectID": "content/labs/doe/index.html#introduction",
    "href": "content/labs/doe/index.html#introduction",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "",
    "text": "This project is a quick analysis of the Design of Experiments class carried out in the Order and Chaos course, FSP-2021-2022, at SMI MAHE, Bangalore.\nThe methodology followed was that in A.J. Lawrance’s paper 1 describing a Statistics module based on the method of Design of Experiments. The inquiry relates to Short Term Memory (STM) among students.1 Lawrance, A. J. 1996. “A Design of Experiments Workshop as an Introduction to Statistics.” American Statistician 50 (2): 156–58. doi:10.1080/00031305.1996.10474364."
  },
  {
    "objectID": "content/labs/doe/index.html#structure",
    "href": "content/labs/doe/index.html#structure",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "\n2 Structure",
    "text": "2 Structure\nThe total number of students were 17. Eight Pairs of students were created randomly to create eight different Test tools for Short Term Memory testing.\nThe binary ( two - level ) variables/parameters that were used in the tests, were, following Lawrance:\n\nWL: Word List Length ( 7 and 15 words )\n\nSL: Syllables in the Words ( 2 and 5 syllables )\n\nST: Study Time allowed for the Respondents ( 15 and 30 seconds )\n\nOther parameters considered were a) Language b) Structure/Depiction of the Word Lists ( e.g. word clouds, matrices, columns…), c) Whether the words would be shown or read aloud, and d) whether the respondents had to speak out, or write down, the recollected words. These parameters were discussed and abandoned as too complex to mechanize, though they could have had an impact on the STM scores.\nHence a total of 8 Tests were created by 8 pairs of students, and each team tested the remaining 15 students ( Due to COVID restrictions, this testing was carried out entirely online on MS Teams, using individual breakout rooms for the Test Teams. )\nThe data were entered into a Google Sheet and the STM scores were converted to percentages so as to be comparable across WL.\nThe data was then “flattened” for each of the binary parameters; this was logical to do since for each parameter, the other two parameters were balanced out by the Test structure. For instance, for WL = 5, the SL and ST parameters used all the four combinations ( SL = 5, 15 ) and (ST = 15, 30 ). Hence the “common sense” analysis could proceed for each of the parameters individually. Joint effects were not considered for this preliminary class."
  },
  {
    "objectID": "content/labs/doe/index.html#data",
    "href": "content/labs/doe/index.html#data",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "\n3 Data",
    "text": "3 Data\n\n\n\n\n  \n\n\n\nThe data has scores that have been combined into single columns for each setting for each of the parameters. For example, the column syllable_2 contains STM scores for all tests that used SL = 2-syllables in their tests. The Word Length WL and Study Time ST go through all their combinations in this column. The other columns are constructed similarly.\n\n3.1 Basic Plots\nWe will use Box Plots and Density Plots to compare the STM score distributions for each Parameter. To do this we need to pivot_longer the adjacent columns ( e.g. syllable_2 and syllable_5) and use these names as categorical variables:\n\n3.1.1 Syllable Parameter SL\n\n\n\n\n  \n\n\n\n\n\n\n\n3.1.2 Study Time Parameter ST\n\n\n\n\n  \n\n\n\n\n\n\n\n3.1.3 Word List Length Parameter WL"
  },
  {
    "objectID": "content/labs/doe/index.html#preliminary-observations",
    "href": "content/labs/doe/index.html#preliminary-observations",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "\n4 Preliminary Observations",
    "text": "4 Preliminary Observations\nClearly, based on visual inspection of the Plots, the Word Count seems to have a large effect on STM Test Scores, with fewer words ( 7 ) being easier to recall. Study Time ( 15 and 30 seconds ) also seems to have a more modest positive effect on STM scores, while Syllable Count ( 2 or 5 syllables ) seems to have a modest negative effect on STM scores."
  },
  {
    "objectID": "content/labs/doe/index.html#analysis",
    "href": "content/labs/doe/index.html#analysis",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "\n5 Analysis",
    "text": "5 Analysis\nWe wish to establish the significance of the effect size due to each of the Parameters. Already from the Density Plots, we can see that none of the scores are normally distributed. A quick Shapiro-Wilkes Test for each of them confirms that the scores are not normally distributed.\nHence we go for a Permutation Test to check for significance of effect.\nOn the other hand, as remarked in Ernst2, the non-parametric permutation test can be both exact and also intuitively easier for students to grasp, as I can testify from direct observation in this class. There is no need to discuss sampling distributions and means, t-tests and the like. Permutations are easily executed in R, using packages such as mosaic3.2 Ernst, Michael D. 2004. “Permutation Methods: A Basis for Exact Inference.” Statistical Science 19 (4): 676–85. doi:10.1214/088342304000000396.3 Pruim R, Kaplan DT, Horton NJ (2017). “The mosaic Package: Helping Students to ‘Think with Data’ Using R.” The R Journal, 9(1), 77–102. https://journal.r-project.org/archive/2017/RJ-2017-024/index.html.\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$syllable_2\nW = 0.95508, p-value = 0.02716\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$syllable_5\nW = 0.95321, p-value = 0.02211\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$study_time_15\nW = 0.9068, p-value = 0.0002348\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$study_time_30\nW = 0.95539, p-value = 0.0281\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$list_length_7\nW = 0.90542, p-value = 0.0002085\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  stm$list_length_15\nW = 0.92806, p-value = 0.001645"
  },
  {
    "objectID": "content/labs/doe/index.html#permutation-tests",
    "href": "content/labs/doe/index.html#permutation-tests",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "\n6 Permutation Tests",
    "text": "6 Permutation Tests\nWe proceed with a Permutation Test for each of the Parameters. We start with the Syllable Parameter SL. We shuffle the labels ( SL- = 2 and SL+ = 5) between the scores and determine the null distribution. This is then compared with the difference in mean scores between the unpermuted sets. We continue similarly for the other two parameters.\n\n\n[1] 0.0153731\n\n\n\n\n  \n\n\n\n[1] 0.08526183\n\n\n\n\n  \n\n\n\n[1] 0.2887539"
  },
  {
    "objectID": "content/labs/doe/index.html#conclusions",
    "href": "content/labs/doe/index.html#conclusions",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "\n7 Conclusions",
    "text": "7 Conclusions\nFrom the above null distribution plots obtained using Permutation tests, it is clear that both Study Time ( ST ) and List Word Length ( WL) have significant effects on the Short Term Memory Scores. The probability that the observed value is obtained or exceeded by any permutation of scores is very low in both cases.\nOn the other hand, Syllable Count (SL) does not seem to affect the STM scores significantly."
  },
  {
    "objectID": "content/labs/doe/index.html#references",
    "href": "content/labs/doe/index.html#references",
    "title": "Using Permutation Tests in Undergraduate Stats Class",
    "section": "\n8 References",
    "text": "8 References"
  },
  {
    "objectID": "content/labs/r-labs/dashboard/example.html",
    "href": "content/labs/r-labs/dashboard/example.html",
    "title": "Critical Result Callback Monitor",
    "section": "",
    "text": "mean_tat &lt;- round(mean(cb_data$call_tat), 0)\nvalueBox(value = mean_tat, icon = \"fa-stopwatch\", \n         caption = \"Mean callback time\", color = \"#708090\")\n\n15\n\n\n\n\ncalls &lt;- cb_data %&gt;% nrow()\nvalueBox(value = calls, icon = \"fa-hashtag\", \n         caption = \"Total calls\", color = \"orange\")\n\n2167\n\n\n\n\nontime_n &lt;- cb_data %&gt;% filter(call_tat &lt;= 30) %&gt;% nrow()\nlate_n &lt;- cb_data %&gt;% filter(call_tat &gt;30) %&gt;% nrow()\npct_ontime &lt;- round((ontime_n/calls)*100,0)\n\n\nif(pct_ontime &gt;= 95){\n  valueBox(value = pct_ontime, icon = \"fa-percent\", \n           caption = \"Percent on time\", color = \"mediumseagreen\") #3CB371\n} else{\nvalueBox(value = pct_ontime, icon = \"fa-percent\", \n         caption = \"Percent on time\", color = \"indianred\")} #CD5C5C\n\n89\n\n\n\n\n\np1 &lt;- ggplot(filter(cb_data, \n              call_wday %in% c(\"Mon\", \"Tue\", \"Wed\", \n                               \"Thu\", \"Fri\"))) +\n  geom_bar(aes(x = call_hour, fill = tech_location)) + \n  facet_grid(call_wday~call_week) +\n  labs(x = \"Hour\", y = \"Count\", fill = \"Type\") +\n  scale_fill_manual(values=c(\"steelblue3\", \"gray60\")) +\n  theme_bw() +\n  theme(legend.position = \"top\")\n\nggplotly(p1) %&gt;% layout(legend = list(orientation = \"h\", \n                                      x = 0.35, y = 1.2)) \n\n\n\n\n# have to manually position the legend\n\n\n\ndaily_vol &lt;- cb_data %&gt;% \n              group_by(call_year, call_month, call_date) %&gt;%\n              summarize(n = n()) %&gt;%\n              ungroup() %&gt;%\n              unite(dttm, call_year, call_month, call_date, \n                    sep = \"-\", remove = TRUE) %&gt;%\n              mutate(dttm = as.Date(dttm))\n\n`summarise()` has grouped output by 'call_year', 'call_month'. You can override\nusing the `.groups` argument.\n\n#dygraph requires ts object\ndaily_vol_ts &lt;- xts(daily_vol$n, order.by = daily_vol$dttm) \n\np2 &lt;- dygraph(daily_vol_ts) %&gt;% \n  dyOptions(colors = \"#4F94CD\", strokeWidth = 2) \np2"
  },
  {
    "objectID": "content/labs/r-labs/dashboard/example.html#row",
    "href": "content/labs/r-labs/dashboard/example.html#row",
    "title": "Critical Result Callback Monitor",
    "section": "",
    "text": "mean_tat &lt;- round(mean(cb_data$call_tat), 0)\nvalueBox(value = mean_tat, icon = \"fa-stopwatch\", \n         caption = \"Mean callback time\", color = \"#708090\")\n\n15\n\n\n\n\ncalls &lt;- cb_data %&gt;% nrow()\nvalueBox(value = calls, icon = \"fa-hashtag\", \n         caption = \"Total calls\", color = \"orange\")\n\n2167\n\n\n\n\nontime_n &lt;- cb_data %&gt;% filter(call_tat &lt;= 30) %&gt;% nrow()\nlate_n &lt;- cb_data %&gt;% filter(call_tat &gt;30) %&gt;% nrow()\npct_ontime &lt;- round((ontime_n/calls)*100,0)\n\n\nif(pct_ontime &gt;= 95){\n  valueBox(value = pct_ontime, icon = \"fa-percent\", \n           caption = \"Percent on time\", color = \"mediumseagreen\") #3CB371\n} else{\nvalueBox(value = pct_ontime, icon = \"fa-percent\", \n         caption = \"Percent on time\", color = \"indianred\")} #CD5C5C\n\n89"
  },
  {
    "objectID": "content/labs/r-labs/dashboard/example.html#row-1",
    "href": "content/labs/r-labs/dashboard/example.html#row-1",
    "title": "Critical Result Callback Monitor",
    "section": "",
    "text": "p1 &lt;- ggplot(filter(cb_data, \n              call_wday %in% c(\"Mon\", \"Tue\", \"Wed\", \n                               \"Thu\", \"Fri\"))) +\n  geom_bar(aes(x = call_hour, fill = tech_location)) + \n  facet_grid(call_wday~call_week) +\n  labs(x = \"Hour\", y = \"Count\", fill = \"Type\") +\n  scale_fill_manual(values=c(\"steelblue3\", \"gray60\")) +\n  theme_bw() +\n  theme(legend.position = \"top\")\n\nggplotly(p1) %&gt;% layout(legend = list(orientation = \"h\", \n                                      x = 0.35, y = 1.2)) \n\n\n\n\n# have to manually position the legend\n\n\n\ndaily_vol &lt;- cb_data %&gt;% \n              group_by(call_year, call_month, call_date) %&gt;%\n              summarize(n = n()) %&gt;%\n              ungroup() %&gt;%\n              unite(dttm, call_year, call_month, call_date, \n                    sep = \"-\", remove = TRUE) %&gt;%\n              mutate(dttm = as.Date(dttm))\n\n`summarise()` has grouped output by 'call_year', 'call_month'. You can override\nusing the `.groups` argument.\n\n#dygraph requires ts object\ndaily_vol_ts &lt;- xts(daily_vol$n, order.by = daily_vol$dttm) \n\np2 &lt;- dygraph(daily_vol_ts) %&gt;% \n  dyOptions(colors = \"#4F94CD\", strokeWidth = 2) \np2"
  },
  {
    "objectID": "content/labs/r-labs/dashboard/example.html#row-2",
    "href": "content/labs/r-labs/dashboard/example.html#row-2",
    "title": "Critical Result Callback Monitor",
    "section": "\n2.1 Row",
    "text": "2.1 Row\n\n2.1.1 Mean callback time\n\ncc_calls &lt;- cb_data %&gt;% filter(tech_location == \"CallCenter\")\nmean_tat_cc &lt;- round(mean(cc_calls$call_tat),0)\n \nvalueBox(value = mean_tat_cc, icon = \"fa-stopwatch\", \n         caption = \"Mean callback time\", color = \"#708090\")\n\n10\n\n\n\n2.1.2 Total calls\n\ncc_calls_n &lt;- cb_data %&gt;% filter(tech_location == \"CallCenter\") %&gt;% nrow()\nvalueBox(value = cc_calls_n, icon = \"fa-hashtag\", \n         caption = \"Total calls\", color = \"orange\")\n\n864\n\n\n\n2.1.3 Percent on Time\n\ncc_ontime_n &lt;- cb_data %&gt;% \n  filter(tech_location == \"CallCenter\", call_tat &lt;= 30) %&gt;% nrow()\ncc_late_n &lt;- cb_data %&gt;% \n  filter(tech_location == \"CallCenter\", call_tat &gt;30) %&gt;% nrow()\ncc_pct_ontime &lt;- round((cc_ontime_n/cc_calls_n)*100,0)\n\n\nif(cc_pct_ontime &gt;= 95){\n  valueBox(value = cc_pct_ontime, icon = \"fa-percent\", \n           caption = \"Percent on time\", color = \"mediumseagreen\") #3CB371\n} else{\nvalueBox(value = cc_pct_ontime, icon = \"fa-percent\", \n         caption = \"Percent on time\", color = \"indianred\")} #CD5C5C\n\n99"
  },
  {
    "objectID": "content/labs/r-labs/dashboard/example.html#row-3",
    "href": "content/labs/r-labs/dashboard/example.html#row-3",
    "title": "Critical Result Callback Monitor",
    "section": "\n2.2 Row",
    "text": "2.2 Row\n\n2.2.1 Overdue Call Details for 2020-07-01 through 2020-07-31\n\ncc_late &lt;- cb_data %&gt;% \n  filter(tech_location == \"CallCenter\", call_tat &gt;30) %&gt;%\n  select(call_tat, accession, pt_type, pt_loc_code, test_code,\n         result_datetime, phoned_title, tech)\n\ndatatable(cc_late, options = list(pageLength = 20, autoWidth = TRUE))\n\n\n\n\n\n\n\n2.2.2 Tech Summary for 2020-07-01 through 2020-07-31\n\np3 &lt;- hcboxplot(\n  outliers = FALSE,\n  x = cc_calls$call_tat,\n  var = cc_calls$tech,\n  name = \"TAT\", \n  color = \"#4F94CD\",\n  lineWidth = 2) %&gt;%\n  hc_title(text = \"\") %&gt;%\n  hc_xAxis(title = list(text = \"Tech Code\")) %&gt;%\n  hc_yAxis(title = list(text = \"Call Time in Min\")) %&gt;%\n  hc_chart(type = \"column\")\n\nWarning: 'hcboxplot' is deprecated.\nUse 'data_to_boxplot' instead.\nSee help(\"Deprecated\")\n\np3"
  },
  {
    "objectID": "content/labs/r-labs/dashboard/example.html#row-4",
    "href": "content/labs/r-labs/dashboard/example.html#row-4",
    "title": "Critical Result Callback Monitor",
    "section": "\n3.1 Row",
    "text": "3.1 Row\n\n3.1.1 Mean callback time\n\nnon_calls &lt;- cb_data %&gt;% filter(tech_location == \"Non-CC\")\nmean_tat_non &lt;- round(mean(non_calls$call_tat),0)\n \nvalueBox(value = mean_tat_non, icon = \"fa-stopwatch\",\n         caption = \"Mean callback time\", color = \"#708090\")\n\n18\n\n\n\n3.1.2 Total calls\n\nnon_calls_n &lt;- cb_data %&gt;% filter(tech_location == \"Non-CC\") %&gt;% nrow()\nvalueBox(value = non_calls_n, icon = \"fa-hashtag\",\n         caption = \"Total calls\", color = \"orange\")\n\n1303\n\n\n\n3.1.3 Percent on Time\n\nnon_ontime_n &lt;- cb_data %&gt;% \n  filter(tech_location == \"Non-CC\", call_tat &lt;= 30) %&gt;% nrow()\nnon_late_n &lt;- cb_data %&gt;% \n  filter(tech_location == \"Non-CC\", call_tat &gt;30) %&gt;% nrow()\nnon_pct_ontime &lt;- round((non_ontime_n/non_calls_n)*100,0)\n\n\nif(non_pct_ontime &gt;= 95){\n  valueBox(value = non_pct_ontime, icon = \"fa-percent\", \n           caption = \"Percent on time\", color = \"mediumseagreen\") #3CB371\n} else{\nvalueBox(value = non_pct_ontime, icon = \"fa-percent\", \n         caption = \"Percent on time\", color = \"indianred\")} #CD5C5C\n\n82"
  },
  {
    "objectID": "content/labs/r-labs/dashboard/example.html#row-5",
    "href": "content/labs/r-labs/dashboard/example.html#row-5",
    "title": "Critical Result Callback Monitor",
    "section": "\n3.2 Row",
    "text": "3.2 Row\n\n3.2.1 Overdue Call Details for 2020-07-01 through 2020-07-31\n\nnon_late &lt;- cb_data %&gt;% \n  filter(tech_location == \"Non-CC\", call_tat &gt;30) %&gt;%\n  select(call_tat, accession, pt_type, pt_loc_code, test_code,\n         result_datetime, phoned_title, tech)\n\ndatatable(non_late, options = list(pageLength = 20, autoWidth = TRUE))\n\n\n\n\n\n\n\n3.2.2 Tech Summary for 2020-07-01 through 2020-07-31\n\np4 &lt;- hcboxplot(\n  outliers = FALSE,\n  x = non_calls$call_tat,\n  var = non_calls$tech,\n  name = \"TAT\", \n  color = \"#4F94CD\",\n  lineWidth = 2) %&gt;%\n  hc_title(text = \"\") %&gt;%\n  hc_xAxis(title = list(text = \"Tech Code\")) %&gt;%\n  hc_yAxis(title = list(text = \"Call Time in Min\")) %&gt;%\n  hc_chart(type = \"column\")\n\nWarning: 'hcboxplot' is deprecated.\nUse 'data_to_boxplot' instead.\nSee help(\"Deprecated\")\n\np4"
  },
  {
    "objectID": "content/labs/r-labs/dashboard/flexdashboard.html",
    "href": "content/labs/r-labs/dashboard/flexdashboard.html",
    "title": "ggplotly: various examples",
    "section": "",
    "text": "# This example modifies code from Hadley Wickham (https://gist.github.com/hadley/233134)\n# It also uses data from Nathan Yau's flowingdata site (http://flowingdata.com/)\nunemp &lt;- read.csv(\"http://datasets.flowingdata.com/unemployment09.csv\")\nnames(unemp) &lt;- c(\"id\", \"state_fips\", \"county_fips\", \"name\", \"year\", \n                  \"?\", \"?\", \"?\", \"rate\")\nunemp$county &lt;- tolower(gsub(\" County, [A-Z]{2}\", \"\", unemp$name))\nunemp$state &lt;- gsub(\"^.*([A-Z]{2}).*$\", \"\\\\1\", unemp$name)\ncounty_df &lt;- map_data(\"county\")\nnames(county_df) &lt;- c(\"long\", \"lat\", \"group\", \"order\", \"state_name\", \"county\")\ncounty_df$state &lt;- state.abb[match(county_df$state_name, tolower(state.name))]\ncounty_df$state_name &lt;- NULL\nstate_df &lt;- map_data(\"state\")\nchoropleth &lt;- merge(county_df, unemp, by = c(\"state\", \"county\"))\nchoropleth &lt;- choropleth[order(choropleth$order), ]\nchoropleth$rate_d &lt;- cut(choropleth$rate, breaks = c(seq(0, 10, by = 2), 35))\n\n# provide a custom tooltip to plotly with the county name and actual rate\nchoropleth$text &lt;- with(choropleth, paste0(\"County: \", name, \"Rate: \", rate))\np &lt;- ggplot(choropleth, aes(long, lat, group = group)) +\n  geom_polygon(aes(fill = rate_d, text = text), \n               colour = alpha(\"white\", 1/2), size = 0.2) + \n  geom_polygon(data = state_df, colour = \"white\", fill = NA) +\n  scale_fill_brewer(palette = \"PuRd\") + theme_void()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning in geom_polygon(aes(fill = rate_d, text = text), colour =\nalpha(\"white\", : Ignoring unknown aesthetics: text\n\n# just show the text aesthetic in the tooltip\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n\n\ncrimes &lt;- data.frame(state = tolower(rownames(USArrests)), USArrests)\ncrimesm &lt;- tidyr::gather(crimes, variable, value, -state)\nstates_map &lt;- map_data(\"state\")\ng &lt;- ggplot(crimesm, aes(map_id = state)) +\n  geom_map(aes(fill = value), map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  facet_wrap( ~ variable) + theme_void()\nggplotly(g)"
  },
  {
    "objectID": "content/labs/r-labs/dashboard/flexdashboard.html#row",
    "href": "content/labs/r-labs/dashboard/flexdashboard.html#row",
    "title": "ggplotly: various examples",
    "section": "",
    "text": "# This example modifies code from Hadley Wickham (https://gist.github.com/hadley/233134)\n# It also uses data from Nathan Yau's flowingdata site (http://flowingdata.com/)\nunemp &lt;- read.csv(\"http://datasets.flowingdata.com/unemployment09.csv\")\nnames(unemp) &lt;- c(\"id\", \"state_fips\", \"county_fips\", \"name\", \"year\", \n                  \"?\", \"?\", \"?\", \"rate\")\nunemp$county &lt;- tolower(gsub(\" County, [A-Z]{2}\", \"\", unemp$name))\nunemp$state &lt;- gsub(\"^.*([A-Z]{2}).*$\", \"\\\\1\", unemp$name)\ncounty_df &lt;- map_data(\"county\")\nnames(county_df) &lt;- c(\"long\", \"lat\", \"group\", \"order\", \"state_name\", \"county\")\ncounty_df$state &lt;- state.abb[match(county_df$state_name, tolower(state.name))]\ncounty_df$state_name &lt;- NULL\nstate_df &lt;- map_data(\"state\")\nchoropleth &lt;- merge(county_df, unemp, by = c(\"state\", \"county\"))\nchoropleth &lt;- choropleth[order(choropleth$order), ]\nchoropleth$rate_d &lt;- cut(choropleth$rate, breaks = c(seq(0, 10, by = 2), 35))\n\n# provide a custom tooltip to plotly with the county name and actual rate\nchoropleth$text &lt;- with(choropleth, paste0(\"County: \", name, \"Rate: \", rate))\np &lt;- ggplot(choropleth, aes(long, lat, group = group)) +\n  geom_polygon(aes(fill = rate_d, text = text), \n               colour = alpha(\"white\", 1/2), size = 0.2) + \n  geom_polygon(data = state_df, colour = \"white\", fill = NA) +\n  scale_fill_brewer(palette = \"PuRd\") + theme_void()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning in geom_polygon(aes(fill = rate_d, text = text), colour =\nalpha(\"white\", : Ignoring unknown aesthetics: text\n\n# just show the text aesthetic in the tooltip\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n\n\ncrimes &lt;- data.frame(state = tolower(rownames(USArrests)), USArrests)\ncrimesm &lt;- tidyr::gather(crimes, variable, value, -state)\nstates_map &lt;- map_data(\"state\")\ng &lt;- ggplot(crimesm, aes(map_id = state)) +\n  geom_map(aes(fill = value), map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  facet_wrap( ~ variable) + theme_void()\nggplotly(g)"
  },
  {
    "objectID": "content/labs/r-labs/dashboard/flexdashboard.html#row-1",
    "href": "content/labs/r-labs/dashboard/flexdashboard.html#row-1",
    "title": "ggplotly: various examples",
    "section": "\n2 Row",
    "text": "2 Row\n\n2.1 Faithful Eruptions\n\nm &lt;- ggplot(faithful, aes(x = eruptions, y = waiting)) +\n  stat_density_2d() + xlim(0.5, 6) + ylim(40, 110)\nggplotly(m)\n\n\n\n\n\n\n2.2 Faithful Eruptions (polygon)\n\nm &lt;- ggplot(faithful, aes(x = eruptions, y = waiting)) +\n  stat_density_2d(aes(fill = ..level..), geom = \"polygon\") + \n  xlim(0.5, 6) + ylim(40, 110)\nggplotly(m)\n\nWarning: The dot-dot notation (`..level..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(level)` instead.\nℹ The deprecated feature was likely used in the ggplot2 package.\n  Please report the issue at &lt;https://github.com/tidyverse/ggplot2/issues&gt;.\n\n\n\n\n\n\n\n2.3 Faithful Eruptions (hex)\n\nm &lt;- ggplot(faithful, aes(x = eruptions, y = waiting)) + geom_hex() \nggplotly(m)"
  },
  {
    "objectID": "content/labs/r-labs/diagrams/index.html",
    "href": "content/labs/r-labs/diagrams/index.html",
    "title": "Lab 01 - Introduce Yourself",
    "section": "",
    "text": "At the end of this Lab, we will:\n\nhave installed R and RStudio on our machines\nunderstood how to add additional R-packages for specific features and graphic capability\nrun code within RStudio and interpret the results\nhave learnt to look for help within R and RStudio"
  },
  {
    "objectID": "content/labs/r-labs/diagrams/index.html#Check-In-R",
    "href": "content/labs/r-labs/diagrams/index.html#Check-In-R",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n3.1 Check in",
    "text": "3.1 Check in\nLaunch R by clicking this logo. You should see one console with a command line interpreter. Try typing 2 + 2 and check !\nClose R."
  },
  {
    "objectID": "content/labs/r-labs/diagrams/index.html#Check-In-RStudio",
    "href": "content/labs/r-labs/diagrams/index.html#Check-In-RStudio",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n4.1 Check in",
    "text": "4.1 Check in\nLaunch RStudio. You should get a window similar to the screenshot you see here, but yours will be empty. Look at the bottom left pane: this is the same console window you saw when you opened R in step @Check-In-R\n\nPlace your cursor where you see &gt; and type x &lt;- 2 + 2 again hit enter or return, then type x, and hit enter/return again.\nIf [1] 4 prints to the screen, you have successfully installed R and RStudio, and you can move onto installing packages."
  },
  {
    "objectID": "content/labs/r-labs/diagrams/index.html#save-and-share",
    "href": "content/labs/r-labs/diagrams/index.html#save-and-share",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n7.1 Save and share",
    "text": "7.1 Save and share\nSave your work so you can share your favorite plot with us. You will not like the looks of your plot if you mouse over to Export and save it. Instead, use ggplot2’s command for saving a plot with sensible defaults:\n\nCodehelp(ggsave)\n\n\n\nCodeggsave(\"file_name_here.pdf\", plot) # please make the filename unique!\n\n\nUpload this exported plot to Teams -&gt; Assignments.\nBefore you do that, check that you can submit stuff/assignments on the MLS by uploading a cat picture 🐈 first, especially if you are an ailurophile like me. (Acceptable Breeds: Scottish Folds or Maine Coons)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html",
    "href": "content/labs/r-labs/graphics/colors.html",
    "title": "Lab 05: Colors with Penguins",
    "section": "",
    "text": "knitr::opts_chunk$set(error = TRUE, comment = NA, warning = FALSE, errors = FALSE, message = FALSE, tidy = FALSE, cache = FALSE, fig.path= \"03-figs/\")\n\nlibrary(tidyverse) # Manage data\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.0\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(scales) # Create special ( % or $ ) scales\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n#\nlibrary(palmerpenguins) # source of our data\n#\nlibrary(RColorBrewer) # Colour Palettes\nlibrary(wesanderson) # Colour Palettes\n#library(gameofthrones) # You all know this!\n#\nlibrary(paletteer) # Colour Palettes\nlibrary(colorspace) # Colour Palettes\n#\nlibrary(patchwork) # arranges plots on Row-Col \nlibrary(ggthemes)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#iconify-noto-v1-package-setting-up-r-packages",
    "href": "content/labs/r-labs/graphics/colors.html#iconify-noto-v1-package-setting-up-r-packages",
    "title": "Lab 05: Colors with Penguins",
    "section": "",
    "text": "knitr::opts_chunk$set(error = TRUE, comment = NA, warning = FALSE, errors = FALSE, message = FALSE, tidy = FALSE, cache = FALSE, fig.path= \"03-figs/\")\n\nlibrary(tidyverse) # Manage data\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.0\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(scales) # Create special ( % or $ ) scales\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n#\nlibrary(palmerpenguins) # source of our data\n#\nlibrary(RColorBrewer) # Colour Palettes\nlibrary(wesanderson) # Colour Palettes\n#library(gameofthrones) # You all know this!\n#\nlibrary(paletteer) # Colour Palettes\nlibrary(colorspace) # Colour Palettes\n#\nlibrary(patchwork) # arranges plots on Row-Col \nlibrary(ggthemes)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "href": "content/labs/r-labs/graphics/colors.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n2  Introduction",
    "text": "2  Introduction\nThis Quarto document is part of my Workshop in R. The material is based on A Layered Grammar of Graphics by Hadley Wickham. The course is meant for First Year students pursuing a Degree in Art and Design. The intent is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll Quarto files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#goals",
    "href": "content/labs/r-labs/graphics/colors.html#goals",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n3 Goals",
    "text": "3 Goals\n\n(Re)Understand different kinds of data variables\nAppreciate how they can be identified based on the Interrogative Pronouns they answer to\nUnderstand how each kind of variable lends itself to a specific choice of colour scale in the data visualization."
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#pedagogical-note",
    "href": "content/labs/r-labs/graphics/colors.html#pedagogical-note",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n4 Pedagogical Note",
    "text": "4 Pedagogical Note\nThe method followed will be based on PRIMM:\n\n\nPREDICT Inspect the code and guess at what the code might do, write predictions\n\n\nRUN the code provided and check what happens\n\nINFER what the parameters of the code do and write comments to explain. What bells and whistles can you see?\n\nMODIFY the parameters code provided to understand the options available. Write comments to show what you have aimed for and achieved.\n\nMAKE : take an idea/concept of your own, and graph it.\n\nIn the following, there is some boiler plate code demonstrating the use of colour palettes in R. There are places where YOUR TURN is mention; copy and play with the boiler plate code to see what happens !"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#data",
    "href": "content/labs/r-labs/graphics/colors.html#data",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n5 Data",
    "text": "5 Data\nWe will use the penguins dataset built into the palmerpenguins package. Your should try other datasets too!\nHere is a glimpse of the data:\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\nNote that the unit of observation here is one-row-per-penguin.\nVariables you need for this lab:"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#colour-vs-fill-aesthetic",
    "href": "content/labs/r-labs/graphics/colors.html#colour-vs-fill-aesthetic",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n6 Colour vs fill aesthetic",
    "text": "6 Colour vs fill aesthetic\nFill and colour scales in ggplot2 can use the same palettes. Some shapes such as lines only accept the colour aesthetic, while others, such as polygons, accept both colour and fill aesthetics. In the latter case, the colour refers to the border of the shape, and the fill to the interior.\n\n## A look at all 25 symbols\ndf &lt;- data.frame(x = 1:5,\n                 y = rep(rev(seq(0, 24, by = 5)), each = 5),\n                 z = 1:25)\ns &lt;- ggplot(df, aes(x = x, y = y)) +\n  geom_text(aes(label = z, y = y - 1)) +\n  theme_void()\ns + geom_point(aes(shape = z), size = 4) + scale_shape_identity()\n\n\n\n\nAll symbols have a foreground colour, so if we add color = \"navy\", they all are affected.\n\ns + geom_point(aes(shape = z), size = 4, colour = \"blue\")  + scale_shape_identity()\n\n\n\n\nWhile all symbols have a foreground colour, symbols 21-25 also take a background colour (fill). So if we add fill = \"orchid\", only the last row of symbols are affected.\n\ns + geom_point(aes(shape = z), size = 4, colour = \"blue\", fill = \"orchid\")  + scale_shape_identity()"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#discrete-vs-continuous-variables",
    "href": "content/labs/r-labs/graphics/colors.html#discrete-vs-continuous-variables",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n7 Discrete vs continuous variables",
    "text": "7 Discrete vs continuous variables\nWHAT IS THE DIFFERENCE BETWEEN CATEGORICAL, ORDINAL AND INTERVAL VARIABLES?\nIn order to use color with your data, most importantly, you need to know if you’re dealing with discrete or continuous variables."
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#some-colour-palette-packages-in-r",
    "href": "content/labs/r-labs/graphics/colors.html#some-colour-palette-packages-in-r",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n8 Some Colour Palette Packages in R",
    "text": "8 Some Colour Palette Packages in R\nWe have the following example packages that offer palettes in R:\n\nRColorBrewer\nwesanderson\npaletteer\ncolorspace\n\nSee Appendix for a detailed graphical analysis of these palette packages."
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#colour-palette-types",
    "href": "content/labs/r-labs/graphics/colors.html#colour-palette-types",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n9 Colour Palette Types",
    "text": "9 Colour Palette Types\nThese palettes can be:\n\nSequential (type = “seq”) palettes are suited to ordered data that progress from low to high. Lightness steps dominate the look of these schemes, with light colors for low data values to dark colors for high data values. (for numerical data, that are ordered)\n\n\nDiverging (type = “div”) palettes put equal emphasis on mid-range critical values and extremes at both ends of the data range. The critical class or break in the middle of the legend is emphasized with light colors and low and high extremes are emphasized with dark colors that have contrasting hues.(for numerical data that can be positive or negative, often representing deviations from some norm or baseline)\n\n\nQualitative (type = “qual”) palettes do not imply magnitude differences between legend classes, and hues are used to create the primary visual differences between classes. Qualitative schemes are best suited to representing nominal or categorical data. (for qualitative unordered data)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#create-a-simple-set-of-scatter-plots",
    "href": "content/labs/r-labs/graphics/colors.html#create-a-simple-set-of-scatter-plots",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n10 Create a simple set of scatter plots",
    "text": "10 Create a simple set of scatter plots\nWe will create simple base plots in ggplot and see how we may alter the colour scales using palettes.\n\nnames(penguins)\n\n[1] \"species\"           \"island\"            \"bill_length_mm\"   \n[4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n[7] \"sex\"               \"year\"             \n\n\n\np1 &lt;- penguins %&gt;% \n  drop_na() %&gt;% \n  # pipe data into ggplot\n  # after removing data rows that have missing ( NA ) values\n  ggplot(aes(y = body_mass_g, x = flipper_length_mm, \n           color = species # COLOUR = DISCRETE/QUAL VARIABLE\n           )) +\n           geom_point() + \n           labs(title = \"Default Colours in ggplot\", \n                subtitle = \"P1: DISCRETE/QUAL Colour Palette\")\n\n\np2 &lt;- \npenguins %&gt;% \n  drop_na() %&gt;% \n  # pipe the data into ggplot, \n  # after removing data rows that have missing ( NA ) values\n  ggplot(aes(y = body_mass_g, x = flipper_length_mm, \n           color = bill_length_mm # COLOUR = CONT/QUANT VARIABLE\n           )) +\n           geom_point() + \n           labs(title = \"Default Colours in ggplot\", \n                subtitle = \"P2: CONTINUOUS/QUANT Colour Palette\")\n\np1\n\n\n\np2\n\n\n\n\nNote that these use the default colours in R."
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#colours-for-discrete-qual-variables",
    "href": "content/labs/r-labs/graphics/colors.html#colours-for-discrete-qual-variables",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n11 Colours for Discrete (QUAL) Variables",
    "text": "11 Colours for Discrete (QUAL) Variables\nThe commands below are used to fill colours based on Qualitative Variables:\n\nscale_colour/fill_discrete\n\nscale_colour/fill_brewer # RColorBrewer\n….\n\nNow to use these!"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#plotting-colours-based-on-discrete-variables",
    "href": "content/labs/r-labs/graphics/colors.html#plotting-colours-based-on-discrete-variables",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n12 Plotting Colours based on Discrete Variables",
    "text": "12 Plotting Colours based on Discrete Variables"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#discrete-n-colour-palettes-from-rcolorbrewer",
    "href": "content/labs/r-labs/graphics/colors.html#discrete-n-colour-palettes-from-rcolorbrewer",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n13 Discrete n-Colour palettes from RColorBrewer\n",
    "text": "13 Discrete n-Colour palettes from RColorBrewer\n\n\nRColorBrewer::brewer.pal.info\n\n\n\n  \n\n\nRColorBrewer::display.brewer.all()\n\n\n\n\n\np1 +\n  # default palette = \"Blues\"\n  scale_colour_brewer() +\n  labs(title = \"Brewer Palette = Blues\")\n\n\n\np1 +\n  scale_color_brewer(palette = \"Spectral\") +\n  labs(title = \"Brewer Palette = Spectral\")"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#discrete-colour-scales-using-wesanderson-palettes",
    "href": "content/labs/r-labs/graphics/colors.html#discrete-colour-scales-using-wesanderson-palettes",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n14 Discrete Colour scales using wesanderson palettes",
    "text": "14 Discrete Colour scales using wesanderson palettes\n\nwesanderson::wes_palettes %&gt;% names()\n\n [1] \"BottleRocket1\"  \"BottleRocket2\"  \"Rushmore1\"      \"Rushmore\"      \n [5] \"Royal1\"         \"Royal2\"         \"Zissou1\"        \"Darjeeling1\"   \n [9] \"Darjeeling2\"    \"Chevalier1\"     \"FantasticFox1\"  \"Moonrise1\"     \n[13] \"Moonrise2\"      \"Moonrise3\"      \"Cavalcanti1\"    \"GrandBudapest1\"\n[17] \"GrandBudapest2\" \"IsleofDogs1\"    \"IsleofDogs2\"   \n\n\n\np1 +\n  scale_colour_discrete(type = wes_palette(name = \"GrandBudapest1\",\n                                           n = 3)) +\n  labs(title = \"Wes Anderson Palette: GrandBudapest\")\n\n\n\n# We can also specify colour codes ourselves with scale_x_discrete.\n# Use argument \"values\" instead of \"type\"\nmanual_colours &lt;- c(\"#afc4b8\", \"#f1a4b2\", \"#ffb1e1\") \nmanual_colours\n\n[1] \"#afc4b8\" \"#f1a4b2\" \"#ffb1e1\"\n\np1 +\n  scale_colour_manual(values =  manual_colours) +\n  labs(title = \"Manual Colours\")"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#discrete-n-colour-palettes-from-rcolorbrewer-1",
    "href": "content/labs/r-labs/graphics/colors.html#discrete-n-colour-palettes-from-rcolorbrewer-1",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n15 Discrete n-Colour palettes from RColorBrewer\n",
    "text": "15 Discrete n-Colour palettes from RColorBrewer\n\n\n# scale_x_brewer() for DISCRETE data\np1 +\n  scale_colour_brewer(palette = \"Spectral\") +\n  \n  labs(title = \"RColorBrewer Palette = Spectral\")"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#discrete-colour-scales-using-paletteer-palettes",
    "href": "content/labs/r-labs/graphics/colors.html#discrete-colour-scales-using-paletteer-palettes",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n16 Discrete Colour scales using paletteer palettes",
    "text": "16 Discrete Colour scales using paletteer palettes\n\npalettes_d_names\n\n\n\n  \n\n\npalettes_dynamic_names\n\n\n\n  \n\n\npaletteer_d(\"dutchmasters::pearl_earring\")\n\n&lt;colors&gt;\n#A65141FF #E7CDC2FF #80A0C7FF #394165FF #FCF9F0FF #B1934AFF #DCA258FF #100F14FF #8B9DAFFF #EEDA9DFF #E8DCCFFF \n\npaletteer_dynamic(\"ggthemes_ptol::qualitative\", n = 3)\n\n&lt;colors&gt;\n#4477AAFF #DDCC77FF #CC6677FF \n\np1 +\n  scale_colour_paletteer_d(\"ggthemes_ptol::qualitative\", \n                           dynamic = TRUE) +\n  \n  labs(title = \"ggThemes Palette: Qualitative\", \n          subtitle = \"\")\n\n\n\n# I like Vermeer's \"Girl with the Pearl Earring\"!\np1 +\n  scale_colour_paletteer_d(\"dutchmasters::pearl_earring\",\n                           dynamic = FALSE) +\n  \n  labs(title = \"Palettes from `paletteer`\", \n          subtitle = \" Palette from Vermeer: Girl with Pearl Earring\")"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#colours-for-continuous-quant-variables",
    "href": "content/labs/r-labs/graphics/colors.html#colours-for-continuous-quant-variables",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n17 Colours for Continuous (QUANT) Variables",
    "text": "17 Colours for Continuous (QUANT) Variables\nThe commands below are used to fill colours based on Quantitative Variables:\n\n\nscale_colour/fill_gradient (Two colour gradient)\n\nscale_colour/fill_gradient2 (Three colour gradient)\n\nscale_colour/fill_gradientn (Specify Palette, from other packages also, like wesanderson )\n\nscale_colour/fill_distiller (Palettes from RColorBrewer)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#plotting-colours-based-on-continuous-variables",
    "href": "content/labs/r-labs/graphics/colors.html#plotting-colours-based-on-continuous-variables",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n18 Plotting Colours based on Continuous Variables",
    "text": "18 Plotting Colours based on Continuous Variables"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#continuous-two-colour-gradients",
    "href": "content/labs/r-labs/graphics/colors.html#continuous-two-colour-gradients",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n19 Continuous Two Colour Gradients",
    "text": "19 Continuous Two Colour Gradients\nCreates a pallete containing continuous shades between two colours:\n\np2 +\n    scale_color_gradient(\n      low = \"yellow\", # Play with this in the chunk below\n      high = \"purple\") + # Play with this in the chnk below\n  \n  labs(title = \"Two Colour Gradients\",\n          subtitle = \"P2: Continuous 2-Colour Pallete\")"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#continuous-three-colour-gradients",
    "href": "content/labs/r-labs/graphics/colors.html#continuous-three-colour-gradients",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n20 Continuous Three Colour Gradients",
    "text": "20 Continuous Three Colour Gradients\nSometimes we want a palette this way: a midpoint colour, and colours for the two extremes of a continuous variable:\n\ncolour_midpoint &lt;- mean(penguins$bill_length_mm, \n                         na.rm = TRUE) # remove missing values\n# Struggled all morning on 22 Aug 2020 to get at this ;-D\n\n# Play with the function: 0/mean/median/mode/max/min\n\np2 +\n  scale_colour_gradient2(\n  low = \"brown\", # Play with this in the chunk below\n  mid = \"white\", # Play with this in the chunk below\n  high = \"purple\", # Play with this in the chunk below\n  midpoint = colour_midpoint, # see above\n  space = \"Lab\", # don't mess with this!\n  na.value = \"grey50\")  +\n  labs(title = \"Three colour continuous gradient\", \n          subtitle = \"Mid Colour mapped to midpoint of data variable\",\n          caption = \"Colours inspired by my favourite cocker spaniel, Lord Chestnut\") # Play with these"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#continuous-n-colour-gradients---grdevices-package",
    "href": "content/labs/r-labs/graphics/colors.html#continuous-n-colour-gradients---grdevices-package",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n21 Continuous n-Colour Gradients - grDevices package",
    "text": "21 Continuous n-Colour Gradients - grDevices package\n\n# grDevices Palettes\np2 +\n  scale_colour_gradientn(\n    colours = terrain.colors(10)) +\n  # Try these:\n  # heat.colors() / topo.colors() / cm.colors() / rainbow()\n  \n  labs(title = \"N-colour continuous gradients\", \n          subtitle = \"Palettes from grDevices\",\n          caption = \"Palette: terrain.colors\")"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#continuous-n-colour-gradients---wesanderson-palettes",
    "href": "content/labs/r-labs/graphics/colors.html#continuous-n-colour-gradients---wesanderson-palettes",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n22 Continuous n-Colour Gradients - wesanderson Palettes",
    "text": "22 Continuous n-Colour Gradients - wesanderson Palettes\n\nwes_palettes\n\n$BottleRocket1\n[1] \"#A42820\" \"#5F5647\" \"#9B110E\" \"#3F5151\" \"#4E2A1E\" \"#550307\" \"#0C1707\"\n\n$BottleRocket2\n[1] \"#FAD510\" \"#CB2314\" \"#273046\" \"#354823\" \"#1E1E1E\"\n\n$Rushmore1\n[1] \"#E1BD6D\" \"#EABE94\" \"#0B775E\" \"#35274A\" \"#F2300F\"\n\n$Rushmore\n[1] \"#E1BD6D\" \"#EABE94\" \"#0B775E\" \"#35274A\" \"#F2300F\"\n\n$Royal1\n[1] \"#899DA4\" \"#C93312\" \"#FAEFD1\" \"#DC863B\"\n\n$Royal2\n[1] \"#9A8822\" \"#F5CDB4\" \"#F8AFA8\" \"#FDDDA0\" \"#74A089\"\n\n$Zissou1\n[1] \"#3B9AB2\" \"#78B7C5\" \"#EBCC2A\" \"#E1AF00\" \"#F21A00\"\n\n$Darjeeling1\n[1] \"#FF0000\" \"#00A08A\" \"#F2AD00\" \"#F98400\" \"#5BBCD6\"\n\n$Darjeeling2\n[1] \"#ECCBAE\" \"#046C9A\" \"#D69C4E\" \"#ABDDDE\" \"#000000\"\n\n$Chevalier1\n[1] \"#446455\" \"#FDD262\" \"#D3DDDC\" \"#C7B19C\"\n\n$FantasticFox1\n[1] \"#DD8D29\" \"#E2D200\" \"#46ACC8\" \"#E58601\" \"#B40F20\"\n\n$Moonrise1\n[1] \"#F3DF6C\" \"#CEAB07\" \"#D5D5D3\" \"#24281A\"\n\n$Moonrise2\n[1] \"#798E87\" \"#C27D38\" \"#CCC591\" \"#29211F\"\n\n$Moonrise3\n[1] \"#85D4E3\" \"#F4B5BD\" \"#9C964A\" \"#CDC08C\" \"#FAD77B\"\n\n$Cavalcanti1\n[1] \"#D8B70A\" \"#02401B\" \"#A2A475\" \"#81A88D\" \"#972D15\"\n\n$GrandBudapest1\n[1] \"#F1BB7B\" \"#FD6467\" \"#5B1A18\" \"#D67236\"\n\n$GrandBudapest2\n[1] \"#E6A0C4\" \"#C6CDF7\" \"#D8A499\" \"#7294D4\"\n\n$IsleofDogs1\n[1] \"#9986A5\" \"#79402E\" \"#CCBA72\" \"#0F0D0E\" \"#D9D0D3\" \"#8D8680\"\n\n$IsleofDogs2\n[1] \"#EAD3BF\" \"#AA9486\" \"#B6854D\" \"#39312F\" \"#1C1718\"\n\nnames(wes_palettes)\n\n [1] \"BottleRocket1\"  \"BottleRocket2\"  \"Rushmore1\"      \"Rushmore\"      \n [5] \"Royal1\"         \"Royal2\"         \"Zissou1\"        \"Darjeeling1\"   \n [9] \"Darjeeling2\"    \"Chevalier1\"     \"FantasticFox1\"  \"Moonrise1\"     \n[13] \"Moonrise2\"      \"Moonrise3\"      \"Cavalcanti1\"    \"GrandBudapest1\"\n[17] \"GrandBudapest2\" \"IsleofDogs1\"    \"IsleofDogs2\"   \n\n\n\np2 +\n    scale_colour_gradientn(\n      colors = wes_palette(name = \"GrandBudapest1\", \n                           n = 4), # Keep an eye on \"n\".\n      na.value = \"grey\") +\n  # Try these:\n  # \"BottleRocket1\"  \"BottleRocket2\"  \"Rushmore1\"\n  # \"Rushmore\"       \"Royal1\"         \"Royal2\"\n  # \"Zissou1\"        \"Darjeeling1\"    \"Darjeeling2\"   \n  # \"Chevalier1\"     \"FantasticFox1\"  \"Moonrise1\"     \n  # \"Moonrise2\"      \"Moonrise3\"      \"Cavalcanti1\"   \n  # \"GrandBudapest1\" \"GrandBudapest2\" \"IsleofDogs1\"   \n  # \"IsleofDogs2\"   \n  # Keep an eye on \"n\".\n  \n  labs(title = \"N-colour continuous gradients\", \n       subtitle = \"Palettes from wesanderson\",\n       caption = \"Palette: GrandBudapest1\") # Change this caption based on palette choice"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#continuous-n-colour-palettes-from-rcolorbrewer",
    "href": "content/labs/r-labs/graphics/colors.html#continuous-n-colour-palettes-from-rcolorbrewer",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n23 Continuous n-Colour palettes from RColorBrewer\n",
    "text": "23 Continuous n-Colour palettes from RColorBrewer\n\nRecall Palette types\n\n\nseq for continuous data mapped to colour\n\nqual for categorical data mapped to colour ( discrete)\n\ndiv continuous data mapped to colour, that has pos and neg extremes from a middle value\n\n\nbrewer.pal.info\n\n\n\n  \n\n\n\n\n# scale_color_distiller() and scale_fill_distiller() \n# are used to apply the ColorBrewer colour scales \n# to continuous data.\n\np2 +\n  scale_colour_distiller(\n    palette = \"YlGnBu\") + # Play with this palette\n  \n  labs(title = \"RColorBrewer Palette\")"
  },
  {
    "objectID": "content/labs/r-labs/graphics/colors.html#continuous-colour-scales-using-paletteer-palettes",
    "href": "content/labs/r-labs/graphics/colors.html#continuous-colour-scales-using-paletteer-palettes",
    "title": "Lab 05: Colors with Penguins",
    "section": "\n24 Continuous Colour scales using paletteer palettes",
    "text": "24 Continuous Colour scales using paletteer palettes\nThis palette seems to have everything accessible in a simple way! NOTE: In order to access some palettes in paletteer, you may be asked to install other packages. E.g. harrypotter or scico. These need not be brought into your session using library() but are accessed directly by paletteer which is very convenient!!\n\n# What continuous palettes are there in paletteer?\npaletteer::palettes_c_names\n\n\n\n  \n\n\n\nOK, one of the Games of Thrones Palettes, and Harry Potter!\n\np2 +\n  scale_colour_paletteer_c(\"gameofthrones::jon_snow\") +\n  labs(title = \"Using Paletteer\",\n       subtitle = \"Continuous Palette-Game of Thrones: Jon Snow\",\n       caption = \"Oh you awful Srishti people...\") +\n  \n  # Harry Potter Gryffindor Palette.\n  # Will ask for `harrypotter` package to be installed. Say yes!\n  p2 +\n  scale_colour_paletteer_c(\"harrypotter::gryffindor\") +\n  labs(title = \"Using Paletteer\",\n       subtitle = \"Continuous Palette-Harry Potter:Gryffindor\")\n\nError in gen_fun(name = palette[2], n = n): could not find function \"gen_fun\""
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html",
    "href": "content/labs/r-labs/graphics/index.html",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "",
    "text": "This RMarkdown document is part of my course on R for Artists and Designers. The material is based on A Layered Grammar of Graphics by Hadley Wickham. The intent of this Course is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll RMarkdown files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#introduction",
    "href": "content/labs/r-labs/graphics/index.html#introduction",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "",
    "text": "This RMarkdown document is part of my course on R for Artists and Designers. The material is based on A Layered Grammar of Graphics by Hadley Wickham. The intent of this Course is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll RMarkdown files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#goals",
    "href": "content/labs/r-labs/graphics/index.html#goals",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n2 Goals",
    "text": "2 Goals\nAt the end of this Lab session, we should: - know the types and structures of tidy data and be able to work with them - be able to create data visualizations using ggplot - Understand aesthetics and scales in `ggplot"
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#pedagogical-note",
    "href": "content/labs/r-labs/graphics/index.html#pedagogical-note",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n3 Pedagogical Note",
    "text": "3 Pedagogical Note\nThe method followed will be based on PRIMM:\n\n\nPREDICT Inspect the code and guess at what the code might do, write predictions\n\n\nRUN the code provided and check what happens\n\nINFER what the parameters of the code do and write comments to explain. What bells and whistles can you see?\n\nMODIFY the parameters code provided to understand the options available. Write comments to show what you have aimed for and achieved.\n\nMAKE : take an idea/concept of your own, and graph it."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#set-up",
    "href": "content/labs/r-labs/graphics/index.html#set-up",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n4 Set Up",
    "text": "4 Set Up\nThe setup code chunk below brings into our coding session R packages that provide specific computational abilities and also datasets which we can use.\nTo reiterate: Packages and datasets are not the same thing !! Packages are (small) collections of programs. Datasets are just….information."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#a-teaser-from-john-snow",
    "href": "content/labs/r-labs/graphics/index.html#a-teaser-from-john-snow",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n5 A Teaser from John Snow",
    "text": "5 A Teaser from John Snow"
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#review-of-tidy-data",
    "href": "content/labs/r-labs/graphics/index.html#review-of-tidy-data",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n6 Review of Tidy Data",
    "text": "6 Review of Tidy Data\n“Tidy Data” is an important way of thinking about what data typically look like in R. Let’s fetch a figure from the web to show the (preferred) structure of data in R. (The syntax to bring in a web-figure is ![caption](url))\n The three features described in the figure above define the nature of tidy data:\n\n\nVariables in Columns\n\n\nObservations in Rows and\n\n\nMeasurements in Cells.\n\nData are imagined to be resulting from an experiment. Each variable represents a parameter/aspect in the experiment. Each row represents an additional datum of measurement. A cell is a single measurement on a single parameter(column) in a single observation(row)."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#kinds-of-variables",
    "href": "content/labs/r-labs/graphics/index.html#kinds-of-variables",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n7 Kinds of Variables",
    "text": "7 Kinds of Variables\nKinds of Variable are defined by the kind of questions they answer to:\n\nWhat/Who/Where? -&gt; Some kind of Name. Categorical variable\nWhat Kind? How? -&gt; Some kind of “Type”. Factor variable\nHow Many? How large? -&gt; Some kind of Quantity. Numerical variable. Most Figures in R are computed with variables, and therefore, with columns."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#interrogations-and-graphs",
    "href": "content/labs/r-labs/graphics/index.html#interrogations-and-graphs",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n8 Interrogations and Graphs",
    "text": "8 Interrogations and Graphs\nCreating graphs from data is an act of asking questions and viewing answers in a geometric way. Let us write some simple English descriptions of measures and visuals and see what commands they use in R.\n\n8.1 Components of the layered grammar of graphics\nLayers are used to create the objects on a plot. They are defined by five basic parts:\n\nData (What dataset/spreadsheet am I using?)\nMapping (What does each column do in my graph?)\nStatistical transformation (stat) (Do I have count something first?)\nGeometric object (geom) (What shape, colour, size…do I want?)\nPosition adjustment (position) (Where do I want it on the graph?)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#data",
    "href": "content/labs/r-labs/graphics/index.html#data",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n9 Data",
    "text": "9 Data\nWe will use “real world” data. Let’s use the penguins dataset in the palmerpenguins package. Run ?penguins in the console to get more information about this dataset.\n\n9.1 Head\n\n\n\n\n  \n\n\n\n\n9.2 Tail\n\n\n\n\n  \n\n\n\n\n9.3 Dim\n\n\n[1] 344   8\n\n\nSo we know what our data looks like. We pass this data to ggplot use to plot as follows: in R this creates an empty graph sheet!! Because we have not (yet) declared the geometric shapes we want to use to plot our information."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#mapping",
    "href": "content/labs/r-labs/graphics/index.html#mapping",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n10 Mapping",
    "text": "10 Mapping\nNow that we have told R what data to use, we need to state what variables to plot and how.\nAesthetic Mapping defines how the variables are applied to the plot, i.e. we take a variable from the data and “metaphorize” it into a geometric feature. We can map variables metaphorically to a variety of geometric things: coordinate, length, height, size, shape, colour, alpha(how dark?)….\nThe syntax uses: aes(some_geometric_thing = some_variable)\nRemember variable = column.\nSo if we were graphing information from penguins, we might map a penguin’s flipper_length_mm column to the \\(x\\) position, and the body_mass_g column to the \\(y\\) position.\n\n10.1 Mapping Example-1\nWe can try another example of aesthetic mapping with the same dataset:\n\n10.1.1 Plot-1a\n\n\n\n\n\n\n10.1.2 Plot-1b\n\n10.1.3 Plot-1c\n\n10.2 Mapping Example-2\nWe can try another example of aesthetic mapping with the same dataset:\n\n10.2.1 Plot-2a\n\n\n\n\n\n\n10.2.2 Plot-2b\n\n10.2.3 Plot-2c\n\n10.3 Mapping Example-3\nWe can try another example of aesthetic mapping with the same dataset:\n\n10.3.1 Plot-3a\n\n\n\n\n\n\n10.3.2 Plot-3b\n\n10.3.3 Plot-3c\n\n10.4 Mapping Example-4\nWe can try another example of aesthetic mapping with the same dataset:\n\n10.4.1 Plot-4a\n\n\n\n\n\n\n10.4.2 Plot-4b\n\n10.4.3 Plot-4c"
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#geometric-objects",
    "href": "content/labs/r-labs/graphics/index.html#geometric-objects",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n11 Geometric objects",
    "text": "11 Geometric objects\nGeometric objects (geoms) control the type of plot you create. Geoms are classified by their dimensionality:\n\n0 dimensions - point, text\n1 dimension - path, line\n2 dimensions - polygon, interval\n\nEach geom can only display certain aesthetics or visual attributes of the geom. For example, a point geom has position, color, shape, and size aesthetics.\nWe can also stack up geoms on top of one another to add layers to the graph.\n\n11.1 Plot1\n\n\nWarning: Removed 2 rows containing missing values (`geom_line()`).\n\n\n\n\n\n\n11.2 Plot2\n\n\nWarning: Removed 2 rows containing missing values (`geom_line()`).\n\n\n\n\n\n\n11.3 Plot3\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPosition determines the starting location (origin) of each bar\nHeight determines how tall to draw the bar. Here the height is based on the number of observations in the dataset for each possible number of cylinders."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#position-adjustment",
    "href": "content/labs/r-labs/graphics/index.html#position-adjustment",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n12 Position adjustment",
    "text": "12 Position adjustment\nSometimes with dense data we need to adjust the position of elements on the plot, otherwise data points might obscure one another. Bar plots frequently stack or dodge the bars to avoid overlap:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSometimes scatterplots with few unique \\(x\\) and \\(y\\) values are jittered (random noise is added) to reduce overplotting.\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#statistical-transformation",
    "href": "content/labs/r-labs/graphics/index.html#statistical-transformation",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n13 Statistical transformation",
    "text": "13 Statistical transformation\nA statistical transformation (stat) pre-transforms the data, before plotting. For instance, in a bar graph you might summarize the data by counting the total number of observations within a set of categories, and then plotting the count.\n\n13.1 Count\n\n\n\n\n  \n\n\n\n\n13.2 Count and Bar Graph\n\n\n\n\n\n\n13.3 Tidy Count and Bar Graph\n\n\n\n\n\n\n13.4 Count inside the Plot\n\n\n\n\n\nSometimes you don’t need to make a statistical transformation. For example, in a scatterplot you use the raw values for the \\(x\\) and \\(y\\) variables to map onto the graph. In these situations, the statistical transformation is an identity transformation - the stat simply passes in the original dataset and exports the exact same dataset."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#scale",
    "href": "content/labs/r-labs/graphics/index.html#scale",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n14 Scale",
    "text": "14 Scale\nA scale controls how data is mapped to aesthetic attributes, so we need one scale for every aesthetic property employed in a layer. For example, this graph defines a scale for color:\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nThe scale can be changed to use a different color palette:\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nNow we are using a different palette, but the scale is still consistent: all Adelie penguins utilize the same color, whereas Chinstrap use a new color but each Adelie still uses the same, consistent color."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#coordinate-system",
    "href": "content/labs/r-labs/graphics/index.html#coordinate-system",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n15 Coordinate system",
    "text": "15 Coordinate system\nA coordinate system (coord) maps the position of objects onto the plane of the plot, and controls how the axes and grid lines are drawn. Plots typically use two coordinates (\\(x, y\\)), but could use any number of coordinates. Most plots are drawn using the Cartesian coordinate system:\n\n\nWarning: `qplot()` was deprecated in ggplot2 3.4.0.\n\n\n\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nThis system requires a fixed and equal spacing between values on the axes. That is, the graph draws the same distance between 1 and 2 as it does between 5 and 6. The graph could be drawn using a semi-log coordinate system which logarithmically compresses the distance on an axis:\n\n\n\n\n\nOr could even be drawn using polar coordinates:"
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#faceting",
    "href": "content/labs/r-labs/graphics/index.html#faceting",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n16 Faceting",
    "text": "16 Faceting\nFaceting can be used to split the data up into subsets of the entire dataset. This is a powerful tool when investigating whether patterns are the same or different across conditions, and allows the subsets to be visualized on the same plot (known as conditioned or trellis plots). The faceting specification describes which variables should be used to split up the data, and how they should be arranged.\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "content/labs/r-labs/graphics/index.html#defaults",
    "href": "content/labs/r-labs/graphics/index.html#defaults",
    "title": "Lab 06 - The Grammar of Graphics",
    "section": "\n17 Defaults",
    "text": "17 Defaults\nRather than explicitly declaring each component of a layered graphic (which will use more code and introduces opportunities for errors), we can establish intelligent defaults for specific geoms and scales. For instance, whenever we want to use a bar geom, we can default to using a stat that counts the number of observations in each group of our variable in the \\(x\\) position.\nConsider the following scenario: you wish to generate a scatterplot visualizing the relationship between penguins’ bill_length and their body_mass. With no defaults, the code to generate this graph is:\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nThe above code:\n\nCreates a new plot object (ggplot)\n\nAdds a layer (layer)\n\nSpecifies the data (penguins)\nMaps engine bill length to the \\(x\\) position and body mass to the \\(y\\) position (mapping)\nUses the point geometric transformation (geom = \"point\")\nImplements an identity transformation and position (stat = \"identity\" and position = \"identity\")\n\n\nEstablishes two continuous position scales (scale_x_continuous and scale_y_continuous)\nDeclares a cartesian coordinate system (coord_cartesian)\n\nHow can we simplify this using intelligent defaults?\n\nWe only need to specify one geom and stat, since each geom has a default stat.\nCartesian coordinate systems are most commonly used, so it should be the default.\n\nDefault scales can be added based on the aesthetic and type of variables.\n\nContinuous values are transformed with a linear scaling.\nDiscrete values are mapped to integers.\nScales for aesthetics such as color, fill, and size can also be intelligently defaulted.\n\n\n\nUsing these defaults, we can rewrite the above code as:\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nThis generates the exact same plot, but uses fewer lines of code. Because multiple layers can use the same components (data, mapping, etc.), we can also specify that information in the ggplot() function rather than in the layer() function:\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nAnd as we will learn, function arguments in R use specific ordering, so we can omit the explicit call to data and mapping:\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html",
    "href": "content/labs/r-labs/graphics/wizardy.html",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "",
    "text": "This Quarto document is part of my Workshop in R. The material is based on A Layered Grammar of Graphics by Hadley Wickham, and more specifically on the tutorials by Cedric Scherer. The course is meant for First Year students pursuing a Degree in Art and Design. The intent is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll Quarto files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "href": "content/labs/r-labs/graphics/wizardy.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "",
    "text": "This Quarto document is part of my Workshop in R. The material is based on A Layered Grammar of Graphics by Hadley Wickham, and more specifically on the tutorials by Cedric Scherer. The course is meant for First Year students pursuing a Degree in Art and Design. The intent is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll Quarto files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#goals",
    "href": "content/labs/r-labs/graphics/wizardy.html#goals",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n2 Goals",
    "text": "2 Goals\n\n(Re)Understand different kinds of data variables\nAppreciate how they can be identified based on the Interrogative Pronouns they answer to\nUnderstand how each kind of variable lends itself to a specific choice of colour scale in the data visualization."
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#pedagogical-note",
    "href": "content/labs/r-labs/graphics/wizardy.html#pedagogical-note",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n3 Pedagogical Note",
    "text": "3 Pedagogical Note\nThe method followed will be based on PRIMM:\n\n\nPREDICT Inspect the code and guess at what the code might do, write predictions\n\n\nRUN the code provided and check what happens\n\nINFER what the parameters of the code do and write comments to explain. What bells and whistles can you see?\n\nMODIFY the parameters code provided to understand the options available. Write comments to show what you have aimed for and achieved.\n\nMAKE : take an idea/concept of your own, and graph it.\n\nIn the following, there is some boiler plate code demonstrating the use of colour palettes in R. There are places where YOUR TURN is mention; copy and play with the boiler plate code to see what happens !"
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#iconify-noto-v1-package-setting-up-r-packages",
    "href": "content/labs/r-labs/graphics/wizardy.html#iconify-noto-v1-package-setting-up-r-packages",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n4  Setting up R Packages",
    "text": "4  Setting up R Packages\nLet’s load up a few packages that we need to start:\n\nlibrary(tidyverse)   ## data science package collection (incl. the ggplot2 package)\nlibrary(systemfonts) ## use custom fonts (need to be installed on your OS)  \nlibrary(scico)       ## scico color palettes(http://www.fabiocrameri.ch/colourmaps.php) in R \nlibrary(ggtext)      ## add improved text rendering to ggplot2\nlibrary(ggforce)     ## add missing functionality to ggplot2\nlibrary(ggdist)      ## add uncertainity visualizations to ggplot2\nlibrary(magick)      ## load images into R\nlibrary(patchwork)   ## combine outputs from ggplot2\nlibrary(kableExtra)  ## Produces attractive tables\nlibrary(palmerpenguins)\n\nlibrary(showtext)   ## add google fonts to plots\n\nWe will want to add a few new fonts to our graphs. The best way (currently) is to use the showtext package ( which we loaded above) to bring into our work fonts from Google. To view and select the fonts you might want to work with, spend some time looking over:\n\nGoogle Webfonts Helper App\nGoogle Fonts\n\n\nfont_add_google(\"Gochi Hand\", \"gochi\")\nfont_add_google(\"Schoolbell\", \"bell\")\nfont_add_google(\"Galada\", \"galada\")\nfont_add_google(\"Schoolbell\", \"bell\")\nfont_add_google(\"Roboto\", \"roboto\")\nfont_add_google(\"Noto Sans\", \"noto\")\nfont_add_google(\"Uchen\", \"uchen\")\nfont_add_google(\"Ibarra Real Nova\", \"ibarra\")\nfont_add_google(\"Open Sans\", \"open\")\nfont_add_google(\"Anton\", \"anton\")\nfont_add_google(\"Tangerine\", \"tangerine\")\n\nshowtext_auto() # set the google fonts as default\n\nWe will work with a familiar dataset, so that we can concentrate on the chart aesthetics, without having to spend time getting used to the data: the penguins dataset again, from the palmerpenguins package."
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#data",
    "href": "content/labs/r-labs/graphics/wizardy.html#data",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n5 Data",
    "text": "5 Data\nAlways start your work with a table of the data:\n\npenguins &lt;- penguins %&gt;% drop_na() # remove data containing missing data\n\n## Create a nicely formatted table\n## uses `kableExtra` package\n## \npenguins %&gt;% \n  kableExtra::kbl() %&gt;%\n  kableExtra::kable_paper(full_width = TRUE) %&gt;%\n  kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"condensed\", \"responsive\")) %&gt;%\n  kableExtra::scroll_box(width = \"700px\", height = \"500px\")\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n2007\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale\n2007\n\n\nAdelie\nTorgersen\n38.9\n17.8\n181\n3625\nfemale\n2007\n\n\nAdelie\nTorgersen\n39.2\n19.6\n195\n4675\nmale\n2007\n\n\nAdelie\nTorgersen\n41.1\n17.6\n182\n3200\nfemale\n2007\n\n\nAdelie\nTorgersen\n38.6\n21.2\n191\n3800\nmale\n2007\n\n\nAdelie\nTorgersen\n34.6\n21.1\n198\n4400\nmale\n2007\n\n\nAdelie\nTorgersen\n36.6\n17.8\n185\n3700\nfemale\n2007\n\n\nAdelie\nTorgersen\n38.7\n19.0\n195\n3450\nfemale\n2007\n\n\nAdelie\nTorgersen\n42.5\n20.7\n197\n4500\nmale\n2007\n\n\nAdelie\nTorgersen\n34.4\n18.4\n184\n3325\nfemale\n2007\n\n\nAdelie\nTorgersen\n46.0\n21.5\n194\n4200\nmale\n2007\n\n\nAdelie\nBiscoe\n37.8\n18.3\n174\n3400\nfemale\n2007\n\n\nAdelie\nBiscoe\n37.7\n18.7\n180\n3600\nmale\n2007\n\n\nAdelie\nBiscoe\n35.9\n19.2\n189\n3800\nfemale\n2007\n\n\nAdelie\nBiscoe\n38.2\n18.1\n185\n3950\nmale\n2007\n\n\nAdelie\nBiscoe\n38.8\n17.2\n180\n3800\nmale\n2007\n\n\nAdelie\nBiscoe\n35.3\n18.9\n187\n3800\nfemale\n2007\n\n\nAdelie\nBiscoe\n40.6\n18.6\n183\n3550\nmale\n2007\n\n\nAdelie\nBiscoe\n40.5\n17.9\n187\n3200\nfemale\n2007\n\n\nAdelie\nBiscoe\n37.9\n18.6\n172\n3150\nfemale\n2007\n\n\nAdelie\nBiscoe\n40.5\n18.9\n180\n3950\nmale\n2007\n\n\nAdelie\nDream\n39.5\n16.7\n178\n3250\nfemale\n2007\n\n\nAdelie\nDream\n37.2\n18.1\n178\n3900\nmale\n2007\n\n\nAdelie\nDream\n39.5\n17.8\n188\n3300\nfemale\n2007\n\n\nAdelie\nDream\n40.9\n18.9\n184\n3900\nmale\n2007\n\n\nAdelie\nDream\n36.4\n17.0\n195\n3325\nfemale\n2007\n\n\nAdelie\nDream\n39.2\n21.1\n196\n4150\nmale\n2007\n\n\nAdelie\nDream\n38.8\n20.0\n190\n3950\nmale\n2007\n\n\nAdelie\nDream\n42.2\n18.5\n180\n3550\nfemale\n2007\n\n\nAdelie\nDream\n37.6\n19.3\n181\n3300\nfemale\n2007\n\n\nAdelie\nDream\n39.8\n19.1\n184\n4650\nmale\n2007\n\n\nAdelie\nDream\n36.5\n18.0\n182\n3150\nfemale\n2007\n\n\nAdelie\nDream\n40.8\n18.4\n195\n3900\nmale\n2007\n\n\nAdelie\nDream\n36.0\n18.5\n186\n3100\nfemale\n2007\n\n\nAdelie\nDream\n44.1\n19.7\n196\n4400\nmale\n2007\n\n\nAdelie\nDream\n37.0\n16.9\n185\n3000\nfemale\n2007\n\n\nAdelie\nDream\n39.6\n18.8\n190\n4600\nmale\n2007\n\n\nAdelie\nDream\n41.1\n19.0\n182\n3425\nmale\n2007\n\n\nAdelie\nDream\n36.0\n17.9\n190\n3450\nfemale\n2007\n\n\nAdelie\nDream\n42.3\n21.2\n191\n4150\nmale\n2007\n\n\nAdelie\nBiscoe\n39.6\n17.7\n186\n3500\nfemale\n2008\n\n\nAdelie\nBiscoe\n40.1\n18.9\n188\n4300\nmale\n2008\n\n\nAdelie\nBiscoe\n35.0\n17.9\n190\n3450\nfemale\n2008\n\n\nAdelie\nBiscoe\n42.0\n19.5\n200\n4050\nmale\n2008\n\n\nAdelie\nBiscoe\n34.5\n18.1\n187\n2900\nfemale\n2008\n\n\nAdelie\nBiscoe\n41.4\n18.6\n191\n3700\nmale\n2008\n\n\nAdelie\nBiscoe\n39.0\n17.5\n186\n3550\nfemale\n2008\n\n\nAdelie\nBiscoe\n40.6\n18.8\n193\n3800\nmale\n2008\n\n\nAdelie\nBiscoe\n36.5\n16.6\n181\n2850\nfemale\n2008\n\n\nAdelie\nBiscoe\n37.6\n19.1\n194\n3750\nmale\n2008\n\n\nAdelie\nBiscoe\n35.7\n16.9\n185\n3150\nfemale\n2008\n\n\nAdelie\nBiscoe\n41.3\n21.1\n195\n4400\nmale\n2008\n\n\nAdelie\nBiscoe\n37.6\n17.0\n185\n3600\nfemale\n2008\n\n\nAdelie\nBiscoe\n41.1\n18.2\n192\n4050\nmale\n2008\n\n\nAdelie\nBiscoe\n36.4\n17.1\n184\n2850\nfemale\n2008\n\n\nAdelie\nBiscoe\n41.6\n18.0\n192\n3950\nmale\n2008\n\n\nAdelie\nBiscoe\n35.5\n16.2\n195\n3350\nfemale\n2008\n\n\nAdelie\nBiscoe\n41.1\n19.1\n188\n4100\nmale\n2008\n\n\nAdelie\nTorgersen\n35.9\n16.6\n190\n3050\nfemale\n2008\n\n\nAdelie\nTorgersen\n41.8\n19.4\n198\n4450\nmale\n2008\n\n\nAdelie\nTorgersen\n33.5\n19.0\n190\n3600\nfemale\n2008\n\n\nAdelie\nTorgersen\n39.7\n18.4\n190\n3900\nmale\n2008\n\n\nAdelie\nTorgersen\n39.6\n17.2\n196\n3550\nfemale\n2008\n\n\nAdelie\nTorgersen\n45.8\n18.9\n197\n4150\nmale\n2008\n\n\nAdelie\nTorgersen\n35.5\n17.5\n190\n3700\nfemale\n2008\n\n\nAdelie\nTorgersen\n42.8\n18.5\n195\n4250\nmale\n2008\n\n\nAdelie\nTorgersen\n40.9\n16.8\n191\n3700\nfemale\n2008\n\n\nAdelie\nTorgersen\n37.2\n19.4\n184\n3900\nmale\n2008\n\n\nAdelie\nTorgersen\n36.2\n16.1\n187\n3550\nfemale\n2008\n\n\nAdelie\nTorgersen\n42.1\n19.1\n195\n4000\nmale\n2008\n\n\nAdelie\nTorgersen\n34.6\n17.2\n189\n3200\nfemale\n2008\n\n\nAdelie\nTorgersen\n42.9\n17.6\n196\n4700\nmale\n2008\n\n\nAdelie\nTorgersen\n36.7\n18.8\n187\n3800\nfemale\n2008\n\n\nAdelie\nTorgersen\n35.1\n19.4\n193\n4200\nmale\n2008\n\n\nAdelie\nDream\n37.3\n17.8\n191\n3350\nfemale\n2008\n\n\nAdelie\nDream\n41.3\n20.3\n194\n3550\nmale\n2008\n\n\nAdelie\nDream\n36.3\n19.5\n190\n3800\nmale\n2008\n\n\nAdelie\nDream\n36.9\n18.6\n189\n3500\nfemale\n2008\n\n\nAdelie\nDream\n38.3\n19.2\n189\n3950\nmale\n2008\n\n\nAdelie\nDream\n38.9\n18.8\n190\n3600\nfemale\n2008\n\n\nAdelie\nDream\n35.7\n18.0\n202\n3550\nfemale\n2008\n\n\nAdelie\nDream\n41.1\n18.1\n205\n4300\nmale\n2008\n\n\nAdelie\nDream\n34.0\n17.1\n185\n3400\nfemale\n2008\n\n\nAdelie\nDream\n39.6\n18.1\n186\n4450\nmale\n2008\n\n\nAdelie\nDream\n36.2\n17.3\n187\n3300\nfemale\n2008\n\n\nAdelie\nDream\n40.8\n18.9\n208\n4300\nmale\n2008\n\n\nAdelie\nDream\n38.1\n18.6\n190\n3700\nfemale\n2008\n\n\nAdelie\nDream\n40.3\n18.5\n196\n4350\nmale\n2008\n\n\nAdelie\nDream\n33.1\n16.1\n178\n2900\nfemale\n2008\n\n\nAdelie\nDream\n43.2\n18.5\n192\n4100\nmale\n2008\n\n\nAdelie\nBiscoe\n35.0\n17.9\n192\n3725\nfemale\n2009\n\n\nAdelie\nBiscoe\n41.0\n20.0\n203\n4725\nmale\n2009\n\n\nAdelie\nBiscoe\n37.7\n16.0\n183\n3075\nfemale\n2009\n\n\nAdelie\nBiscoe\n37.8\n20.0\n190\n4250\nmale\n2009\n\n\nAdelie\nBiscoe\n37.9\n18.6\n193\n2925\nfemale\n2009\n\n\nAdelie\nBiscoe\n39.7\n18.9\n184\n3550\nmale\n2009\n\n\nAdelie\nBiscoe\n38.6\n17.2\n199\n3750\nfemale\n2009\n\n\nAdelie\nBiscoe\n38.2\n20.0\n190\n3900\nmale\n2009\n\n\nAdelie\nBiscoe\n38.1\n17.0\n181\n3175\nfemale\n2009\n\n\nAdelie\nBiscoe\n43.2\n19.0\n197\n4775\nmale\n2009\n\n\nAdelie\nBiscoe\n38.1\n16.5\n198\n3825\nfemale\n2009\n\n\nAdelie\nBiscoe\n45.6\n20.3\n191\n4600\nmale\n2009\n\n\nAdelie\nBiscoe\n39.7\n17.7\n193\n3200\nfemale\n2009\n\n\nAdelie\nBiscoe\n42.2\n19.5\n197\n4275\nmale\n2009\n\n\nAdelie\nBiscoe\n39.6\n20.7\n191\n3900\nfemale\n2009\n\n\nAdelie\nBiscoe\n42.7\n18.3\n196\n4075\nmale\n2009\n\n\nAdelie\nTorgersen\n38.6\n17.0\n188\n2900\nfemale\n2009\n\n\nAdelie\nTorgersen\n37.3\n20.5\n199\n3775\nmale\n2009\n\n\nAdelie\nTorgersen\n35.7\n17.0\n189\n3350\nfemale\n2009\n\n\nAdelie\nTorgersen\n41.1\n18.6\n189\n3325\nmale\n2009\n\n\nAdelie\nTorgersen\n36.2\n17.2\n187\n3150\nfemale\n2009\n\n\nAdelie\nTorgersen\n37.7\n19.8\n198\n3500\nmale\n2009\n\n\nAdelie\nTorgersen\n40.2\n17.0\n176\n3450\nfemale\n2009\n\n\nAdelie\nTorgersen\n41.4\n18.5\n202\n3875\nmale\n2009\n\n\nAdelie\nTorgersen\n35.2\n15.9\n186\n3050\nfemale\n2009\n\n\nAdelie\nTorgersen\n40.6\n19.0\n199\n4000\nmale\n2009\n\n\nAdelie\nTorgersen\n38.8\n17.6\n191\n3275\nfemale\n2009\n\n\nAdelie\nTorgersen\n41.5\n18.3\n195\n4300\nmale\n2009\n\n\nAdelie\nTorgersen\n39.0\n17.1\n191\n3050\nfemale\n2009\n\n\nAdelie\nTorgersen\n44.1\n18.0\n210\n4000\nmale\n2009\n\n\nAdelie\nTorgersen\n38.5\n17.9\n190\n3325\nfemale\n2009\n\n\nAdelie\nTorgersen\n43.1\n19.2\n197\n3500\nmale\n2009\n\n\nAdelie\nDream\n36.8\n18.5\n193\n3500\nfemale\n2009\n\n\nAdelie\nDream\n37.5\n18.5\n199\n4475\nmale\n2009\n\n\nAdelie\nDream\n38.1\n17.6\n187\n3425\nfemale\n2009\n\n\nAdelie\nDream\n41.1\n17.5\n190\n3900\nmale\n2009\n\n\nAdelie\nDream\n35.6\n17.5\n191\n3175\nfemale\n2009\n\n\nAdelie\nDream\n40.2\n20.1\n200\n3975\nmale\n2009\n\n\nAdelie\nDream\n37.0\n16.5\n185\n3400\nfemale\n2009\n\n\nAdelie\nDream\n39.7\n17.9\n193\n4250\nmale\n2009\n\n\nAdelie\nDream\n40.2\n17.1\n193\n3400\nfemale\n2009\n\n\nAdelie\nDream\n40.6\n17.2\n187\n3475\nmale\n2009\n\n\nAdelie\nDream\n32.1\n15.5\n188\n3050\nfemale\n2009\n\n\nAdelie\nDream\n40.7\n17.0\n190\n3725\nmale\n2009\n\n\nAdelie\nDream\n37.3\n16.8\n192\n3000\nfemale\n2009\n\n\nAdelie\nDream\n39.0\n18.7\n185\n3650\nmale\n2009\n\n\nAdelie\nDream\n39.2\n18.6\n190\n4250\nmale\n2009\n\n\nAdelie\nDream\n36.6\n18.4\n184\n3475\nfemale\n2009\n\n\nAdelie\nDream\n36.0\n17.8\n195\n3450\nfemale\n2009\n\n\nAdelie\nDream\n37.8\n18.1\n193\n3750\nmale\n2009\n\n\nAdelie\nDream\n36.0\n17.1\n187\n3700\nfemale\n2009\n\n\nAdelie\nDream\n41.5\n18.5\n201\n4000\nmale\n2009\n\n\nGentoo\nBiscoe\n46.1\n13.2\n211\n4500\nfemale\n2007\n\n\nGentoo\nBiscoe\n50.0\n16.3\n230\n5700\nmale\n2007\n\n\nGentoo\nBiscoe\n48.7\n14.1\n210\n4450\nfemale\n2007\n\n\nGentoo\nBiscoe\n50.0\n15.2\n218\n5700\nmale\n2007\n\n\nGentoo\nBiscoe\n47.6\n14.5\n215\n5400\nmale\n2007\n\n\nGentoo\nBiscoe\n46.5\n13.5\n210\n4550\nfemale\n2007\n\n\nGentoo\nBiscoe\n45.4\n14.6\n211\n4800\nfemale\n2007\n\n\nGentoo\nBiscoe\n46.7\n15.3\n219\n5200\nmale\n2007\n\n\nGentoo\nBiscoe\n43.3\n13.4\n209\n4400\nfemale\n2007\n\n\nGentoo\nBiscoe\n46.8\n15.4\n215\n5150\nmale\n2007\n\n\nGentoo\nBiscoe\n40.9\n13.7\n214\n4650\nfemale\n2007\n\n\nGentoo\nBiscoe\n49.0\n16.1\n216\n5550\nmale\n2007\n\n\nGentoo\nBiscoe\n45.5\n13.7\n214\n4650\nfemale\n2007\n\n\nGentoo\nBiscoe\n48.4\n14.6\n213\n5850\nmale\n2007\n\n\nGentoo\nBiscoe\n45.8\n14.6\n210\n4200\nfemale\n2007\n\n\nGentoo\nBiscoe\n49.3\n15.7\n217\n5850\nmale\n2007\n\n\nGentoo\nBiscoe\n42.0\n13.5\n210\n4150\nfemale\n2007\n\n\nGentoo\nBiscoe\n49.2\n15.2\n221\n6300\nmale\n2007\n\n\nGentoo\nBiscoe\n46.2\n14.5\n209\n4800\nfemale\n2007\n\n\nGentoo\nBiscoe\n48.7\n15.1\n222\n5350\nmale\n2007\n\n\nGentoo\nBiscoe\n50.2\n14.3\n218\n5700\nmale\n2007\n\n\nGentoo\nBiscoe\n45.1\n14.5\n215\n5000\nfemale\n2007\n\n\nGentoo\nBiscoe\n46.5\n14.5\n213\n4400\nfemale\n2007\n\n\nGentoo\nBiscoe\n46.3\n15.8\n215\n5050\nmale\n2007\n\n\nGentoo\nBiscoe\n42.9\n13.1\n215\n5000\nfemale\n2007\n\n\nGentoo\nBiscoe\n46.1\n15.1\n215\n5100\nmale\n2007\n\n\nGentoo\nBiscoe\n47.8\n15.0\n215\n5650\nmale\n2007\n\n\nGentoo\nBiscoe\n48.2\n14.3\n210\n4600\nfemale\n2007\n\n\nGentoo\nBiscoe\n50.0\n15.3\n220\n5550\nmale\n2007\n\n\nGentoo\nBiscoe\n47.3\n15.3\n222\n5250\nmale\n2007\n\n\nGentoo\nBiscoe\n42.8\n14.2\n209\n4700\nfemale\n2007\n\n\nGentoo\nBiscoe\n45.1\n14.5\n207\n5050\nfemale\n2007\n\n\nGentoo\nBiscoe\n59.6\n17.0\n230\n6050\nmale\n2007\n\n\nGentoo\nBiscoe\n49.1\n14.8\n220\n5150\nfemale\n2008\n\n\nGentoo\nBiscoe\n48.4\n16.3\n220\n5400\nmale\n2008\n\n\nGentoo\nBiscoe\n42.6\n13.7\n213\n4950\nfemale\n2008\n\n\nGentoo\nBiscoe\n44.4\n17.3\n219\n5250\nmale\n2008\n\n\nGentoo\nBiscoe\n44.0\n13.6\n208\n4350\nfemale\n2008\n\n\nGentoo\nBiscoe\n48.7\n15.7\n208\n5350\nmale\n2008\n\n\nGentoo\nBiscoe\n42.7\n13.7\n208\n3950\nfemale\n2008\n\n\nGentoo\nBiscoe\n49.6\n16.0\n225\n5700\nmale\n2008\n\n\nGentoo\nBiscoe\n45.3\n13.7\n210\n4300\nfemale\n2008\n\n\nGentoo\nBiscoe\n49.6\n15.0\n216\n4750\nmale\n2008\n\n\nGentoo\nBiscoe\n50.5\n15.9\n222\n5550\nmale\n2008\n\n\nGentoo\nBiscoe\n43.6\n13.9\n217\n4900\nfemale\n2008\n\n\nGentoo\nBiscoe\n45.5\n13.9\n210\n4200\nfemale\n2008\n\n\nGentoo\nBiscoe\n50.5\n15.9\n225\n5400\nmale\n2008\n\n\nGentoo\nBiscoe\n44.9\n13.3\n213\n5100\nfemale\n2008\n\n\nGentoo\nBiscoe\n45.2\n15.8\n215\n5300\nmale\n2008\n\n\nGentoo\nBiscoe\n46.6\n14.2\n210\n4850\nfemale\n2008\n\n\nGentoo\nBiscoe\n48.5\n14.1\n220\n5300\nmale\n2008\n\n\nGentoo\nBiscoe\n45.1\n14.4\n210\n4400\nfemale\n2008\n\n\nGentoo\nBiscoe\n50.1\n15.0\n225\n5000\nmale\n2008\n\n\nGentoo\nBiscoe\n46.5\n14.4\n217\n4900\nfemale\n2008\n\n\nGentoo\nBiscoe\n45.0\n15.4\n220\n5050\nmale\n2008\n\n\nGentoo\nBiscoe\n43.8\n13.9\n208\n4300\nfemale\n2008\n\n\nGentoo\nBiscoe\n45.5\n15.0\n220\n5000\nmale\n2008\n\n\nGentoo\nBiscoe\n43.2\n14.5\n208\n4450\nfemale\n2008\n\n\nGentoo\nBiscoe\n50.4\n15.3\n224\n5550\nmale\n2008\n\n\nGentoo\nBiscoe\n45.3\n13.8\n208\n4200\nfemale\n2008\n\n\nGentoo\nBiscoe\n46.2\n14.9\n221\n5300\nmale\n2008\n\n\nGentoo\nBiscoe\n45.7\n13.9\n214\n4400\nfemale\n2008\n\n\nGentoo\nBiscoe\n54.3\n15.7\n231\n5650\nmale\n2008\n\n\nGentoo\nBiscoe\n45.8\n14.2\n219\n4700\nfemale\n2008\n\n\nGentoo\nBiscoe\n49.8\n16.8\n230\n5700\nmale\n2008\n\n\nGentoo\nBiscoe\n49.5\n16.2\n229\n5800\nmale\n2008\n\n\nGentoo\nBiscoe\n43.5\n14.2\n220\n4700\nfemale\n2008\n\n\nGentoo\nBiscoe\n50.7\n15.0\n223\n5550\nmale\n2008\n\n\nGentoo\nBiscoe\n47.7\n15.0\n216\n4750\nfemale\n2008\n\n\nGentoo\nBiscoe\n46.4\n15.6\n221\n5000\nmale\n2008\n\n\nGentoo\nBiscoe\n48.2\n15.6\n221\n5100\nmale\n2008\n\n\nGentoo\nBiscoe\n46.5\n14.8\n217\n5200\nfemale\n2008\n\n\nGentoo\nBiscoe\n46.4\n15.0\n216\n4700\nfemale\n2008\n\n\nGentoo\nBiscoe\n48.6\n16.0\n230\n5800\nmale\n2008\n\n\nGentoo\nBiscoe\n47.5\n14.2\n209\n4600\nfemale\n2008\n\n\nGentoo\nBiscoe\n51.1\n16.3\n220\n6000\nmale\n2008\n\n\nGentoo\nBiscoe\n45.2\n13.8\n215\n4750\nfemale\n2008\n\n\nGentoo\nBiscoe\n45.2\n16.4\n223\n5950\nmale\n2008\n\n\nGentoo\nBiscoe\n49.1\n14.5\n212\n4625\nfemale\n2009\n\n\nGentoo\nBiscoe\n52.5\n15.6\n221\n5450\nmale\n2009\n\n\nGentoo\nBiscoe\n47.4\n14.6\n212\n4725\nfemale\n2009\n\n\nGentoo\nBiscoe\n50.0\n15.9\n224\n5350\nmale\n2009\n\n\nGentoo\nBiscoe\n44.9\n13.8\n212\n4750\nfemale\n2009\n\n\nGentoo\nBiscoe\n50.8\n17.3\n228\n5600\nmale\n2009\n\n\nGentoo\nBiscoe\n43.4\n14.4\n218\n4600\nfemale\n2009\n\n\nGentoo\nBiscoe\n51.3\n14.2\n218\n5300\nmale\n2009\n\n\nGentoo\nBiscoe\n47.5\n14.0\n212\n4875\nfemale\n2009\n\n\nGentoo\nBiscoe\n52.1\n17.0\n230\n5550\nmale\n2009\n\n\nGentoo\nBiscoe\n47.5\n15.0\n218\n4950\nfemale\n2009\n\n\nGentoo\nBiscoe\n52.2\n17.1\n228\n5400\nmale\n2009\n\n\nGentoo\nBiscoe\n45.5\n14.5\n212\n4750\nfemale\n2009\n\n\nGentoo\nBiscoe\n49.5\n16.1\n224\n5650\nmale\n2009\n\n\nGentoo\nBiscoe\n44.5\n14.7\n214\n4850\nfemale\n2009\n\n\nGentoo\nBiscoe\n50.8\n15.7\n226\n5200\nmale\n2009\n\n\nGentoo\nBiscoe\n49.4\n15.8\n216\n4925\nmale\n2009\n\n\nGentoo\nBiscoe\n46.9\n14.6\n222\n4875\nfemale\n2009\n\n\nGentoo\nBiscoe\n48.4\n14.4\n203\n4625\nfemale\n2009\n\n\nGentoo\nBiscoe\n51.1\n16.5\n225\n5250\nmale\n2009\n\n\nGentoo\nBiscoe\n48.5\n15.0\n219\n4850\nfemale\n2009\n\n\nGentoo\nBiscoe\n55.9\n17.0\n228\n5600\nmale\n2009\n\n\nGentoo\nBiscoe\n47.2\n15.5\n215\n4975\nfemale\n2009\n\n\nGentoo\nBiscoe\n49.1\n15.0\n228\n5500\nmale\n2009\n\n\nGentoo\nBiscoe\n46.8\n16.1\n215\n5500\nmale\n2009\n\n\nGentoo\nBiscoe\n41.7\n14.7\n210\n4700\nfemale\n2009\n\n\nGentoo\nBiscoe\n53.4\n15.8\n219\n5500\nmale\n2009\n\n\nGentoo\nBiscoe\n43.3\n14.0\n208\n4575\nfemale\n2009\n\n\nGentoo\nBiscoe\n48.1\n15.1\n209\n5500\nmale\n2009\n\n\nGentoo\nBiscoe\n50.5\n15.2\n216\n5000\nfemale\n2009\n\n\nGentoo\nBiscoe\n49.8\n15.9\n229\n5950\nmale\n2009\n\n\nGentoo\nBiscoe\n43.5\n15.2\n213\n4650\nfemale\n2009\n\n\nGentoo\nBiscoe\n51.5\n16.3\n230\n5500\nmale\n2009\n\n\nGentoo\nBiscoe\n46.2\n14.1\n217\n4375\nfemale\n2009\n\n\nGentoo\nBiscoe\n55.1\n16.0\n230\n5850\nmale\n2009\n\n\nGentoo\nBiscoe\n48.8\n16.2\n222\n6000\nmale\n2009\n\n\nGentoo\nBiscoe\n47.2\n13.7\n214\n4925\nfemale\n2009\n\n\nGentoo\nBiscoe\n46.8\n14.3\n215\n4850\nfemale\n2009\n\n\nGentoo\nBiscoe\n50.4\n15.7\n222\n5750\nmale\n2009\n\n\nGentoo\nBiscoe\n45.2\n14.8\n212\n5200\nfemale\n2009\n\n\nGentoo\nBiscoe\n49.9\n16.1\n213\n5400\nmale\n2009\n\n\nChinstrap\nDream\n46.5\n17.9\n192\n3500\nfemale\n2007\n\n\nChinstrap\nDream\n50.0\n19.5\n196\n3900\nmale\n2007\n\n\nChinstrap\nDream\n51.3\n19.2\n193\n3650\nmale\n2007\n\n\nChinstrap\nDream\n45.4\n18.7\n188\n3525\nfemale\n2007\n\n\nChinstrap\nDream\n52.7\n19.8\n197\n3725\nmale\n2007\n\n\nChinstrap\nDream\n45.2\n17.8\n198\n3950\nfemale\n2007\n\n\nChinstrap\nDream\n46.1\n18.2\n178\n3250\nfemale\n2007\n\n\nChinstrap\nDream\n51.3\n18.2\n197\n3750\nmale\n2007\n\n\nChinstrap\nDream\n46.0\n18.9\n195\n4150\nfemale\n2007\n\n\nChinstrap\nDream\n51.3\n19.9\n198\n3700\nmale\n2007\n\n\nChinstrap\nDream\n46.6\n17.8\n193\n3800\nfemale\n2007\n\n\nChinstrap\nDream\n51.7\n20.3\n194\n3775\nmale\n2007\n\n\nChinstrap\nDream\n47.0\n17.3\n185\n3700\nfemale\n2007\n\n\nChinstrap\nDream\n52.0\n18.1\n201\n4050\nmale\n2007\n\n\nChinstrap\nDream\n45.9\n17.1\n190\n3575\nfemale\n2007\n\n\nChinstrap\nDream\n50.5\n19.6\n201\n4050\nmale\n2007\n\n\nChinstrap\nDream\n50.3\n20.0\n197\n3300\nmale\n2007\n\n\nChinstrap\nDream\n58.0\n17.8\n181\n3700\nfemale\n2007\n\n\nChinstrap\nDream\n46.4\n18.6\n190\n3450\nfemale\n2007\n\n\nChinstrap\nDream\n49.2\n18.2\n195\n4400\nmale\n2007\n\n\nChinstrap\nDream\n42.4\n17.3\n181\n3600\nfemale\n2007\n\n\nChinstrap\nDream\n48.5\n17.5\n191\n3400\nmale\n2007\n\n\nChinstrap\nDream\n43.2\n16.6\n187\n2900\nfemale\n2007\n\n\nChinstrap\nDream\n50.6\n19.4\n193\n3800\nmale\n2007\n\n\nChinstrap\nDream\n46.7\n17.9\n195\n3300\nfemale\n2007\n\n\nChinstrap\nDream\n52.0\n19.0\n197\n4150\nmale\n2007\n\n\nChinstrap\nDream\n50.5\n18.4\n200\n3400\nfemale\n2008\n\n\nChinstrap\nDream\n49.5\n19.0\n200\n3800\nmale\n2008\n\n\nChinstrap\nDream\n46.4\n17.8\n191\n3700\nfemale\n2008\n\n\nChinstrap\nDream\n52.8\n20.0\n205\n4550\nmale\n2008\n\n\nChinstrap\nDream\n40.9\n16.6\n187\n3200\nfemale\n2008\n\n\nChinstrap\nDream\n54.2\n20.8\n201\n4300\nmale\n2008\n\n\nChinstrap\nDream\n42.5\n16.7\n187\n3350\nfemale\n2008\n\n\nChinstrap\nDream\n51.0\n18.8\n203\n4100\nmale\n2008\n\n\nChinstrap\nDream\n49.7\n18.6\n195\n3600\nmale\n2008\n\n\nChinstrap\nDream\n47.5\n16.8\n199\n3900\nfemale\n2008\n\n\nChinstrap\nDream\n47.6\n18.3\n195\n3850\nfemale\n2008\n\n\nChinstrap\nDream\n52.0\n20.7\n210\n4800\nmale\n2008\n\n\nChinstrap\nDream\n46.9\n16.6\n192\n2700\nfemale\n2008\n\n\nChinstrap\nDream\n53.5\n19.9\n205\n4500\nmale\n2008\n\n\nChinstrap\nDream\n49.0\n19.5\n210\n3950\nmale\n2008\n\n\nChinstrap\nDream\n46.2\n17.5\n187\n3650\nfemale\n2008\n\n\nChinstrap\nDream\n50.9\n19.1\n196\n3550\nmale\n2008\n\n\nChinstrap\nDream\n45.5\n17.0\n196\n3500\nfemale\n2008\n\n\nChinstrap\nDream\n50.9\n17.9\n196\n3675\nfemale\n2009\n\n\nChinstrap\nDream\n50.8\n18.5\n201\n4450\nmale\n2009\n\n\nChinstrap\nDream\n50.1\n17.9\n190\n3400\nfemale\n2009\n\n\nChinstrap\nDream\n49.0\n19.6\n212\n4300\nmale\n2009\n\n\nChinstrap\nDream\n51.5\n18.7\n187\n3250\nmale\n2009\n\n\nChinstrap\nDream\n49.8\n17.3\n198\n3675\nfemale\n2009\n\n\nChinstrap\nDream\n48.1\n16.4\n199\n3325\nfemale\n2009\n\n\nChinstrap\nDream\n51.4\n19.0\n201\n3950\nmale\n2009\n\n\nChinstrap\nDream\n45.7\n17.3\n193\n3600\nfemale\n2009\n\n\nChinstrap\nDream\n50.7\n19.7\n203\n4050\nmale\n2009\n\n\nChinstrap\nDream\n42.5\n17.3\n187\n3350\nfemale\n2009\n\n\nChinstrap\nDream\n52.2\n18.8\n197\n3450\nmale\n2009\n\n\nChinstrap\nDream\n45.2\n16.6\n191\n3250\nfemale\n2009\n\n\nChinstrap\nDream\n49.3\n19.9\n203\n4050\nmale\n2009\n\n\nChinstrap\nDream\n50.2\n18.8\n202\n3800\nmale\n2009\n\n\nChinstrap\nDream\n45.6\n19.4\n194\n3525\nfemale\n2009\n\n\nChinstrap\nDream\n51.9\n19.5\n206\n3950\nmale\n2009\n\n\nChinstrap\nDream\n46.8\n16.5\n189\n3650\nfemale\n2009\n\n\nChinstrap\nDream\n45.7\n17.0\n195\n3650\nfemale\n2009\n\n\nChinstrap\nDream\n55.8\n19.8\n207\n4000\nmale\n2009\n\n\nChinstrap\nDream\n43.5\n18.1\n202\n3400\nfemale\n2009\n\n\nChinstrap\nDream\n49.6\n18.2\n193\n3775\nmale\n2009\n\n\nChinstrap\nDream\n50.8\n19.0\n210\n4100\nmale\n2009\n\n\nChinstrap\nDream\n50.2\n18.7\n198\n3775\nfemale\n2009"
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#basic-plot",
    "href": "content/labs/r-labs/graphics/wizardy.html#basic-plot",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n6 Basic Plot",
    "text": "6 Basic Plot\nA basic scatter plot, which we will progressively dress up:\n\n## simple plot: data + mappings + geometry\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(alpha = .6, size = 3.5)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#customized-plot",
    "href": "content/labs/r-labs/graphics/wizardy.html#customized-plot",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n7 Customized Plot",
    "text": "7 Customized Plot\nLet us set some ggplot theme aspects now!! Here is a handy picture showing ( most of ) the theme-able aspects of a ggplot plot.\nFor more info, type ?theme in your console.\n\n\nggplot Theme Elements\n\n\n## change global theme settings (for all following plots)\ntheme_set(theme_minimal(base_size = 12, base_family = \"open\"))\n\n## modify plot elements globally (for all following plots)\ntheme_update(\n  axis.ticks = element_line(color = \"grey92\"),\n  axis.ticks.length = unit(.5, \"lines\"),\n  panel.grid.minor = element_blank(),\n  legend.title = element_text(size = 12),\n  legend.text = element_text(color = \"grey30\"),\n  plot.title = element_text(size = 18, face = \"bold\"),\n  plot.subtitle = element_text(size = 12, color = \"grey30\"),\n  plot.caption = element_text(size = 9, margin = margin(t = 15))\n)\n\nSince we know what the basic plot looks like, let’s add titles, labels and colours. We will also set limits and scales:\n\nggplot(penguins, aes(x = bill_length_mm, \n                     y = bill_depth_mm)) +\n  \n  geom_point(aes(color = body_mass_g), alpha = .6, \n             size = 3.5) + \n  \n  ## custom axes scaling\n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  \n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n  \n  ## custom colors from the scico package\n  scico::scale_color_scico(palette = \"bamako\", direction = -1) +\n  \n  ## custom labels\n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (Pygoscelis)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) PLoS ONE',\n    x = 'Bill Length (mm)', \n    y = 'Bill Depth (mm)',\n    color = 'Body mass (g)'\n  )"
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#using-ggtext",
    "href": "content/labs/r-labs/graphics/wizardy.html#using-ggtext",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n8 Using {ggtext}\n",
    "text": "8 Using {ggtext}\n\nFrom Claus Wilke’s website (www.wilkelab.org/ggtext)\n\nThe ggtext package provides simple Markdown and HTML rendering for ggplot2. Under the hood, the package uses the gridtext package for the actual rendering, and consequently it is limited to the feature set provided by gridtext.\nSupport is provided for Markdown both in theme elements (plot titles, subtitles, captions, axis labels, legends, etc.) and in geoms (similar to geom_text()). In both cases, there are two alternatives, one for creating simple text labels and one for creating text boxes with word wrapping.\n\nNOTE: on some machines, the ggtext package may not work as expected. In this case, please do as follows, using your Console:\n\nremove gridtext: remove.packages(gridtext).\nInstall development version of gridtext: remotes::install_github(\"wilkelab/gridtext\")\n\n\n\n8.1 element_markdown()\n\nWe can use our familiar markdown syntax right inside the titles and captions of the plot. element_markdown() is a theming command made available by the ggtext package.\nelement_markdown() → formatted text elements, e.g. titles, caption, axis text, strip text\n\n## assign plot to `gt` - we can add new things to this plot later\n## (wrapped in parenthesis so it is assigned and plotted in one step)\n\n(gt &lt;- ggplot(penguins, aes(x = bill_length_mm, \n                            y = bill_depth_mm)) +\n    \n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5) +\n    \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n    \n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n    \n  scico::scale_color_scico(palette = \"bamako\", direction = -1) +\n   \n# New code starts here: Two Step Procedure with ggtext\n# 1. Markdown formatting of labels and title, using asterisks\n# To create italics and bold text in titles\n    \n    \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    \n    x = '**Bill Length** (mm)', \n    y = '**Bill Depth** (mm)',\n    \n    color = 'Body mass (g)'\n  ) +\n   \n  ## 2. Add theme related commands from ggtext\n  ## render respective text elements\n    \n  theme(\n    plot.title = ggtext::element_markdown(),\n    plot.caption = ggtext::element_markdown(),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown()\n  )\n)\n\n\n\n\n\n8.2 element_markdown() in combination with HTML\nThis allows us to change fonts in titles, labels, and captions:\n\n## use HTML syntax to change text color\ngt_mar &lt;- gt +\n  labs(title = 'Bill Dimensions of Brush-Tailed Penguins &lt;i style=\"color:#28A87D;\"&gt;Pygoscelis&lt;/i&gt;') +\n  theme(plot.margin = margin(t = 25))\n\n\n## use HTML syntax to change font and text size\ngt_mar +\n  labs(title = 'Bill Dimensions of Brush-Tailed Penguins &lt;b style=\"font-size:32pt;font-family:tangerine;\"&gt;Pygoscelis&lt;/b&gt;')\n\n\n\n\n\n8.3 Adding images to ggplot\nSave an image from the web in the same folder as your RMarkdown. Use html tags to include it, say as part of your plot title, as shown below.\n\n## use HTML syntax to add images to text elements\ngt_mar + \n  labs(title = 'Bill Dimensions of Brush-Tailed Penguins &nbsp;&nbsp;&nbsp; &lt;img src=\"images/culmen_depth.png\"‚ width=\"480\"/&gt;')\n\n\n\n\n\n8.4 Annotations with geom_richtext() and geom_textbox()\n\nFurther ggplot annotations can be achieved using geom_richtext() and geom_textbox().\ngeom_richtext() also allows formatted text labels with 360° rotation. One needs to pass a dataframe to geom_richtext() giving the location, colour, rotation etc of the label annotation.\n\ngt_rich &lt;- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(color = species), alpha = .6, size = 3.5) + \n  \n  ## add text annotations for each species\n  ggtext::geom_richtext(\n    data = tibble(\n      \n      # Three rich text labels, so three sets of locations x and y, and angle of rotation\n      x = c(34, 56, 54), y = c(20, 18.5, 14.5),\n            angle = c(12, 20, 335),\n      species = c(\"Adélie\", \"Chinstrap\", \"Gentoo\"),\n      lab = c(\"&lt;b style='font-family:anton;font-size:24pt;'&gt;Adélie&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. adéliae&lt;/i&gt;\", \n              \"&lt;b style='font-family:anton;font-size:24pt;'&gt;Chinstrap&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. antarctica&lt;/i&gt;\", \n              \"&lt;b style='font-family:anton;font-size:24pt;'&gt;Gentoo&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. papua&lt;/i&gt;\"),\n\n    ),\n    \n    \n    # Now pass these data variables as aesthetics\n    aes(x, y, label = lab, color = species, angle = angle), \n    \n    size = 4, fill = NA, label.color = NA,\n    lineheight = .3\n  ) +\n  \n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5), \n                     limits = c(12.5, 22.5)) +\n  \n  rcartocolor::scale_color_carto_d(palette = \"Bold\", \n                                   guide = \"none\") +\n  \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)', \n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n  \n  # Use theme and element_markdown() to format axes and titles as usual\n  theme(\n    plot.title = ggtext::element_markdown(),\n    plot.caption = ggtext::element_markdown(),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown(),\n    plot.margin = margin(25, 6, 15, 6)\n  )\n  \ngt_rich\n\n\n\n\n\n8.5 Formatted Text boxes on ggplots\nelement_textbox() and element_textbox_simple() → formatted text boxes with word wrapping\n\ngt_box &lt;- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(color = species), alpha = .6, size = 3.5) +\n  \n  scale_x_continuous(breaks = 3:6 * 10, limits = c(30, 60)) +\n  \n  scale_y_continuous(breaks = seq(12.5, 22.5, by = 2.5),\n                     limits = c(12.5, 22.5)) +\n  \n  rcartocolor::scale_color_carto_d(palette = \"Bold\", guide = \"none\") +\n  \n  ## add text annotations for each species\n  ## Creating a tibble for the labels!\n  ggtext::geom_richtext(\n    data = tibble(\n      # Three rich text labels\n      # So three sets of locations x and y, and angle of rotation\n      x = c(34, 56, 54),\n      y = c(20, 18.5, 14.5),\n      angle = c(12, 20, 335),\n      species = c(\"Adélie\", \"Chinstrap\", \"Gentoo\"),\n      notes = c(\n        \"&lt;b style='font-family:anton;font-size:24pt;'&gt;Adélie&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. adéliae&lt;/i&gt;\",\n        \"&lt;b style='font-family:anton;font-size:24pt;'&gt;Chinstrap&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. antarctica&lt;/i&gt;\",\n        \"&lt;b style='font-family:anton;font-size:24pt;'&gt;Gentoo&lt;/b&gt;&lt;br&gt;&lt;i style='color:darkgrey;'&gt;P. papua&lt;/i&gt;\"\n      )\n      ),\n    \n    \n    # Now pass these data variables as aesthetics\n    aes(\n      x,\n      y,\n      label = notes,\n      color = species,\n      angle = angle\n    ),\n    \n    size = 4,\n    fill = NA,\n    label.color = NA,\n    lineheight = .3\n  ) +\n  \n  \n# Now for the Plot Titles and Labels, as before  \n  labs(\n    title = 'Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)',\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = 'Data: Gorman, Williams & Fraser (2014) *PLoS ONE*',\n    x = '**Bill Length** (mm)',\n    y = '**Bill Depth** (mm)',\n    color = 'Body mass (g)'\n  ) +\n  \n# Add the ggtext theme related commands\n  theme(\n    ## turn title into filled textbox\n    plot.title = ggtext::element_textbox_simple(\n      color = \"white\",\n      fill = \"#28A78D\",\n      size = 32,\n      padding = margin(8, 4, 8, 4),\n      margin = margin(b = 5),\n      lineheight = .9\n    ),\n    ## add round outline to caption\n    plot.caption = ggtext::element_textbox_simple(\n      width = NULL,\n      linetype = 1,\n      padding = margin(4, 8, 4, 8),\n      margin = margin(t = 15),\n      r = grid::unit(8, \"pt\")\n    ),\n    axis.title.x = ggtext::element_markdown(),\n    axis.title.y = ggtext::element_markdown(),\n    plot.margin = margin(25, 6, 15, 6)\n  )\n\ngt_box\n\n\n\n\ngeom_textbox() → formatted text boxes with word wrapping\n\ngt_box +\n  ## add textbox with long paragraphs\n  ggtext::geom_textbox(\n    data = tibble(x = 34, y = 13.7, label = \"&lt;span style='font-size:12pt;font-family:anton;'&gt;Lorem Ipsum Dolor Sit Amet&lt;/span&gt;&lt;br&gt;&lt;br&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"),\n    aes(x, y, label = label),\n    size = 2.2, family = \"sans\",\n    fill = \"cornsilk\", box.color = \"cornsilk3\",\n    width = unit(11, \"lines\")\n  ) +\n  coord_cartesian(clip = \"off\") # ensure no clipping of labels near the edge"
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#using-ggforce",
    "href": "content/labs/r-labs/graphics/wizardy.html#using-ggforce",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n9 Using {ggforce}\n",
    "text": "9 Using {ggforce}\n\nFrom Thomas Lin Pedersen’s website → www.ggforce.data-imaginist.com\n\nggforce is a package aimed at providing missing functionality to ggplot2 through the extension system introduced with ggplot2 v2.0.0. Broadly speaking ggplot2 has been aimed primarily at explorative data visualization in order to investigate the data at hand, and less at providing utilities for composing custom plots a la D3.js. ggforce is mainly an attempt to address these “shortcoming” (design choices might be a better description). The goal is to provide a repository of geoms, stats, etc. that are as well documented and implemented as the official ones found in ggplot2.\n\nWe will start with the basic plot, with the ggtext related work done up to now:\n\n## use ggtext rendering for the following plots\ntheme_update(\n  plot.title = ggtext::element_markdown(),\n  plot.caption = ggtext::element_markdown(),\n  axis.title.x = ggtext::element_markdown(),\n  axis.title.y = ggtext::element_markdown()\n)\n\n\n## plot that we will annotate with ggforce afterwards\n(gf &lt;- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n  scico::scale_color_scico(palette = \"bamako\", direction = -1) +\n  coord_cartesian(xlim = c(25, 65), ylim = c(10, 25)) +\n  rcartocolor::scale_fill_carto_d(palette = \"Bold\") +\n  labs(\n    title = \"Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)\",\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE*\",\n    x = \"**Bill Length** (mm)\", \n    y = \"**Bill Depth** (mm)\",\n    color = \"Body mass (g)\",\n    fill = \"Species\"\n  ))\n\n\n\n\n\n## ellipsoids for all groups\n(gf +\n  ggforce::geom_mark_ellipse(\n    aes(fill = species, label = species), \n    alpha = .15, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)\n)\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n\n\n\n\n\n\n## ellipsoids for specific subset\n(gf +\n  ggforce::geom_mark_ellipse(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)\n#   coord_cartesian(xlim = c(25, 65), ylim = c(10, 25))\n)\n\n\n\n\n\n## circles\n(gf +\n  ggforce::geom_mark_circle(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)\n)\n\n\n\n\n\n## rectangles\n(gf +\n  ggforce::geom_mark_rect(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5) \n)\n\n\n\n\n\nlibrary(concaveman)\n## hull\n(gf +\n  ggforce::geom_mark_hull(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)\n)"
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#ggplot-tricks",
    "href": "content/labs/r-labs/graphics/wizardy.html#ggplot-tricks",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n10 ggplot tricks",
    "text": "10 ggplot tricks\n\n(gg0 &lt;- \n  ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n    ggforce::geom_mark_ellipse(\n      aes(fill = species, label = species), \n      alpha = 0, show.legend = FALSE\n    ) +\n    geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5) + \n    scale_x_continuous(breaks = seq(25, 65, by = 5), limits = c(25, 65)) +\n    scale_y_continuous(breaks = seq(12, 24, by = 2), limits = c(12, 24)) +\n    scico::scale_color_scico(palette = \"bamako\", direction = -1) +\n    labs(\n      title = \"Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)\",\n      subtitle = 'A scatter plot of bill depth versus bill length.',\n      caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE*\",\n      x = \"Bill Length (mm)\", \n      y = \"Bill Depth (mm)\",\n      color = \"Body mass (g)\"\n    )\n)\n\n\n\n\n\n10.1 Left-Aligned Title\n\n(gg1 &lt;- gg0 + theme(plot.title.position = \"plot\"))\n\n\n\n\n\n10.2 Right-Aligned Caption\n\n(gg1b &lt;- gg1 +  theme(plot.caption.position = \"panel\"))\n\n\n\n\n\n10.3 Legend Design\n\n(gg2 &lt;- gg1b + theme(legend.position = \"top\"))\n\n\n\nggsave(\"06a_legend_position.pdf\", width = 9, height = 8, device = cairo_pdf)\n\n(gg2b &lt;- gg2 + \n  guides(color = guide_colorbar(title.position = \"top\", \n                                title.hjust = .5, \n                                barwidth = unit(20, \"lines\"), \n                                barheight = unit(.5, \"lines\"))))\n\n\n\n\n\n10.4 Add Images\n\n## read PNG file from web\npng &lt;- magick::image_read(\"https://raw.githubusercontent.com/allisonhorst/palmerpenguins/master/man/figures/culmen_depth.png\")\n## turn image into `rasterGrob`\nimg &lt;- grid::rasterGrob(png, interpolate = TRUE)\n\ngg3 &lt;- gg2b +\n  annotation_custom(img, ymin = 18.5, ymax = 30.5, xmin = 55, xmax = 65.5) +\n    labs(caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE* &bull; Illustration: Allison Horst\")\ngg3\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead."
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#using-patchwork",
    "href": "content/labs/r-labs/graphics/wizardy.html#using-patchwork",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n11 Using {patchwork}\n",
    "text": "11 Using {patchwork}\n\n\nThe goal of patchwork is to make it ridiculously simple to combine separate ggplots into the same graphic. As such it tries to solve the same problem as gridExtra::grid.arrange() and cowplot::plot_grid but using an API that incites exploration and iteration, and scales to arbitrily complex layouts.\n\n→ https://patchwork.data-imaginist.com/\nLet us make two plots and combine them into a single patchwork plot.\n\n## calculate bill ratio\npenguins_stats &lt;- penguins %&gt;% \n  mutate(bill_ratio = bill_length_mm / bill_depth_mm) %&gt;% \n  filter(!is.na(bill_ratio))\n\n## create a second chart\ngg4 &lt;- ggplot(penguins_stats, aes(y = bill_ratio, x = species, fill = species, color = species)) + geom_violin() + \n  labs(\n    y = \"Bill ratio\",\n    x = \"Species\",\n    subtitle = \"\",\n    caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE* &bull; Illustration: Allison Horst\"\n  ) +\n  theme(\n    panel.grid.major.x = element_line(size = .35),\n    panel.grid.major.y = element_blank(),\n    axis.text.y = element_text(size = 13),\n    axis.ticks.length = unit(0, \"lines\"),\n    plot.title.position = 'plot',\n    plot.subtitle = element_text(margin = margin(t = 5, b = 10)),\n    plot.margin = margin(10, 25, 10, 25)\n  )\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\nNow to combine both plots into one using simple operators:\n\nFor the special case of putting plots besides each other or on top of each other patchwork provides 2 shortcut operators. | will place plots next to each other while / will place them on top of each other.\n\nFirst we stack up the graphs side by side:\n\n## combine both plots\ngg3 | (gg4 + labs(title = \"Bill Ratios of Brush-Tailed Penguins\",\n                  subtitle = \"Violin Plots of Bill Ration versus species\"))\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n\n\n\n\n\nWe can place them in one column:\n\ngg3 / (gg3 + labs(title = \"Bill Ratios of Brush-Tailed Penguins\",\n                  subtitle = \"Violin Plots of Bill Ration versus species\")) +\n  plot_layout(heights = c(0.4, 0.4))"
  },
  {
    "objectID": "content/labs/r-labs/graphics/wizardy.html#resources",
    "href": "content/labs/r-labs/graphics/wizardy.html#resources",
    "title": "Lab 06a: Fonts, Themes, and other Wizardy in ggplot",
    "section": "\n12 Resources",
    "text": "12 Resources\n\n\nIntro to R (one of many good online tutorials)\n“R for Data Science” book (open-access)\nggplot2 Book (open-access)\nR Graph Gallery\nSlides of Cedric Scherer’s talk\nExtensive ggplot2 tutorial\n“Evolution of a ggplot” blog post by Cedric Scherer\n\n#TidyTuesday project (#TidyTuesday on Twitter)\n\n#TidyTuesday Contributions by Cedric Scherer incl. all codes\n\nR4DS learning community (huge Slack community for people learning R incl. a mentoring program)\n\nIllustrations by Allison Horst (more general about data and stats + R-related)\nR Packages:\n\nggplot2\nggtext\nggforce\nggdist\nggraph\nggstream\nggbump\ngggibous\nwaffle\ngeofacet\ncartogram\npatchwork\nsf"
  },
  {
    "objectID": "content/labs/r-labs/installation/installation.html",
    "href": "content/labs/r-labs/installation/installation.html",
    "title": "Lab 01 - Introduce Yourself",
    "section": "",
    "text": "At the end of this Lab, we will:\n\nhave installed R and RStudio on our machines\nunderstood how to add additional R-packages for specific features and graphic capability\nrun code within RStudio and interpret the results\nhave learnt to look for help within R and RStudio"
  },
  {
    "objectID": "content/labs/r-labs/installation/installation.html#Check-In-R",
    "href": "content/labs/r-labs/installation/installation.html#Check-In-R",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n3.1 Check in",
    "text": "3.1 Check in\nLaunch R by clicking this logo. You should see one console with a command line interpreter. Try typing 2 + 2 and check !\nClose R."
  },
  {
    "objectID": "content/labs/r-labs/installation/installation.html#Check-In-RStudio",
    "href": "content/labs/r-labs/installation/installation.html#Check-In-RStudio",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n4.1 Check in",
    "text": "4.1 Check in\nLaunch RStudio. You should get a window similar to the screenshot you see here, but yours will be empty. Look at the bottom left pane: this is the same console window you saw when you opened R in step @Check-In-R\n\nPlace your cursor where you see &gt; and type x &lt;- 2 + 2 again hit enter or return, then type x, and hit enter/return again.\nIf [1] 4 prints to the screen, you have successfully installed R and RStudio, and you can move onto installing packages."
  },
  {
    "objectID": "content/labs/r-labs/installation/installation.html#save-and-share",
    "href": "content/labs/r-labs/installation/installation.html#save-and-share",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n7.1 Save and share",
    "text": "7.1 Save and share\nSave your work so you can share your favorite plot with us. You will not like the looks of your plot if you mouse over to Export and save it. Instead, use ggplot2’s command for saving a plot with sensible defaults:\n\nhelp(ggsave)\n\n\nggsave(\"file_name_here.pdf\", plot) # please make the filename unique!"
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html",
    "href": "content/labs/r-labs/maps/gram-maps.html",
    "title": "The Grammar of Maps",
    "section": "",
    "text": "This RMarkdown document is part of my Workshop Course in R. The intent is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll RMarkdown/Quarto files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#set-up",
    "href": "content/labs/r-labs/maps/gram-maps.html#set-up",
    "title": "The Grammar of Maps",
    "section": "\n3.1 Set Up",
    "text": "3.1 Set Up\nThe setup code chunk below brings into our coding session R packages that provide specific computational abilities and also datasets which we can use.\nTo reiterate: Packages and datasets are not the same thing !! Packages are (small) collections of programs. Datasets are just….information."
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#using-open-street-map-osm",
    "href": "content/labs/r-labs/maps/gram-maps.html#using-open-street-map-osm",
    "title": "The Grammar of Maps",
    "section": "\n7.1 Using Open Street Map (OSM)",
    "text": "7.1 Using Open Street Map (OSM)\n\nOpenStreetMap (OSM) provides maps of the world mostly created by volunteers. They are completely free to browse and use, with attribution to © OpenStreetMap contributors and adherence to the ODbL license required, and are used by many public and private organisations. OSM data can be downloaded in vector format and used for our own purposes. In this tutorial, we will obtain data from OSM using a query. A query is a request for data from a database. Simple queries can be performed more easily using the osmdata library for R, which automatically constructs the query and imports the data in a convenient format."
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#osm-feature-key-value-pairs",
    "href": "content/labs/r-labs/maps/gram-maps.html#osm-feature-key-value-pairs",
    "title": "The Grammar of Maps",
    "section": "\n7.2 OSM feature key-value pairs",
    "text": "7.2 OSM feature key-value pairs\nOpen Street Map features have attributes in key-value pairs. We can use them to download the specific data we need. These features can easily be explored in the web browser, by using the ‘Query features’ button on OpenStreetMap (OSM):\n\nHead off to OSM Street Map to try this out and to get an intuitive understanding of what OSM key-value pairs are, for different types of map features. Look for places of interest to you (features) and see what key-value pairs attach to those features.\nNOTE: key-value pairs are also referred to as tags.\nUseful key-value pairs / tags include:\n\n\n\n\n\n\nKEY\nVALUEs\n\n\n\nbuilding\nyes (all), house residential, apartments\n\n\nhighway\nresidential, service, track, unclassified, footway, path\n\n\namenity\nparking, parking_space, bench; place_of_worship; restaurant, cafe, fast_food; school, waste_basket, fuel, bank, toilets…\n\n\nshop\nconvenience, supermarket, clothes, hairdresser, car-repair…\n\n\nname\nactual name of the place e.g. Main_Street, McDonald’s, Pizza Hut, Subway\n\n\n\nwaterway\n\n\n\nnatural\n\n\n\nboundary\n\n\n\n\nFor more information see:\nSee OSM Tags for a nice visual description of popular key-value pairs that we can use. See what the highway tag looks like tag : highway"
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#downloading-data-from-open-street-map",
    "href": "content/labs/r-labs/maps/gram-maps.html#downloading-data-from-open-street-map",
    "title": "The Grammar of Maps",
    "section": "\n7.3 Downloading Data from Open Street Map",
    "text": "7.3 Downloading Data from Open Street Map\nNow we know the map features we are interested in. We also know what key-value pairs will be used to get this info from OSM. We will get our map data from OSM and then save it avoid repeated downloads. So, please copy/paste and run the following commands in your console.\nDo not run these commands too many times. Re-run this ONLY if you have changed your BOUNDING BOX.\n\n# Eval is set to false here\n# This code is for reference\n# Run these commands ONCE in your Console\n\n# Get all buildings within my bbox\ndat_buildings &lt;-extract_osm_objects (key = \"building\", \n                                     bbox = bbox_2)\n\n# Get all residential roads within my bbox\ndat_roads &lt;- extract_osm_objects (key = 'highway', \n                                     value = c(\"residential\"),\n                                     bbox = bbox_2)\n\n# Get all parks within my bbox\ndat_parks &lt;- extract_osm_objects (key = 'park', \n                                  bbox = bbox_2)\n\n# Get all green areas within my bbox\ndat_greenery &lt;- extract_osm_objects (key = 'landuse', \n                                  value = 'grass', \n                                  bbox = bbox_2)\n\ndat_trees &lt;- extract_osm_objects (key = 'natural', \n                                  value = 'tree', \n                                  bbox = bbox_2)\n\n\n7.3.1 Let us save this data, so we don’t need to download all this again!\nWe will store the downloaded data as .gpkg files on our local hard drives to use when we run this file again later. We will name our stored files as buildings, parks, roads, and trees, each with the .gpkg file extension, e.g. trees.gpkg.\nCheck your local project folder for these files after executing these commands.\n\n# Eval is set to false here\n# This code is for reference\n# Run these commands ONCE in your Console\n\nst_write(dat_buildings, \n         dsn = \"buildings.gpkg\", \n         append = FALSE, \n         quiet = FALSE)\n\nst_write(dat_parks, dsn = \"parks.gpkg\", \n         append = FALSE, quiet = FALSE)\n\nst_write(dat_greenery, dsn = \"greenery.gpkg\", \n         append = FALSE,quiet = FALSE)\n\nst_write(dat_trees, dsn = \"trees.gpkg\", \n         append = FALSE,quiet = FALSE)\n\nst_write(dat_roads, dsn = \"roads.gpkg\", \n         append = FALSE, quiet = FALSE)\n\nAlways work from here to avoid repeated downloads from OSM. Start from the top ONLY if you intend to map new locations and need to modify your Bounding Box.\n\n7.3.2 Reading Back the saved Data\n\nbuildings &lt;- st_read(\"./buildings.gpkg\")\n\nReading layer `buildings' from data source \n  `C:\\Users\\Arvind\\Documents\\R work\\MyWebsites\\my-quarto-website\\content\\labs\\r-labs\\maps\\buildings.gpkg' \n  using driver `GPKG'\nSimple feature collection with 34766 features and 89 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 77.56221 ymin: 12.90906 xmax: 77.60373 ymax: 12.9497\nGeodetic CRS:  WGS 84\n\nparks &lt;- st_read(\"./parks.gpkg\")\n\nReading layer `parks' from data source \n  `C:\\Users\\Arvind\\Documents\\R work\\MyWebsites\\my-quarto-website\\content\\labs\\r-labs\\maps\\parks.gpkg' \n  using driver `GPKG'\nSimple feature collection with 62 features and 25 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 77.56196 ymin: 12.90692 xmax: 77.60389 ymax: 12.95397\nGeodetic CRS:  WGS 84\n\ngreenery &lt;- st_read(\"./greenery.gpkg\")\n\nReading layer `greenery' from data source \n  `C:\\Users\\Arvind\\Documents\\R work\\MyWebsites\\my-quarto-website\\content\\labs\\r-labs\\maps\\greenery.gpkg' \n  using driver `GPKG'\nSimple feature collection with 2 features and 2 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 77.56776 ymin: 12.91751 xmax: 77.57392 ymax: 12.94811\nGeodetic CRS:  WGS 84\n\ntrees &lt;- st_read(\"./trees.gpkg\")\n\nReading layer `trees' from data source \n  `C:\\Users\\Arvind\\Documents\\R work\\MyWebsites\\my-quarto-website\\content\\labs\\r-labs\\maps\\trees.gpkg' \n  using driver `GPKG'\nSimple feature collection with 153 features and 9 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 77.56566 ymin: 12.90806 xmax: 77.60096 ymax: 12.94914\nGeodetic CRS:  WGS 84\n\nroads &lt;- st_read(\"./roads.gpkg\")\n\nReading layer `roads' from data source \n  `C:\\Users\\Arvind\\Documents\\R work\\MyWebsites\\my-quarto-website\\content\\labs\\r-labs\\maps\\roads.gpkg' \n  using driver `GPKG'\nSimple feature collection with 2242 features and 28 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 77.55895 ymin: 12.90635 xmax: 77.60603 ymax: 12.95636\nGeodetic CRS:  WGS 84\n\n\n\n7.3.3 Let’s look at the data\nHow many rows? ( Rows -&gt; Features ) What kind of geom column?\n\n# How many buildings?\nnrow(buildings)\n\n[1] 34766\n\nbuildings$geom\n\nGeometry set for 34766 features \nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 77.56221 ymin: 12.90906 xmax: 77.60373 ymax: 12.9497\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nPOLYGON ((77.58405 12.93005, 77.5845 12.93005, ...\n\n\nPOLYGON ((77.57568 12.9199, 77.57592 12.9199, 7...\n\n\nPOLYGON ((77.59592 12.94016, 77.59676 12.94022,...\n\n\nPOLYGON ((77.5937 12.94011, 77.59458 12.94015, ...\n\n\nPOLYGON ((77.59321 12.94042, 77.59321 12.94035,...\n\nclass(buildings$geom)\n\n[1] \"sfc_POLYGON\" \"sfc\"        \n\n\nSo the buildings dataset has 34766 buildings and their geometry is naturally a POLYGON type of geometry column.\n\n7.3.4 Your Turn 1\nDo this check for all the other spatial data, in the code chunk below. What kind of geom column does each dataset have?\n\n\n\n\n7.3.5 What Other Kinds of Data could we get from OSM?\nosm_structures returns a data.frame of OSM structure types, associated key-value pairs and unique suffixes which may be appended to data structures/filenames for storage purposes, and suggested colours.\n\nosmplotr::osm_structures()\n\n\n\n  \n\n\n\nWe can use these key-value pairs to download different types of map data."
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#ggplot-and-geom_sf",
    "href": "content/labs/r-labs/maps/gram-maps.html#ggplot-and-geom_sf",
    "title": "The Grammar of Maps",
    "section": "\n8.1 ggplot and geom_sf()",
    "text": "8.1 ggplot and geom_sf()\nFirst we will plot with ggplot and geom_sf() : recall that our data is stored in 5 files: buildings, parks, roads, trees, and greenery.\n\nggplot() +\n  geom_sf(data = buildings, colour = \"orange\") +    # POLYGONS\n  geom_sf(data = roads, col = \"gray20\") +           # LINES\n  geom_sf(data = parks, col = \"darkseagreen1\") +    # POLYGONS\n  geom_sf(data = greenery, col = \"darkseagreen\") +  # POLYGONS\n  geom_sf(data = trees, col = \"green\")              # POINTS\n\n\n\n\nNote how geom_sf is capable of handling any geometry in the sfc column !!\n\ngeom_sf() is an unusual geom because it will draw different geometric objects depending on what simple features are present in the data: you can get points, lines, or polygons.\n\nSo there, we have our first map!"
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#map-using-tmap-package",
    "href": "content/labs/r-labs/maps/gram-maps.html#map-using-tmap-package",
    "title": "The Grammar of Maps",
    "section": "\n8.2 Map using tmap package",
    "text": "8.2 Map using tmap package\nWe can also create a map using a package called tmap. Here we also have the option of making the map interactive. tmap plots are made with code in “groups”: each group starts with a tm_shape() command.\n\n# Group-1\ntm_shape(buildings) +\n  tm_fill(col = \"mediumblue\") +\n\n#Group-2\ntm_shape(roads) +\n  tm_lines(col = \"gold\") +\n\n#Group-3  \ntm_shape(greenery) +\n  tm_polygons(col = \"limegreen\") +\n  \n#Group-4  \ntm_shape(parks) +\n  tm_polygons(col = \"limegreen\") +\n\n#Group-5  \ntm_shape(trees) +\n  tm_dots(col = \"green\")\n\n\n\n\nHow do we make this map interactive? One more line of code !! Add this line in your console and then run the above chunk again\ntmap_mode(\"view\")"
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#using-data-from-rnaturalearth",
    "href": "content/labs/r-labs/maps/gram-maps.html#using-data-from-rnaturalearth",
    "title": "The Grammar of Maps",
    "section": "\n9.1 Using data from rnaturalearth\n",
    "text": "9.1 Using data from rnaturalearth\n\nThe rnaturalearth package allows us to download shapes of countries. We can use it to get borders and also internal state/district boundaries.\n\nindia &lt;- \n  ne_states(country =  \"india\", \n            returnclass = \"sf\") # gives a ready sf dataframe !\n\nindia_neighbours &lt;- \n  ne_states(country = (c(\"sri lanka\", \"pakistan\",\n                         \"afghanistan\", \"nepal\",\"bangladesh\", \"bhutan\")\n                       ),\n            returnclass = \"sf\")\n\nLet’s look at the attribute variable columns to colour our graph and to shape our symbols:\n\nnames(india)\n\n [1] \"featurecla\" \"scalerank\"  \"adm1_code\"  \"diss_me\"    \"iso_3166_2\"\n [6] \"wikipedia\"  \"iso_a2\"     \"adm0_sr\"    \"name\"       \"name_alt\"  \n[11] \"name_local\" \"type\"       \"type_en\"    \"code_local\" \"code_hasc\" \n[16] \"note\"       \"hasc_maybe\" \"region\"     \"region_cod\" \"provnum_ne\"\n[21] \"gadm_level\" \"check_me\"   \"datarank\"   \"abbrev\"     \"postal\"    \n[26] \"area_sqkm\"  \"sameascity\" \"labelrank\"  \"name_len\"   \"mapcolor9\" \n[31] \"mapcolor13\" \"fips\"       \"fips_alt\"   \"woe_id\"     \"woe_label\" \n[36] \"woe_name\"   \"latitude\"   \"longitude\"  \"sov_a3\"     \"adm0_a3\"   \n[41] \"adm0_label\" \"admin\"      \"geonunit\"   \"gu_a3\"      \"gn_id\"     \n[46] \"gn_name\"    \"gns_id\"     \"gns_name\"   \"gn_level\"   \"gn_region\" \n[51] \"gn_a1_code\" \"region_sub\" \"sub_code\"   \"gns_level\"  \"gns_lang\"  \n[56] \"gns_adm1\"   \"gns_region\" \"min_label\"  \"max_label\"  \"min_zoom\"  \n[61] \"wikidataid\" \"name_ar\"    \"name_bn\"    \"name_de\"    \"name_en\"   \n[66] \"name_es\"    \"name_fr\"    \"name_el\"    \"name_hi\"    \"name_hu\"   \n[71] \"name_id\"    \"name_it\"    \"name_ja\"    \"name_ko\"    \"name_nl\"   \n[76] \"name_pl\"    \"name_pt\"    \"name_ru\"    \"name_sv\"    \"name_tr\"   \n[81] \"name_vi\"    \"name_zh\"    \"ne_id\"      \"geometry\"  \n\nnames(india_neighbours)\n\n [1] \"featurecla\" \"scalerank\"  \"adm1_code\"  \"diss_me\"    \"iso_3166_2\"\n [6] \"wikipedia\"  \"iso_a2\"     \"adm0_sr\"    \"name\"       \"name_alt\"  \n[11] \"name_local\" \"type\"       \"type_en\"    \"code_local\" \"code_hasc\" \n[16] \"note\"       \"hasc_maybe\" \"region\"     \"region_cod\" \"provnum_ne\"\n[21] \"gadm_level\" \"check_me\"   \"datarank\"   \"abbrev\"     \"postal\"    \n[26] \"area_sqkm\"  \"sameascity\" \"labelrank\"  \"name_len\"   \"mapcolor9\" \n[31] \"mapcolor13\" \"fips\"       \"fips_alt\"   \"woe_id\"     \"woe_label\" \n[36] \"woe_name\"   \"latitude\"   \"longitude\"  \"sov_a3\"     \"adm0_a3\"   \n[41] \"adm0_label\" \"admin\"      \"geonunit\"   \"gu_a3\"      \"gn_id\"     \n[46] \"gn_name\"    \"gns_id\"     \"gns_name\"   \"gn_level\"   \"gn_region\" \n[51] \"gn_a1_code\" \"region_sub\" \"sub_code\"   \"gns_level\"  \"gns_lang\"  \n[56] \"gns_adm1\"   \"gns_region\" \"min_label\"  \"max_label\"  \"min_zoom\"  \n[61] \"wikidataid\" \"name_ar\"    \"name_bn\"    \"name_de\"    \"name_en\"   \n[66] \"name_es\"    \"name_fr\"    \"name_el\"    \"name_hi\"    \"name_hu\"   \n[71] \"name_id\"    \"name_it\"    \"name_ja\"    \"name_ko\"    \"name_nl\"   \n[76] \"name_pl\"    \"name_pt\"    \"name_ru\"    \"name_sv\"    \"name_tr\"   \n[81] \"name_vi\"    \"name_zh\"    \"ne_id\"      \"geometry\"  \n\n# Look only at attributes\nindia %&gt;% st_drop_geometry() %&gt;% head()\n\n\n\n  \n\n\nindia_neighbours %&gt;% st_drop_geometry() %&gt;% head()\n\n\n\n  \n\n\n\nIn the india data frame:\n- Column iso_a2 contains the country name.\n- Column name contains the name of the state\nIn the india_neighbours data frame:\n- Column gu_a3 contains the country abbreviation\n- Column name contains the name of the state\n- Column iso_3166_2 contains the abbreviation of the state within each neighbouring country.\n\n9.1.1 Map 1\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\n# Plot India\n  tm_shape(india) +\n  tm_polygons(\"name\", # Colour by States in India\n              legend.show = FALSE) +\n  \n# Plot Neighbours\n  tm_shape(india_neighbours) +\n  tm_fill(col = \"gu_a3\") +  # Colour by Country Name\n  \n# Plot the cities in India alone\n  tm_shape(metro %&gt;% dplyr::filter(iso_a3 == \"IND\")) +\n    \n  tm_dots(size = \"pop2020\",legend.size.show = FALSE) +\n    # size by population in 2020\n    \n  tm_layout(legend.show = FALSE) +\n  tm_credits(\"Geographical Boundaries are not accurate\",\n             size = 0.5,\n             position = \"right\") +\n  tm_compass(position = c(\"right\", \"top\")) +\n  tm_scale_bar(position = \"left\") +\n  tmap_style(style = \"classic\") \n\nold-style crs object detected; please recreate object with a recent sf::st_crs()\n\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\n\nCredits not supported in view mode.\n\n\nCompass not supported in view mode.\n\n\nWarning: Number of levels of the variable \"name\" is 35, which is larger than\nmax.categories (which is 30), so levels are combined. Set\ntmap_options(max.categories = 35) in the layer function to show all levels.\n\n\n\n\n\n\n#Try other map styles\n#cobalt #gray #white #watercolor #beaver #classic #watercolor #albatross #bw #col_blind"
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#your-turn-2",
    "href": "content/labs/r-labs/maps/gram-maps.html#your-turn-2",
    "title": "The Grammar of Maps",
    "section": "\n9.2 Your Turn 2",
    "text": "9.2 Your Turn 2\nCan you try to download a map area of your home town and plot it as we have above?"
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#adding-my-favourite-restaurants-to-the-map",
    "href": "content/labs/r-labs/maps/gram-maps.html#adding-my-favourite-restaurants-to-the-map",
    "title": "The Grammar of Maps",
    "section": "\n9.3 Adding my favourite Restaurants to the map",
    "text": "9.3 Adding my favourite Restaurants to the map\nIs it time to order on Swiggy…\nLet us adding interesting places to our map: say based on your favourite restaurants etc. We need restaurant data: lat/long + name + maybe type of restaurant. This can be manually created ( like all of OSMdata ) or if it is already there we can download using key-value pairs in our OSM data query.\nRestaurants can be downloaded using key= \"amenity\", value = \"restaurant\". Since we want JUST their location, and not the restaurant BUILDINGs, we say return_type = \"points\".\nThere are also other tags to explore!Searching for McDonalds for instance…( key = \"name\", value = \"McDonalds\")\n\n# Again, run these commands in your Console\ndat_R &lt;- extract_osm_objects(bbox = bbox_2, \n                             key = \"amenity\", \n                             value = \"restaurant\", \n                             return_type = \"point\") #&lt;&lt;\n\n# Save the data for future use\nwrite_sf(dat_R, dsn = \"restaurants.gpkg\",append = FALSE, quiet = FALSE)\n\nNote the return_type parameter: we want the location and not the building in which the restaurant is!!"
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#reading-the-saved-restaurant-data",
    "href": "content/labs/r-labs/maps/gram-maps.html#reading-the-saved-restaurant-data",
    "title": "The Grammar of Maps",
    "section": "\n9.4 Reading the saved Restaurant Data",
    "text": "9.4 Reading the saved Restaurant Data\n\nrestaurants &lt;- st_read(\"./restaurants.gpkg\")\n\nReading layer `restaurants' from data source \n  `C:\\Users\\Arvind\\Documents\\R work\\MyWebsites\\my-quarto-website\\content\\labs\\r-labs\\maps\\restaurants.gpkg' \n  using driver `GPKG'\nSimple feature collection with 203 features and 33 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 77.56373 ymin: 12.9105 xmax: 77.60104 ymax: 12.94917\nGeodetic CRS:  WGS 84\n\n\nHow many restaurants have we got?\n\nrestaurants %&gt;% nrow()\n\n[1] 203\n\n\nSo the restaurants dataset has 203 restaurants and their geometry is naturally a POINT type of geometry column.\nThese are the names of columns in the Restaurant Data: Note the cuisine column.\n\nnames(restaurants)\n\n [1] \"osm_id\"             \"name\"               \"addr.city\"         \n [4] \"addr.housename\"     \"addr.housenumber\"   \"addr.postcode\"     \n [7] \"addr.street\"        \"alt_name\"           \"amenity\"           \n[10] \"building\"           \"capacity\"           \"cuisine\"           \n[13] \"delivery\"           \"description\"        \"diet.vegetarian\"   \n[16] \"email\"              \"food\"               \"internet_access\"   \n[19] \"level\"              \"name.en\"            \"name.kn\"           \n[22] \"note\"               \"opening_hours\"      \"operator\"          \n[25] \"phone\"              \"smoking\"            \"source\"            \n[28] \"takeaway\"           \"toilets.wheelchair\" \"website\"           \n[31] \"wheelchair\"         \"wikidata\"           \"wikipedia\"         \n[34] \"geom\"              \n\n\nSo let us plot the restaurants as POINTs using the restaurants data we have downloaded. The cuisine attribute looks interesting; let us colour the POINT based on the cuisine offered at that restaurant.\nSo Let’s look therefore at the cuisine column!\n\n# ( I want pizza...)\nrestaurants$cuisine %&gt;% unique()\n\n [1] NA                                       \n [2] \"indian\"                                 \n [3] \"italian\"                                \n [4] \"regional\"                               \n [5] \"pizza\"                                  \n [6] \"ice_cream\"                              \n [7] \"chinese\"                                \n [8] \"South_Indian\"                           \n [9] \"Multi-cuisne\"                           \n[10] \"South_India\"                            \n[11] \"chicken;regional\"                       \n[12] \"arab\"                                   \n[13] \"indian;seafood;fine_dining\"             \n[14] \"fast_food\"                              \n[15] \"kebab;grill\"                            \n[16] \"chicken\"                                \n[17] \"chinese;sandwich;tea;indian;coffee_shop\"\n[18] \"indian,_japanese\"                       \n[19] \"indian;regional\"                        \n\n\nBig mess…many NAs, some double entries, separated by commas and semicolons….\n\n\nThe cuisine attribute:\n\n\nNote: The cuisine variable has more than one entry for a given restaurant. We use tidyr::separate() to make multiple columns out of the cuisine column and retain the first one only. Since the entries are badly entered using both “;” and “,” we need to do this twice ;-() Bad Data entry!!\n\n\nLet’s get one cuisine entry per restaurant, and drop off the ones that do not mention a cuisine at all:\n\nrestaurants &lt;- restaurants %&gt;% \n  drop_na(cuisine) %&gt;% # Knock off nondescript restaurants\n  \n  # Some have more than one classification ;-()\n  # Separated by semicolon or comma, so....\n  separate_wider_delim(cols = cuisine, \n                       names = c(\"cuisine\", NA, NA), \n                       delim = \";\", \n                       too_few = \"align_start\",\n                       too_many = \"drop\") %&gt;% \n  separate_wider_delim(cols = cuisine, \n                       names = c(\"cuisine\", NA, NA), \n                       delim = \",\",\n                       too_few = \"align_start\",\n                       too_many = \"drop\")\n\n# Finally good food?\nrestaurants$cuisine\n\n  [1] \"indian\"       \"italian\"      \"indian\"       \"indian\"       \"regional\"    \n  [6] \"indian\"       \"pizza\"        \"regional\"     \"ice_cream\"    \"ice_cream\"   \n [11] \"indian\"       \"chinese\"      \"chinese\"      \"indian\"       \"italian\"     \n [16] \"regional\"     \"indian\"       \"indian\"       \"italian\"      \"regional\"    \n [21] \"indian\"       \"chinese\"      \"indian\"       \"indian\"       \"indian\"      \n [26] \"indian\"       \"indian\"       \"ice_cream\"    \"pizza\"        \"South_Indian\"\n [31] \"regional\"     \"regional\"     \"Multi-cuisne\" \"South_India\"  \"indian\"      \n [36] \"indian\"       \"chicken\"      \"arab\"         \"indian\"       \"regional\"    \n [41] \"regional\"     \"regional\"     \"regional\"     \"regional\"     \"indian\"      \n [46] \"indian\"       \"indian\"       \"indian\"       \"regional\"     \"regional\"    \n [51] \"italian\"      \"regional\"     \"regional\"     \"regional\"     \"regional\"    \n [56] \"regional\"     \"regional\"     \"regional\"     \"regional\"     \"regional\"    \n [61] \"regional\"     \"regional\"     \"regional\"     \"fast_food\"    \"indian\"      \n [66] \"regional\"     \"italian\"      \"regional\"     \"regional\"     \"regional\"    \n [71] \"regional\"     \"regional\"     \"regional\"     \"italian\"      \"fast_food\"   \n [76] \"regional\"     \"fast_food\"    \"regional\"     \"chinese\"      \"regional\"    \n [81] \"regional\"     \"regional\"     \"regional\"     \"regional\"     \"regional\"    \n [86] \"regional\"     \"regional\"     \"regional\"     \"regional\"     \"regional\"    \n [91] \"regional\"     \"regional\"     \"regional\"     \"regional\"     \"regional\"    \n [96] \"regional\"     \"regional\"     \"regional\"     \"regional\"     \"kebab\"       \n[101] \"chicken\"      \"chinese\"      \"indian\"       \"italian\"      \"indian\"      \n[106] \"indian\"       \"indian\"      \n\n\nLooks clean! Each entry is only ONE and not multiple any more. Now let’s plot the Restaurants as POINTs:\n\n# http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\n# \nggplot() +\n  geom_sf(data = buildings, colour = \"burlywood1\") +\n  geom_sf(data = roads, colour = \"gray80\") +\n  geom_sf(\n    data = restaurants %&gt;% drop_na(cuisine),\n    aes(fill = cuisine),\n    colour = \"black\",\n    shape = 21,\n    size = 3\n  ) +\n  theme(legend.position = \"right\") +\n  labs(title = \"Restaurants in South Central Bangalore\",\n       caption = \"Based on osmdata\")\n\n\n\n\nWe could have done a (much!) better job, by combining cuisines into simpler and fewer categories, ( South_India and South_Indian ), but that is for another day!!\nBy now we know that we can use geom_sf() multiple number of times with different datasets to create layered maps in R."
  },
  {
    "objectID": "content/labs/r-labs/maps/gram-maps.html#globejs-usage",
    "href": "content/labs/r-labs/maps/gram-maps.html#globejs-usage",
    "title": "The Grammar of Maps",
    "section": "\n11.1 globejs usage",
    "text": "11.1 globejs usage\nThe globejs command from the package threejs allows one to plot points, arcs and images on a globe in 3D. The globe can be rotated and and zoomed. Great Circles and historical routes are a good idea for this perhaps.\nRefer to this page for more ideas http://bwlewis.github.io/rthreejs/globejs.html\nWe will generate some random locations and plot them on the 3D globe.\n\n# Random Lats and Longs\nlat &lt;- rpois(10, 60) + rnorm(10, 80)\nlong &lt;- rpois(10, 60) + rnorm(10, 10)\n\n# Random \"Spike\" heights for each location. Population? Tourists? GDP?\nvalue &lt;- rpois(10, lambda = 80)\n \nglobejs(lat = lat, long = long)\n\n\n\n\n\nAs seen, “spikes” are created at the random lat-lon locations. We can control the height/width/colour of the spikes, as well as the initial view of the globe itself: zoom, location and so on\n\nglobejs(\n  lat = lat,\n  long = long,\n  \n  # random heights of the Spikes (!!) at lat-long combo\n  value = value,\n  color = \"red\",\n  # Zoom factor, default is 35\n  fov = 50\n)\n\n\n\n\n\n\nglobejs(\n  lat = lat,\n  long = long,\n  value = value,\n  color = \"red\",\n  pointsize = 4, # width of the columns\n  # Zoom position\n  fov = 35,\n  # initial position of the globe\n  rotationlat = 0.6, #  in RADIANS !!! Good Heavens!!\n  rotationlong = 0.2 #  in RADIANS !!! Good Heavens!!\n)\n\n\n\n\n\n\nglobejs(\n  lat = lat,\n  long = long,\n  value = value,\n  color = \"red\",\n  pointsize = 4,\n  fov = 35,\n  rotationlat = 0.6,\n  rotationlong = 0.2,\n  lightcolor = \"#aaeeff\",\n  emissive = \"#0000ee\",\n  bodycolor = \"#ffffff\",\n  bg = \"grey\"\n)"
  },
  {
    "objectID": "content/labs/r-labs/maps/index.html",
    "href": "content/labs/r-labs/maps/index.html",
    "title": "Lab 01 - Introduce Yourself",
    "section": "",
    "text": "At the end of this Lab, we will:\n\nhave installed R and RStudio on our machines\nunderstood how to add additional R-packages for specific features and graphic capability\nrun code within RStudio and interpret the results\nhave learnt to look for help within R and RStudio"
  },
  {
    "objectID": "content/labs/r-labs/maps/index.html#Check-In-R",
    "href": "content/labs/r-labs/maps/index.html#Check-In-R",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n3.1 Check in",
    "text": "3.1 Check in\nLaunch R by clicking this logo. You should see one console with a command line interpreter. Try typing 2 + 2 and check !\nClose R."
  },
  {
    "objectID": "content/labs/r-labs/maps/index.html#Check-In-RStudio",
    "href": "content/labs/r-labs/maps/index.html#Check-In-RStudio",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n4.1 Check in",
    "text": "4.1 Check in\nLaunch RStudio. You should get a window similar to the screenshot you see here, but yours will be empty. Look at the bottom left pane: this is the same console window you saw when you opened R in step @Check-In-R\n\nPlace your cursor where you see &gt; and type x &lt;- 2 + 2 again hit enter or return, then type x, and hit enter/return again.\nIf [1] 4 prints to the screen, you have successfully installed R and RStudio, and you can move onto installing packages."
  },
  {
    "objectID": "content/labs/r-labs/maps/index.html#save-and-share",
    "href": "content/labs/r-labs/maps/index.html#save-and-share",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n7.1 Save and share",
    "text": "7.1 Save and share\nSave your work so you can share your favorite plot with us. You will not like the looks of your plot if you mouse over to Export and save it. Instead, use ggplot2’s command for saving a plot with sensible defaults:\n\nCodehelp(ggsave)\n\n\n\nCodeggsave(\"file_name_here.pdf\", plot) # please make the filename unique!\n\n\nUpload this exported plot to Teams -&gt; Assignments.\nBefore you do that, check that you can submit stuff/assignments on the MLS by uploading a cat picture 🐈 first, especially if you are an ailurophile like me. (Acceptable Breeds: Scottish Folds or Maine Coons)"
  },
  {
    "objectID": "content/labs/r-labs/maps/leaflet.html",
    "href": "content/labs/r-labs/maps/leaflet.html",
    "title": "Playing with Leaflet",
    "section": "",
    "text": "This Tutorial works through the ideas at Leaflet\n\nLeaflet is a JavaScript library for creating dynamic maps that support panning and zooming along with various annotations like markers, polygons, and popups.\n\nIn this tutorial we will work only with vector data. In a second part, we will work with raster data in leaflet.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.0\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(leaflet)\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(sp)\nlibrary(sf)\n\nLinking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2() is TRUE\n\n# Data\nlibrary(osmdata) # Import OSM Vector Data into R\n\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n\nlibrary(osmplotr) # Creating maps with OSM data in R\n\nData (c) OpenStreetMap contributors, ODbL 1.0. http://www.openstreetmap.org/copyright\n\n# library(OpenStreetMap) # Raster Data"
  },
  {
    "objectID": "content/labs/r-labs/maps/leaflet.html#add-shapes-to-a-map",
    "href": "content/labs/r-labs/maps/leaflet.html#add-shapes-to-a-map",
    "title": "Playing with Leaflet",
    "section": "\n2.1 Add Shapes to a Map",
    "text": "2.1 Add Shapes to a Map\nleaflet offers several commands to add points, markers, icons, lines, polylines and polygons to a map. Let us examine a few of these.\n\n2.1.1 Add Markers with popups\n\nm %&gt;% addMarkers(lng = 77.580643, lat = 12.972442, \n                 popup = \"The birthplace of Rvind\")\n\n\n\n\n# Click on the Marker for the popup to appear\n\nThis uses the default pin shape as the Marker.\n\n2.1.2 Adding Popups to a Map\nPopups are small boxes containing arbitrary HTML, that point to a specific point on the map. Use the addPopups() function to add standalone popup to the map.\n\nm %&gt;%\n  addPopups(\n    lng = 77.580643,\n    lat = 12.972442,\n    popup = paste(\n      \"The birthplace of Rvind\",\n      \"&lt;br&gt;\",\n      \"Website: https://the-foundation-series.netlify.app\",\n      \"&lt;br&gt;\"\n    ),\n    \n    # Ensuring we cannot close the popup, else we will not be able to find where it is, since there is no Marker\n    options = popupOptions(closeButton = FALSE)\n  )\n\n\n\n\n\nPopups are usually added to icons, Markers and other shapes can show up when these are clicked.\n\n2.1.3 Adding Labels to a Map\nLabels are messages attached to all shapes, using the argument label wherever it is available.\nLabels are static, and Popups are usually visible on mouse click. Hence a Marker can have both a label and a popup. For example, the function addPopup() offers only a popup argument, whereas the function addMarkers() offers both a popup and a label argument.\nIt is also possible to create labels standalone using addLabelOnlyMarkers() where we can show only text and no Markers.\n\nm %&gt;%\n  addMarkers(\n    lng = 77.580643,\n    lat = 12.972442,\n    \n    # Here is the Label defn.\n    label = \"The birthplace of Rvind\",\n    labelOptions = labelOptions(noHide = TRUE, # Label always visible\n                                textOnly = F, \n                                textsize = 20),\n    \n    # And here is the popup defn.\n    popup = \"This is the Popup Text\"\n  )\n\n\n\n\n\n\n2.1.4 Adding Circles and CircleMarkers on a Map\nWe can add shapes on to a map to depict areas or locations of interest. NOTE: the radius argument works differently in addCircles() and addCircleMarkers().\n\n# Some Cities in the US and their location\nmd_cities &lt;- tibble(\n  name = c(\"Baltimore\",\"Frederick\",\"Rockville\",\"Gaithersburg\",\"Bowie\",\"Hagerstown\",\"Annapolis\",\"College Park\",\"Salisbury\",\"Laurel\"),\n  pop = c(619493,66169,62334,61045,55232,39890,38880,30587,30484,25346),\n  lat = c(39.2920592,39.4143921,39.0840,39.1434,39.0068,39.6418,38.9784,38.9897,38.3607,39.0993), \n  lng = c(-76.6077852,-77.4204875,-77.1528,-77.2014,-76.7791,-77.7200,-76.4922,-76.9378,-75.5994,-76.8483)\n)\n\n\nmd_cities %&gt;%\n  leaflet() %&gt;%\n  addTiles() %&gt;%\n  \n  # CircleMarkers, in blue\n  # radius scales the Marker. Units are in Pixels!!\n  # Here, radius is made proportional to `pop` number\n  addCircleMarkers(radius = ~ pop/1000, # Pixels!!\n                   color = \"blue\",\n                   stroke = FALSE, # no border for the Markers\n                   opacity = 0.8) %&gt;% \n  \n  \n  # Circles, in red\n  addCircles(\n    radius = 5000, # Meters !!!\n    stroke = TRUE,\n    color = \"yellow\", # Stroke Colour\n    weight = 3, # Stroke Weight\n    fill = TRUE,\n    fillColor = \"red\",\n\n  )\n\nAssuming \"lng\" and \"lat\" are longitude and latitude, respectively\nAssuming \"lng\" and \"lat\" are longitude and latitude, respectively\n\n\n\n\n\n\nThe shapes need not be of fixed size or colour; their attributes can be made to correspond to other attribute variables in the geospatial data, as we did with radius in the addCircleMarkers() function above.\n\n2.1.5 Adding Rectangles to a Map\n\n## Adding Rectangles\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 77.580643, lat = 12.972442, zoom = 6) %&gt;% \n  addRectangles(lat1 = 10.3858, lng1 = 75.0595, \n                lat2 = 12.8890, lng2 = 77.9625)\n\n\n\n\n\n\n2.1.6 Add Polygons to a Map\n\n## Adding Polygons\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 77.580643, lat = 12.972442, zoom = 6) %&gt;% \n  \n  # arbitrary vector data for lat and lng\n   addPolygons(lng = c(73.5, 75.9, 76.1, 77.23, 79.8),\n               lat =c(10.12, 11.04, 11.87, 12.04, 10.7))\n\n\n\n\n\n\n2.1.7 Add PolyLines to a Map\nThis can be useful say for manually marking a route on a map, with waypoints.\n\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 77.580643, lat = 12.972442, zoom = 6) %&gt;% \n  \n  # arbitrary vector data for lat and lng\n  # If start and end points are the same, it looks like Polygon\n  # Without the fill\n   addPolylines(lng = c(73.5, 75.9, 76.1, 77.23, 79.8),\n               lat =c(10.12, 11.04, 11.87, 12.04, 10.7)) %&gt;% \n  \n  # Add Waypoint Icons\n  addMarkers(lng = c(73.5, 75.9, 76.1, 77.23, 79.8),\n               lat =c(10.12, 11.04, 11.87, 12.04, 10.7))\n\n\n\n\n\nAs seen, we have created Markers, Labels, Polygons, and PolyLines using fixed.i.e. literal text and numbers. In the following we will also see how external geospatial data columns can be used instead of these literals.\nNOTE: The mapedit package https://r-spatial.org//r/2017/01/30/mapedit_intro.html can also be used to interactively add shapes onto a map and save as an geo-spatial object."
  },
  {
    "objectID": "content/labs/r-labs/maps/leaflet.html#point-data-sources-for-leaflet",
    "href": "content/labs/r-labs/maps/leaflet.html#point-data-sources-for-leaflet",
    "title": "Playing with Leaflet",
    "section": "\n3.1 Point Data Sources for leaflet\n",
    "text": "3.1 Point Data Sources for leaflet\n\nPoint data for markers can come from a variety of sources:\n\n\nSpatialPoints or SpatialPointsDataFrame objects (from the sp package)\n\n\nPOINT, sfc_POINT, and sf objects (from the sf package); only X and Y dimensions will be considered\n\nTwo-column numeric matrices (first column is longitude, second is latitude)\n\n\nData frame/tibble with latitude and longitude columns. You can explicitly tell the marker function which columns contain the coordinate data (e.g. addMarkers(lng = ~Longitude, lat = ~Latitude)), or let the function look for columns named lat/latitude and lon/lng/long/longitude (case insensitive).\n\nSimply provide numeric vectors as lng and lat arguments, which we have covered already in the preceding sections.\n\nNote that MULTIPOINT objects from sf are not supported at this time.\nWe will not consider the use of sp related data structures for plotting POINTs in leaflet since sp is being phased out in favour of the more modern package sf.\n\n3.1.1 Points using simple Data Frames\nLet us read in the data set from data.world that gives us POINT locations of all airports in India in a data frame / tibble. The dataset is available at https://query.data.world/s/ahtyvnm2ybylf65syp4rsb5tulxe6a. You can either download it, save a copy, and read it in as usual, or use the URL itself to read it in from the web. In the latter case, you will need the package data.world and also need to register your credentials for that page with RStudio. The (simple!) instructions are available here at data.world.\n\n#library(devtools)\n#devtools::install_github(\"datadotworld/data.world-r\", build_vignettes = TRUE)\n\nlibrary(data.world)\n\nLoading required package: dwapi\n\n\n\nAttaching package: 'dwapi'\n\n\nThe following object is masked from 'package:dplyr':\n\n    sql\n\nindia_airports &lt;-\n  read_csv(\"https://query.data.world/s/ahtyvnm2ybylf65syp4rsb5tulxe6a\") %&gt;% \n  slice(-1) %&gt;% # Drop the first row which contains labels\n  dplyr::mutate(\n    id = as.integer(id),\n    latitude_deg = as.numeric(latitude_deg),\n    longitude_deg = as.numeric(longitude_deg),\n    elevation_ft = as.integer(elevation_ft)\n  ) %&gt;% \n  rename(\"lon\" = longitude_deg, \"lat\" = latitude_deg) %&gt;% \n  # Remove four locations which seem to be in the African Atlantic\n  filter(!id %in% c(330834, 330867, 325010, 331083))\n\nRows: 345 Columns: 20\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): id, ident, type, name, latitude_deg, longitude_deg, elevation_ft, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nindia_airports %&gt;% head()\n\n\n\n  \n\n\n\nLet us plot this in leaflet, using an ESRI National Geographic style map instead of the OSM Base Map. We will also place small circle markers for each airport.\n\nleaflet(data = india_airports) %&gt;% \n  setView(lat = 18, lng = 77, zoom = 4) %&gt;% \n  \n  # Add NatGeo style base map\n  addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;% # ESRI Basemap\n  \n  # Add Markers for each airport\n  addCircleMarkers(lng = ~lon, lat = ~lat,\n                   # Optional, variables stated for clarity\n                   # leaflet can automatically detect lon-lat columns\n                   # if they are appropriately named in the data\n                   # longitude/lon/lng\n                   # latitude/lat\n                   radius = 2, # Pixels\n                   color = \"red\",\n                   opacity = 1)\n\n\n\n\n\nWe can also change the icon for each airport. Let us try one of theseveral icon families that we can use with leaflet : glyphicons, ionicons, and fontawesome icons.\n\n# Define popup message for each airport\n# Based on data in india_airports\npopup &lt;- paste(\n  \"&lt;strong&gt;\",\n  india_airports$name,\n  \"&lt;/strong&gt;&lt;br&gt;\",\n  india_airports$iata_code,\n  \"&lt;br&gt;\",\n  india_airports$municipality,\n  \"&lt;br&gt;\",\n  \"Elevation(feet)\",\n  india_airports$elevation_ft,\n  \"&lt;br&gt;\",\n  india_airports$wikipedia_link,\n  \"&lt;br&gt;\"\n)\n\niata_icon &lt;- makeIcon(\n  \"iata-logo-transp.png\", # Downloaded from www.iata.org\n  iconWidth = 24,\n  iconHeight = 24,\n  iconAnchorX = 0,\n  iconAnchorY = 0\n)\n\n# Create the Leaflet map\nleaflet(data = india_airports) %&gt;%\n  setView(lat = 18, lng = 77, zoom = 4) %&gt;%\n  addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;%\n  addMarkers(\n    icon = iata_icon,\n    popup = popup\n  )\n\nAssuming \"lon\" and \"lat\" are longitude and latitude, respectively\n\n\n\n\n\n\nThere are other icons we can use to mark the POINTs. leaflet allows the use of ionicons, glyphicons, and FontAwesomeIcons\nIt is possible to create a list of icons, so that different Markers can have different icons. Let us try to map the MNCs in the ITPL area of Bangalore: we use the ideas in Using Leaflet Markers @JLA-Data.net\n\n# Make a dataframe of addresses of Companies we wan to plot in ITPL\ncompanies_itpl &lt;-\n  data.frame(\n    ticker = c(\n      \"MBRDI\",\n      \"DTICI\",\n      \"IBM\",\n      \"Exxon\",\n      \"Mindtree\",\n      \"FIS Global\",\n      \"Sasken\",\n      \"LTI\"),\n    lat = c(\n      12.986178620989264,\n      12.984160906190121,\n      12.983659088566357,\n      12.985112265986636,\n      12.983794997606187,\n      12.980658616215155,\n      12.982080447350246,\n      12.981338168875348),\n    lon = c(\n      77.7270652183105,\n      77.72808445774321,\n      77.73103488768001,\n      77.72935046040699,\n      77.7227844126931,\n      77.72685064158782,\n      77.72545589289041,\n      77.72287024338216)\n  ) %&gt;% sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n \n# Vanilla leaflet map\nleaflet(companies_itpl) %&gt;% \n  addTiles() %&gt;% \n  addMarkers()\n\n\n\n\n\nLet us make a list of logos of the Companies and use them as markers!\n\n# a named list of rescaled icons with links to images\nfavicons &lt;- iconList(\n  \"MBRDI\" = makeIcon(\n    iconUrl = \"https://www.mercedes-benz.com/etc/designs/brandhub/frontend/static-assets/header/logo.svg\", \n    iconWidth = 25,\n    iconHeight = 25\n  ),\n  \"DTICI\" = makeIcon(\n    iconUrl = \"https://media-exp1.licdn.com/dms/image/C4D0BAQGzOep26lC03w/company-logo_200_200/0/1638298367374?e=2147483647&v=beta&t=mPyF4gvNhNFvd-tedbqNzJofq4q9qcw6A9z9jQeLAwc\",\n    iconWidth = 45,\n    iconHeight = 45\n  ),\n  \"IBM\" = makeIcon(\n    iconUrl = \"https://www.ibm.com/favicon.ico\",\n    iconWidth = 25,\n    iconHeight = 25\n  ),\n  \"Exxon\" = makeIcon(\n    iconUrl = \"https://corporate.exxonmobil.com/-/media/Global/Icons/logos/ExxonMobilLogoColor2x.png\",\n    iconWidth = 45,\n    iconHeight = 25\n  ),\n  \"Mindtree\" = makeIcon(\n    iconUrl = \"https://www.mindtree.com/themes/custom/mindtree_theme/mindtree-lnt-logo-png.png\",\n    iconWidth = 75,\n    iconHeight = 25\n  ),\n  \"FIS Global\" = makeIcon(\n    iconUrl = \"https://1000logos.net/wp-content/uploads/2021/09/FIS-Logo-768x432.png\",\n    iconWidth = 25,\n    iconHeight = 25\n  ),\n  \"Sasken\" = makeIcon(\n    iconUrl = \"https://www.sasken.com/sites/all/themes/sasken_website/logo.png\",\n    iconWidth = 35,\n    iconHeight = 35,\n  ),\n  \"LTI\" = makeIcon(\n    iconUrl = \"https://www.lntinfotech.com/wp-content/uploads/2021/09/LTI-logo.svg\",\n    iconWidth = 25,\n    iconHeight = 25\n  )\n)\n\n\n# Create the Leaflet map\n\nleaflet(companies_itpl) %&gt;% \n  addMarkers(icon = ~ favicons[ticker], # lookup based on ticker\n             label = ~ companies_itpl$ticker,\n             labelOptions = labelOptions(noHide = F,offset = c(15,-25))) %&gt;%\n  addProviderTiles(\"CartoDB.Positron\")\n\n\n\n\n\n\n3.1.2 Points using sf objects\nWe will use data from an sf data object. This differs from the earlier situation where we had a simple data frame with lon and lat columns. In sf, the lon and lat info is embedded in the geometry column of the sf data frame.\nThe tmap package has a data set of all World metro cities, titled metro. We will plot these on the map and also scale the markers in proportion to one of the feature attributes, pop2030. The popup will be the name of the metro city. We will also use the CartoDB.Positron base map.\nNote that the metro data set has a POINT geometry, as needed!\n\ndata(metro, package = \"tmap\")\nmetro\n\n\n\n  \n\n\nleaflet(data = metro) %&gt;% \n  setView(lat = 18, lng = 77, zoom = 4) %&gt;% \n  \n  # Add CartoDB.Positron\n  addProviderTiles(providers$CartoDB.Positron) %&gt;% # CartoDB Basemap\n  \n  # Add Markers for each airport\n  addCircleMarkers(radius = ~ sqrt(pop2030)/350,\n                   color = \"red\",\n                   popup = paste(\"Name: \", metro$name, \"&lt;br&gt;\",\n                                  \"Population 2030: \", metro$pop2030))\n\n\n\n\n\nWe can also try downloading an sf data frame with POINT geometry from say OSM data&lt;https://osm. Let us get hold of restaurants data in Malleswaram, Bangalore from OSM data:\n\nbbox&lt;- osmdata::getbb(\"Malleswaram, Bengaluru\")\nbbox\n\n       min      max\nx 77.55033 77.59033\ny 12.98274 13.02274\n\nlocations &lt;- osmplotr::extract_osm_objects(\n  bbox = bbox,\n  key = \"amenity\",\n  value = \"restaurant\",\n  return_type = \"point\") \n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: none\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\nlocations &lt;- locations %&gt;% \n  dplyr::filter(cuisine == \"indian\")\nlocations %&gt;% head()\n\n\n\n  \n\n\n# Fontawesome icons seem to work in `leaflet` only up to FontAwesome V4.7.0.\n# The Fontawesome V4.7.0 Cheatsheet is here: &lt;https://fontawesome.com/v4/cheatsheet/&gt;\n\n\nleaflet(data = locations, options = leafletOptions(minZoom = 12)) %&gt;% \n  \n  addProviderTiles(providers$CartoDB.Voyager) %&gt;% \n  \n  # Regular `leaflet` code\n  addAwesomeMarkers(icon = awesomeIcons(icon = \"fa-coffee\", \n                                        library = \"fa\",\n                                        markerColor = \"blue\",\n                                        iconColor = \"black\",\n                                        iconRotate = TRUE),\n                     popup = paste(\"Name: \", locations$name,\"&lt;br&gt;\",\n                           \"Food: \", locations$cuisine)) \n\n\n\n\n\nFontawesome Workaround\nFor more later versions of Fontawesome, here below is a workaround from https://github.com/rstudio/leaflet/issues/691. Despite this some fontawesome icons simply do not seem to show up. ;-()\n\nlibrary(fontawesome)\ncoffee &lt;- makeAwesomeIcon(\n  text = fa(\"mug-hot\"), # mug-hot was introduced in fa version 5\n  iconColor = \"black\",\n  markerColor = \"blue\",\n  library = \"fa\"\n)\n\n\nleaflet(data = locations) %&gt;% \n  addProviderTiles(providers$CartoDB.Voyager) %&gt;% \n  \n  # Workaround code\n\n  addAwesomeMarkers(icon = coffee,\n             popup = paste(\"Name: \", locations$name,\"&lt;br&gt;\",\n                           \"Food: \", locations$cuisine, \"&lt;br&gt;\"))\n\n\n\n\n\nNote that leaflet automatically detects the lon/lat columns from within the POINT geometry column of the sf data frame.\n\n3.1.3 Points using Two-Column Matrices\nWe can now quickly try providing lon and lat info in a two column matrix.This can be useful to plot a bunch of points recorded on a mobile phone app.\n\nmysore5 &lt;- matrix(c(runif(5, 76.652985-0.01, 76.652985+0.01),\n                 runif(5, 12.311827-0.01, 12.311827+0.01)),\n                 nrow = 5)\nmysore5\n\n         [,1]     [,2]\n[1,] 76.65387 12.31681\n[2,] 76.66260 12.31176\n[3,] 76.65750 12.31252\n[4,] 76.65581 12.30970\n[5,] 76.64777 12.31510\n\nleaflet(data = mysore5) %&gt;% \n  addProviderTiles(providers$OpenStreetMap) %&gt;% \n  \n# Pick an icon from &lt;https://www.w3schools.com/bootstrap/bootstrap_ref_comp_glyphs.asp&gt;\n  addAwesomeMarkers(icon = awesomeIcons(\n  icon = 'music',\n  iconColor = 'black',\n  library = 'glyphicon'),\n  popup = \"Carnatic Music !!\")"
  },
  {
    "objectID": "content/labs/r-labs/maps/leaflet.html#polygons-lines-and-polylines-data-sources-for-leaflet",
    "href": "content/labs/r-labs/maps/leaflet.html#polygons-lines-and-polylines-data-sources-for-leaflet",
    "title": "Playing with Leaflet",
    "section": "\n3.2 Polygons, Lines, and Polylines Data Sources for leaflet\n",
    "text": "3.2 Polygons, Lines, and Polylines Data Sources for leaflet\n\nWe have seen how to get POINT data into leaflet.\nLine and polygon data can come from a variety of sources:\n\n\nSpatialPolygons, SpatialPolygonsDataFrame, Polygons, and Polygon objects (from the sp package)\n\n\nSpatialLines, SpatialLinesDataFrame, Lines, and Line objects (from the sp package)\n\n\nMULTIPOLYGON, POLYGON, MULTILINESTRING, and LINESTRING objects (from the sf package)\n\n\nmap objects (from the maps package’s map() function); use map(fill = TRUE) for polygons, FALSE for polylines\n\nTwo-column numeric matrix; the first column is longitude and the second is latitude. Polygons are separated by rows of (NA, NA). It is not possible to represent multi-polygons nor polygons with holes using this method; use SpatialPolygons instead.\n\nWe will concentrate on using sf data into leaflet. We may explore maps() objects at a later date.\n\n3.2.1 Polygons/MultiPolygons and LineString/MultiLineString using sf data frames\nLet us download College buildings, parks, and the cycling lanes in Amsterdam, Netherlands, and plot these in leaflet.\n\nbbox &lt;- osmdata::getbb(\"Amsterdam, Netherlands\")\nbbox\n\n        min       max\nx  4.728756  5.079162\ny 52.278174 52.431064\n\ncolleges &lt;- osmplotr::extract_osm_objects(bbox = bbox,\n                                           key = \"amenity\",\n                                           value = \"college\",\n                                           return_type = \"polygon\" )\n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: none\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\nparks &lt;- osmplotr::extract_osm_objects(bbox = bbox,\n                                           key = \"park\",\n                                           return_type = \"polygon\" )\n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: none\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\nroads &lt;- osmplotr::extract_osm_objects(bbox = bbox,\n                                       key = \"highway\",\n                                       value = \"primary\",\n                                       return_type = \"line\")\n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: none\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\ncyclelanes &lt;-\n  osmplotr::extract_osm_objects(bbox,\n                                key = \"cycleway\",\n                                value =  \"lane\",\n                                return_type = \"line\")\n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: none\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\n\nWe have 17 colleges in our data and 370 parks in our data.\n\nleaflet() %&gt;% \n  addTiles() %&gt;% \n  addPolygons(data = colleges, popup = ~colleges$name) %&gt;% \n  addPolygons(data = parks, color = \"green\", popup = parks$name) %&gt;% \n  addPolylines(data = roads, color = \"red\") %&gt;% \n  addPolylines(data = cyclelanes, color = \"purple\")"
  },
  {
    "objectID": "content/labs/r-labs/maps/leaflet.html#chapter-3-using-raster-data-in-leaflet",
    "href": "content/labs/r-labs/maps/leaflet.html#chapter-3-using-raster-data-in-leaflet",
    "title": "Playing with Leaflet",
    "section": "\n3.3 Chapter 3: Using Raster Data in leaflet\n",
    "text": "3.3 Chapter 3: Using Raster Data in leaflet\n\nSo far all the geospatial data we have plotted in leaflet has been vector data. We will now explore how to plot raster data using leaflet. Raster data are used to depict continuous variables across space, such as vegitation, salinity, forest cover etc. Satellite imagery is frequently available as raster data.\n\n3.3.1 Importing Raster Data [Work in Progress!]\nRaster data can be imported into R in many ways:\n\nusing the maptiles package\n\nusing the OpenStreetMap package\n\n\nlibrary(terra)\n\nterra 1.7.18\n\n\n\nAttaching package: 'terra'\n\n\nThe following object is masked from 'package:data.world':\n\n    query\n\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\nlibrary(maptiles)\n#library(OpenStreetMap) # causes RStudio to crash..."
  },
  {
    "objectID": "content/labs/r-labs/maps/leaflet.html#adding-legendswork-in-progress",
    "href": "content/labs/r-labs/maps/leaflet.html#adding-legendswork-in-progress",
    "title": "Playing with Leaflet",
    "section": "\n4.1 Adding Legends[Work in Progress!]",
    "text": "4.1 Adding Legends[Work in Progress!]\n\n## Generate some random lat lon data around Bangalore\ndf &lt;- data.frame(lat = runif(20, min = 11.97, max = 13.07),\n                 lng = runif(20, min = 77.48, max = 77.68),\n                 col = sample(c(\"red\", \"blue\", \"green\"), 20, \n                              replace = TRUE),\n                 stringsAsFactors = FALSE)\n\ndf %&gt;%\n  leaflet() %&gt;%\n  addTiles() %&gt;%\n  addCircleMarkers(color = df$col) %&gt;%\n  addLegend(values = df$col, labels = LETTERS[1:3], colors = c(\"blue\", \"red\", \"green\"))\n\nAssuming \"lng\" and \"lat\" are longitude and latitude, respectively"
  },
  {
    "objectID": "content/labs/r-labs/maps/PlayingwithLeaflet.html",
    "href": "content/labs/r-labs/maps/PlayingwithLeaflet.html",
    "title": "Playing with Leaflet",
    "section": "",
    "text": "This Tutorial works through the ideas at Leaflet\n\nLeaflet is a JavaScript library for creating dynamic maps that support panning and zooming along with various annotations like markers, polygons, and popups.\n\nIn this tutorial we will work only with vector data. In a second part, we will work with raster data in leaflet.\n\nlibrary(tidyverse)\nlibrary(leaflet)\nlibrary(maps)\nlibrary(sp)\nlibrary(sf)\n\n# Data\nlibrary(osmdata) # Import OSM Vector Data into R\nlibrary(osmplotr) # Creating maps with OSM data in R\n# library(OpenStreetMap) # Raster Data"
  },
  {
    "objectID": "content/labs/r-labs/maps/PlayingwithLeaflet.html#add-shapes-to-a-map",
    "href": "content/labs/r-labs/maps/PlayingwithLeaflet.html#add-shapes-to-a-map",
    "title": "Playing with Leaflet",
    "section": "\n2.1 Add Shapes to a Map",
    "text": "2.1 Add Shapes to a Map\nleaflet offers several commands to add points, markers, icons, lines, polylines and polygons to a map. Let us examine a few of these.\n\n2.1.1 Add Markers with popups\n\nm %&gt;% addMarkers(lng = 77.580643, lat = 12.972442, \n                 popup = \"The birthplace of Rvind\")\n\n\n\n\n# Click on the Marker for the popup to appear\n\nThis uses the default pin shape as the Marker.\n\n2.1.2 Adding Popups to a Map\nPopups are small boxes containing arbitrary HTML, that point to a specific point on the map. Use the addPopups() function to add standalone popup to the map.\n\nm %&gt;%\n  addPopups(\n    lng = 77.580643,\n    lat = 12.972442,\n    popup = paste(\n      \"The birthplace of Rvind\",\n      \"&lt;br&gt;\",\n      \"Website: https://the-foundation-series.netlify.app\",\n      \"&lt;br&gt;\"\n    ),\n    \n    # Ensuring we cannot close the popup, else we will not be able to find where it is, since there is no Marker\n    options = popupOptions(closeButton = FALSE)\n  )\n\n\n\n\n\nPopups are usually added to icons, Markers and other shapes can show up when these are clicked.\n\n2.1.3 Adding Labels to a Map\nLabels are messages attached to all shapes, using the argument label wherever it is available.\nLabels are static, and Popups are usually visible on mouse click. Hence a Marker can have both a label and a popup. For example, the function addPopup() offers only a popup argument, whereas the function addMarkers() offers both a popup and a label argument.\nIt is also possible to create labels standalone using addLabelOnlyMarkers() where we can show only text and no Markers.\n\nm %&gt;%\n  addMarkers(\n    lng = 77.580643,\n    lat = 12.972442,\n    \n    # Here is the Label defn.\n    label = \"The birthplace of Rvind\",\n    labelOptions = labelOptions(noHide = TRUE, # Label always visible\n                                textOnly = F, \n                                textsize = 20),\n    \n    # And here is the popup defn.\n    popup = \"This is the Popup Text\"\n  )\n\n\n\n\n\n\n2.1.4 Adding Circles and CircleMarkers on a Map\nWe can add shapes on to a map to depict areas or locations of interest. NOTE: the radius argument works differently in addCircles() and addCircleMarkers().\n\n# Some Cities in the US and their location\nmd_cities &lt;- tibble(\n  name = c(\"Baltimore\",\"Frederick\",\"Rockville\",\"Gaithersburg\",\"Bowie\",\"Hagerstown\",\"Annapolis\",\"College Park\",\"Salisbury\",\"Laurel\"),\n  pop = c(619493,66169,62334,61045,55232,39890,38880,30587,30484,25346),\n  lat = c(39.2920592,39.4143921,39.0840,39.1434,39.0068,39.6418,38.9784,38.9897,38.3607,39.0993), \n  lng = c(-76.6077852,-77.4204875,-77.1528,-77.2014,-76.7791,-77.7200,-76.4922,-76.9378,-75.5994,-76.8483)\n)\n\n\nmd_cities %&gt;%\n  leaflet() %&gt;%\n  addTiles() %&gt;%\n  \n  # CircleMarkers, in blue\n  # radius scales the Marker. Units are in Pixels!!\n  # Here, radius is made proportional to `pop` number\n  addCircleMarkers(radius = ~ pop/1000, # Pixels!!\n                   color = \"blue\",\n                   stroke = FALSE, # no border for the Markers\n                   opacity = 0.8) %&gt;% \n  \n  \n  # Circles, in red\n  addCircles(\n    radius = 5000, # Meters !!!\n    stroke = TRUE,\n    color = \"yellow\", # Stroke Colour\n    weight = 3, # Stroke Weight\n    fill = TRUE,\n    fillColor = \"red\",\n\n  )\n\nAssuming \"lng\" and \"lat\" are longitude and latitude, respectively\nAssuming \"lng\" and \"lat\" are longitude and latitude, respectively\n\n\n\n\n\n\nThe shapes need not be of fixed size or colour; their attributes can be made to correspond to other attribute variables in the geospatial data, as we did with radius in the addCircleMarkers() function above.\n\n2.1.5 Adding Rectangles to a Map\n\n## Adding Rectangles\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 77.580643, lat = 12.972442, zoom = 6) %&gt;% \n  addRectangles(lat1 = 10.3858, lng1 = 75.0595, \n                lat2 = 12.8890, lng2 = 77.9625)\n\n\n\n\n\n\n2.1.6 Add Polygons to a Map\n\n## Adding Polygons\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 77.580643, lat = 12.972442, zoom = 6) %&gt;% \n  \n  # arbitrary vector data for lat and lng\n   addPolygons(lng = c(73.5, 75.9, 76.1, 77.23, 79.8),\n               lat =c(10.12, 11.04, 11.87, 12.04, 10.7))\n\n\n\n\n\n\n2.1.7 Add PolyLines to a Map\nThis can be useful say for manually marking a route on a map, with waypoints.\n\nleaflet() %&gt;%\n  addTiles() %&gt;%\n  setView(lng = 77.580643, lat = 12.972442, zoom = 6) %&gt;% \n  \n  # arbitrary vector data for lat and lng\n  # If start and end points are the same, it looks like Polygon\n  # Without the fill\n   addPolylines(lng = c(73.5, 75.9, 76.1, 77.23, 79.8),\n               lat =c(10.12, 11.04, 11.87, 12.04, 10.7)) %&gt;% \n  \n  # Add Waypoint Icons\n  addMarkers(lng = c(73.5, 75.9, 76.1, 77.23, 79.8),\n               lat =c(10.12, 11.04, 11.87, 12.04, 10.7))\n\n\n\n\n\nAs seen, we have created Markers, Labels, Polygons, and PolyLines using fixed.i.e. literal text and numbers. In the following we will also see how external geospatial data columns can be used instead of these literals.\nNOTE: The mapedit package https://r-spatial.org//r/2017/01/30/mapedit_intro.html can also be used to interactively add shapes onto a map and save as an geo-spatial object."
  },
  {
    "objectID": "content/labs/r-labs/maps/PlayingwithLeaflet.html#point-data-sources-for-leaflet",
    "href": "content/labs/r-labs/maps/PlayingwithLeaflet.html#point-data-sources-for-leaflet",
    "title": "Playing with Leaflet",
    "section": "\n3.1 Point Data Sources for leaflet\n",
    "text": "3.1 Point Data Sources for leaflet\n\nPoint data for markers can come from a variety of sources:\n\n\nSpatialPoints or SpatialPointsDataFrame objects (from the sp package)\n\n\nPOINT, sfc_POINT, and sf objects (from the sf package); only X and Y dimensions will be considered\n\nTwo-column numeric matrices (first column is longitude, second is latitude)\n\n\nData frame/tibble with latitude and longitude columns. You can explicitly tell the marker function which columns contain the coordinate data (e.g. addMarkers(lng = ~Longitude, lat = ~Latitude)), or let the function look for columns named lat/latitude and lon/lng/long/longitude (case insensitive).\n\nSimply provide numeric vectors as lng and lat arguments, which we have covered already in the preceding sections.\n\nNote that MULTIPOINT objects from sf are not supported at this time.\nWe will not consider the use of sp related data structures for plotting POINTs in leaflet since sp is being phased out in favour of the more modern package sf.\n\n3.1.1 Points using simple Data Frames\nLet us read in the data set from data.world that gives us POINT locations of all airports in India in a data frame / tibble. The dataset is available at https://query.data.world/s/ahtyvnm2ybylf65syp4rsb5tulxe6a. You can either download it, save a copy, and read it in as usual, or use the URL itself to read it in from the web. In the latter case, you will need the package data.world and also need to register your credentials for that page with RStudio. The (simple!) instructions are available here at data.world.\n\n#library(devtools)\n#devtools::install_github(\"datadotworld/data.world-r\", build_vignettes = TRUE)\n\nlibrary(data.world)\n\nLoading required package: dwapi\n\n\n\nAttaching package: 'dwapi'\n\n\nThe following object is masked from 'package:dplyr':\n\n    sql\n\nindia_airports &lt;-\n  read_csv(\"https://query.data.world/s/ahtyvnm2ybylf65syp4rsb5tulxe6a\") %&gt;% \n  slice(-1) %&gt;% # Drop the first row which contains labels\n  dplyr::mutate(\n    id = as.integer(id),\n    latitude_deg = as.numeric(latitude_deg),\n    longitude_deg = as.numeric(longitude_deg),\n    elevation_ft = as.integer(elevation_ft)\n  ) %&gt;% \n  rename(\"lon\" = longitude_deg, \"lat\" = latitude_deg) %&gt;% \n  # Remove four locations which seem to be in the African Atlantic\n  filter(!id %in% c(330834, 330867, 325010, 331083))\n\nRows: 345 Columns: 20\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): id, ident, type, name, latitude_deg, longitude_deg, elevation_ft, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nindia_airports %&gt;% head()\n\n\n\n  \n\n\n\nLet us plot this in leaflet, using an ESRI National Geographic style map instead of the OSM Base Map. We will also place small circle markers for each airport.\n\nleaflet(data = india_airports) %&gt;% \n  setView(lat = 18, lng = 77, zoom = 4) %&gt;% \n  \n  # Add NatGeo style base map\n  addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;% # ESRI Basemap\n  \n  # Add Markers for each airport\n  addCircleMarkers(lng = ~lon, lat = ~lat,\n                   # Optional, variables stated for clarity\n                   # leaflet can automatically detect lon-lat columns\n                   # if they are appropriately named in the data\n                   # longitude/lon/lng\n                   # latitude/lat\n                   radius = 2, # Pixels\n                   color = \"red\",\n                   opacity = 1)\n\n\n\n\n\nWe can also change the icon for each airport. Let us try one of theseveral icon families that we can use with leaflet : glyphicons, ionicons, and fontawesome icons.\n\n# Define popup message for each airport\n# Based on data in india_airports\npopup &lt;- paste(\n  \"&lt;strong&gt;\",\n  india_airports$name,\n  \"&lt;/strong&gt;&lt;br&gt;\",\n  india_airports$iata_code,\n  \"&lt;br&gt;\",\n  india_airports$municipality,\n  \"&lt;br&gt;\",\n  \"Elevation(feet)\",\n  india_airports$elevation_ft,\n  \"&lt;br&gt;\",\n  india_airports$wikipedia_link,\n  \"&lt;br&gt;\"\n)\n\niata_icon &lt;- makeIcon(\n  \"iata-logo-transp.png\", # Downloaded from www.iata.org\n  iconWidth = 24,\n  iconHeight = 24,\n  iconAnchorX = 0,\n  iconAnchorY = 0\n)\n\n# Create the Leaflet map\nleaflet(data = india_airports) %&gt;%\n  setView(lat = 18, lng = 77, zoom = 4) %&gt;%\n  addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;%\n  addMarkers(\n    icon = iata_icon,\n    popup = popup\n  )\n\nAssuming \"lon\" and \"lat\" are longitude and latitude, respectively\n\n\n\n\n\n\nThere are other icons we can use to mark the POINTs. leaflet allows the use of ionicons, glyphicons, and FontAwesomeIcons\nIt is possible to create a list of icons, so that different Markers can have different icons. Let us try to map the MNCs in the ITPL area of Bangalore: we use the ideas in Using Leaflet Markers @JLA-Data.net\n\n# Make a dataframe of addresses of Companies we wan to plot in ITPL\ncompanies_itpl &lt;-\n  data.frame(\n    ticker = c(\n      \"MBRDI\",\n      \"DTICI\",\n      \"IBM\",\n      \"Exxon\",\n      \"Mindtree\",\n      \"FIS Global\",\n      \"Sasken\",\n      \"LTI\"),\n    lat = c(\n      12.986178620989264,\n      12.984160906190121,\n      12.983659088566357,\n      12.985112265986636,\n      12.983794997606187,\n      12.980658616215155,\n      12.982080447350246,\n      12.981338168875348),\n    lon = c(\n      77.7270652183105,\n      77.72808445774321,\n      77.73103488768001,\n      77.72935046040699,\n      77.7227844126931,\n      77.72685064158782,\n      77.72545589289041,\n      77.72287024338216)\n  ) %&gt;% sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n \n# Vanilla leaflet map\nleaflet(companies_itpl) %&gt;% \n  addTiles() %&gt;% \n  addMarkers()\n\n\n\n\n\nLet us make a list of logos of the Companies and use them as markers!\n\n# a named list of rescaled icons with links to images\nfavicons &lt;- iconList(\n  \"MBRDI\" = makeIcon(\n    iconUrl = \"https://www.mercedes-benz.com/etc/designs/brandhub/frontend/static-assets/header/logo.svg\", \n    iconWidth = 25,\n    iconHeight = 25\n  ),\n  \"DTICI\" = makeIcon(\n    iconUrl = \"https://media-exp1.licdn.com/dms/image/C4D0BAQGzOep26lC03w/company-logo_200_200/0/1638298367374?e=2147483647&v=beta&t=mPyF4gvNhNFvd-tedbqNzJofq4q9qcw6A9z9jQeLAwc\",\n    iconWidth = 45,\n    iconHeight = 45\n  ),\n  \"IBM\" = makeIcon(\n    iconUrl = \"https://www.ibm.com/favicon.ico\",\n    iconWidth = 25,\n    iconHeight = 25\n  ),\n  \"Exxon\" = makeIcon(\n    iconUrl = \"https://corporate.exxonmobil.com/-/media/Global/Icons/logos/ExxonMobilLogoColor2x.png\",\n    iconWidth = 45,\n    iconHeight = 25\n  ),\n  \"Mindtree\" = makeIcon(\n    iconUrl = \"https://www.mindtree.com/themes/custom/mindtree_theme/mindtree-lnt-logo-png.png\",\n    iconWidth = 75,\n    iconHeight = 25\n  ),\n  \"FIS Global\" = makeIcon(\n    iconUrl = \"https://1000logos.net/wp-content/uploads/2021/09/FIS-Logo-768x432.png\",\n    iconWidth = 25,\n    iconHeight = 25\n  ),\n  \"Sasken\" = makeIcon(\n    iconUrl = \"https://www.sasken.com/sites/all/themes/sasken_website/logo.png\",\n    iconWidth = 35,\n    iconHeight = 35,\n  ),\n  \"LTI\" = makeIcon(\n    iconUrl = \"https://www.lntinfotech.com/wp-content/uploads/2021/09/LTI-logo.svg\",\n    iconWidth = 25,\n    iconHeight = 25\n  )\n)\n\n\n# Create the Leaflet map\n\nleaflet(companies_itpl) %&gt;% \n  addMarkers(icon = ~ favicons[ticker], # lookup based on ticker\n             label = ~ companies_itpl$ticker,\n             labelOptions = labelOptions(noHide = F,offset = c(15,-25))) %&gt;%\n  addProviderTiles(\"CartoDB.Positron\")\n\n\n\n\n\n\n3.1.2 Points using sf objects\nWe will use data from an sf data object. This differs from the earlier situation where we had a simple data frame with lon and lat columns. In sf, the lon and lat info is embedded in the geometry column of the sf data frame.\nThe tmap package has a data set of all World metro cities, titled metro. We will plot these on the map and also scale the markers in proportion to one of the feature attributes, pop2030. The popup will be the name of the metro city. We will also use the CartoDB.Positron base map.\nNote that the metro data set has a POINT geometry, as needed!\n\ndata(metro, package = \"tmap\")\nmetro\n\n\n\n  \n\n\nleaflet(data = metro) %&gt;% \n  setView(lat = 18, lng = 77, zoom = 4) %&gt;% \n  \n  # Add CartoDB.Positron\n  addProviderTiles(providers$CartoDB.Positron) %&gt;% # CartoDB Basemap\n  \n  # Add Markers for each airport\n  addCircleMarkers(radius = ~ sqrt(pop2030)/350,\n                   color = \"red\",\n                   popup = paste(\"Name: \", metro$name, \"&lt;br&gt;\",\n                                  \"Population 2030: \", metro$pop2030))\n\n\n\n\n\nWe can also try downloading an sf data frame with POINT geometry from say OSM data&lt;https://osm. Let us get hold of restaurants data in Malleswaram, Bangalore from OSM data:\n\nbbox&lt;- osmdata::getbb(\"Malleswaram, Bengaluru\")\nbbox\n\n       min      max\nx 77.55033 77.59033\ny 12.98274 13.02274\n\nlocations &lt;- osmplotr::extract_osm_objects(\n  bbox = bbox,\n  key = \"amenity\",\n  value = \"restaurant\",\n  return_type = \"point\") \n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: z.overpass-api.de/api/\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\nlocations &lt;- locations %&gt;% \n  dplyr::filter(cuisine == \"indian\")\nlocations %&gt;% head()\n\n\n\n  \n\n\n# Fontawesome icons seem to work in `leaflet` only up to FontAwesome V4.7.0.\n# The Fontawesome V4.7.0 Cheatsheet is here: &lt;https://fontawesome.com/v4/cheatsheet/&gt;\n\n\nleaflet(data = locations, options = leafletOptions(minZoom = 12)) %&gt;% \n  \n  addProviderTiles(providers$CartoDB.Voyager) %&gt;% \n  \n  # Regular `leaflet` code\n  addAwesomeMarkers(icon = awesomeIcons(icon = \"fa-coffee\", \n                                        library = \"fa\",\n                                        markerColor = \"blue\",\n                                        iconColor = \"black\",\n                                        iconRotate = TRUE),\n                     popup = paste(\"Name: \", locations$name,\"&lt;br&gt;\",\n                           \"Food: \", locations$cuisine)) \n\n\n\n\n\nFontawesome Workaround\nFor more later versions of Fontawesome, here below is a workaround from https://github.com/rstudio/leaflet/issues/691. Despite this some fontawesome icons simply do not seem to show up. ;-()\n\nlibrary(fontawesome)\ncoffee &lt;- makeAwesomeIcon(\n  text = fa(\"mug-hot\"), # mug-hot was introduced in fa version 5\n  iconColor = \"black\",\n  markerColor = \"blue\",\n  library = \"fa\"\n)\n\n\nleaflet(data = locations) %&gt;% \n  addProviderTiles(providers$CartoDB.Voyager) %&gt;% \n  \n  # Workaround code\n\n  addAwesomeMarkers(icon = coffee,\n             popup = paste(\"Name: \", locations$name,\"&lt;br&gt;\",\n                           \"Food: \", locations$cuisine, \"&lt;br&gt;\"))\n\n\n\n\n\nNote that leaflet automatically detects the lon/lat columns from within the POINT geometry column of the sf data frame.\n\n3.1.3 Points using Two-Column Matrices\nWe can now quickly try providing lon and lat info in a two column matrix.This can be useful to plot a bunch of points recorded on a mobile phone app.\n\nmysore5 &lt;- matrix(c(runif(5, 76.652985-0.01, 76.652985+0.01),\n                 runif(5, 12.311827-0.01, 12.311827+0.01)),\n                 nrow = 5)\nmysore5\n\n         [,1]     [,2]\n[1,] 76.65462 12.31162\n[2,] 76.64928 12.30791\n[3,] 76.64946 12.30259\n[4,] 76.64796 12.30682\n[5,] 76.65478 12.31749\n\nleaflet(data = mysore5) %&gt;% \n  addProviderTiles(providers$OpenStreetMap) %&gt;% \n  \n# Pick an icon from &lt;https://www.w3schools.com/bootstrap/bootstrap_ref_comp_glyphs.asp&gt;\n  addAwesomeMarkers(icon = awesomeIcons(\n  icon = 'music',\n  iconColor = 'black',\n  library = 'glyphicon'),\n  popup = \"Carnatic Music !!\")"
  },
  {
    "objectID": "content/labs/r-labs/maps/PlayingwithLeaflet.html#polygons-lines-and-polylines-data-sources-for-leaflet",
    "href": "content/labs/r-labs/maps/PlayingwithLeaflet.html#polygons-lines-and-polylines-data-sources-for-leaflet",
    "title": "Playing with Leaflet",
    "section": "\n3.2 Polygons, Lines, and Polylines Data Sources for leaflet\n",
    "text": "3.2 Polygons, Lines, and Polylines Data Sources for leaflet\n\nWe have seen how to get POINT data into leaflet.\nLine and polygon data can come from a variety of sources:\n\n\nSpatialPolygons, SpatialPolygonsDataFrame, Polygons, and Polygon objects (from the sp package)\n\n\nSpatialLines, SpatialLinesDataFrame, Lines, and Line objects (from the sp package)\n\n\nMULTIPOLYGON, POLYGON, MULTILINESTRING, and LINESTRING objects (from the sf package)\n\n\nmap objects (from the maps package’s map() function); use map(fill = TRUE) for polygons, FALSE for polylines\n\nTwo-column numeric matrix; the first column is longitude and the second is latitude. Polygons are separated by rows of (NA, NA). It is not possible to represent multi-polygons nor polygons with holes using this method; use SpatialPolygons instead.\n\nWe will concentrate on using sf data into leaflet. We may explore maps() objects at a later date.\n\n3.2.1 Polygons/MultiPolygons and LineString/MultiLineString using sf data frames\nLet us download College buildings, parks, and the cycling lanes in Amsterdam, Netherlands, and plot these in leaflet.\n\nbbox &lt;- osmdata::getbb(\"Amsterdam, Netherlands\")\nbbox\n\n        min       max\nx  4.728756  5.079162\ny 52.278174 52.431064\n\ncolleges &lt;- osmplotr::extract_osm_objects(bbox = bbox,\n                                           key = \"amenity\",\n                                           value = \"college\",\n                                           return_type = \"polygon\" )\n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: z.overpass-api.de/api/\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\nparks &lt;- osmplotr::extract_osm_objects(bbox = bbox,\n                                           key = \"park\",\n                                           return_type = \"polygon\" )\n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: z.overpass-api.de/api/\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\nroads &lt;- osmplotr::extract_osm_objects(bbox = bbox,\n                                       key = \"highway\",\n                                       value = \"primary\",\n                                       return_type = \"line\")\n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: z.overpass-api.de/api/\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\ncyclelanes &lt;-\n  osmplotr::extract_osm_objects(bbox,\n                                key = \"cycleway\",\n                                value =  \"lane\",\n                                return_type = \"line\")\n\nIssuing query to Overpass API ...\n\n\nAnnounced endpoint: z.overpass-api.de/api/\n\n\nQuery complete!\n\n\nconverting OSM data to sf format\n\n\nWe have 17 colleges in our data and 370 parks in our data.\n\nleaflet() %&gt;% \n  addTiles() %&gt;% \n  addPolygons(data = colleges, popup = ~colleges$name) %&gt;% \n  addPolygons(data = parks, color = \"green\", popup = parks$name) %&gt;% \n  addPolylines(data = roads, color = \"red\") %&gt;% \n  addPolylines(data = cyclelanes, color = \"purple\")"
  },
  {
    "objectID": "content/labs/r-labs/maps/PlayingwithLeaflet.html#chapter-3-using-raster-data-in-leaflet",
    "href": "content/labs/r-labs/maps/PlayingwithLeaflet.html#chapter-3-using-raster-data-in-leaflet",
    "title": "Playing with Leaflet",
    "section": "\n3.3 Chapter 3: Using Raster Data in leaflet\n",
    "text": "3.3 Chapter 3: Using Raster Data in leaflet\n\nSo far all the geospatial data we have plotted in leaflet has been vector data. We will now explore how to plot raster data using leaflet. Raster data are used to depict continuous variables across space, such as vegitation, salinity, forest cover etc. Satellite imagery is frequently available as raster data.\n\n3.3.1 Importing Raster Data [Work in Progress!]\nRaster data can be imported into R in many ways:\n\nusing the maptiles package\n\nusing the OpenStreetMap package\n\n\nlibrary(terra)\n\nterra 1.7.18\n\n\n\nAttaching package: 'terra'\n\n\nThe following object is masked from 'package:data.world':\n\n    query\n\n\nThe following objects are masked from 'package:igraph':\n\n    blocks, compare\n\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\nlibrary(maptiles)\n#library(OpenStreetMap) # causes RStudio to crash..."
  },
  {
    "objectID": "content/labs/r-labs/maps/PlayingwithLeaflet.html#adding-legendswork-in-progress",
    "href": "content/labs/r-labs/maps/PlayingwithLeaflet.html#adding-legendswork-in-progress",
    "title": "Playing with Leaflet",
    "section": "\n4.1 Adding Legends[Work in Progress!]",
    "text": "4.1 Adding Legends[Work in Progress!]\n\n## Generate some random lat lon data around Bangalore\ndf &lt;- data.frame(lat = runif(20, min = 11.97, max = 13.07),\n                 lng = runif(20, min = 77.48, max = 77.68),\n                 col = sample(c(\"red\", \"blue\", \"green\"), 20, \n                              replace = TRUE),\n                 stringsAsFactors = FALSE)\n\ndf %&gt;%\n  leaflet() %&gt;%\n  addTiles() %&gt;%\n  addCircleMarkers(color = df$col) %&gt;%\n  addLegend(values = df$col, labels = LETTERS[1:3], colors = c(\"blue\", \"red\", \"green\"))\n\nAssuming \"lng\" and \"lat\" are longitude and latitude, respectively"
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html",
    "href": "content/labs/r-labs/networks/index.html",
    "title": "The Grammar of Networks",
    "section": "",
    "text": "knitr::opts_chunk$set(echo = TRUE, warning = FALSE)\n\n########################################\n# For General Data Manipulation\nlibrary(tidyverse)\n\n########################################\n# Network Analysis Library (Handle data and Viz)\nlibrary(igraph)\nlibrary(netrankr)\n\n########################################\n# For Network \"Manipulation\"\nlibrary(tidygraph)\n\n# For Network Visualization\nlibrary(ggraph)\nlibrary(graphlayouts)\nlibrary(visNetwork)\n\n# For \"Network\" Datasets\nlibrary(igraphdata)"
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#iconify-noto-v1-package-setting-up-r-packages",
    "href": "content/labs/r-labs/networks/index.html#iconify-noto-v1-package-setting-up-r-packages",
    "title": "The Grammar of Networks",
    "section": "",
    "text": "knitr::opts_chunk$set(echo = TRUE, warning = FALSE)\n\n########################################\n# For General Data Manipulation\nlibrary(tidyverse)\n\n########################################\n# Network Analysis Library (Handle data and Viz)\nlibrary(igraph)\nlibrary(netrankr)\n\n########################################\n# For Network \"Manipulation\"\nlibrary(tidygraph)\n\n# For Network Visualization\nlibrary(ggraph)\nlibrary(graphlayouts)\nlibrary(visNetwork)\n\n# For \"Network\" Datasets\nlibrary(igraphdata)"
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "href": "content/labs/r-labs/networks/index.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "title": "The Grammar of Networks",
    "section": "\n2  Introduction",
    "text": "2  Introduction\nThis Quarto document is part of my workshop course on R . The material is based on A Layered Grammar of Graphics by Hadley Wickham. The intent of this Course is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll Quarto document files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#goals",
    "href": "content/labs/r-labs/networks/index.html#goals",
    "title": "The Grammar of Networks",
    "section": "\n3 Goals",
    "text": "3 Goals\nAt the end of this Lab session, we should:\n\nknow the types and structures of network data and be able to work with them\nunderstand the basics of modern network packages in R\nbe able to create network visualizations using tidygraph, ggraph( static visualizations ) and visNetwork (interactive visualizations)\nsee directions for how the network metaphor applies in a variety of domains (e.g. biology/ecology, ideas/influence, technology, transportation, to name a few)"
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#pedagogical-note",
    "href": "content/labs/r-labs/networks/index.html#pedagogical-note",
    "title": "The Grammar of Networks",
    "section": "\n4 Pedagogical Note",
    "text": "4 Pedagogical Note\nThe method followed will be based on PRIMM:\n\n\nPREDICT Inspect the code and guess at what the code might do, write predictions\n\n\nRUN the code provided and check what happens\n\nINFER what the parameters of the code do and write comments to explain. What bells and whistles can you see?\n\nMODIFY the parameters code provided to understand the options available. Write comments to show what you have aimed for and achieved.\n\nMAKE : take an idea/concept of your own, and graph it."
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#graph-metaphors",
    "href": "content/labs/r-labs/networks/index.html#graph-metaphors",
    "title": "The Grammar of Networks",
    "section": "\n5 Graph Metaphors",
    "text": "5 Graph Metaphors\nNetwork graphs are characterized by two key terms: nodes and edges\n\n\nNodes : Entities\n\nMetaphors: Individual People? Things? Ideas? Places? to be connected in the network.\nSynonyms: vertices. Nodes have IDs.\n\n\n\nEdges: Connections\n\nMetaphors: Interactions? Relationships? Influence? Letters sent and received? Dependence? between the entities.\nSynonyms: links, ties.\n\n\n\nIn R, we create network representations using node and edge information. One way in which these could be organized are:\n\n\nNode list: a data frame with a single column listing the node IDs found in the edge list. You can also add attribute columns to the data frame such as the names of the nodes or grouping variables. ( Type? Class? Family? Country? Subject? Race? )\n\n\nNode Table\n\n\n\n\n\n\n\nID\nNode Name\nAttribute? Qualities?Categories? Family? Country?Planet?\n\n\n1\nNed\nNursery School Teacher\n\n\n2\nJaguar Paw\nMain Character, Apocalypto\n\n\n3\nJohn Snow\nEpidemiologist\n\n\n\n\n\nEdge list: data frame containing two columns: source node and destination node of an edge. Source and Destination have node IDs.\n\nWeighted network graph: An edge list can also contain additional columns describing attributes of the edges such as a magnitude aspect for an edge. If the edges have a magnitude attribute the graph is considered weighted.\n\n\nEdges Table\n\nFrom\nTo\nRelationship\nWeightage\n\n\n\n1\n3\nFinancial Dealings\n6\n\n\n2\n1\nHistory Lessons\n2\n\n\n2\n3\nVaccination\n15\n\n\n\n\n\nLayout: A geometric arrangement of nodes and edges.\n\nMetaphors: Location? Spacing? Distance? Coordinates? Colour? Shape? Size? Provides visual insight due to the arrangement.\n\n\n\nLayout Algorithms : Method to arranges nodes and edges with the aim of optimizing some metric .\n\nMetaphors: Nodes are masses and edges are springs. The Layout algorithm minimizes the stretching and compressing of all springs.(BTW, are the Spring Constants K the same for all springs?…)\n\n\nDirected and undirected network graph: If the distinction between source and target is meaningful, the network is directed. If the distinction is not meaningful, the network is undirected. Directed edges represent an ordering of nodes, like a relationship extending from one node to another, where switching the direction would change the structure of the network. Undirected edges are simply links between nodes where order does not matter.\n\nExamples:\n - The World Wide Web is an example of a directed network because\n hyperlinks connect one Web page to another, but not necessarily \n the other way around.\n\n - Co-authorship networks represent examples of un-directed networks,\nwhere nodes are authors and they are connected by an edge if they\nhave written a publication together\n\n - When people send e-mail to each other, the distinction between the\nsender (source) and the recipient (target) is clearly meaningful,\ntherefore the network is directed.\n\n\nConnected and Disconnected graphs: If there is some path from any node to any other node, the Networks is said to be Connected. Else, Disconnected."
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#predictruninfer--1",
    "href": "content/labs/r-labs/networks/index.html#predictruninfer--1",
    "title": "The Grammar of Networks",
    "section": "\n6 Predict/Run/Infer -1",
    "text": "6 Predict/Run/Infer -1\n\n6.1 Using tidygraph and ggraph\n\ntidygraph and ggraph are modern R packages for network data. Graph Data setup and manipulation is done in tidygraph and graph visualization with ggraph.\n\n\ntidygraph Data -&gt; “Network Object” in R.\n\nggraph Network Object -&gt; Plots using a chosen layout/algo.\n\nBoth leverage the power of igraph, which is the Big Daddy of all network packages. We will be using the Grey’s Anatomy dataset in our first foray into networks.\n\n6.2 Step1. Read the data\nDownload these two datasets into your current project-&gt; data folder.\n Grey’s Anatomy Nodes \n Grey’s Anatomy Nodes \n\ngrey_nodes &lt;- read_csv(\"../../../materials/data/networks/grey_nodes.csv\")\ngrey_edges &lt;- read_csv(\"../../../materials/data/networks/grey_edges.csv\")\n\ngrey_nodes\n\n\n\n  \n\n\ngrey_edges\n\n\n\n  \n\n\n\n\n\nQuestions and Inferences #1:\n\n\nLook at the console output thumbnail. What does for example name = col_character mean? What attributes (i.e. extra information) are seen for Nodes and Edges? Understand the data in both nodes and edges as shown in the second and third thumbnails. Write some comments and inferences here.\n\n\n\n6.3 Step 2.Create a network object using tidygraph:\nKey function:\n\n\ntbl_graph(): (aka “tibble graph”). Key arguments: nodes, edges and directed. Note this is a very versatile command and can take many input forms, such as data structures that result from other packages. Type ?tbl_graph in the Console and see the Usage section.\n\n\nga &lt;- tbl_graph(nodes = grey_nodes, \n                edges = grey_edges, \n                directed = FALSE)\nga\n\n# A tbl_graph: 54 nodes and 57 edges\n#\n# An undirected simple graph with 4 components\n#\n# A tibble: 54 × 7\n  name               sex   race  birthyear position  season sign  \n  &lt;chr&gt;              &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt; \n1 Addison Montgomery F     White      1967 Attending      1 Libra \n2 Adele Webber       F     Black      1949 Non-Staff      2 Leo   \n3 Teddy Altman       F     White      1969 Attending      6 Pisces\n4 Amelia Shepherd    F     White      1981 Attending      7 Libra \n5 Arizona Robbins    F     White      1976 Attending      5 Leo   \n6 Rebecca Pope       F     White      1975 Non-Staff      3 Gemini\n# ℹ 48 more rows\n#\n# A tibble: 57 × 4\n   from    to weight type    \n  &lt;int&gt; &lt;int&gt;  &lt;dbl&gt; &lt;chr&gt;   \n1     5    47      2 friends \n2    21    47      4 benefits\n3     5    46      1 friends \n# ℹ 54 more rows\n\n\n\n\nQuestions and Inferences #2:\n\n\nQuestions and Inferences: What information does the graph object contain? What attributes do the nodes have? What about the edges?\n\n\n\n6.4 Step 3. Plot using ggraph\n\n3a. Quick Plot: autograph() This is to check quickly is the data is imported properly and to decide upon going on to a more elaborate plotting.\n\nautograph(ga)\n\n\n\n\n\n\nQuestions and Inferences #3:\n\n\nQuestions and Inferences: Describe this graph, in simple words here. Try to use some of the new domain words we have just acquired: nodes/edges, connected/disconnected, directed/undirected.\n\n\n3b. More elaborate plot\nKey functions:\n\n\nggraph(layout = \"......\"): Create classic node-edge diagrams; i.e. Sets up the graph. Rather like ggplot for networks!\n\nTwo kinds of geom: one set for nodes, and another for edges\n\ngeom_node_point(aes(.....)): Draws node as “points”. Alternatives are circle / arc_bar / tile / voronoi. Remember the geoms that we have seen before in Grammar of Graphics!\ngeom_edge_link(aes(.....)): Draws edges as “links”. Alternatives are arc / bend / elbow / hive / loop / parallel / diagonal / point / span /tile.\ngeom_node_text(aes(label = ......), repel = TRUE): Adds text labels (non-overlapping). Alternatives are label /...\nlabs(title = \"....\", subtitle = \"....\", caption = \"....\"): Change main titles, axis labels and legend titles. We know this from our work with ggplot.\n\n\n# Write Comments next to each line \n# About what that line does for the overall graph\n\nggraph(graph = ga,  layout = \"kk\") +\n  #\n  \n  geom_edge_link(width = 2, color = \"pink\") +\n  #\n  \n  geom_node_point(\n    shape = 21,\n    size = 8,\n    fill = \"blue\",\n    color = \"green\",\n    stroke = 2\n  ) +\n  #\n  \n  labs(title = \"Whoo Hoo! My first silly Grey's Anatomy graph in R!\",\n       subtitle = \"Why did I ever get in this course...\",\n       caption = \"Bro, they are doing **cool** things in the other\n       classes...\") \n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n\n\n\n\n\n\n\nQuestions and Inferences #3:\n\n\nQuestions and Inferences: What parameters have been changed here, compared to the earlier graph? Where do you see these changes in the code above?\n\n\nLet us Play with this graph and see if we can make some small changes. Colour? Fill? Width? Size? Stroke? Labs? Of course!\n\n# Change the parameters in each of the commands here to new ones\n# Use fixed values for colours or sizes...etc. \n\nggraph(graph = ga,  layout = \"kk\") + \n  geom_edge_link(width = 2) + \n  geom_node_point(shape = 21, size = 8, \n                  fill = \"blue\", \n                  color = \"green\", \n                  stroke = 2) +\n  labs(title = \"Whoo Hoo! My next silly Grey's Anatomy graph in R!\",\n       subtitle = \"Why did I ever get in this course...\",\n       caption = \"Bro, they are doing cool things in the other \n       classes...\") \n\n\n\n\n\n\nQuestions and Inferences #4:\n\n\nQuestions and Inferences: What did the shape parameter achieve? What are the possibilities with shape? How about including alpha?\n\n\n3c. Aesthetic Mapping from Node and Edge attribute columns\nUp to now, we have assigned specific numbers to geometric aesthetics such as shape and size. Now we are ready ( maybe ?) change the meaning and significance of the entire graph and each element within it, and use aesthetics / metaphoric mappings to achieve new meanings or insights. Let us try using aes() inside each geom to map a variable to a geometric aspect.\nDon’t try to use more than 2 aesthetic mappings simultaneously!!\nThe node elements we can tweak are:\n\nTypes of Nodes: geom_node_****()\n\nNode Parameters: inside geom_node_****(aes(...............))\n-aes(alpha  = node-variable) : opacity; a value between 0 and 1\n-aes(shape  = node-variable) : node shape\n-aes(colour = node-variable) : node colour\n-aes(fill   = node-variable) : fill colour for node\n-aes(size   = node-variable) : size of node\n\nThe edge elements we can tweak are:\n\nType of Edges” geom_edge_****()\n\nEdge Parameters: inside geom_edge_****(aes(...............))\n-aes(colour = edge-variable) : colour of the edge\n-aes(width  = edge-variable) : width of the edge\n-aes(label  = some_variable) : labels for the edge\n\nType ?geom_node_point and ?geom-edge_link in your Console for more information.\n\nggraph(graph = ga, layout = \"fr\") +\n  geom_edge_link0(aes(width = weight)) + # change variable here\n  \n  geom_node_point(aes(color = race), size = 6) + # change variable here\n\n\n  labs(title = \"Whoo Hoo! Yet another Grey's Anatomy graph in R!\") \n\n\n\n\n\n\nQuestions and Inferences #5:\n\n\nQuestions and Inferences: Describe some of the changes here. What types of edges worked? Which variables were you able to use for nodes and edges and how? What did not work with either of the two?"
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#predictreuseinfer-2",
    "href": "content/labs/r-labs/networks/index.html#predictreuseinfer-2",
    "title": "The Grammar of Networks",
    "section": "\n7 Predict/Reuse/Infer-2",
    "text": "7 Predict/Reuse/Infer-2\n\n# Arc diagram\nggraph(ga, layout = \"linear\") +\n  geom_edge_arc(aes(width = weight), alpha = 0.8) +\n  scale_edge_width(range = c(0.2, 2)) +\n  geom_node_point(size = 2, colour = \"red\") +\n  labs(edge_width = \"Weight\") \n\n\n\n\n\n\nQuestions and Inferences #6:\n\n\nQuestions and Inferences: How does this graph look “metaphorically” different? Do you see a difference in the relationships between people here? Why?\n\n\n\n# Coord diagram, circular\nggraph(ga, layout = \"linear\", circular = TRUE) + \n  geom_edge_arc(aes(width = weight), alpha = 0.8) + \n  scale_edge_width(range = c(0.2, 2)) +\n  geom_node_point(size = 4,colour = \"red\") + \n  geom_node_text(aes(label = name),repel = TRUE, size = 3,\n                 max.overlaps = 20) +\n  labs(edge_width = \"Weight\") +\n  theme_graph() \n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\n\nQuestions and Inferences #7:\n\n\nQuestions and Inferences: How does this graph look “metaphorically” different? Do you see a difference in the relationships between people here? Why?"
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#hierarchical-layouts",
    "href": "content/labs/r-labs/networks/index.html#hierarchical-layouts",
    "title": "The Grammar of Networks",
    "section": "\n8 Hierarchical layouts",
    "text": "8 Hierarchical layouts\nThese provide for some alternative metaphorical views of networks. Note that not all layouts are possible for all datasets!!\n\nset_graph_style()\n\n# This dataset contains the graph that describes the class \n# hierarchy for the Flare visualization library.\n# Type ?flare in your Console\nhead(flare$vertices)\n\n\n\n  \n\n\nhead(flare$edges)\n\n\n\n  \n\n\n# flare class hierarchy\ngraph = tbl_graph(edges = flare$edges, nodes = flare$vertices)\n\n# dendrogram\nggraph(graph, layout = \"dendrogram\") + \n  geom_edge_diagonal() + \n  labs(title = \"Dendrogram\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n# circular dendrogram\nggraph(graph, layout = \"dendrogram\", circular = TRUE) + \n  geom_edge_diagonal() + \n  geom_node_point(aes(filter = leaf)) + \n  coord_fixed()+ \n  labs(title = \"Circular Dendrogram\")\n\n\n\n# rectangular tree map\nggraph(graph, layout = \"treemap\", weight = size) + \n  geom_node_tile(aes(fill = depth), size = 0.25) + \n  labs(title = \"Rectangular Tree Map\")\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n# circular tree map\nggraph(graph, layout = \"circlepack\", weight = size) + \n  geom_node_circle(aes(fill = depth), size = 0.25, n = 50) + \n  coord_fixed() + \n  labs(title = \"Circular Tree Map\")\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n# icicle\nggraph(graph, layout = \"partition\") + \n  geom_node_tile(aes(y = -y, fill = depth))\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n# sunburst (circular icicle)\nggraph(graph, layout = \"partition\", circular = TRUE) +\n  geom_node_arc_bar(aes(fill = depth)) +\n  coord_fixed() + \n  labs(title = \"Circular Icicle\")\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\n\nQuestions and Inferences #8:\n\n\nQuestions and Inferences: How do graphs look “metaphorically” different? Do they reveal different aspects of the group? How?"
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#faceting",
    "href": "content/labs/r-labs/networks/index.html#faceting",
    "title": "The Grammar of Networks",
    "section": "\n9 Faceting",
    "text": "9 Faceting\nFaceting allows to create sub-plots according to the values of a qualitative attribute on nodes or edges.\n\n# setting theme_graph \nset_graph_style()\n\n\n# facet edges by type\nggraph(ga,layout = \"linear\", circular = TRUE) + \n  geom_edge_link(aes(color = type)) + \n  geom_node_point() +\n  facet_edges(~ type) +\n  theme(aspect.ratio = 1)\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n# facet nodes by sex\nggraph(ga,layout = \"linear\", circular = TRUE) + \n  geom_edge_link() + \n  geom_node_point() +\n  facet_nodes(~race) +\n  theme(aspect.ratio = 1)\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n# facet both nodes and edges\nggraph(ga,layout = \"linear\", circular = TRUE) + \n  geom_edge_link(aes(color = type)) + \n  geom_node_point() +\n  facet_graph(type ~ race) + \n  th_foreground(border = TRUE) +\n  theme(aspect.ratio = 1, legend.position = \"top\")\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\n\nQuestions and Inferences #9:\n\n\nQuestions and Inferences: Does splitting up the main graph into subnetworks give you more insight? Describe some of these."
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#network-analysis-with-tidygraph",
    "href": "content/labs/r-labs/networks/index.html#network-analysis-with-tidygraph",
    "title": "The Grammar of Networks",
    "section": "\n10 Network analysis with tidygraph",
    "text": "10 Network analysis with tidygraph\nThe data frame graph representation can be easily augmented with metrics or statistics computed on the graph. Remember how we computed counts with the penguin dataset in Grammar of Graphics.\nBefore computing a metric on nodes or edges use the activate() function to activate either node or edge data frames. Use dplyr verbs (filter, arrange, mutate) to achieve your computation in the proper way.\n\n10.1 Network Centrality\nCentrality is a an “ill-defined” metric of node and edge importance in a network. It is therefore calculated in many ways. Type ?centrality in your Console.\n\n\nStandards\n\nLet’s add a few columns to the nodes and edges based on network centrality measures:\n\nga %&gt;% \n  activate(nodes) %&gt;% \n  \n  # Node with  the most connections?\n  mutate(degree = centrality_degree(mode = c(\"in\"))) %&gt;% \n  filter(degree &gt; 0) %&gt;% \n  \n  activate(edges) %&gt;% \n  # \"Busiest\" edge?\n  mutate(betweenness = centrality_edge_betweenness())\n\n# A tbl_graph: 54 nodes and 57 edges\n#\n# An undirected simple graph with 4 components\n#\n# A tibble: 57 × 5\n   from    to weight type     betweenness\n  &lt;int&gt; &lt;int&gt;  &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt;\n1     5    47      2 friends         20.3\n2    21    47      4 benefits        44.7\n3     5    46      1 friends         39  \n4     5    41      1 friends         66.3\n5    18    41      6 friends         39  \n6    21    41     12 benefits        91.5\n# ℹ 51 more rows\n#\n# A tibble: 54 × 8\n  name               sex   race  birthyear position  season sign   degree\n  &lt;chr&gt;              &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n1 Addison Montgomery F     White      1967 Attending      1 Libra       3\n2 Adele Webber       F     Black      1949 Non-Staff      2 Leo         1\n3 Teddy Altman       F     White      1969 Attending      6 Pisces      4\n# ℹ 51 more rows\n\n\nPackages tidygraph and ggraph can be pipe-lined to perform analysis and visualization tasks in one go.\n\n# setting theme_graph \nset_graph_style()\n\nga %&gt;% \n  activate(nodes) %&gt;% \n  \n  # Who has the most connections?\n  mutate(degree = centrality_degree()) %&gt;% \n  \n  activate(edges) %&gt;% \n  # Who is the go-through person?\n  mutate(betweenness = centrality_edge_betweenness()) %&gt;%\n  \n  # Now to continue with plotting\n  ggraph(layout = \"nicely\") +\n  geom_edge_link(aes(alpha = betweenness)) +\n  geom_node_point(aes(size = degree, colour = degree)) + \n  \n  # discrete colour legend\n  scale_color_gradient(guide = \"legend\")\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n# or even less typing\n  ggraph(ga,layout = \"nicely\") +\n  geom_edge_link(aes(alpha = centrality_edge_betweenness())) +\n  geom_node_point(aes(colour = centrality_degree(), \n                      size = centrality_degree())) + \n  scale_color_gradient(guide = \"legend\",\n                       low = \"green\",\n                       high = \"red\") \n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\n\nQuestions and Inferences #10:\n\n\nQuestions and Inferences: How do the Centrality Measures show up in the graph? Would you “agree” with the way we have done it? Try to modify the aesthetics by copy-pasting this chunk below and see how you can make an alternative representation.\n\n\n\n10.2 Analysis and visualizing Network Communities\nWho is close to whom? Which are the groups you can see?\n\n# setting theme_graph \nset_graph_style()\n\n\n# visualize communities of nodes\nga %&gt;% \n  activate(nodes) %&gt;%\n  mutate(community = as.factor(group_louvain())) %&gt;% \n  ggraph(layout = \"graphopt\") + \n  geom_edge_link() + \n  geom_node_point(aes(color = community), size = 5) \n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\n\n\n\n\n\nQuestions and Inferences #11:\n\n\nQuestions and Inferences: Is the Community depiction clear? How would you do it, with which aesthetic? Copy Paste this chunk below and try.\n\n\n\n10.3 Interactive Graphs with visNetwork\n\nExploring the VisNetwork package. Make graphs wiggle and shake using tidy commands! The package implements interactivity using the physical metaphor of weights and springs we discussed earlier.\nThe visNetwork() function uses a nodes list and edges list to create an interactive graph. The nodes list must include an “id” column, and the edge list must have “from” and “to” columns. The function also plots the labels for the nodes, using the names of the cities from the “label” column in the node list.\n\nlibrary(visNetwork)\n\n# Prepare the data for plotting by visNetwork\ngrey_nodes\n\n\n\n  \n\n\ngrey_edges\n\n\n\n  \n\n\n# Relabel greys anatomy nodes and edges for VisNetwork\ngrey_nodes_vis &lt;- grey_nodes %&gt;% \n  rowid_to_column(var = \"id\") %&gt;% \n  rename(\"label\" = name) %&gt;% \n  mutate(sex = case_when(sex == \"F\" ~ \"Female\",\n                         sex == \"M\" ~ \"Male\")) %&gt;% \n  replace_na(., list(sex = \"Transgender?\")) %&gt;% \n  rename(\"group\" = sex)\ngrey_nodes_vis\n\n\n\n  \n\n\ngrey_edges_vis &lt;- grey_edges %&gt;% \n  select(from, to) %&gt;% \n  left_join(., grey_nodes_vis, \n            by = c(\"from\" = \"label\")) %&gt;% \n  left_join(., grey_nodes_vis, \n            by = c(\"to\" = \"label\")) %&gt;%\n  select(\"from\"= id.x, \"to\" = id.y)\ngrey_edges_vis\n\n\n\n  \n\n\n\nUsing fontawesome icons\n\ngrey_nodes_vis %&gt;%\n\n  visNetwork(nodes = ., edges = grey_edges_vis) %&gt;% \n  visNodes(font = list(size = 40)) %&gt;% \n  \n  # Colour and icons for each of the gender-groups\n  visGroups(groupname = \"Female\", shape = \"icon\", \n            icon = list(code = \"f182\", size = 75, color = \"tomato\"),\n            shadow = list(enabled = TRUE)) %&gt;% \n  \n  visGroups(groupname = \"Male\", shape = \"icon\", \n            icon = list(code = \"f183\", size = 75, color = \"slateblue\"), \n            shadow = list(enabled = TRUE)) %&gt;% \n  \n  visGroups(groupname = \"Transgender?\", shape = \"icon\", \n            icon = list(code = \"f22c\", size = 75, color = \"fuchsia\"), \n            shadow = list(enabled = TRUE)) %&gt;% \n  \n  #visLegend() %&gt;%\n  #Add the fontawesome icons!!\n  addFontAwesome() %&gt;% \n  \n  # Add Interaction Controls\n  visInteraction(navigationButtons = TRUE,\n                 hover = TRUE,\n                 selectConnectedEdges = TRUE,\n                 hoverConnectedEdges = TRUE,\n                 zoomView = TRUE)\n\n\n\n\n\nThere is another family of icons available in visNetwork, called ionicons. Let’s see how they look:\n\ngrey_nodes_vis %&gt;%\n\n  visNetwork(nodes = ., edges = grey_edges_vis,) %&gt;%\n  visLayout(randomSeed = 12345) %&gt;%\n  visNodes(font = list(size = 50)) %&gt;%\n  visEdges(color = \"green\") %&gt;%\n  visGroups(\n    groupname = \"Female\",\n    shape = \"icon\",\n    icon = list(\n      face = 'Ionicons',\n      code = \"f25d\",\n      color = \"fuchsia\",\n      size = 125\n    )\n  ) %&gt;%\n  \n  visGroups(\n    groupname = \"Male\",\n    shape = \"icon\",\n    icon = list(\n      face = 'Ionicons',\n      code = \"f202\",\n      color = \"green\",\n      size = 125\n    )\n  ) %&gt;%\n  \n  visGroups(\n    groupname = \"Transgender?\",\n    shape = \"icon\",\n    icon = list(\n      face = 'Ionicons',\n      code = \"f233\",\n      color = \"dodgerblue\",\n      size = 125\n    )\n  ) %&gt;%\n  visLegend() %&gt;%\n  addIonicons() %&gt;%\n  visInteraction(\n    navigationButtons = TRUE,\n    hover = TRUE,\n    selectConnectedEdges = TRUE,\n    hoverConnectedEdges = TRUE,\n    zoomView = TRUE\n  )\n\n\n\n\n\nSome idea of interactivity and controls with visNetwork:\n Star Wars Nodes \n Star Wars Edges \n\n# let's look again at the data\nstarwars_nodes &lt;- read_csv(\"../../../materials/data/networks/star-wars-network-nodes.csv\")\n\nRows: 22 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): name\ndbl (1): id\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstarwars_edges &lt;- read_csv(\"../../../materials/data/networks/star-wars-network-edges.csv\")\n\nRows: 60 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): source, target\ndbl (1): weight\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n# We need to rename starwars nodes dataframe and edge dataframe columns for visNetwork\nstarwars_nodes_vis &lt;- \n  starwars_nodes %&gt;% \n  rename(\"label\" = name)\n\n# Convert from and to columns to **node ids**\nstarwars_edges_vis &lt;- \n  starwars_edges %&gt;% \n  \n  # Matching Source &lt;- Source Node id (\"id.x\")\n  left_join(., starwars_nodes_vis, by = c(\"source\" = \"label\")) %&gt;% \n  \n  # Matching Target &lt;- Target Node id (\"id.y\")\n  left_join(., starwars_nodes_vis, by = c(\"target\" = \"label\")) %&gt;% \n  \n# Select \"id.x\" and \"id.y\" ONLY\n# Rename them as \"from\" and \"to\"\n# keep \"weight\" column for aesthetics of edges\n  select(\"from\" = id.x, \"to\" = id.y, \"value\" = weight)\n\n# Check everything once\nstarwars_nodes_vis\n\n\n\n  \n\n\nstarwars_edges_vis\n\n\n\n  \n\n\n\nOk, let’s make things move and shake!!\n\nvisNetwork(nodes = starwars_nodes_vis,\n           edges = starwars_edges_vis) %&gt;% \n  visNodes(font = list(size = 30), shape = \"icon\", \n           icon = list(code = \"f1e3\", size = 75)) %&gt;% \n  addFontAwesome() %&gt;% \n  visEdges(color = \"red\")\n\n\n\n\n\n\nvisNetwork(nodes = starwars_nodes_vis,\n           edges = starwars_edges_vis) %&gt;% \n  visNodes(font = list(size = 30)) %&gt;% \n  visEdges(color = \"red\")"
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#your-assignments",
    "href": "content/labs/r-labs/networks/index.html#your-assignments",
    "title": "The Grammar of Networks",
    "section": "\n11 Your Assignments:",
    "text": "11 Your Assignments:\n\n11.1 Make-1 : With a ready made dataset\nStep 0. Fire up a New Project! Always!\nStep 1. Fire up a new Quarto document. Fill in the YAML header.\nStep 2. Take any one of the “Make1-Datasets” datasets described below.\nStep 3. Document contents:\n\nIntroduce / Inspect in R your data and describe\nIntroduce your Purpose\nCreate graph objects\nTry different layouts\nWrite comments in the code\nWrite narrative in text with sections, bold ,italic etc.\n\nStep 4. Knit before you submit. Submit only your renderable .qmd file.\n\n11.2 Make1 - Datasets:\n\nAirline Data:\n\n Airlines Nodes \n Airlines Edges \n\nStart with this bit of code in your second chunk, after set up\n\n\n\nairline_nodes &lt;-\n  read_csv(\"./mydatafolder/AIRLINES-NODES.csv\") %&gt;% \n  mutate(Id = Id + 1)\n\nairline_edges &lt;-\n  read_csv(\"./mydatafolder/AIRLINES-EDGES.csv\") %&gt;%\n  mutate(Source = Source + 1, Target = Target + 1)\n\n\nThe Famous Zachary Karate Club dataset\n\n\n\nStart with pulling this data into your Rmarkdown:\ndata(“karate”,package= “igraphdata”) karate\n\nTry ?karate in the console\nNote that this is not a set of nodes, nor edges, but already a graph-object!\nSo no need to create a graph object using tbl_graph.\nYou will need to just go ahead and plot using ggraph.\n\n\nGame of Thrones:\n\n GoT Networks \n\nStart with pulling this data into your Rmarkdown:\n\n\nGoT &lt;- read_rds(\"../../../materials/data/networks/GoT.RDS\")\n\n\nNote that this is a list of 7 graphs from Game of Thrones.\nSelect one using GoT[[index]] where index = 1…7 and then plot directly.\nTry to access the nodes and edges and modify them using any attribute data\n\n\nAny other graph dataset from igraphdata (type ?igraphdata in console)\n\n\nAsk me for help if you need any\n\n11.3 Make-2: Literary Network with TV Show / Book / Story / Play\nThis is in groups. Groups of 4. To be announced\nYou need to create a Network Graph for your favourite Book, play, TV serial or Show. (E.g. Friends, BBT, or LB or HIMYM, B99, TGP, JTV…or Hamlet, Little Women , Pride and Prejudice, or LoTR)\nStep 1. Go to: Literary Networks for instructions.\nStep 2. Make your data using the instructions.\n\nIn the nodes excel, use id and names as your columns. Any other details in other columns to the right.\nIn your edges excel, use from and to are your first columns. Entries in these columns can be names or ids but be consistent and don’t mix.\n\nStep 3. Decide on 3 answers that you to seek and plan to make graphs for.\nStep 4. Create graph objects. Say 3 visualizations.\nStep 5. Write comments/answers in the code and narrative text. Add pictures from the web using Markdown syntax.\nStep 6. Write Reflection ( ok, a short one!) inside your Quarto document. Make sure it renders !!\nStep 7. Group Submission: Submit the render-able .qmd file AND the data. Quarto Markdown with joint authorship. Each person submits on their Assignments. All get the same grade on this one.\nAsk me for clarifications on what to do after you have read the Instructions in your group."
  },
  {
    "objectID": "content/labs/r-labs/networks/index.html#read-more",
    "href": "content/labs/r-labs/networks/index.html#read-more",
    "title": "The Grammar of Networks",
    "section": "\n12 Read more",
    "text": "12 Read more\n\nThomas Lin Pedersen - 1 giraffe, 2 giraffe,GO!\nIgraph: Network Analysis and Visualization. https://CRAN.R-project.org/package=igraph.\nPedersen, Thomas Lin. 2017a. Ggraph: An Implementation of Grammar of Graphics for Graphs and Networks. https://CRAN.R-project.org/package=ggraph.\n———. 2017b. Tidygraph: A Tidy Api for Graph Manipulation. https://CRAN.R-project.org/package=tidygraph.\nTyner, Sam, François Briatte, and Heike Hofmann. 2017. “Network Visualization with ggplot2.” The R Journal 9 (1): 27–59. https://journal.r-project.org/archive/2017/RJ-2017-023/index.html.\nNetwork Datasets https://icon.colorado.edu/#!/networks\nYunran Chen, Introduction to Network Analysis Using R"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/pronouns.html",
    "href": "content/labs/r-labs/pronouns/pronouns.html",
    "title": "Lab-02: Pronouns and Data",
    "section": "",
    "text": "Understand different kinds of data variables\nAppreciate how they can be identified based on the Interrogative Pronouns they answer to\nUnderstand how each kind of variable lends itself to a specific geometric aspect in the data visualization.\nUnderstand how ask Questions of Data to develop Visualizations"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/pronouns.html#set-up",
    "href": "content/labs/r-labs/pronouns/pronouns.html#set-up",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n2.1 Set Up",
    "text": "2.1 Set Up\nThe setup code chunk below brings into our coding session R packages that provide specific computational abilities and also datasets which we can use.\nTo reiterate: Packages and datasets are not the same thing !! Packages are (small) collections of programs. Datasets are just….information."
  },
  {
    "objectID": "content/labs/r-labs/pronouns/pronouns.html#the-penguins-dataset",
    "href": "content/labs/r-labs/pronouns/pronouns.html#the-penguins-dataset",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n5.1 The penguins dataset",
    "text": "5.1 The penguins dataset\n\nnames(penguins) # Column, i.e. Variable names\n\n[1] \"species\"           \"island\"            \"bill_length_mm\"   \n[4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n[7] \"sex\"               \"year\"             \n\nhead(penguins) # first six rows\n\n\n\n  \n\n\ntail(penguins) # Last six rows\n\n\n\n  \n\n\ndim(penguins) # Size of dataset\n\n[1] 344   8\n\n# Check for missing data\nany(is.na(penguins) == TRUE)\n\n[1] TRUE\n\n\n\n\n\n\n\n\nInspect the Data\n\n\n\n\nWhat are the variable names()?\nWhat would be the Question you might have asked to obtain each of the variables?\nWhat further questions/meta questions would you ask to “process” that variable? ( Hint: Add another word after any of the Interrogative Pronouns, e.g. How…MANY?)\nWhere might the answers take your story?\n\n\n\n\n\n\n\n\n\nYour Turn #1\n\n\n\nState a few questions after discussion with your friend and state possible variables, or what you could DO with the variables, as an answer.\nE.g. Q. How many penguins? A. We need to count…rows?"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/pronouns.html#pronouns-and-variables",
    "href": "content/labs/r-labs/pronouns/pronouns.html#pronouns-and-variables",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n5.2 Pronouns and Variables",
    "text": "5.2 Pronouns and Variables\nIn the Table below, we have a rough mapping of interrogative pronouns to the kinds of variables in the data:\n\n\n\n\n\nNo\nPronoun\nAnswer\nVariable/Scale\nExample\nWhat Operations?\n\n\n\n1\nHow Many / Much / Heavy? Few? Seldom? Often? When?\nQuantities, with Scale and a Zero Value.Differences and Ratios /Products are meaningful.\nQuantitative/Ratio\nLength,Height,Temperature in Kelvin,Activity,Dose Amount,Reaction Rate,Flow Rate,Concentration,Pulse,Survival Rate\nCorrelation\n\n\n2\nHow Many / Much / Heavy? Few? Seldom? Often? When?\nQuantities with Scale. Differences are meaningful, but not products or ratios\nQuantitative/Interval\npH,SAT score(200-800),Credit score(300-850),SAT score(200-800),Year of Starting College\nMean,Standard Deviation\n\n\n3\nHow, What Kind, What Sort\nA Manner / Method, Type or Attribute from a list, with list items in some \" order\" ( e.g. good, better, improved, best..)\nQualitative/Ordinal\nSocioeconomic status (Low income, Middle income, High income),Education level (HighSchool, BS, MS, PhD),Satisfaction rating(Very much Dislike, Dislike, Neutral, Like, Very Much Like)\nMedian,Percentile\n\n\n4\nWhat, Who, Where, Whom, Which\nName, Place, Animal, Thing\nQualitative/Nominal\nName\nCount no. of cases,Mode\n\n\n\n\n\n\nAs you go from Qualitative to Quantitative data types in the table, I hope you can detect a movement from fuzzy groups/categories to more and more crystallized numbers. Each variable/scale can be subjected to the operations of the previous group. In the words of S.S. Stevens (https://psychology.okstate.edu/faculty/jgrice/psyc3214/Stevens_FourScales_1946.pdf)\n\nthe basic operations needed to create each type of scale is cumulative: to an operation listed opposite a particular scale must be added all those operations preceding it.\n\nDo think about this as you work with data.\n\nDo take a look at these references:\n\nhttps://stats.idre.ucla.edu/other/mult-pkg/whatstat/what-is-the-difference-between-categorical-ordinal-and-interval-variables/\nhttps://www.freecodecamp.org/news/types-of-data-in-statistics-nominal-ordinal-interval-and-ratio-data-types-explained-with-examples/"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/pronouns.html#the-mpg-dataset",
    "href": "content/labs/r-labs/pronouns/pronouns.html#the-mpg-dataset",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n5.3 The mpg dataset",
    "text": "5.3 The mpg dataset\n\nnames(mpg) # Column, i.e. Variable names\n\n [1] \"manufacturer\" \"model\"        \"displ\"        \"year\"         \"cyl\"         \n [6] \"trans\"        \"drv\"          \"cty\"          \"hwy\"          \"fl\"          \n[11] \"class\"       \n\nhead(mpg) # first six rows\n\n\n\n  \n\n\ntail(mpg) # Last six rows\n\n\n\n  \n\n\ndim(mpg) # Size of dataset\n\n[1] 234  11\n\n# Check for missing data\nany(is.na(mpg) == TRUE)\n\n[1] FALSE\n\n\n\n5.3.1 YOUR TURN-2\nLook carefully at the variables here. How would you interpret say the cyl variable? Is it a number and therefore Quantitative, or could it be something else?"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/pronouns.html#single-qualitativecategorical-nominal-variable",
    "href": "content/labs/r-labs/pronouns/pronouns.html#single-qualitativecategorical-nominal-variable",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.1 Single Qualitative/Categorical/ Nominal Variable",
    "text": "6.1 Single Qualitative/Categorical/ Nominal Variable\n\nQuestions: Which? What Kind? How? How many of each Kind?\n\n\nIsland ( Which island ? )\nSpecies ( Which Species? )\n\n\nCalculations: No of levels / Counts for each level\n\n\n\n\ncount / tally of no. of penguins on each island or in each species\n\nsort and order by island or species\n\n\nCharts: Bar Chart / Pie Chart / Tree Map\n\n\n\ngeom_bar / geom_bar + coord_polar() / Find out!!\n\n\npenguins %&gt;% count(species)\n\n\n\n  \n\n\n\n\nggplot(penguins) + geom_bar(aes(x = island))\n\n\n\nggplot(penguins) + geom_bar(aes(x = sex))\n\n\n\n\n\n6.1.1 YOUR TURN-3"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/pronouns.html#single-quantitative-variable",
    "href": "content/labs/r-labs/pronouns/pronouns.html#single-quantitative-variable",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.2 Single Quantitative Variable",
    "text": "6.2 Single Quantitative Variable\n\nQuestions: How many? How few? How often? How much?\nCalculations: max / min / mean / mode / (units)\n\n\n\nmax(), min(), range(), mean(), mode(), summary()\n\n\n\nCharts: Bar Chart / Histogram / Density\n\n\ngeom_histogram() / geom_density()\n\n\n\n\n\nmax(penguins$bill_length_mm)\n\n[1] 59.6\n\nrange(penguins$bill_length_mm, na.rm =TRUE) \n\n[1] 32.1 59.6\n\nsummary(penguins$flipper_length_mm)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    172     190     197     201     213     231 \n\n\n\nggplot(penguins) + geom_density(aes(bill_length_mm))\n\n\n\nggplot(penguins) + geom_histogram(aes(x = bill_length_mm))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n6.2.1 YOUR TURN-4\nAre all the above Quantitative variables ratio variables? Justify."
  },
  {
    "objectID": "content/labs/r-labs/pronouns/pronouns.html#two-variables-quantitative-vs-quantitative",
    "href": "content/labs/r-labs/pronouns/pronouns.html#two-variables-quantitative-vs-quantitative",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.3 Two Variables: Quantitative vs Quantitative",
    "text": "6.3 Two Variables: Quantitative vs Quantitative\nWe can easily extend our intuition about one quantitative variable, to a pair of them. What Questions can we ask?\n\nQuestions: How many of this vs How many of that? Does this depend upon that? How are they related? (Remember \\(y = mx + c\\) and friends?)\nCalculations: Correlation / Covariance / T-test / Chi-Square Test for Two Means etc. We won’t go into this here !\nCharts: Scatter Plot / Line Plot / Regression i.e. best fit lines\n\n\ncor(penguins$bill_length_mm, penguins$bill_depth_mm)\n\n[1] -0.2286256\n\n\n\nggplot(penguins) +\n  geom_point(aes(x = flipper_length_mm,\n                 y = body_mass_g))\n\n\n\nggplot(penguins) +\n  geom_point(aes(x = flipper_length_mm, \n                 y = bill_length_mm))\n\n\n\n\n\n6.3.1 YOUR TURN-5"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/pronouns.html#two-variables-categorical-vs-categorical",
    "href": "content/labs/r-labs/pronouns/pronouns.html#two-variables-categorical-vs-categorical",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.4 Two Variables: Categorical vs Categorical",
    "text": "6.4 Two Variables: Categorical vs Categorical\nWhat sort of question could we ask that involves two categorical variables?\n\nQuestions: How Many of this Kind( ~x) are How Many of that Kind( ~y ) ?\n\nCalculations: Counts and Tallies sliced by Category\n\n\ncounts , tally\n\n\n\n\nCharts: Stacked Bar Charts / Grouped Bar Charts / Segmented Bar Chart / Mosaic Chart\n\ngeom_bar()\nUse the second Categorical variables to modify fill, color.\nAlso try to vary the parameter position of the bars.\n\n\n\n\n\n\n\nggplot(penguins) + geom_bar(aes(x = island, \n                                fill = species),\n                            position = \"stack\")\n\n\n\n\nStoryline: तीन पेनगीन। और तुम भी तीन(Oh never mind!)\n\n6.4.1 YOUR TURN-6"
  },
  {
    "objectID": "content/labs/r-labs/pronouns/pronouns.html#two-variables-quantitative-vs-qualitative",
    "href": "content/labs/r-labs/pronouns/pronouns.html#two-variables-quantitative-vs-qualitative",
    "title": "Lab-02: Pronouns and Data",
    "section": "\n6.5 Two Variables: Quantitative vs Qualitative",
    "text": "6.5 Two Variables: Quantitative vs Qualitative\nFinally, what if we want to look at Quant variables and Qual variables together? What questions could we ask?\n\nQuestions: How much of this is Which Kind of that? How many vs Which? How many vs How?\nCalculations: Counts, Means, Ranges etc., grouped by Categorical variable.\n\n\nggplot(penguins) + \n    geom_density(aes(x = body_mass_g, \n                 color = island, \n                 fill = island), \n                 alpha = 0.3)\n\n\n\n\n\nCharts: Bar Chart using group / density plots by group / violin plots by group / box plots by group\n\n\n\ngeom_bar / geom_density / geom_violin / geom_boxplot using Categorical Variable for grouping\n\n\nggplot(penguins) + \n    geom_density(aes(x = body_mass_g, \n                 color = island, \n                 fill = island), \n                 alpha = 0.3)\n\n\n\nggplot(penguins) + \n  geom_histogram(aes(x = flipper_length_mm,\n                 fill = sex))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n6.5.1 YOUR TURN-7\n\n6.5.2 Time to Play\n\nCreate a fresh RMarkdown and similarly analyse two datasets of the following data sets\n\n\nAny dataset in your R installation. Type data() in your console to see what is available.\ndiamonds . This dataset is part of the tidyverse package so just type diamonds in your code and there it is.\ngapminder !! Yes!!You will need to install the gapminder package to access this dataset\nmosaicData package datasets. Install mosaicData\ndata.world: Find Datasets of your choice: https://docs.data.world/en/64499-64516-Quickstarts-and-tutorials.html\nkaggle: https://www.kaggle.com/datasets"
  },
  {
    "objectID": "content/labs/r-labs/r-labs-listing.html",
    "href": "content/labs/r-labs/r-labs-listing.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nCritical Result Callback Monitor\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nIntroduction to the dplyr package\n\n\n\n\n\n\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 01 - Introduce Yourself\n\n\nInstalling and Getting Started with R!\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 01 - Introduce Yourself\n\n\nInstalling and Getting Started with R!\n\n\nPart of my R Workshop course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 01 - Introduce Yourself\n\n\nInstalling and Getting Started with R!\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 01 - Introduce Yourself\n\n\nInstalling and Getting Started with R!\n\n\n\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 05: Colors with Penguins\n\n\nPalettes from Famous Paintings, GoT, Harry Potter, and Wes Anderson\n\n\n\n\n\n\n\n\n\nJul 10, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 05: What use is a Book without any Pictures?\n\n\n\n\n\n\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 06 - The Grammar of Graphics\n\n\nCreating Graphs and Charts using ggplot\n\n\nPart of my R for Artists and Designers course using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab 06a: Fonts, Themes, and other Wizardy in ggplot\n\n\nFonts, Themes, and other Wizardy in ggplot\n\n\n\n\n\n\n\n\n\nJul 25, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nLab-02: Pronouns and Data\n\n\n\n\n\nPart of my R Workshop using the idea of metaphors in written language.\n\n\n\n\n\n\nJul 6, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nPlaying with Leaflet\n\n\n\n\n\n\n\n\n\n\n\n\nMay 13, 2017\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nPlaying with Leaflet\n\n\n\n\n\n\n\n\n\n\n\n\nMay 13, 2017\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nThe Grammar of Maps\n\n\nWhere is the Secret Garden?\n\n\nPart of my Workshop course on R\n\n\n\n\n\n\nApr 22, 2021\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nThe Grammar of Networks\n\n\nVisualizing and Manipulating Network data in R\n\n\nVisualizing and Manipulating Network data in R\n\n\n\n\n\n\nJun 21, 2022\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nggplotly: various examples\n\n\n\n\n\n\n\n\n\n\n\n\nCarson Sievert\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/labs/r-labs/tidy/dplyr.html",
    "href": "content/labs/r-labs/tidy/dplyr.html",
    "title": "Introduction to the dplyr package",
    "section": "",
    "text": "One of the dominant paradigms of working with data in R is to render it into “tidy” form. A huge benefit of the tidy way of working is that it influences your thinking with data and helps plan out your operations, in going from purpose to actual code in a swift and intuitive manner. This tidy form allows for a huge variety of data manipulation, summarizing, and plotting tasks, that can be performed using the packages of the tidyverse, and other packages that leverage the power of the tidyverse."
  },
  {
    "objectID": "content/labs/r-labs/tidy/dplyr.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "href": "content/labs/r-labs/tidy/dplyr.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "title": "Introduction to the dplyr package",
    "section": "",
    "text": "One of the dominant paradigms of working with data in R is to render it into “tidy” form. A huge benefit of the tidy way of working is that it influences your thinking with data and helps plan out your operations, in going from purpose to actual code in a swift and intuitive manner. This tidy form allows for a huge variety of data manipulation, summarizing, and plotting tasks, that can be performed using the packages of the tidyverse, and other packages that leverage the power of the tidyverse."
  },
  {
    "objectID": "content/labs/r-labs/tidy/dplyr.html#setting-up-the-packages",
    "href": "content/labs/r-labs/tidy/dplyr.html#setting-up-the-packages",
    "title": "Introduction to the dplyr package",
    "section": "\n2 Setting up the Packages",
    "text": "2 Setting up the Packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.0\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "content/labs/r-labs/tidy/dplyr.html#tidy-data",
    "href": "content/labs/r-labs/tidy/dplyr.html#tidy-data",
    "title": "Introduction to the dplyr package",
    "section": "\n3 Tidy Data",
    "text": "3 Tidy Data\n\ndata(starwars)\ndim(starwars)\n\n[1] 87 14\n\nstarwars\n\n\n\n  \n\n\n\n“Tidy Data” is an important way of thinking about what data typically look like in R. Let’s fetch a figure from the web to show the (preferred) structure of data in R.\n\n\nTidy Data\n\nThe three features described in the figure above define the nature of tidy data:\n\nVariables in Columns\n\nObservations in Rows and\n\nMeasurements in Cells.\n\nData are imagined to be resulting from an experiment. Each variable represents a parameter/aspect in the experiment. Each row represents an additional datum of measurement. A cell is a single measurement on a single parameter(column) in a single observation(row).\nWhen working with data you must:\n\nFigure out what you want to do. (Purpose)\nDescribe those tasks in the form of a computer program. (Plain English to R Code)\nExecute the program.\n\nThe dplyr package makes these steps fast and easy:\n\nBy constraining your options, it helps you think about your data manipulation challenges.\nIt provides simple “verbs”, functions that correspond to the most common data manipulation tasks, to help you translate your thoughts into code.\nIt uses efficient backends, so you spend less time waiting for the computer.\n\n\nNe’er you mind about backends ;-) See Shakespeare’s Hamlet.\n\nThis document introduces you to dplyr’s basic set of tools, and shows you how to apply them to data frames. dplyr also supports databases via the dbplyr package, once you’ve installed, read vignette(\"dbplyr\") to learn more."
  },
  {
    "objectID": "content/labs/r-labs/tidy/dplyr.html#data-starwars",
    "href": "content/labs/r-labs/tidy/dplyr.html#data-starwars",
    "title": "Introduction to the dplyr package",
    "section": "\n4 Data: starwars",
    "text": "4 Data: starwars\nTo explore the basic data manipulation verbs of dplyr, we’ll use the dataset starwars. This dataset contains 87 characters and comes from the Star Wars API, and is documented in ?starwars\n\nThis means: type ?starwars in the Console. Try.\n\nNote that starwars is a tibble, a modern re-imagining of the data frame. It’s particularly useful for large datasets because it only prints the first few rows. You can learn more about tibbles at https://tibble.tidyverse.org; in particular you can convert data frames to tibbles with as_tibble().\n\nCheck your Environment Tab to inspect starwars in a separate tab."
  },
  {
    "objectID": "content/labs/r-labs/tidy/dplyr.html#single-table-verbs",
    "href": "content/labs/r-labs/tidy/dplyr.html#single-table-verbs",
    "title": "Introduction to the dplyr package",
    "section": "\n5 Single table verbs",
    "text": "5 Single table verbs\ndplyr aims to provide a function for each basic verb of data manipulation. These verbs can be organised into three categories based on the component of the dataset that they work with:\n\nRows:\n\n\nfilter() chooses rows based on column values.\n\nslice() chooses rows based on location.\n\narrange() changes the order of the rows.\n\n\nColumns:\n\n\nselect() changes whether or not a column is included.\n\nrename() changes the name of columns.\n\nmutate() changes the values of columns and creates new columns.\n\nrelocate() changes the order of the columns.\n\n\nGroups of rows:\n\n\nsummarise() collapses a group into a single row.\n\n\n\n\nThink of the parallels from Microsoft Excel.\n\n\n5.1 The pipe\nAll of the dplyr functions take a data frame (or tibble) as the first argument. Rather than forcing the user to either save intermediate objects or nest functions, dplyr provides the %&gt;% operator from magrittr. x %&gt;% f(y) turns into f(x, y) so the result from one step is then “piped” into the next step. You can use the pipe to rewrite multiple operations that you can read left-to-right, top-to-bottom (reading the pipe operator as “then”).\n\n5.2 Filter rows with filter()\n\nfilter() allows you to select a subset of rows in a data frame. Like all single verbs, the first argument is the tibble (or data frame). The second and subsequent arguments refer to variables within that data frame, selecting rows where the expression is TRUE.\nFor example, we can select all character with light skin color and brown eyes with:\n\nNote the double equal to sign (==) below! Equivalent to MS Excel Data -&gt; Filter\n\n\nstarwars %&gt;% filter(skin_color == \"light\", eye_color == \"brown\")\n\n\n\n  \n\n\n\n\n5.3 Arrange rows with arrange()\n\narrange() works similarly to filter() except that instead of filtering or selecting rows, it reorders them. It takes a data frame, and a set of column names (or more complicated expressions) to order by. If you provide more than one column name, each additional column will be used to break ties in the values of preceding columns:\n\nstarwars %&gt;% arrange(height, mass)\n\n\n\n  \n\n\n\nUse desc() to order a column in descending order:\n\nstarwars %&gt;% arrange(desc(height))\n\n\n\n  \n\n\n\n\n5.4 Choose rows using their position with slice()\n\nslice() lets you index rows by their (integer) locations. It allows you to select, remove, and duplicate rows.\n\nThis is an important step in Prediction, Modelling and Machine Learning.\n\nWe can get characters from row numbers 5 through 10.\n\nstarwars %&gt;% slice(5:10)\n\n\n\n  \n\n\n\nIt is accompanied by a number of helpers for common use cases:\n\n\nslice_head() and slice_tail() select the first or last rows.\n\n\nstarwars %&gt;% slice_head(n = 3)\n\n\n\n  \n\n\n\n\n\nslice_sample() randomly selects rows. Use the option prop to choose a certain proportion of the cases.\n\n\nstarwars %&gt;% slice_sample(n = 5)\n\n\n\n  \n\n\nstarwars %&gt;% slice_sample(prop = 0.1)\n\n\n\n  \n\n\n\nUse replace = TRUE to perform a bootstrap sample. If needed, you can weight the sample with the weight argument.\n\nBootstrap samples are a special statistical sampling method. Counterintuitive perhaps, since you sample with replacement. Should remind you of your high school Permutation and Combination class, with all those urn models and so on. If you remember.\n\n\n\nslice_min() and slice_max() select rows with highest or lowest values of a variable. Note that we first must choose only the values which are not NA.\n\n\nstarwars %&gt;%\n  filter(!is.na(height)) %&gt;%\n  slice_min(height, n = 3)\n\n\n\n  \n\n\n\n\n5.5 Select columns with select()\n\nOften you work with large datasets with many columns but only a few are actually of interest to you. select() allows you to rapidly zoom in on a useful subset using operations that usually only work on numeric variable positions:\n\n# Select columns by name\nstarwars %&gt;% select(hair_color, skin_color, eye_color)\n\n\n\n  \n\n\n# Select all columns between hair_color and eye_color (inclusive)\nstarwars %&gt;% select(hair_color:eye_color)\n\n\n\n  \n\n\n# Select all columns except those from hair_color to eye_color (inclusive)\nstarwars %&gt;% select(!(hair_color:eye_color))\n\n\n\n  \n\n\n# Select all columns ending with color\nstarwars %&gt;% select(ends_with(\"color\"))\n\n\n\n  \n\n\n\nThere are a number of helper functions you can use within select(), like starts_with(), ends_with(), matches() and contains(). These let you quickly match larger blocks of variables that meet some criterion. See ?select for more details.\nYou can rename variables with select() by using named arguments:\n\nstarwars %&gt;% select(home_world = homeworld)\n\n\n\n  \n\n\n\nBut because select() drops all the variables not explicitly mentioned, it’s not that useful. Instead, use rename():\n\nstarwars %&gt;% rename(home_world = homeworld)\n\n\n\n  \n\n\n\n\n5.6 Add new columns with mutate()\n\nBesides selecting sets of existing columns, it’s often useful to add new columns that are functions of existing columns. This is the job of mutate():\n\nstarwars %&gt;% mutate(height_m = height / 100)\n\n\n\n  \n\n\n\nWe can’t see the height in meters we just calculated, but we can fix that using a select command.\n\nstarwars %&gt;%\n  mutate(height_m = height / 100) %&gt;%\n  select(height_m, height, everything())\n\n\n\n  \n\n\n\ndplyr::mutate() is similar to the base transform(), but allows you to refer to columns that you’ve just created:\n\nstarwars %&gt;%\n  mutate(\n    height_m = height / 100,\n    BMI = mass / (height_m^2)\n  ) %&gt;%\n  select(BMI, everything())\n\n\n\n  \n\n\n\nIf you only want to keep the new variables, use transmute():\n\nstarwars %&gt;%\n  transmute(\n    height_m = height / 100,\n    BMI = mass / (height_m^2)\n  )\n\n\n\n  \n\n\n\n\n5.7 Change column order with relocate()\n\nUse a similar syntax as select() to move blocks of columns at once\n\nstarwars %&gt;% relocate(sex:homeworld, .before = height)\n\n\n\n  \n\n\n\n\n5.8 Summarise values with summarise()\n\nThe last verb is summarise(). It collapses a data frame to a single row.\n\nstarwars %&gt;% summarise(mean_height = mean(height, na.rm = TRUE))\n\n\n\n  \n\n\n\nIt’s not that useful until we learn the group_by() verb below.\n\n5.9 Commonalities\nYou may have noticed that the syntax and function of all these verbs are very similar:\n\nThe first argument is a data frame.\nThe subsequent arguments describe what to do with the data frame. You can refer to columns in the data frame directly without using $.\nThe result is a new data frame\n\nTogether these properties make it easy to chain together multiple simple steps to achieve a complex result.\nThese five functions provide the basis of a language of data manipulation. At the most basic level, you can only alter a tidy data frame in five useful ways: you can reorder the rows (arrange()), pick observations and variables of interest (filter() and select()), add new variables that are functions of existing variables (mutate()), or collapse many values to a summary (summarise())."
  },
  {
    "objectID": "content/labs/r-labs/tidy/dplyr.html#combining-functions-with",
    "href": "content/labs/r-labs/tidy/dplyr.html#combining-functions-with",
    "title": "Introduction to the dplyr package",
    "section": "\n6 Combining functions with %>%\n",
    "text": "6 Combining functions with %&gt;%\n\nThe dplyr API is functional in the sense that function calls don’t have side-effects. You must always save their results. This doesn’t lead to particularly elegant code, especially if you want to do many operations at once. You either have to do it step-by-step:\n\na1 &lt;- group_by(starwars, species, sex)\na2 &lt;- select(a1, height, mass)\na3 &lt;- summarise(a2,\n  height = mean(height, na.rm = TRUE),\n  mass = mean(mass, na.rm = TRUE)\n)\n\nOr if you don’t want to name the intermediate results, you need to wrap the function calls inside each other:\n\nsummarise(\n  select(\n    group_by(starwars, species, sex),\n    height, mass\n  ),\n  height = mean(height, na.rm = TRUE),\n  mass = mean(mass, na.rm = TRUE)\n)\n\nAdding missing grouping variables: `species`, `sex`\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n\n\n  \n\n\n\nThis is difficult to read because the order of the operations is from inside to out. Thus, the arguments are a long way away from the function. To get around this problem, dplyr provides the %&gt;% operator from magrittr. x %&gt;% f(y) turns into f(x, y) so you can use it to rewrite multiple operations that you can read left-to-right, top-to-bottom (reading the pipe operator as “then”):\n\nstarwars %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    mean_height = mean(height, na.rm = TRUE),\n    mean_mass = mean(mass, na.rm = TRUE)\n  )\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "content/labs/r-labs/tidy/dplyr.html#patterns-of-operations",
    "href": "content/labs/r-labs/tidy/dplyr.html#patterns-of-operations",
    "title": "Introduction to the dplyr package",
    "section": "\n7 Patterns of operations",
    "text": "7 Patterns of operations\nThe dplyr verbs can be classified by the type of operations they accomplish (we sometimes speak of their semantics, i.e., their meaning). It’s helpful to have a good grasp of the difference between select and mutate operations.\n\n7.1 Selecting operations\nOne of the appealing features of dplyr is that you can refer to columns from the tibble as if they were regular variables. However, the syntactic uniformity of referring to bare column names hides semantical differences across the verbs. A column symbol supplied to select() does not have the same meaning as the same symbol supplied to mutate().\nSelecting operations expect column names and positions. Hence, when you call select() with bare variable names, they actually represent their own positions in the tibble. The following calls are completely equivalent from dplyr’s point of view:\n\n# `name` represents the integer 1\nselect(starwars, name)\n\n\n\n  \n\n\nselect(starwars, 1)\n\n\n\n  \n\n\n\nBy the same token, this means that you cannot refer to variables from the surrounding context if they have the same name as one of the columns. In the following example, height still represents 2, not 5:\n\nheight &lt;- 5\nselect(starwars, height)\n\n\n\n  \n\n\n\nOne useful subtlety is that this only applies to bare names and to selecting calls like c(height, mass) or height:mass. In all other cases, the columns of the data frame are not put in scope. This allows you to refer to contextual variables in selection helpers:\n\nname &lt;- \"color\"\nselect(starwars, ends_with(name))\n\n\n\n  \n\n\n\nThese semantics are usually intuitive. But note the subtle difference:\n\nname &lt;- 5\nselect(starwars, name, identity(name))\n\n\n\n  \n\n\n\nIn the first argument, name represents its own position 1. In the second argument, name is evaluated in the surrounding context and represents the fifth column.\n\n7.2 Mutating operations\nMutate semantics are quite different from selection semantics. Whereas select() expects column names or positions, mutate() expects column vectors. We will set up a smaller tibble to use for our examples.\n\ndf &lt;- starwars %&gt;% select(name, height, mass)\n\nWhen we use select(), the bare column names stand for their own positions in the tibble. For mutate() on the other hand, column symbols represent the actual column vectors stored in the tibble. Consider what happens if we give a string or a number to mutate():\n\nmutate(df, \"height\", 2)\n\n\n\n  \n\n\n\nmutate() gets length-1 vectors that it interprets as new columns in the data frame. These vectors are recycled so they match the number of rows. That’s why it doesn’t make sense to supply expressions like \"height\" + 10 to mutate(). This amounts to adding 10 to a string! The correct expression is:\n\nmutate(df, height + 10)\n\n\n\n  \n\n\n\nIn the same way, you can unquote values from the context if these values represent a valid column. They must be either length 1 (they then get recycled) or have the same length as the number of rows. In the following example we create a new vector that we add to the data frame:\n\nvar &lt;- seq(1, nrow(df))\nmutate(df, new = var)\n\n\n\n  \n\n\n\nA case in point is group_by(). While you might think it has select semantics, it actually has mutate semantics. This is quite handy as it allows to group by a modified column:\n\ngroup_by(starwars, sex)\n\n\n\n  \n\n\ngroup_by(starwars, sex = as.factor(sex))\n\n\n\n  \n\n\ngroup_by(starwars, height_binned = cut(height, 3))\n\n\n\n  \n\n\n\nThis is why you can’t supply a column name to group_by(). This amounts to creating a new column containing the string recycled to the number of rows:\n\ngroup_by(df, \"month\")"
  },
  {
    "objectID": "content/labs/r-labs/tidy/dplyr.html#two-table-verbs",
    "href": "content/labs/r-labs/tidy/dplyr.html#two-table-verbs",
    "title": "Introduction to the dplyr package",
    "section": "\n8 Two table verbs",
    "text": "8 Two table verbs\nSometimes our data is spread across more than one table. Often these tables are linked by some common, or common-looking, variable columns. dplyr allows us to work with such data that is spread over more than one table. More information is available here: Two Table Verbs in dplyr\nThe operations/verbs used to manipulate two-table verbs are:\n\nMutating joins, which add new variables to one table from matching rows in another.\n\ninner_join()\n\n\n\n\n\n\n\n\n\nleft_join()\n\n\n\n\n\n\n\nright_join()\n\n\n\n\n\n\n\nfull_join()\n\n\n\n\n\n\n\nFiltering joins, which filter observations from one table based on whether or not they match an observation in the other table.\n\n\nsemi_join(x, y) keeps all observations in x that have a match in y.\n\n\n\n\n\n\n\n\n\n\nanti_join(x, y) drops all observations in x that have a match in\n\n\n\n\n\n\n\n\n\n\n\n\nSet operations, which combine the observations in the data sets as if they were set elements.\n\nunion()\n\n\n\n\n\n\n\n\n\nunion_all(),\n\n\n\n\n\n\n\nintersect(),\n\n\n\n\n\n\n\nsetdiff()\n\n\n\n\n\n\n\nTidyr Operations:\npivot_longer()\npivot_wider()"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html",
    "href": "content/labs/r-labs/tidy/moma.html",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "",
    "text": "This Quarto document is part of my workshop on R. The material is based on A Layered Grammar of Graphics by Hadley Wickham. The course is meant for First Year students pursuing a Degree in Art and Design.\nThe intent is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll Quarto document files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "href": "content/labs/r-labs/tidy/moma.html#iconify-openmoji-japanese-symbol-for-beginner-introduction",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "",
    "text": "This Quarto document is part of my workshop on R. The material is based on A Layered Grammar of Graphics by Hadley Wickham. The course is meant for First Year students pursuing a Degree in Art and Design.\nThe intent is to build Skill in coding in R, and also appreciate R as a way to metaphorically visualize information of various kinds, using predominantly geometric figures and structures.\nAll Quarto document files combine code, text, web-images, and figures developed using code. Everything is text; code chunks are enclosed in fences (```)"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#setting-up-the-packages",
    "href": "content/labs/r-labs/tidy/moma.html#setting-up-the-packages",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n2 Setting up the Packages",
    "text": "2 Setting up the Packages\n\nlibrary(tidyverse)\nlibrary(mosaic)"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#goals-for-this-lab",
    "href": "content/labs/r-labs/tidy/moma.html#goals-for-this-lab",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n3 Goals for this Lab",
    "text": "3 Goals for this Lab\n\nUnderstand the idea of “tidy” data\nUsing “tidy data” and the “tidyverse” way of programming in R allows to translate our thoughts readily into code.\nUnderstand dplyr VERB functions to get to know and manipulate a dataset"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#pedagogical-note",
    "href": "content/labs/r-labs/tidy/moma.html#pedagogical-note",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n4 Pedagogical Note",
    "text": "4 Pedagogical Note\nThe method followed will be based on PRIMM:\n\n\nPREDICT Inspect the code and guess at what the code might do, write predictions\n\n\nRUN the code provided and check what happens\n\nINFER what the parameters of the code do and write comments to explain. What bells and whistles can you see?\n\nMODIFY the parameters code provided to understand the options available. Write comments to show what you have aimed for and achieved.\n\nMAKE : take an idea/concept of your own, and graph it. # Inspiration + data\n\nWe’ll use data from the Museum of Modern Art (MoMA)\n\nPublicly available on GitHub\n\nAs analyzed by fivethirtyeight.com\n\nAnd by others"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#read-in-the-data",
    "href": "content/labs/r-labs/tidy/moma.html#read-in-the-data",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n5 Read in the data",
    "text": "5 Read in the data\nThis dataset has been created by Alison Hill(@apreshill on Twitter). Download the dataset, save it into your data folder and then import it into R:\n  artworks-cleaned.csv\n\n\n\ncategorical variables:  \n               name     class levels    n missing\n1             title character   2015 2253       0\n2            artist character    989 2253       0\n3        artist_bio character    858 2252       1\n4     artist_gender character      2 2243      10\n5  circumference_cm   logical      0    0    2253\n6       diameter_cm   logical      0    0    2253\n7         length_cm   logical      0    0    2253\n8    seat_height_cm   logical      0    0    2253\n9          purchase   logical      2 2253       0\n10             gift   logical      2 2253       0\n11         exchange   logical      2 2253       0\n12   classification character      1 2253       0\n13       department character      5 2253       0\n                                    distribution\n1  Untitled (4.5%), I Got Up... (1.2%) ...      \n2  Pablo Picasso (2.4%) ...                     \n3    (Spanish, 1881–1973) (2.4%) ...            \n4  Male (88.8%), Female (11.2%)                 \n5   (%)                                         \n6   (%)                                         \n7   (%)                                         \n8   (%)                                         \n9  FALSE (91.2%), TRUE (8.8%)                   \n10 TRUE (51.8%), FALSE (48.2%)                  \n11 FALSE (93.6%), TRUE (6.4%)                   \n12 Painting (100%)                              \n13 Painting & Sculpture (97.4%) ...             \n\nquantitative variables:  \n                name   class    min         Q1 median          Q3      max\n1  artist_birth_year numeric 1839.0 1890.00000 1913.0 1933.000000 1987.000\n2  artist_death_year numeric 1890.0 1956.00000 1976.0 1996.000000 2018.000\n3        num_artists numeric    1.0    1.00000    1.0    1.000000   10.000\n4   n_female_artists numeric    0.0    0.00000    0.0    0.000000    2.000\n5     n_male_artists numeric    0.0    1.00000    1.0    1.000000    9.000\n6      year_acquired numeric 1930.0 1957.00000 1975.0 1996.000000 2017.000\n7       year_created numeric 1872.0 1933.00000 1956.0 1972.000000 2017.000\n8           depth_cm numeric    0.0    0.00000    0.0    6.762503  647.700\n9          height_cm numeric    7.0   61.27760  106.6  182.200000 1011.000\n10          width_cm numeric    4.1   60.96012   99.0  170.000000 4663.449\n           mean          sd    n missing\n1  1911.8624833  27.9805659 2247       6\n2  1974.8152709  25.5436102 1624     629\n3     1.0093250   0.2116175 2252       1\n4     0.1136263   0.3188231 2253       0\n5     0.8952508   0.3717841 2253       0\n6  1975.5494652  23.3948403 2244       9\n7  1953.5284698  27.9329429 2248       5\n8    10.3302084  44.0511526  298    1955\n9   123.8797591  79.6186437 2253       0\n10  131.9462530 152.6158431 2253       0"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#getting-to-know-your-data-make-up-some-questions",
    "href": "content/labs/r-labs/tidy/moma.html#getting-to-know-your-data-make-up-some-questions",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n6 Getting to Know your data: Make up some Questions",
    "text": "6 Getting to Know your data: Make up some Questions\n\n\n\n\n\n\nChallenge #1\n\n\n\nTry to answer all of these questions using dplyr. Answers are below but try them on your own first!\n\nHow many paintings (rows) are in moma?\nHow many variables (columns) are in moma?\nWhat is the first painting acquired by MoMA? Which year? Which artist? What title?\nWhat is the oldest painting in the collection? Which year? Which artist? What title?\nHow many distinct artists are there?\nWhich artist has the most paintings in the collection? How many paintings are by this artist?\nHow many paintings by male vs female artists?\nHow many paintings acquired by year, and by gender of artist, over time?\n\nIf you want more:\n\nHow many artists of each gender are there?\nIn what year were the most paintings acquired? Created?\nIn what year was the first painting by a (solo) female artist acquired? When was that painting created? Which artist? What title?"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#how-many-paintings-how-many-variables",
    "href": "content/labs/r-labs/tidy/moma.html#how-many-paintings-how-many-variables",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n7 How many paintings? How many Variables?",
    "text": "7 How many paintings? How many Variables?\n\nHow many rows/observations are in moma?\n\nHow many variables are in moma?\n\n\n\n\n\n\nTip\n\n\n\nHint: These questions can be answered using the dplyr function glimpse.\n\n\n\n\n\nlibrary(dplyr)\nmoma\n\n\n\n  \n\n\nglimpse(moma)\n\nRows: 2,253\nColumns: 23\n$ title             &lt;chr&gt; \"Rope and People, I\", \"Fire in the Evening\", \"Portra…\n$ artist            &lt;chr&gt; \"Joan Miró\", \"Paul Klee\", \"Paul Klee\", \"Pablo Picass…\n$ artist_bio        &lt;chr&gt; \"(Spanish, 1893–1983)\", \"(German, born Switzerland. …\n$ artist_birth_year &lt;dbl&gt; 1893, 1879, 1879, 1881, 1880, 1879, 1943, 1880, 1839…\n$ artist_death_year &lt;dbl&gt; 1983, 1940, 1940, 1973, 1946, 1953, 1977, 1950, 1906…\n$ num_artists       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ n_female_artists  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ n_male_artists    &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ artist_gender     &lt;chr&gt; \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Mal…\n$ year_acquired     &lt;dbl&gt; 1936, 1970, 1966, 1955, 1939, 1968, 1997, 1931, 1934…\n$ year_created      &lt;dbl&gt; 1935, 1929, 1927, 1919, 1925, 1919, 1970, 1929, 1885…\n$ circumference_cm  &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ depth_cm          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ diameter_cm       &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ height_cm         &lt;dbl&gt; 104.8, 33.8, 60.3, 215.9, 50.8, 129.2, 200.0, 54.6, …\n$ length_cm         &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ width_cm          &lt;dbl&gt; 74.6, 33.3, 36.8, 78.7, 54.0, 89.9, 200.0, 38.1, 96.…\n$ seat_height_cm    &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ purchase          &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FAL…\n$ gift              &lt;lgl&gt; TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, F…\n$ exchange          &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALS…\n$ classification    &lt;chr&gt; \"Painting\", \"Painting\", \"Painting\", \"Painting\", \"Pai…\n$ department        &lt;chr&gt; \"Painting & Sculpture\", \"Painting & Sculpture\", \"Pai…"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#what-is-the-first-painting-acquired",
    "href": "content/labs/r-labs/tidy/moma.html#what-is-the-first-painting-acquired",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n8 What is the first painting acquired?",
    "text": "8 What is the first painting acquired?\n\nWhat is the first painting acquired by MoMA (since they started tracking)?\nWhat year was it acquired?\nWhich artist?\nWhat title?\n\n\n\n\n\n\n\nTip\n\n\n\nHint: These questions can be answered by combining two dplyr functions: select and arrange.\n\n\n\nmoma %&gt;% \n  select(artist, title, year_acquired) %&gt;% \n  arrange(year_acquired)"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#what-is-the-oldest-painting-in-the-moma-collection",
    "href": "content/labs/r-labs/tidy/moma.html#what-is-the-oldest-painting-in-the-moma-collection",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n9 What is the oldest painting in the MoMA collection?",
    "text": "9 What is the oldest painting in the MoMA collection?\n\nWhat is the oldest painting in the MoMA collection historically (since they started tracking)?\nWhat year was it created?\nWhich artist?\nWhat title?\n\n\n\n\n\n\n\nTip\n\n\n\nHint: These questions can be answered by combining two dplyr functions: select and arrange.\n\n\n\nmoma %&gt;% \n  select(artist, title, year_created) %&gt;% \n  arrange(year_created)\n\n\n\n  \n\n\n\n\noldest &lt;- moma %&gt;% \n  select(artist, title, year_created) %&gt;% \n  arrange(year_created) %&gt;% \n  slice(1)\noldest\n\n\n\n  \n\n\n\nTo do inline comments, I could say that the oldest painting is Landscape at Daybreak, painted by Odilon Redon in 1872."
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#how-many-artists",
    "href": "content/labs/r-labs/tidy/moma.html#how-many-artists",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n10 How many artists?",
    "text": "10 How many artists?\n\nHow many distinct artists are there?\n\n\n\n\n\n\n\nTip\n\n\n\nHint: Try dplyr::distinct.\n\n\n\nmoma %&gt;% \n  distinct(artist)\n\n\n\n  \n\n\n\nYou could add a tally() too to get just the number of rows. You can also then use pull() to get that single number out of the tibble:\n\nnum_artists &lt;- moma %&gt;% \n  distinct(artist) %&gt;% \n  tally() %&gt;% \n  pull()\nnum_artists\n\n[1] 989\n\n\nThen I can refer to this number in inline comments like: there are 989 total."
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#which-artist-has-the-most-paintings",
    "href": "content/labs/r-labs/tidy/moma.html#which-artist-has-the-most-paintings",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n11 Which artist has the most paintings?",
    "text": "11 Which artist has the most paintings?\n\nWhich artist has the most paintings ever owned by moma?\nHow many paintings in the MoMA collection by that artist?\n\n\n\n\n\n\n\nTip\n\n\n\nHint: Try dplyr::count. Use ?count to figure out how to sort the output.\n\n\n\nmoma %&gt;% \n  count(artist, sort = TRUE)\n\n\n\n  \n\n\n\nIn the ?count documentation, it says: “count and tally are designed so that you can call them repeatedly, each time rolling up a level of detail.” Try running count() again (leave parentheses empty) on your last code chunk. ( before the slice())\n\nmoma %&gt;% \n  count(artist, sort = TRUE) %&gt;% \n  count()"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#how-many-paintings-by-male-vs-female-artists",
    "href": "content/labs/r-labs/tidy/moma.html#how-many-paintings-by-male-vs-female-artists",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n12 How many paintings by male vs female artists?",
    "text": "12 How many paintings by male vs female artists?\n\nmoma %&gt;% \n  count(artist_gender)\n\n\n\n  \n\n\n\nNow together we’ll count the number of artists by gender. You’ll need to give count two variable names in the parentheses: artist_gender and artist.\n\nmoma %&gt;% \n  count(artist_gender, artist, sort = TRUE) \n\n\n\n  \n\n\n\nThis output is not super helpful as we already know that Pablo Picasso has 55 paintings in the MoMA collection. But how can we find out which female artist has the most paintings? We have a few options. Let’s first add a filter for females.\n\nmoma %&gt;% \n  count(artist_gender, artist, sort = TRUE) %&gt;% \n  filter(artist_gender == \"Female\")\n\n\n\n  \n\n\n\nAnother option is to use another dplyr function called top_n(). Use ?top_n to see how it works. How it won’t work in this context:\n\nmoma %&gt;% \n  count(artist_gender, artist, sort = TRUE) %&gt;% \n  slice_max(n = 2, order_by = n)\n\n\n\n  \n\n\n\nHow it will work better is following a group_by(artist_gender):\n\nmoma %&gt;% \n  count(artist_gender, artist, sort = TRUE) %&gt;% \n  group_by(artist_gender) %&gt;% \n  slice_max(n = 1, order_by = n)\n\n\n\n  \n\n\n\nNow we can see that Sherrie Levine has 12 paintings. This is a pretty far cry from the 55 paintings by Pablo Picasso."
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#how-many-artists-of-each-gender-are-there",
    "href": "content/labs/r-labs/tidy/moma.html#how-many-artists-of-each-gender-are-there",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n13 How many artists of each gender are there?",
    "text": "13 How many artists of each gender are there?\nThis is a harder question to answer than you think! This is because the level of observation in our current moma dataset is unique paintings. We have multiple paintings done by the same artists though, so counting just the number of unique paintings is different than counting the number of unique artists.\nRemember how count can be used back-to-back to roll up a level of detail? Try running count(artist_gender) again on your last code chunk.\n\nmoma %&gt;% \n  count(artist_gender, artist) %&gt;% \n  count(artist_gender)\n\n\n\n  \n\n\n\nThis output takes the previous table (made with count(artist_gender, artist)), and essentially ignores the n column. So we no longer care about how many paintings each individual artist created. Instead, we want to count the rows in this new table where each row is a unique artist. By counting by artist_gender in the last line, we are grouping by levels of that variable (so Female/Male/NA) and nn is the number of unique artists for each gender category recorded."
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#when-were-the-most-paintings-in-the-collection-acquired",
    "href": "content/labs/r-labs/tidy/moma.html#when-were-the-most-paintings-in-the-collection-acquired",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n14 When were the most paintings in the collection acquired?",
    "text": "14 When were the most paintings in the collection acquired?\n\nmoma %&gt;% \n  count(year_acquired, sort = TRUE)"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#when-were-the-most-paintings-in-the-collection-created",
    "href": "content/labs/r-labs/tidy/moma.html#when-were-the-most-paintings-in-the-collection-created",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n15 When were the most paintings in the collection created?",
    "text": "15 When were the most paintings in the collection created?\nWhich variable should we count?\n\nmoma %&gt;% \n  count(year_created, sort = TRUE)"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#what-about-the-first-painting-by-a-solo-female-artist",
    "href": "content/labs/r-labs/tidy/moma.html#what-about-the-first-painting-by-a-solo-female-artist",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n16 What about the first painting by a solo female artist?",
    "text": "16 What about the first painting by a solo female artist?\n\n\n\n\n\n\nTip\n\n\n\nHint: Try combining three dplyr functions: filter, select, and arrange.\n\n\nWhen was the first painting by a solo female artist acquired?\n\nmoma %&gt;% \n  filter(num_artists == 1 & n_female_artists == 1) %&gt;% \n  select(title, artist, year_acquired, year_created) %&gt;% \n  arrange(year_acquired)\n\n\n\n  \n\n\n\nWhat is the oldest painting by a solo female artist, and when was it created?\n\nmoma %&gt;% \n  filter(num_artists == 1 & n_female_artists == 1) %&gt;% \n  select(title, artist, year_acquired, year_created) %&gt;% \n  arrange(year_created)\n\n\n\n  \n\n\n\n\n# or, because artist_gender is missing when num_artists &gt; 1\nmoma %&gt;% \n  filter(artist_gender == \"Female\") %&gt;% \n  select(title, artist, year_acquired, year_created) %&gt;% \n  arrange(year_acquired)"
  },
  {
    "objectID": "content/labs/r-labs/tidy/moma.html#how-many-paintings-acquired-by-year-and-by-gender-of-artist-over-time",
    "href": "content/labs/r-labs/tidy/moma.html#how-many-paintings-acquired-by-year-and-by-gender-of-artist-over-time",
    "title": "Lab 05: What use is a Book without any Pictures?",
    "section": "\n17 How many paintings acquired by year, and by gender of artist, over time?",
    "text": "17 How many paintings acquired by year, and by gender of artist, over time?\n\nmoma %&gt;% group_by(year_created, artist_gender) %&gt;% count()"
  },
  {
    "objectID": "content/labs/r-labs/time/index.html",
    "href": "content/labs/r-labs/time/index.html",
    "title": "Lab 01 - Introduce Yourself",
    "section": "",
    "text": "At the end of this Lab, we will:\n\nhave installed R and RStudio on our machines\nunderstood how to add additional R-packages for specific features and graphic capability\nrun code within RStudio and interpret the results\nhave learnt to look for help within R and RStudio"
  },
  {
    "objectID": "content/labs/r-labs/time/index.html#Check-In-R",
    "href": "content/labs/r-labs/time/index.html#Check-In-R",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n3.1 Check in",
    "text": "3.1 Check in\nLaunch R by clicking this logo. You should see one console with a command line interpreter. Try typing 2 + 2 and check !\nClose R."
  },
  {
    "objectID": "content/labs/r-labs/time/index.html#Check-In-RStudio",
    "href": "content/labs/r-labs/time/index.html#Check-In-RStudio",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n4.1 Check in",
    "text": "4.1 Check in\nLaunch RStudio. You should get a window similar to the screenshot you see here, but yours will be empty. Look at the bottom left pane: this is the same console window you saw when you opened R in step @Check-In-R\n\nPlace your cursor where you see &gt; and type x &lt;- 2 + 2 again hit enter or return, then type x, and hit enter/return again.\nIf [1] 4 prints to the screen, you have successfully installed R and RStudio, and you can move onto installing packages."
  },
  {
    "objectID": "content/labs/r-labs/time/index.html#save-and-share",
    "href": "content/labs/r-labs/time/index.html#save-and-share",
    "title": "Lab 01 - Introduce Yourself",
    "section": "\n7.1 Save and share",
    "text": "7.1 Save and share\nSave your work so you can share your favorite plot with us. You will not like the looks of your plot if you mouse over to Export and save it. Instead, use ggplot2’s command for saving a plot with sensible defaults:\n\nhelp(ggsave)\n\n\nggsave(\"file_name_here.pdf\", plot) # please make the filename unique!\n\nUpload this exported plot to Teams -&gt; Assignments.\nBefore you do that, check that you can submit stuff/assignments on the MLS by uploading a cat picture 🐈 first, especially if you are an ailurophile like me. (Acceptable Breeds: Scottish Folds or Maine Coons)"
  },
  {
    "objectID": "content/posts/01-intro/history.html",
    "href": "content/posts/01-intro/history.html",
    "title": "Boston Terrier",
    "section": "",
    "text": "The Boston Terrier is a breed of dog originating in the United States of America. This “American Gentleman” was accepted in 1893 by the American Kennel Club as a non-sporting breed.1 Color and markings are important when distinguishing this breed from the AKC standard. They should be either black, brindle or seal with white markings.2 Boston Terriers are small and compact with a short tail and erect ears. The AKC says they are highly intelligent and very easily trained.3 They are friendly and can be stubborn at times. The average life span of a Boston Terrier is around 11 to 13 years.4 The American Kennel Club ranked the Boston Terrier as the 21st most popular breed in 2019.5"
  },
  {
    "objectID": "content/posts/01-intro/history.html#history",
    "href": "content/posts/01-intro/history.html#history",
    "title": "Boston Terrier",
    "section": "History",
    "text": "History\n\n\n\n\n\n\nTerrier Seated\n\n\n\n\nThe Boston terrier breed originated around 1875, when Robert C. Hooper of Boston purchased from Edward Burnett a dog named Judge (known later as Hooper’s Judge), which was of a bull and terrier type lineage. Hooper’s Judge is directly related to the original bull and terrier breeds of the 19th and early 20th centuries. The American Kennel Club cites Hooper’s Judge as the ancestor of all true modern Boston Terriers. Judge weighed about 32 pounds (15 kg).\n\n\n\n\nJudge was bred to Burnett’s Gyp (or Kate). Gyp was a white bulldog-type female, owned by Edward Burnett, of Southboro, Massachusetts. She weighed about 20 pounds (9.1 kg), was stocky and strong and had the typical blocky head now shown in Bostons. From this foundation of the breed, subsequent breeders refined the breed into its modern day presentation. Bred down in size from fighting dogs of the bull and terrier types, the Boston Terrier originally weighed up to 44 pounds (20 kg) (Old Boston Bulldogs).\n\n\n\n\n\n\n\nA young male Boston Terrier with a Brown brindle coat\n\nThe breed was first shown in Boston in 1870. By 1889 the breed had become sufficiently popular in Boston that fanciers formed the American Bull Terrier Club, the breed’s nickname, “roundheads”. Shortly after, at the suggestion of James Watson (a noted writer and authority), the club changed its name to the Boston Terrier Club and in 1893 it was admitted to membership in the American Kennel Club, thus making it the first US breed to be recognized. It is one of a small number of breeds to have originated in the United States. The Boston Terrier was the first non-sporting dog breed in the US.\nIn the early years, the color and markings were not very important to the breed’s standard. By the 20th century the breed’s distinctive markings and color were written into the standard, becoming an essential feature. The Boston Terrier has lost most of its aggressive nature, preferring the company of humans, although some males will still challenge other dogs if they feel their territory is being invaded. Boston University has used Rhett the Boston Terrier as their mascot since 1922. Wofford College in Spartanburg, SC has had a live Boston Terrier mascot named Blitz since 2003 that attends home football games. The Boston Terrier has also been the official state dog of Massachusetts since 1979."
  },
  {
    "objectID": "content/posts/01-intro/history.html#description",
    "href": "content/posts/01-intro/history.html#description",
    "title": "Boston Terrier",
    "section": "Description",
    "text": "Description\nThe Boston Terrier is a compactly built, well-proportioned dog. It has a square-looking head with erect ears and a slightly arched neck. The muzzle is short and generally wrinkle-free, with an even or a slightly undershot bite. The chest is broad and the tail is short. According to international breed standards, the dog should weigh no more than 25 pounds (11 kg). Boston Terriers usually stand up to 15–17 inches (380–430 mm) at the withers.\nThe American Kennel Club divides the breed into three classes: under 15 pounds, 15 pounds and under 20 pounds, 20 pounds and not exceeding 25 pounds.\n\nCoat and color\nThe Boston Terrier is characteristically marked with white in proportion to either black, brindle, seal (color of a wet seal, a very dark brown that looks black except in the bright sun), or a combination of the three. Any other color is not accepted as a Boston Terrier by the American Kennel Club, as they are usually obtained by crossbreeding with other breeds and the dog loses its characteristic “tuxedo” appearance.6 Any Boston Terrier from AKC parentage regardless of the color, or if it is a splash or has a blue eye or weak ears, can be and are registered by the AKC and participate in any AKC sporting events.\n\n\n\n\nA female Boston Terrier with a black coat\n\nAccording to the American Kennel Club, the Boston Terrier’s markings are broken down into two categories: Required, which consists of a white chest, white muzzle band, and a white band between the eyes; and Desired, which includes the Required markings plus a white collar, white on the forelegs, forelegs, up to the hocks on the rear legs. For conformation showing, symmetrical markings are preferred. Due to the Boston Terrier’s markings resembling formal wear, in addition to its refined and pleasant personality, the breed is commonly referred to as “the American Gentleman.”\n\n\n\n\nAn adult male Boston Terrier with a black coat"
  },
  {
    "objectID": "content/posts/01-intro/history.html#temperament",
    "href": "content/posts/01-intro/history.html#temperament",
    "title": "Boston Terrier",
    "section": "Temperament",
    "text": "Temperament\nBoston Terrier is a gentle breed that typically has a strong, happy-go-lucky, and friendly personality with a merry sense of humor. Boston Terriers are generally eager to please their owner and can be easily trained. They can be very protective of their owners, which may result in aggressive and territorial behavior toward other pets and strangers. The breed requires only a minimal amount of grooming.\nWhile originally bred for fighting as well as hunting rats in garment factories, they were later bred for companionship. They are not considered terriers by the American Kennel Club, however, but are part of the non-sporting group.\nBoth females and males are generally quiet and bark only when necessary, Their usually sensible attitude toward barking makes them excellent choices for apartment dwellers. They enjoy being around people, get along well with children, the elderly, other canines, and non-canine pets, if properly socialized."
  },
  {
    "objectID": "content/posts/01-intro/history.html#grooming",
    "href": "content/posts/01-intro/history.html#grooming",
    "title": "Boston Terrier",
    "section": "Grooming",
    "text": "Grooming\nWith a short, shiny, smooth coat, Boston Terriers require little grooming. Bostons produce light shedding, and weekly brushing of their fine coat is effective at removing loose hair. Brushing promotes the health of the coat because it distributes skin oils, and it also encourages new hair growth. Occasional bathing is suitable for the breed.7\nThe nails of Boston Terriers require regular trimming. Overgrown nails not only have the potential to inflict pain on the breed, but they can also make walking difficult or tear off after getting snagged on something.\nSimilarly to nail trimming, tooth brushing should also be done regularly to promote good oral health. The risk of the breed developing oral pain, gum infection, or bad breath can be decreased with regular tooth brushing that removes plaque buildup and other bacteria. In addition, poor dental hygiene can lead to tooth root abscesses that can lead to damage around the tissue and eventually lead to the loss of teeth."
  },
  {
    "objectID": "content/posts/01-intro/history.html#footnotes",
    "href": "content/posts/01-intro/history.html#footnotes",
    "title": "Boston Terrier",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nMeade, Scottee (2000). The Boston Terrier: An Owner’s Guide to a Happy Healthy Pet. Howell Book House. ISBN 1-58245-159-1.↩︎\n“Boston Terrier Dog Breed Information”. Akc.org. Retrieved 11 December 2017.↩︎\n“Boston Terrier - American Kennel Club”. Akc.org.↩︎\n“The Boston Terrier Club Of America”. Bostonterrierclubofamerica.org.↩︎\n“Most Popular Dog Breeds - Full Ranking List”. Akc.org. Retrieved 11 December 2017.↩︎\n“Boston Terrier Dog Breed Information”. Akc.org. Retrieved 11 December 2017.↩︎\n“Get to Know the Boston Terrier”, ‘The American Kennel Club’, retrieved 19 May 2014↩︎"
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html",
    "href": "content/posts/02-authoring/authoring.html",
    "title": "Housing Prices",
    "section": "",
    "text": "In this analysis, we build a model predicting sale prices of houses based on data on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020. Let’s start by loading the packages we’ll use for the analysis.\n\nPackageslibrary(openintro)  # for data\nlibrary(tidyverse)  # for data wrangling and visualization\nlibrary(knitr)      # for tables\nlibrary(broom)      # for model summary\n\n\nWe present the results of exploratory data analysis in Section 2 and the regression model in Section 3."
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html#introduction",
    "href": "content/posts/02-authoring/authoring.html#introduction",
    "title": "Housing Prices",
    "section": "",
    "text": "In this analysis, we build a model predicting sale prices of houses based on data on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020. Let’s start by loading the packages we’ll use for the analysis.\n\nPackageslibrary(openintro)  # for data\nlibrary(tidyverse)  # for data wrangling and visualization\nlibrary(knitr)      # for tables\nlibrary(broom)      # for model summary\n\n\nWe present the results of exploratory data analysis in Section 2 and the regression model in Section 3."
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html#sec-eda",
    "href": "content/posts/02-authoring/authoring.html#sec-eda",
    "title": "Housing Prices",
    "section": "\n2 Exploratory data analysis",
    "text": "2 Exploratory data analysis\nThe data contains 98 houses. As part of the exploratory analysis let’s visualize and summarize the relationship between areas and prices of these houses.\n\n2.1 Data visualization\nFigure 1 shows two histograms displaying the distributions of price and area individually.\n\nCodeggplot(duke_forest, aes(x = price)) +\n  geom_histogram(binwidth = 50000) +\n  labs(title = \"Histogram of prices\")\n\nggplot(duke_forest, aes(x = area)) +\n  geom_histogram(binwidth = 250) +\n  labs(title = \"Histogram of areas\")\n\nFigure 1: Histograms of individual variables\n\n\n\n\n(a) Histogram of prices\n\n\n\n\n\n(b) Histogram of areas\n\n\n\n\n\n\nFigure 2 displays the relationship between these two variables in a scatterplot.\n\nCodeggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point() +\n  labs(title = \"Price and area of houses in Duke Forest\")\n\n\n\nFigure 2: Scatterplot of price vs. area of houses in Duke Forest\n\n\n\n\n2.2 Summary statistics\nTable 1 displays basic summary statistics for these two variables.\n\nCodeduke_forest %&gt;%\n  summarise(\n    `Median price` = median(price),\n    `IQR price` = IQR(price),\n    `Median area` = median(area),\n    `IQR area` = IQR(area),\n    `Correlation, r` = cor(price, area)\n    ) %&gt;%\n  kable(digits = c(0, 0, 0, 0, 2))\n\n\n\n\n\nMedian price\nIQR price\nMedian area\nIQR area\nCorrelation, r\n\n\n540000\n193125\n2623\n1121\n0.67\n\n\nTable 1: Summary statistics for price and area of houses in Duke Forest"
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html#sec-model",
    "href": "content/posts/02-authoring/authoring.html#sec-model",
    "title": "Housing Prices",
    "section": "\n3 Modeling",
    "text": "3 Modeling\nWe can fit a simple linear regression model of the form shown in Equation 1.\n\nprice = \\hat{\\beta_0} + \\hat{\\beta_1} \\times area + \\epsilon\n\\tag{1}\nTable 2 shows the regression output for this model.\n\nCodeprice_fit &lt;- lm(price ~ area, data = duke_forest)\n  \nprice_fit %&gt;%\n  tidy() %&gt;%\n  kable(digits = c(0, 0, 2, 2, 2))\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n(Intercept)\n116652\n53302.46\n2.19\n0.03\n\n\narea\n159\n18.17\n8.78\n0.00\n\n\n\nTable 2: Linear regression model for predicting price from area\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis is a pretty incomplete analysis, but hopefully the document provides a good overview of some of the authoring features of Quarto !"
  },
  {
    "objectID": "content/posts/02-authoring/authoring.html#crossreferences",
    "href": "content/posts/02-authoring/authoring.html#crossreferences",
    "title": "Housing Prices",
    "section": "\n4 Crossreferences",
    "text": "4 Crossreferences\nWe present the results of exploratory data analysis in Section 2 and the regression model in Section 3 .\nFigure 2 displays the relationship between these two variables in a scatterplot.\nTable 1 displays basic summary statistics for these two variables.\nWe can fit a simple linear regression model of the form shown in Equation 1."
  },
  {
    "objectID": "content/posts/02-authoring/callout-boxes.html",
    "href": "content/posts/02-authoring/callout-boxes.html",
    "title": "Callout Boxes",
    "section": "",
    "text": ":::{.callout-note}\nNote that there are five types of callouts, including:\n`note`, `warning`, `important`, `tip`, and `caution`.\n:::\n\n:::{.callout-tip}\n## Tip With Caption\n\nThis is an example of a callout with a caption.\n:::\n\n:::{.callout-caution collapse=\"true\"}\n## Expand To Learn About Collapse\n\nThis is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make a collapsible callout that is expanded by default.\n:::"
  },
  {
    "objectID": "content/posts/02-authoring/callout-boxes.html#callout-markdown-syntax",
    "href": "content/posts/02-authoring/callout-boxes.html#callout-markdown-syntax",
    "title": "Callout Boxes",
    "section": "",
    "text": ":::{.callout-note}\nNote that there are five types of callouts, including:\n`note`, `warning`, `important`, `tip`, and `caution`.\n:::\n\n:::{.callout-tip}\n## Tip With Caption\n\nThis is an example of a callout with a caption.\n:::\n\n:::{.callout-caution collapse=\"true\"}\n## Expand To Learn About Collapse\n\nThis is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make a collapsible callout that is expanded by default.\n:::"
  },
  {
    "objectID": "content/posts/02-authoring/callout-pdf.html",
    "href": "content/posts/02-authoring/callout-pdf.html",
    "title": "Callouts in PDF",
    "section": "",
    "text": ":::{.callout-note}\nNote that there are five types of callouts, including:\n`note`, `warning`, `important`, `tip`, and `caution`.\n:::\n\n:::{.callout-tip}\n## Tip With Caption\n\nThis is an example of a callout with a caption.\n:::\n\n:::{.callout-caution collapse=\"true\"}\n## Expand To Learn About Collapse\n\nThis is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make a collapsible callout that is expanded by default.\n:::"
  },
  {
    "objectID": "content/posts/02-authoring/callout-pdf.html#callout-markdown-syntax",
    "href": "content/posts/02-authoring/callout-pdf.html#callout-markdown-syntax",
    "title": "Callouts in PDF",
    "section": "",
    "text": ":::{.callout-note}\nNote that there are five types of callouts, including:\n`note`, `warning`, `important`, `tip`, and `caution`.\n:::\n\n:::{.callout-tip}\n## Tip With Caption\n\nThis is an example of a callout with a caption.\n:::\n\n:::{.callout-caution collapse=\"true\"}\n## Expand To Learn About Collapse\n\nThis is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make a collapsible callout that is expanded by default.\n:::"
  },
  {
    "objectID": "content/posts/03-computation/inline-code.html",
    "href": "content/posts/03-computation/inline-code.html",
    "title": "Inline Code",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.0 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(palmerpenguins)\nThe dataset contains 344 penguin size measurements from Adelie, Gentoo, Chinstrap species across Torgersen, Biscoe, Dream islands.."
  },
  {
    "objectID": "content/posts/03-computation/inline-code.html#what-about-formatting",
    "href": "content/posts/03-computation/inline-code.html#what-about-formatting",
    "title": "Inline Code",
    "section": "What about formatting?",
    "text": "What about formatting?\n\npen_summary &lt;- penguins |&gt; \n  group_by(species) |&gt; \n  summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))\n\nThe average body mass by species is 3700.6622517, 3733.0882353, 5076.0162602.\nWe can do better!\n\nbody_mass &lt;- scales::label_number(big.mark = \",\", accuracy = 0.1, suffix = \"g\")(pull(pen_summary, avg_mass))\n\nbody_mass\n\n[1] \"3,700.7g\" \"3,733.1g\" \"5,076.0g\"\n\n\nThe average body mass by species is 3,700.7g, 3,733.1g, 5,076.0g.\nWe can still do better!\n\nmass_reporter &lt;- glue::glue_collapse(body_mass, sep = \", \", last = \", and \")\n\nThe average body mass by species is 3,700.7g, 3,733.1g, and 5,076.0g."
  },
  {
    "objectID": "content/posts/03-computation/inline-code.html#reporting-with-lists",
    "href": "content/posts/03-computation/inline-code.html#reporting-with-lists",
    "title": "Inline Code",
    "section": "Reporting with lists",
    "text": "Reporting with lists\nCredit to TJ Mahr\n\nknitted &lt;- list(\n  when = format(Sys.Date()),\n  with = system(\"quarto --version\", intern = TRUE)\n)\n\nReported prepared on 2023-01-05 with quarto version 1.2.280."
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html",
    "href": "content/posts/03-computation/visual-editor.html",
    "title": "Visual Editor for Quarto",
    "section": "",
    "text": "RStudio 2022.07.1 comes with support for the Visual Mode of editing Quarto and other markdown-based files!\nThis is a WYSIWYM editor, meaning:\n\nWYSIWYM is an acronym that stands for What you see is what you mean. This was positioned to not be confused with WYSIWYG (what you see is what you get). The idea behind WYSIWYG is to display text on screen in much the exact same way as they will appear when printed on paper.\n\nWYSIWYM means that it can be translated differently, (where) the same content can lead to different output formats .\n\nThe Visual Markdown mode in RStudio allows for editing in plain text or visual mode, along with a visual representation of what it will actually look like while maintaining the ability to output to HTML or PDF.\nFull guide guide from the RStudio dev team that covers all the major topics and sub topics of the new features.\n\n\nOS\nDownload\nSize\nSHA-256\n\n\n\nWindows 10/11\n\nRStudio-2022.07.1-554.exe(opens in a new tab)\n\n190.14 MB\n5ab6215b\n\n\nmacOS 10.15+\n\nRStudio-2022.07.1-554.dmg(opens in a new tab)\n\n221.04 MB\n7b1a2285\n\n\nUbuntu 18+/Debian 10+\n\nrstudio-2022.07.1-554-amd64.deb(opens in a new tab)\n\n132.91 MB\n74b9e751\n\n\nUbuntu 22\n\nrstudio-2022.07.1-554-amd64.deb(opens in a new tab)\n\n145.33 MB\n92f2ab75\n\n\nFedora 19/Red Hat 7\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n103.29 MB\n0fc15d16\n\n\nFedora 34/Red Hat 8\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n149.77 MB\n0c4ef334\n\n\nOpenSUSE 15\n\nrstudio-2022.07.1-554-x86_64.rpm(opens in a new tab)\n\n133.76 MB\n45f277d0\n\n\n\n\n\nMarkdown documents can be edited in either source or visual button at the top-right of the document toolbar (or alternatively the ⌘ + ⇧ + F4 keyboard shortcut):\n\n\nPlease see long section of the guide.\n\nIf you have a workflow that involves editing in both visual and source mode, you may want to ensure that the same markdown is written no matter which mode edits originate from. You can accomplish this using the canonical option. For example:\n---\ntitle: \"My Document\"\neditor_options:\n  markdown:\n    wrap: 72\n    references: \n      location: block\n    canonical: true\n---\n\nThe editor toolbar includes buttons for the most commonly used formatting commands:\n\nAdditional commands are available on the Format, Insert, and Table menus:\n\n\n\n\n\n\n\n\n\n\n\n\nCommand\nKeyboard Shortcut\nMarkdown Shortcut\n\n\n\nBold\n⌘ B\n**bold**\n\n\nItalic\n⌘ I\n*italic*\n\n\nCode\n⌘ D\n`code`\n\n\nLink\n⌘ K\n&lt;href&gt;\n\n\nHeading 1\n⌥⌘ 1\n#\n\n\nHeading 2\n⌥⌘ 2\n##\n\n\nHeading 3\n⌥⌘ 3\n###\n\n\nR Code Chunk\n⌥⌘ I\n```{r}\n\n\n\nYou can also use the catch-all ⌘/ shortcut to insert just about anything. Just execute the shortcut then type what you want to insert. For example:\nUse the bullet\n\nOutput\n\nOr numbered\n\nNumber list!\n\nHere’s a link - how to turn into an image?\n\nEXAMPLE LINK: https://rstudio.github.io/visual-markdown-editing/images/visual-editing-omni-list.png"
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html#equations",
    "href": "content/posts/03-computation/visual-editor.html#equations",
    "title": "Visual Editor for Quarto",
    "section": "Equations",
    "text": "Equations\nLaTeX equations are authored using standard Pandoc markdown syntax (the editor will automatically recognize the syntax and treat the equation as math). When you aren’t directly editing an equation it will appear as rendered math:\n\\[\nP(E) = {n \\choose k} p^k (2-p)^{n-k}\n\\]\n\nFootnotes\n\nYou can include footnotes using the Insert -&gt; Footnote command (or the ⇧ ⌘ F7 keyboard shortcut). Footnote editing occurs in a pane immediately below the main document:1 &lt;- NOTE THE FOOTMARK1 Very fancy footnote to this portion"
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html#inserting-citations",
    "href": "content/posts/03-computation/visual-editor.html#inserting-citations",
    "title": "Visual Editor for Quarto",
    "section": "Inserting Citations",
    "text": "Inserting Citations\nYou insert citations by either using the Insert -&gt; Citation command or by using markdown syntax directly (e.g. [@cite]).\nCitations go inside square brackets and are separated by semicolons. Each citation must have a key, composed of ‘@’ + the citation identifier from the database, and may optionally have a prefix, a locator, and a suffix. The citation key must begin with a letter, digit, or _, and may contain alphanumerics, _, and internal punctuation characters (:.#$%&-+?&lt;&gt;~/). Here are some examples:\n\n(Rottman-Sagebiel et al. 2018)\nDEMO OF CITATION WITH INSERT"
  },
  {
    "objectID": "content/posts/03-computation/visual-editor.html#embedded-code",
    "href": "content/posts/03-computation/visual-editor.html#embedded-code",
    "title": "Visual Editor for Quarto",
    "section": "Embedded Code",
    "text": "Embedded Code\nSource code which you include in an Quarto document can either by for display only or can be executed by knitr as part of rendering. Code can furthermore be either inline or block (e.g. an Rmd code chunk).\nDisplaying Code\nTo display but not execute code, either use the Insert -&gt; Code Block menu item, or start a new line and type either:\n\n``` (for a plain code block); or\n```&lt;lang&gt; (where &lt;lang&gt; is a language) for a code block with syntax highlighting.\n\nThen press the Enter key. To display code inline, simply surround text with backticks (`code`), or use the Format -&gt; Code menu item.\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins %&gt;% \n  ggplot(aes(x = body_weight_g, y = flipper_length_mm, color = species)) +\n  geom_point()\nCode Chunks\nTo insert an executable code chunk, use the Insert -&gt; Code Chunk menu item, or start a new line and type:\n```{r}\nThen press the Enter key. Note that r could be another language supported by knitr (e.g. python or sql) and you can also include a chunk label and other chunk options.\nTo include inline R code, you just create normal inline code (e.g. by using backticks or the ⌘ D shortcut) but preface it with r. For example, this inline code will be executed by knitr: 2023-01-05. Note that when the code displays in visual mode it won’t have the backticks (but they will still appear in source mode).\n\npenguin_plot &lt;- penguins %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_point(aes(color = species)) +\n  labs(title = \"Important Penguins\") +\n  geom_smooth(method = \"lm\", color = \"black\")\n\npenguin_plot\n\n\n\n\nR generated Tables\n\nlibrary(gt)\n\npenguins %&gt;% \n  na.omit() %&gt;% \n  select(species, bill_length_mm, body_mass_g) %&gt;% \n  head() %&gt;% \n  gt()\n\n\n\n\n\n\nspecies\nbill_length_mm\nbody_mass_g\n\n\n\nAdelie\n39.1\n3750\n\n\nAdelie\n39.5\n3800\n\n\nAdelie\n40.3\n3250\n\n\nAdelie\n36.7\n3450\n\n\nAdelie\n39.3\n3650\n\n\nAdelie\n38.9\n3625\n\n\n\n\n\n\n\nlibrary(reactable)\npenguins %&gt;% \n  filter(species == \"Adelie\") %&gt;% \n  na.omit() %&gt;% \n  select(species, bill_length_mm, body_mass_g) %&gt;% \n  reactable(defaultPageSize = 5)"
  },
  {
    "objectID": "content/posts/04-static/bootswatch-themed.html",
    "href": "content/posts/04-static/bootswatch-themed.html",
    "title": "Bootswatch Themed QMD",
    "section": "",
    "text": "Plots\nThis is the world’s most amazing plot. Everyone loves penguins.\nPenguins are fancy.\nThere are 344 in the dataset of interest.\n\nCodepenguins %&gt;% \n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point()\n\n\n\n\nYou can also include tables. Tables are super cool. I love tables and I love penguins. I am subject to oversight by the penguin overlords. The eternals are friends with the penguins.\n\nCodepenguins %&gt;% \n  na.omit() %&gt;% \n  group_by(species, sex) %&gt;% \n  rename(\n    body_mass = body_mass_g, bill_length = bill_length_mm, \n    bill_depth = bill_depth_mm\n    ) %&gt;% \n  summarise(\n    n = n(),\n    across(\n      .cols = c(body_mass, bill_length, bill_depth),\n      .fns = list(mean = mean, sd = sd)\n    ),\n    .groups = \"drop\"\n  ) %&gt;% \n  gt(rowname_col = \"sex\") %&gt;% \n  cols_label(\n    n = \"N\", body_mass_mean = \"Mean\", body_mass_sd = \"SD\", \n    bill_length_mean= \"Mean\", bill_length_sd = \"SD\",\n    bill_depth_mean = \"Mean\", bill_depth_sd = \"SD\"\n    ) %&gt;% \n  gt::tab_spanner(\n    label = \"Body Mass (g)\",\n    columns = 4:5\n  ) %&gt;% \n  gt::tab_spanner(\n    label = \"Bill Length (mm)\",\n    columns = 6:7\n  ) %&gt;% \n  gt::tab_spanner(\n    label = \"Bill Depth (mm)\",\n    columns = 8:9\n  ) %&gt;% \n  fmt_number(\n    columns = c(where(is.numeric), -n)\n  )\n\n\n\n\n\n\n\n\nspecies\nN\nBody Mass (g)\nBill Length (mm)\nBill Depth (mm)\n\n\nMean\nSD\nMean\nSD\nMean\nSD\n\n\n\n\nfemale\nAdelie\n73\n3,368.84\n269.38\n37.26\n2.03\n17.62\n0.94\n\n\nmale\nAdelie\n73\n4,043.49\n346.81\n40.39\n2.28\n19.07\n1.02\n\n\nfemale\nChinstrap\n34\n3,527.21\n285.33\n46.57\n3.11\n17.59\n0.78\n\n\nmale\nChinstrap\n34\n3,938.97\n362.14\n51.09\n1.56\n19.25\n0.76\n\n\nfemale\nGentoo\n58\n4,679.74\n281.58\n45.56\n2.05\n14.24\n0.54\n\n\nmale\nGentoo\n61\n5,484.84\n313.16\n49.47\n2.72\n15.72\n0.74"
  },
  {
    "objectID": "content/posts/04-static/old-rmarkdown.html",
    "href": "content/posts/04-static/old-rmarkdown.html",
    "title": "Old Markdown - reactable example",
    "section": "",
    "text": "This is an example from reactable documentation - showing the Twitter followers of some politicians.\nExample adapted from {reactable} documentation\n\nlibrary(reactable)\nlibrary(htmltools)\nlibrary(dplyr)\n\ndata &lt;- read.csv(\"https://glin.github.io/reactable/articles/twitter-followers/twitter_followers.csv\",\n                 stringsAsFactors = FALSE)\n\n# Render a bar chart with a label on the left\nbar_chart &lt;- function(label, width = \"100%\", height = \"14px\", fill = \"#00bfc4\", background = NULL) {\n  bar &lt;- div(style = list(background = fill, width = width, height = height))\n  chart &lt;- div(style = list(flexGrow = 1, marginLeft = \"6px\", background = background), bar)\n  div(style = list(display = \"flex\", alignItems = \"center\"), label, chart)\n}\n\ntbl &lt;- reactable(\n  data,\n  pagination = FALSE,\n  defaultSorted = \"exclusive_followers_pct\",\n  defaultColDef = colDef(headerClass = \"header\", align = \"left\"),\n  columns = list(\n    account = colDef(\n      cell = function(value) {\n        url &lt;- paste0(\"https://twitter.com/\", value)\n        tags$a(href = url, target = \"_blank\", paste0(\"@\", value))\n      },\n      width = 150\n    ),\n    followers = colDef(\n      defaultSortOrder = \"desc\",\n      cell = function(value) {\n        width &lt;- paste0(value * 100 / max(data$followers), \"%\")\n        value &lt;- format(value, big.mark = \",\")\n        value &lt;- format(value, width = 9, justify = \"right\")\n        bar &lt;- div(\n          class = \"bar-chart\",\n          style = list(marginRight = \"6px\"),\n          div(class = \"bar\", style = list(width = width, backgroundColor = \"#3fc1c9\"))\n        )\n        div(class = \"bar-cell\", span(class = \"number\", value), bar)\n      }\n    ),\n    exclusive_followers_pct = colDef(\n      name = \"Exclusive Followers\",\n      defaultSortOrder = \"desc\",\n      cell = JS(\"function(cellInfo) {\n        // Format as percentage\n        const pct = (cellInfo.value * 100).toFixed(1) + '%'\n        // Pad single-digit numbers\n        let value = pct.padStart(5)\n        // Show % on first row only\n        if (cellInfo.viewIndex &gt; 0) {\n          value = value.replace('%', ' ')\n        }\n        // Render bar chart\n        return (\n          '&lt;div class=\\\"bar-cell\\\"&gt;' +\n            '&lt;span class=\\\"number\\\"&gt;' + value + '&lt;/span&gt;' +\n            '&lt;div class=\\\"bar-chart\\\" style=\\\"background-color: #e1e1e1\\\"&gt;' +\n              '&lt;div class=\\\"bar\\\" style=\\\"width: ' + pct + '; background-color: #fc5185\\\"&gt;&lt;/div&gt;' +\n            '&lt;/div&gt;' +\n          '&lt;/div&gt;'\n        )\n      }\"),\n      html = TRUE\n    )\n  ),\n  compact = TRUE,\n  class = \"followers-tbl\"\n)\n\ntbl\n\n\n\n\n\n\n\n# Add Google Fonts to the page\ntags$link(href = \"https://fonts.googleapis.com/css?family=Karla:400,700|Fira+Mono&display=fallback\",\n          rel = \"stylesheet\")\n\n\n\n\n\n/* CSS for the R Markdown document, inserted through a ```{css} code chunk */\n\n/* Styles for the table container, title, and subtitle */\n.twitter-followers {\n  /* Center the table */\n  margin: 0 auto;\n  /* Reduce the table width */\n  width: 575px;\n  font-family: Karla, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.followers-header {\n  margin: 8px 0;\n  font-size: 16px;\n}\n\n.followers-title {\n  font-size: 20px;\n  font-weight: 600;\n}\n\n/* Styles for the table */\n.followers-tbl {\n  font-size: 14px;\n  line-height: 18px;\n}\n\n.followers-tbl a {\n  color: inherit;\n}\n\n/* Styles for the column headers */\n.header {\n  border-bottom: 2px solid #555;\n  font-size: 13px;\n  font-weight: 400;\n  text-transform: uppercase;\n}\n\n.header:hover {\n  background-color: #eee;\n}\n\n/* Styles for the bar charts */\n.bar-cell {\n  display: flex;\n  align-items: center;\n}\n\n.number {\n  font-family: \"Fira Mono\", Consolas, Monaco, monospace;\n  font-size: 13.5px;\n  white-space: pre;\n}\n\n.bar-chart {\n  flex-grow: 1;\n  margin-left: 6px;\n  height: 14px;\n}\n\n.bar {\n  height: 100%;\n}"
  },
  {
    "objectID": "content/posts/04-static/old-rmarkdown.html#twitter-followers",
    "href": "content/posts/04-static/old-rmarkdown.html#twitter-followers",
    "title": "Old Markdown - reactable example",
    "section": "",
    "text": "This is an example from reactable documentation - showing the Twitter followers of some politicians.\nExample adapted from {reactable} documentation\n\nlibrary(reactable)\nlibrary(htmltools)\nlibrary(dplyr)\n\ndata &lt;- read.csv(\"https://glin.github.io/reactable/articles/twitter-followers/twitter_followers.csv\",\n                 stringsAsFactors = FALSE)\n\n# Render a bar chart with a label on the left\nbar_chart &lt;- function(label, width = \"100%\", height = \"14px\", fill = \"#00bfc4\", background = NULL) {\n  bar &lt;- div(style = list(background = fill, width = width, height = height))\n  chart &lt;- div(style = list(flexGrow = 1, marginLeft = \"6px\", background = background), bar)\n  div(style = list(display = \"flex\", alignItems = \"center\"), label, chart)\n}\n\ntbl &lt;- reactable(\n  data,\n  pagination = FALSE,\n  defaultSorted = \"exclusive_followers_pct\",\n  defaultColDef = colDef(headerClass = \"header\", align = \"left\"),\n  columns = list(\n    account = colDef(\n      cell = function(value) {\n        url &lt;- paste0(\"https://twitter.com/\", value)\n        tags$a(href = url, target = \"_blank\", paste0(\"@\", value))\n      },\n      width = 150\n    ),\n    followers = colDef(\n      defaultSortOrder = \"desc\",\n      cell = function(value) {\n        width &lt;- paste0(value * 100 / max(data$followers), \"%\")\n        value &lt;- format(value, big.mark = \",\")\n        value &lt;- format(value, width = 9, justify = \"right\")\n        bar &lt;- div(\n          class = \"bar-chart\",\n          style = list(marginRight = \"6px\"),\n          div(class = \"bar\", style = list(width = width, backgroundColor = \"#3fc1c9\"))\n        )\n        div(class = \"bar-cell\", span(class = \"number\", value), bar)\n      }\n    ),\n    exclusive_followers_pct = colDef(\n      name = \"Exclusive Followers\",\n      defaultSortOrder = \"desc\",\n      cell = JS(\"function(cellInfo) {\n        // Format as percentage\n        const pct = (cellInfo.value * 100).toFixed(1) + '%'\n        // Pad single-digit numbers\n        let value = pct.padStart(5)\n        // Show % on first row only\n        if (cellInfo.viewIndex &gt; 0) {\n          value = value.replace('%', ' ')\n        }\n        // Render bar chart\n        return (\n          '&lt;div class=\\\"bar-cell\\\"&gt;' +\n            '&lt;span class=\\\"number\\\"&gt;' + value + '&lt;/span&gt;' +\n            '&lt;div class=\\\"bar-chart\\\" style=\\\"background-color: #e1e1e1\\\"&gt;' +\n              '&lt;div class=\\\"bar\\\" style=\\\"width: ' + pct + '; background-color: #fc5185\\\"&gt;&lt;/div&gt;' +\n            '&lt;/div&gt;' +\n          '&lt;/div&gt;'\n        )\n      }\"),\n      html = TRUE\n    )\n  ),\n  compact = TRUE,\n  class = \"followers-tbl\"\n)\n\ntbl\n\n\n\n\n\n\n\n# Add Google Fonts to the page\ntags$link(href = \"https://fonts.googleapis.com/css?family=Karla:400,700|Fira+Mono&display=fallback\",\n          rel = \"stylesheet\")\n\n\n\n\n\n/* CSS for the R Markdown document, inserted through a ```{css} code chunk */\n\n/* Styles for the table container, title, and subtitle */\n.twitter-followers {\n  /* Center the table */\n  margin: 0 auto;\n  /* Reduce the table width */\n  width: 575px;\n  font-family: Karla, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.followers-header {\n  margin: 8px 0;\n  font-size: 16px;\n}\n\n.followers-title {\n  font-size: 20px;\n  font-weight: 600;\n}\n\n/* Styles for the table */\n.followers-tbl {\n  font-size: 14px;\n  line-height: 18px;\n}\n\n.followers-tbl a {\n  color: inherit;\n}\n\n/* Styles for the column headers */\n.header {\n  border-bottom: 2px solid #555;\n  font-size: 13px;\n  font-weight: 400;\n  text-transform: uppercase;\n}\n\n.header:hover {\n  background-color: #eee;\n}\n\n/* Styles for the bar charts */\n.bar-cell {\n  display: flex;\n  align-items: center;\n}\n\n.number {\n  font-family: \"Fira Mono\", Consolas, Monaco, monospace;\n  font-size: 13.5px;\n  white-space: pre;\n}\n\n.bar-chart {\n  flex-grow: 1;\n  margin-left: 6px;\n  height: 14px;\n}\n\n.bar {\n  height: 100%;\n}"
  },
  {
    "objectID": "content/posts/04-static/penguin-report.html",
    "href": "content/posts/04-static/penguin-report.html",
    "title": "Penguins Distilled",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth.\n\nLiterate Programming\nPer Donald Knuth\n\nA programming paradigm introduced by Donald Knuth in which a computer program is given an explanation of its logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which compilable source code can be generated.\n\nInitial explore\nWe can do a quick exploration of the data with skimr::skim(). This will report the counts of various variables, along with some basic descriptive statistics. The skimr package is fantastic for quickly getting a sense of your datasets.\nAhead of skimr there are 344 penguins in this dataset, and the unique species are Adelie, Gentoo, Chinstrap.\nPer the rOpenSci skimr docs:\n\nskimr provides a frictionless approach to summary statistics which conforms to the principle of least surprise, displaying summary statistics the user can skim quickly to understand their data. It handles different data types and returns a skim_df object which can be included in a pipeline or displayed nicely for the human reader.\n\n\npenguins %&gt;% \n  group_by(species) %&gt;% \n  skimr::skim() %&gt;% \n  select(-contains(\"numeric.p\"))\n\n\n\n\n\nName\nPiped data\n\n\nNumber of rows\n344\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nspecies\n\n\n\nData summaryVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nspecies\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\nisland\nAdelie\n0\n1.00\nFALSE\n3\nDre: 56, Tor: 52, Bis: 44\n\n\nisland\nChinstrap\n0\n1.00\nFALSE\n1\nDre: 68, Bis: 0, Tor: 0\n\n\nisland\nGentoo\n0\n1.00\nFALSE\n1\nBis: 124, Dre: 0, Tor: 0\n\n\nsex\nAdelie\n6\n0.96\nFALSE\n2\nfem: 73, mal: 73\n\n\nsex\nChinstrap\n0\n1.00\nFALSE\n2\nfem: 34, mal: 34\n\n\nsex\nGentoo\n5\n0.96\nFALSE\n2\nmal: 61, fem: 58\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nspecies\nn_missing\ncomplete_rate\nmean\nsd\nhist\n\n\n\nbill_length_mm\nAdelie\n1\n0.99\n38.79\n2.66\n▁▆▇▆▁\n\n\nbill_length_mm\nChinstrap\n0\n1.00\n48.83\n3.34\n▂▇▇▅▁\n\n\nbill_length_mm\nGentoo\n1\n0.99\n47.50\n3.08\n▃▇▆▁▁\n\n\nbill_depth_mm\nAdelie\n1\n0.99\n18.35\n1.22\n▂▆▇▃▁\n\n\nbill_depth_mm\nChinstrap\n0\n1.00\n18.42\n1.14\n▅▇▇▆▂\n\n\nbill_depth_mm\nGentoo\n1\n0.99\n14.98\n0.98\n▅▇▇▆▂\n\n\nflipper_length_mm\nAdelie\n1\n0.99\n189.95\n6.54\n▁▆▇▅▁\n\n\nflipper_length_mm\nChinstrap\n0\n1.00\n195.82\n7.13\n▁▅▇▅▂\n\n\nflipper_length_mm\nGentoo\n1\n0.99\n217.19\n6.48\n▂▇▇▆▃\n\n\nbody_mass_g\nAdelie\n1\n0.99\n3700.66\n458.57\n▅▇▇▃▂\n\n\nbody_mass_g\nChinstrap\n0\n1.00\n3733.09\n384.34\n▁▅▇▃▁\n\n\nbody_mass_g\nGentoo\n1\n0.99\n5076.02\n504.12\n▃▇▇▇▂\n\n\nyear\nAdelie\n0\n1.00\n2008.01\n0.82\n▇▁▇▁▇\n\n\nyear\nChinstrap\n0\n1.00\n2007.97\n0.86\n▇▁▆▁▇\n\n\nyear\nGentoo\n0\n1.00\n2008.08\n0.79\n▆▁▇▁▇\n\n\n\n\n\nSpecific statistics\nWe can also explore specific statistics\nThe penguins split by species show a specific relationship between weight and flipper length, where the Adelie female penguins are the lighest and have the shortest flippers.\n\npenguins %&gt;% \n  group_by(species, sex) %&gt;% \n  summarize(\n    n = n(), \n    weight = mean(body_mass_g, na.rm = TRUE),\n    flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n    ) %&gt;% \n  arrange(desc(weight))\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 5\n# Groups:   species [3]\n  species   sex        n weight flipper_length\n  &lt;fct&gt;     &lt;fct&gt;  &lt;int&gt;  &lt;dbl&gt;          &lt;dbl&gt;\n1 Gentoo    male      61  5485.           222.\n2 Gentoo    female    58  4680.           213.\n3 Gentoo    &lt;NA&gt;       5  4588.           216.\n4 Adelie    male      73  4043.           192.\n5 Chinstrap male      34  3939.           200.\n6 Adelie    &lt;NA&gt;       6  3540            186.\n7 Chinstrap female    34  3527.           192.\n8 Adelie    female    73  3369.           188.\n\n\nLooks like the Adelie are the lightest penguin. I want to see their distribution along with the overall distribution.\n\npenguins %&gt;% \n  filter(is.na(sex))\n\n# A tibble: 11 × 8\n   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;      &lt;int&gt;   &lt;int&gt; &lt;fct&gt; &lt;int&gt;\n 1 Adelie  Torgersen           NA            NA           NA      NA &lt;NA&gt;   2007\n 2 Adelie  Torgersen           34.1          18.1        193    3475 &lt;NA&gt;   2007\n 3 Adelie  Torgersen           42            20.2        190    4250 &lt;NA&gt;   2007\n 4 Adelie  Torgersen           37.8          17.1        186    3300 &lt;NA&gt;   2007\n 5 Adelie  Torgersen           37.8          17.3        180    3700 &lt;NA&gt;   2007\n 6 Adelie  Dream               37.5          18.9        179    2975 &lt;NA&gt;   2007\n 7 Gentoo  Biscoe              44.5          14.3        216    4100 &lt;NA&gt;   2007\n 8 Gentoo  Biscoe              46.2          14.4        214    4650 &lt;NA&gt;   2008\n 9 Gentoo  Biscoe              47.3          13.8        216    4725 &lt;NA&gt;   2009\n10 Gentoo  Biscoe              44.5          15.7        217    4875 &lt;NA&gt;   2009\n11 Gentoo  Biscoe              NA            NA           NA      NA &lt;NA&gt;   2009\n# … with abbreviated variable names ¹​flipper_length_mm, ²​body_mass_g\n\n\n\nsmaller &lt;- palmerpenguins::penguins %&gt;% \n  filter(species == \"Adelie\", \n         !is.na(body_mass_g))\n\nCleanup the data\nIf you noticed above, there was some NA or missing data. We can remove those rows for now.\n\npenguins_clean &lt;- penguins %&gt;% \n  na.omit() %&gt;% \n  mutate(species_num = as.numeric(species))\n\nPlot Section\nLet’s move on to some plots, for the overall distributions and for just the Adelie penguins. The overall distribution of the data by species shows some overlap in body weight for Adelie/Chinstrap, but more of a separation for the Gentoo penguins.\n\npenguins %&gt;% \n  ggplot(aes(body_mass_g, fill = species)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Penguin Bins\")\n\n\n\n\nWhen we compare just within the Adelie penguins, we can see more of a specific separation of male vs female. However, there is still a decent amount of overlapping data.\n\npenguin_plot &lt;- smaller %&gt;% \n  filter(!is.na(sex)) %&gt;% \n  ggplot(aes(body_mass_g, fill = sex)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n    scale_fill_manual(values = c(\"darkorange\",\"purple\")) +\n  labs(x = \"Penguin Bins\")\n\npenguin_plot\n\n\n\n\nLastly we can fit a basic linear model comparing body weight in grams to the flipper length of the penguins by specific species. There is a strong linear relationship, although it’s a bit difficult to distinguish between Chinstrap and Adelie penguins.\n\npenguin_size_plot &lt;- penguins_clean %&gt;% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = species)) + \n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  geom_point(size = 2, alpha = 0.5) +\n  labs(x = \"Mass (g)\", y = \"Flipper Length (mm)\") +\n  geom_smooth(aes(group = \"none\"), method = \"lm\")\n\npenguin_size_plot\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nWe can save the overall distribution and the linear model plot.\n\nggsave(\"penguin-dist.png\", penguin_plot, \n  dpi = \"retina\", height = 8, width = 8)\n\nggsave(\"penguin-smooth.png\", penguin_size_plot, \n  dpi = \"retina\", height = 8, width = 8)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nModeling section\nMoving on to some basic modeling we can see if what kind of relationships we observe in the data. Note that I’m really not following any plan, just indicating how you can fit some different models all at once with dplyr + broom.\n\nmodel_inputs &lt;- tibble(\n  model_form = c(\n    list(flipper_length_mm ~ body_mass_g),\n    list(species_num ~ bill_length_mm + body_mass_g + sex),\n    list(flipper_length_mm ~ bill_length_mm + species)\n    ),\n  data = list(penguins_clean)\n) \n\nmodel_metrics &lt;- model_inputs %&gt;% \n  rowwise(model_form, data) %&gt;% \n  summarize(lm = list(lm(model_form, data = data)), .groups = \"drop\") %&gt;% \n  rowwise(model_form, lm, data) %&gt;% \n  summarise(broom::glance(lm), .groups = \"drop\")\n\nWrap up\nWe can then take the model outcomes and throw them into a quick gt table.\n\nmodel_metrics %&gt;% \n  select(model_form, r.squared:p.value) %&gt;% \n  mutate(model_form = as.character(model_form)) %&gt;% \n  gt::gt() %&gt;% \n  gt::fmt_number(r.squared:statistic) %&gt;% \n  gt::fmt_scientific(p.value) %&gt;% \n  gt::cols_width(\n    model_form ~ px(150)\n  )\n\n\n\n\n\n\nmodel_form\nr.squared\nadj.r.squared\nsigma\nstatistic\np.value\n\n\n\nflipper_length_mm ~ body_mass_g\n0.76\n0.76\n6.85\n1,060.30\n3.13 × 10−105\n\n\n\nspecies_num ~ bill_length_mm + body_mass_g + sex\n0.84\n0.84\n0.36\n583.59\n2.45 × 10−131\n\n\n\nflipper_length_mm ~ bill_length_mm + species\n0.83\n0.83\n5.83\n529.22\n1.66 × 10−125\n\n\n\n\n\n\n\nOverall, this was a quick overview of the beauty of literate programming. We have R code that is self-documenting, as we capture our thoughts and the outputs in a single document. We know at some level that the code works since it “logs” the outputs at various stages and could still output to additional log files. To render it has to run successfully in a linear fashion, and it is human readable as code, via the visual editor or even in version control like Git!"
  },
  {
    "objectID": "content/posts/05-presentations/fragments.html",
    "href": "content/posts/05-presentations/fragments.html",
    "title": "Presentation with Columns?",
    "section": "",
    "text": "Make\nYour\nList\n\n\n\n\n```{r}\nhead(mtcars)\n```\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"
  },
  {
    "objectID": "content/posts/05-presentations/fragments.html#make-these-columns-appear-in-order",
    "href": "content/posts/05-presentations/fragments.html#make-these-columns-appear-in-order",
    "title": "Presentation with Columns?",
    "section": "",
    "text": "Make\nYour\nList\n\n\n\n\n```{r}\nhead(mtcars)\n```\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html",
    "href": "content/posts/05-presentations/revealjs-penguins.html",
    "title": "Penguin Report Presentation",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#section",
    "href": "content/posts/05-presentations/revealjs-penguins.html#section",
    "title": "Penguin Report Presentation",
    "section": "",
    "text": "Diagram of penguin head with indication of bill length and bill depth."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#literate-programming",
    "href": "content/posts/05-presentations/revealjs-penguins.html#literate-programming",
    "title": "Penguin Report Presentation",
    "section": "Literate Programming",
    "text": "Literate Programming\nPer Donald Knuth\n\nA programming paradigm introduced by Donald Knuth in which a computer program is given an explanation of its logic in a natural language, such as English, interspersed with snippets of macros and traditional source code, from which compilable source code can be generated."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#specific-statistics",
    "href": "content/posts/05-presentations/revealjs-penguins.html#specific-statistics",
    "title": "Penguin Report Presentation",
    "section": "Specific statistics",
    "text": "Specific statistics\n\npenguins %&gt;% \n  group_by(species, sex) %&gt;% \n  summarize(\n    n = n(), \n    weight = mean(body_mass_g, na.rm = TRUE),\n    flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n    ) %&gt;% \n  arrange(desc(weight))\n\n# A tibble: 8 × 5\n# Groups:   species [3]\n  species   sex        n weight flipper_length\n  &lt;fct&gt;     &lt;fct&gt;  &lt;int&gt;  &lt;dbl&gt;          &lt;dbl&gt;\n1 Gentoo    male      61  5485.           222.\n2 Gentoo    female    58  4680.           213.\n3 Gentoo    &lt;NA&gt;       5  4588.           216.\n4 Adelie    male      73  4043.           192.\n5 Chinstrap male      34  3939.           200.\n6 Adelie    &lt;NA&gt;       6  3540            186.\n7 Chinstrap female    34  3527.           192.\n8 Adelie    female    73  3369.           188."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#cleanup-the-data",
    "href": "content/posts/05-presentations/revealjs-penguins.html#cleanup-the-data",
    "title": "Penguin Report Presentation",
    "section": "Cleanup the data",
    "text": "Cleanup the data\nIf you noticed above, there was some NA or missing data. We can remove those rows for now.\n\npenguins_clean &lt;- penguins %&gt;% \n  na.omit() %&gt;% \n  mutate(species_num = as.numeric(species))"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#plot-section",
    "href": "content/posts/05-presentations/revealjs-penguins.html#plot-section",
    "title": "Penguin Report Presentation",
    "section": "Plot Section",
    "text": "Plot Section\nLet’s move on to some plots, for the overall distributions and for just the Adelie penguins. The overall distribution of the data by species shows some overlap in body weight for Adelie/Chinstrap, but more of a separation for the Gentoo penguins."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#distribution",
    "href": "content/posts/05-presentations/revealjs-penguins.html#distribution",
    "title": "Penguin Report Presentation",
    "section": "Distribution",
    "text": "Distribution\n\npenguins %&gt;% \n  ggplot(aes(body_mass_g, fill = species)) + \n  geom_density(color = \"white\", alpha = 0.5) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Penguin Bins\")"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#lm-scatter-plot",
    "href": "content/posts/05-presentations/revealjs-penguins.html#lm-scatter-plot",
    "title": "Penguin Report Presentation",
    "section": "LM + Scatter Plot",
    "text": "LM + Scatter Plot\n\npenguin_size_plot &lt;- penguins_clean %&gt;% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm, color = species)) + \n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  geom_point(size = 2, alpha = 0.5) +\n  labs(x = \"Mass (g)\", y = \"Flipper Length (mm)\") +\n  geom_smooth(aes(group = \"none\"), method = \"lm\")\n\npenguin_size_plot"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#modeling-section",
    "href": "content/posts/05-presentations/revealjs-penguins.html#modeling-section",
    "title": "Penguin Report Presentation",
    "section": "Modeling section",
    "text": "Modeling section\nMoving on to some basic modeling we can see if what kind of relationships we observe in the data. Note that I’m really not following any plan, just indicating how you can fit some different models all at once with dplyr + broom."
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#section-1",
    "href": "content/posts/05-presentations/revealjs-penguins.html#section-1",
    "title": "Penguin Report Presentation",
    "section": "",
    "text": "model_inputs &lt;- tibble(\n  model_form = c(\n    list(flipper_length_mm ~ body_mass_g),\n    list(species_num ~ bill_length_mm + body_mass_g + sex),\n    list(flipper_length_mm ~ bill_length_mm + species)\n    ),\n  data = list(penguins_clean)\n) \n\nmodel_metrics &lt;- model_inputs %&gt;% \n  rowwise(model_form, data) %&gt;% \n  summarize(lm = list(lm(model_form, data = data)), .groups = \"drop\") %&gt;% \n  rowwise(model_form, lm, data) %&gt;% \n  summarise(broom::glance(lm), .groups = \"drop\")"
  },
  {
    "objectID": "content/posts/05-presentations/revealjs-penguins.html#section-2",
    "href": "content/posts/05-presentations/revealjs-penguins.html#section-2",
    "title": "Penguin Report Presentation",
    "section": "",
    "text": "model_metrics %&gt;% \n  select(model_form, r.squared:p.value) %&gt;% \n  mutate(model_form = as.character(model_form)) %&gt;% \n  gt::gt() %&gt;% \n  gt::fmt_number(r.squared:statistic) %&gt;% \n  gt::fmt_scientific(p.value) %&gt;% \n  gt::cols_width(\n    model_form ~ px(150)\n  )\n\n\n\n\n\n\nmodel_form\nr.squared\nadj.r.squared\nsigma\nstatistic\np.value\n\n\n\nflipper_length_mm ~ body_mass_g\n0.76\n0.76\n6.85\n1,060.30\n3.13 × 10−105\n\n\n\nspecies_num ~ bill_length_mm + body_mass_g + sex\n0.84\n0.84\n0.36\n583.59\n2.45 × 10−131\n\n\n\nflipper_length_mm ~ bill_length_mm + species\n0.83\n0.83\n5.83\n529.22\n1.66 × 10−125"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#introduction",
    "href": "content/posts/07-visuals/gt-summary.html#introduction",
    "title": "Overview of using gtsummary\n",
    "section": "Introduction",
    "text": "Introduction\nReproducible reports are an important part of good practices. We often need to report the results from a table in the text of an Quarto report. Inline reporting has been made simple with inline_text(). The inline_text() function reports statistics from {gtsummary} tables inline in an Quarto report."
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#setup",
    "href": "content/posts/07-visuals/gt-summary.html#setup",
    "title": "Overview of using gtsummary\n",
    "section": "Setup",
    "text": "Setup\nBefore going through the tutorial, install and load {gtsummary}.\n\n# install.packages(\"gtsummary\")\nlibrary(gtsummary)"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#example-data-set",
    "href": "content/posts/07-visuals/gt-summary.html#example-data-set",
    "title": "Overview of using gtsummary\n",
    "section": "Example data set",
    "text": "Example data set\nWe’ll be using the trial data set throughout this example.\n\nThis set contains data from 200 patients who received one of two types of chemotherapy (Drug A or Drug B). The outcomes are tumor response and death.\n\nFor brevity in the tutorial, let’s keep a subset of the variables from the trial data set.\n\ntrial2 &lt;-\n  trial %&gt;%\n  select(trt, marker, stage)"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_summary",
    "href": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_summary",
    "title": "Overview of using gtsummary\n",
    "section": "Inline results from tbl_summary()",
    "text": "Inline results from tbl_summary()\nFirst create a basic summary table using tbl_summary() (review tbl_summary() vignette for detailed overview of this function if needed).\n\ntab1 &lt;- tbl_summary(trial2, by = trt)\ntab1\n\n\n\n\n\n\nCharacteristic\n\nDrug A, N = 981\n\n\nDrug B, N = 1021\n\n\n\n\nMarker Level (ng/mL)\n0.84 (0.24, 1.57)\n0.52 (0.19, 1.20)\n\n\n    Unknown\n6\n4\n\n\nT Stage\n\n\n\n\n    T1\n28 (29%)\n25 (25%)\n\n\n    T2\n25 (26%)\n29 (28%)\n\n\n    T3\n22 (22%)\n21 (21%)\n\n\n    T4\n23 (23%)\n27 (26%)\n\n\n\n\n1 Median (IQR); n (%)\n\n\n\n\n\nTo report the median (IQR) of the marker levels in each group, use the following commands inline.\n\nThe median (IQR) marker level in the Drug A and Drug B groups are 0.84 (0.24, 1.57) and 0.52 (0.19, 1.20), respectively. Here’s how the line will appear in your report.\n\n\nThe median (IQR) marker level in the Drug A and Drug B groups are 0.84 (0.24, 1.57) and 0.52 (0.19, 1.20), respectively. If you display a statistic from a categorical variable, include the level argument.\n\n\n25 (25%) resolves to “25 (25%)”"
  },
  {
    "objectID": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_regression",
    "href": "content/posts/07-visuals/gt-summary.html#inline_text_tbl_regression",
    "title": "Overview of using gtsummary\n",
    "section": "Inline results from tbl_regression()",
    "text": "Inline results from tbl_regression()\nSimilar syntax is used to report results from tbl_regression() and tbl_uvregression() tables. Refer to the tbl_regression() vignette if you need detailed guidance on using these functions.\nLet’s first create a regression model.\n\n# build logistic regression model\nm1 &lt;- glm(response ~ age + stage, trial, family = binomial(link = \"logit\"))\n\nNow summarize the results with tbl_regression(); exponentiate to get the odds ratios.\n\ntbl_m1 &lt;- tbl_regression(m1, exponentiate = TRUE)\ntbl_m1\n\n\n\n\n\n\nCharacteristic\n\nOR1\n\n\n95% CI1\n\np-value\n\n\n\nAge\n1.02\n1.00, 1.04\n0.091\n\n\nT Stage\n\n\n\n\n\n    T1\n—\n—\n\n\n\n    T2\n0.58\n0.24, 1.37\n0.2\n\n\n    T3\n0.94\n0.39, 2.28\n0.9\n\n\n    T4\n0.79\n0.33, 1.90\n0.6\n\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval\n\n\n\n\n\nTo report the result for age, use the following commands inline.\n\n1.02 (95% CI 1.00, 1.04; p=0.091) Here’s how the line will appear in your report.\n\n\n1.02 (95% CI 1.00, 1.04; p=0.091) It is reasonable that you’ll need to modify the text. To do this, use the pattern argument. The pattern argument syntax follows glue::glue() format with referenced R objects being inserted between curly brackets. The default is pattern = \"{estimate} ({conf.level*100}% CI {conf.low}, {conf.high}; {p.value})\". You have access the to following fields within the pattern argument.\n\n\n\n\n\n\n\n\n\n\n\n\nParameter\nDescription\n\n\n\n\n{estimate}\n\nprimary estimate (e.g. model coefficient, odds ratio)\n\n\n\n{conf.low}\n\nlower limit of confidence interval\n\n\n\n{conf.high}\n\nupper limit of confidence interval\n\n\n\n{p.value}\n\np-value\n\n\n\n{conf.level}\n\nconfidence level of interval\n\n\n\n{N}\n\nnumber of observations\n\n\n\n\n\n\n\nAge was not significantly associated with tumor response (OR 1.02; 95% CI 1.00, 1.04; p=0.091). Age was not significantly associated with tumor response (OR 1.02; 95% CI 1.00, 1.04; p=0.091). If you’re printing results from a categorical variable, include the level argument, e.g. inline_text(tbl_m1, variable = stage, level = \"T3\") resolves to “0.94 (95% CI 0.39, 2.28; p=0.9)”.\n\nThe inline_text function has arguments for rounding the p-value (pvalue_fun) and the coefficients and confidence interval (estimate_fun). These default to the same rounding performed in the table, but can be modified when reporting inline.\nFor more details about inline code, review to the RStudio documentation page."
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html",
    "href": "content/posts/07-visuals/plot-layout.html",
    "title": "Plot Layout",
    "section": "",
    "text": "library(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union"
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html#figure-layout-ncol",
    "href": "content/posts/07-visuals/plot-layout.html#figure-layout-ncol",
    "title": "Plot Layout",
    "section": "Figure layout, ncol",
    "text": "Figure layout, ncol\n\n```{r}\n#| layout-ncol: 2\n#| fig-cap:\n#|   - \"Speed and Stopping Distances of Cars\"\n#|   - \"Engine displacement and fuel efficiency in Cars\"\n\ncars %&gt;% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()\n\nmtcars %&gt;% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\n\n\n\n\nSpeed and Stopping Distances of Cars\n\n\n\n\n\nEngine displacement and fuel efficiency in Cars"
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html#subcaptions",
    "href": "content/posts/07-visuals/plot-layout.html#subcaptions",
    "title": "Plot Layout",
    "section": "Subcaptions:",
    "text": "Subcaptions:\n\n```{r}\n#| label: fig-charts\n#| fig-cap: Charts\n#| fig-subcap:\n#|   - \"Cars\"\n#|   - \"mtcars\"\n#| layout-ncol: 2\n\ncars %&gt;% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()\n\nmtcars %&gt;% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()\n```\n\nFigure 1: Charts\n\n\n\n\n(a) Cars\n\n\n\n\n\n(b) mtcars"
  },
  {
    "objectID": "content/posts/07-visuals/plot-layout.html#figure-layout-custom",
    "href": "content/posts/07-visuals/plot-layout.html#figure-layout-custom",
    "title": "Plot Layout",
    "section": "Figure layout, custom",
    "text": "Figure layout, custom\n\n```{r}\n#| layout: [[45,-10, 45], [50, 50]]\n#| fig-height: 5\n#| fig-align: center\n#| message: false\n#| warning: false\n#| dpi: 300\n\ncars %&gt;% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_smooth() +\n  theme(text = element_text(size = 20))\n\ncars %&gt;% \n  ggplot(aes(x = speed, y = dist)) +\n  geom_point()+\n  theme(text = element_text(size = 20))\n\nmtcars %&gt;% \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point()+\n  theme(text = element_text(size = 20))\n\nmtcars %&gt;% \n  ggplot(aes(x = cyl, y = mpg, group = cyl, color = factor(cyl))) +\n  geom_boxplot() +\n  geom_jitter() +\n  theme(legend.position = \"none\")+\n  theme(text = element_text(size = 20))\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html",
    "href": "content/posts/07-visuals/plots.html",
    "title": "Plots",
    "section": "",
    "text": "library(palmerpenguins)\nlibrary(ggplot2)\nggplot2::theme_set(ggplot2::theme_minimal())\npenguins &lt;- na.omit(penguins)"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#load-libraries",
    "href": "content/posts/07-visuals/plots.html#load-libraries",
    "title": "Plots",
    "section": "",
    "text": "library(palmerpenguins)\nlibrary(ggplot2)\nggplot2::theme_set(ggplot2::theme_minimal())\npenguins &lt;- na.omit(penguins)"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#ggplot2",
    "href": "content/posts/07-visuals/plots.html#ggplot2",
    "title": "Plots",
    "section": "ggplot2",
    "text": "ggplot2\nCredit to Alison Hill + Allison Horst\n\n```{r}\nmass_flipper &lt;- ggplot(data = penguins, \n                       aes(x = flipper_length_mm,\n                           y = body_mass_g)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin size, Palmer Station LTER\",\n       subtitle = \"Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins\",\n       x = \"Flipper length (mm)\",\n       y = \"Body mass (g)\",\n       color = \"Penguin species\",\n       shape = \"Penguin species\") +\n  theme(legend.position = c(0.2, 0.7),\n        plot.title.position = \"plot\",\n        plot.caption = element_text(hjust = 0, face= \"italic\"),\n        plot.caption.position = \"plot\",\n        plot.background = element_rect(color = \"black\"))\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#basic-plot",
    "href": "content/posts/07-visuals/plots.html#basic-plot",
    "title": "Plots",
    "section": "Basic plot",
    "text": "Basic plot\n\n```{r}\nmass_flipper\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#basic-plot-1",
    "href": "content/posts/07-visuals/plots.html#basic-plot-1",
    "title": "Plots",
    "section": "Basic plot",
    "text": "Basic plot\nIncreasing the width/DPI only affects the scaling of the image, it will not overflow.\n\n```{r}\n#| fig-width: 10\n#| fig-height: 4\n#| fig-dpi: 600\nmass_flipper\n```"
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#aside",
    "href": "content/posts/07-visuals/plots.html#aside",
    "title": "Plots",
    "section": "Aside",
    "text": "Aside\n\n\n\n\n\n\nThe palmerpenguins R package contains two datasets that we believe are a viable alternative to Anderson’s Iris data (see datasets::iris). In this introductory vignette, we’ll highlight some of the properties of these datasets that make them useful for statistics and data science education, as well as software documentation and testing."
  },
  {
    "objectID": "content/posts/07-visuals/plots.html#overflow-content",
    "href": "content/posts/07-visuals/plots.html#overflow-content",
    "title": "Plots",
    "section": "Overflow Content",
    "text": "Overflow Content\nThere are many options for overflow, either left/right\n\n```{r}\n#| column: body-outset-right\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: screen-inset-right\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: page-inset-left\n#| fig-width: 10\nmass_flipper\n```\n\n\n\n\n\n```{r}\n#| column: screen-left\n#| fig-width: 10\nmass_flipper\n```"
  },
  {
    "objectID": "content/posts/07-visuals/stat-html.html",
    "href": "content/posts/07-visuals/stat-html.html",
    "title": "gtsummary + R Markdown",
    "section": "",
    "text": "library(gtsummary)\nlibrary(tidyverse)\nlibrary(survival)"
  },
  {
    "objectID": "content/posts/07-visuals/stat-html.html#gtsummary-tables",
    "href": "content/posts/07-visuals/stat-html.html#gtsummary-tables",
    "title": "gtsummary + R Markdown",
    "section": "gtsummary tables",
    "text": "gtsummary tables\nTables created with {gtsummary} can be integrated into R markdown documents. The {gtsummary} package was written to be a companion to the {gt} package from RStudio, and {gtsummary} tables are printed using {gt} when possible. Currently, {gt} supports HTML output, with LaTeX and RTF planned for the future.\n\npatient_characteristics &lt;-\n  trial %&gt;%\n  select(trt, age, grade, response) %&gt;%\n  tbl_summary(by = trt)  \npatient_characteristics\n\n\n\n\n\n\nCharacteristic\n\nDrug A, N = 981\n\n\nDrug B, N = 1021\n\n\n\n\nAge\n46 (37, 59)\n48 (39, 56)\n\n\n    Unknown\n7\n4\n\n\nGrade\n\n\n\n\n    I\n35 (36%)\n33 (32%)\n\n\n    II\n32 (33%)\n36 (35%)\n\n\n    III\n31 (32%)\n33 (32%)\n\n\nTumor Response\n28 (29%)\n33 (34%)\n\n\n    Unknown\n3\n4\n\n\n\n\n1 Median (IQR); n (%)\n\n\n\n\n\nWith HTML output, you can include complex tables with footnotes, indentation, and spanning table headers.\n\n# Side-by-side Regression Models\n# logistic regression model\nt1 &lt;-\n  glm(response ~ trt + grade + age, trial, family = binomial) %&gt;%\n  tbl_regression(exponentiate = TRUE)\n# time to death Cox model\nt2 &lt;-\n  coxph(Surv(ttdeath, death) ~ trt + grade + age, trial) %&gt;%\n  tbl_regression(exponentiate = TRUE)\n\n# printing merged table\ntbl_merge(\n  tbls = list(t1, t2),\n  tab_spanner = c(\"**Tumor Response**\", \"**Time to Death**\")\n)\n\n\n\n\n\n\n\nCharacteristic\nTumor Response\nTime to Death\n\n\n\nOR1\n\n\n95% CI1\n\np-value\n\nHR1\n\n\n95% CI1\n\np-value\n\n\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n\n\n    Drug A\n—\n—\n\n—\n—\n\n\n\n    Drug B\n1.13\n0.60, 2.13\n0.7\n1.30\n0.88, 1.92\n0.2\n\n\nGrade\n\n\n\n\n\n\n\n\n    I\n—\n—\n\n—\n—\n\n\n\n    II\n0.85\n0.39, 1.85\n0.7\n1.21\n0.73, 1.99\n0.5\n\n\n    III\n1.01\n0.47, 2.15\n&gt;0.9\n1.79\n1.12, 2.86\n0.014\n\n\nAge\n1.02\n1.00, 1.04\n0.10\n1.01\n0.99, 1.02\n0.3\n\n\n\n\n1 OR = Odds Ratio, CI = Confidence Interval, HR = Hazard Ratio"
  },
  {
    "objectID": "content/posts/07-visuals/stat-html.html#inline-reporting",
    "href": "content/posts/07-visuals/stat-html.html#inline-reporting",
    "title": "gtsummary + R Markdown",
    "section": "inline reporting",
    "text": "inline reporting\nAny number/statistic from a {gtsummary} table can be reported inline in a R markdown document using the inline_text() function. See example below:\n\nAmong patients who received Drug A, 31 (32%) had grade III tumors.\n\nFor detailed examples using functions from {gtsummary}, visit the {gtsummary} website."
  },
  {
    "objectID": "content/posts/08-knitr/fa-example.html",
    "href": "content/posts/08-knitr/fa-example.html",
    "title": "Font Awesome Quarto Extension",
    "section": "",
    "text": "This extension allows you to use font-awesome icons in your Quarto HTML and PDF documents. It provides an {{&lt; fa &gt;}} shortcode:\n{{&lt; fa icon-name &gt;}}\nFor example:\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; fa thumbs-up &gt;}}\n\n\n\n{{&lt; fa folder &gt;}}\n\n\n\n{{&lt; fa chess-pawn &gt;}}\n\n\n\n{{&lt; fa brands bluetooth &gt;}}"
  },
  {
    "objectID": "content/posts/08-knitr/lightbox-extension.html",
    "href": "content/posts/08-knitr/lightbox-extension.html",
    "title": "Example Lightbox Document",
    "section": "",
    "text": "Here is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "content/posts/08-knitr/lightbox-extension.html#chilmark",
    "href": "content/posts/08-knitr/lightbox-extension.html#chilmark",
    "title": "Example Lightbox Document",
    "section": "",
    "text": "Here is a simple image with a description. This also overrides the description position and places it to the left of the image.\n\n\n\nBeach in Chilmark"
  },
  {
    "objectID": "content/posts/08-knitr/lightbox-extension.html#elsewhere",
    "href": "content/posts/08-knitr/lightbox-extension.html#elsewhere",
    "title": "Example Lightbox Document",
    "section": "Elsewhere",
    "text": "Elsewhere\nThe below demonstrates placing more than one image in a gallery. Note the usage of the layout-ncol which arranges the images on the page side by date. Adding the group attribute to the markdown images places the images in a gallery grouped together based upon the group name provided.\n\n\n\n\n\nAquinnah\n\n\n\n\n\nOak Bluffs\n\n\n\n\n\n\n\nVineyard lighthouse"
  },
  {
    "objectID": "content/posts/08-knitr/lightbox-extension.html#credits",
    "href": "content/posts/08-knitr/lightbox-extension.html#credits",
    "title": "Example Lightbox Document",
    "section": "Credits",
    "text": "Credits\nThe images in this example were used under the Unsplash license, view originals below:\n\nChilmark Beach\nAquinnah\nGingerbread House\nEdgartown Light\nEdgartown Sailboat"
  },
  {
    "objectID": "content/posts/08-knitr/penguin-params.html",
    "href": "content/posts/08-knitr/penguin-params.html",
    "title": "Penguins Parametric Reports",
    "section": "",
    "text": "We have data about 344 penguins. Only 193 are classified asAdelie. The distribution of the Adelie penguins are shown below:"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html",
    "href": "content/posts/09-using-lordicons/index.html",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "",
    "text": "This is just a compilation of the example files from the Quarto website, so that I can have ready-made code to copy and paste."
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#introduction",
    "href": "content/posts/09-using-lordicons/index.html#introduction",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "",
    "text": "This is just a compilation of the example files from the Quarto website, so that I can have ready-made code to copy and paste."
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#installation",
    "href": "content/posts/09-using-lordicons/index.html#installation",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Installation",
    "text": "Installation\nType these in your Terminal:\n\nIconify: quarto install extension mcanouil/quarto-iconify\nFontAwesome: quarto install extension quarto-ext/fontawesome\nLordicons: quarto install extension jmgirard/lordicon\nAcademicons: quarto install extension schochastics/academicons\n\nThese extensions allows you to use a variety of icons in your Quarto HTML documents."
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-lordicon-shortcodes",
    "href": "content/posts/09-using-lordicons/index.html#using-lordicon-shortcodes",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Lordicon Shortcodes",
    "text": "Using Lordicon Shortcodes\nThe {{&lt; li &gt;}} shortcode renders an icon (specified by its code) after downloading it the lordicon CDN. The {{&lt; lif &gt;}} shortcode renders an icon (specified by its filepath) from a local .json file. Both shortcodes support the same arguments for customization, described below.\n\n\n\n\n\n\n\n\nPseudocode\nExample Code\nRendered\n\n\n\n\n{{&lt; li code &gt;}}\n{{&lt; li wlpxtupd &gt;}}\n\n\n\n{{&lt; lif file &gt;}}\n{{&lt; lif church.json &gt;}}\n\n\n\n\n\nTriggers\ntrigger controls the icon’s animation type. When using the loop or loop-on-hover triggers, you can also set an optional delay (in ms) between loops.\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; li wxnxiano &gt;}}\n\n\n\n{{&lt; li wxnxiano trigger=click &gt;}}\n\n\n\n{{&lt; li wxnxiano trigger=hover &gt;}}\n\n\n\n{{&lt; li wxnxiano trigger=loop &gt;}}\n\n\n\n{{&lt; li wxnxiano trigger=loop delay=1000 &gt;}}\n\n\n\n{{&lt; li wxnxiano trigger=loop-on-hover &gt;}}\n\n\n\n{{&lt; li wxnxiano trigger=loop-on-hover delay=1000 &gt;}}\n\n\n\n{{&lt; li wxnxiano trigger=morph &gt;}}\n\n\n\n{{&lt; li wxnxiano trigger=boomerang &gt;}}\n\n\n\n\n\n\nSpeed\nspeed controls how quickly the icon’s animation plays.\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; li lupuorrc trigger=loop speed=0.5 &gt;}}\n\n\n\n{{&lt; li lupuorrc trigger=loop speed=1.0 &gt;}}\n\n\n\n{{&lt; li lupuorrc trigger=loop speed=2.0 &gt;}}\n\n\n\n\n\n\nColors\ncolors controls the icon’s coloring. Outline icons typically have just a primary and secondary color, but flat and lineal icons can have many more. Each color should be given in rank:color format (where ranks are primary, secondary, tertiary, etc.) and multiple colors should be separated by commas. Colors can be given in HTML color names or hexcodes.\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; li lupuorrc &gt;}}\n\n\n\n{{&lt; li lupuorrc colors=primary:gold &gt;}}\n\n\n\n{{&lt; li lupuorrc colors=primary:gray,secondary:orange &gt;}}\n\n\n\n{{&lt; li lupuorrc colors=primary:#4030e8,secondary:#ee66aa &gt;}}\n\n\n\n\n\n\nStroke\nstroke controls how thick the lines in an icon are.\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; li lupuorrc stroke=50 &gt;}}\n\n\n\n{{&lt; li lupuorrc stroke=100 &gt;}}\n\n\n\n{{&lt; li lupuorrc stroke=150 &gt;}}\n\n\n\n\n\n\nScale\nscale controls how large or zoomed in the icon is.\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; li lupuorrc scale=25 &gt;}}\n\n\n\n{{&lt; li lupuorrc scale=50 &gt;}}\n\n\n\n{{&lt; li lupuorrc scale=100 &gt;}}\n\n\n\n\n\n\nAxis X\nx controls the horizontal position of the center of the icon.\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; li lupuorrc x=25 &gt;}}\n\n\n\n{{&lt; li lupuorrc x=50 &gt;}}\n\n\n\n{{&lt; li lupuorrc x=100 &gt;}}\n\n\n\n\n\n\nAxis Y\ny controls the vertical position of the center of the icon.\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; li lupuorrc y=25 &gt;}}\n\n\n\n{{&lt; li lupuorrc y=50 &gt;}}\n\n\n\n{{&lt; li lupuorrc y=100 &gt;}}"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-academicons-shortcodes",
    "href": "content/posts/09-using-lordicons/index.html#using-academicons-shortcodes",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Academicons Shortcodes",
    "text": "Using Academicons Shortcodes\nThis extension allows you to use academicons in your Quarto HTML documents. It provides an {{&lt; ai &gt;}} shortcode:\n\nMandatory &lt;icon-name&gt;:\n{{&lt; ai &lt;icon-name&gt; &gt;}}\nOptional &lt;size=...&gt;:\n{{&lt; ai &lt;icon-name&gt; &lt;size=...&gt; &gt;}}\n\nFor example:\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; ai arxiv &gt;}}\n\n\n\n{{&lt; ai google-scholar &gt;}}\n\n\n\n{{&lt; ai open-access &gt;}}\n\n\n\n{{&lt; ai open-access size=5x &gt;}}"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-fontawesome-icons",
    "href": "content/posts/09-using-lordicons/index.html#using-fontawesome-icons",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Fontawesome Icons",
    "text": "Using Fontawesome Icons\nThis extension allows you to use font-awesome icons in your Quarto HTML and PDF documents. It provides an {{&lt; fa &gt;}} shortcode:\n\nMandatory &lt;icon-name&gt;:\n{{&lt; fa &lt;icon-name&gt; &gt;}}\nOptional &lt;group&gt;, &lt;size=...&gt;, and &lt;title=...&gt;:\n{{&lt; fa &lt;group&gt; &lt;icon-name&gt; &lt;size=...&gt; &lt;title=...&gt; &gt;}}\n\nFor example:\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; fa thumbs-up &gt;}}\n\n\n\n{{&lt; fa folder &gt;}}\n\n\n\n{{&lt; fa chess-pawn &gt;}}\n\n\n\n{{&lt; fa brands bluetooth &gt;}}\n\n\n\n{{&lt; fa brands twitter size=2xl &gt;}} (HTML only)\n\n\n\n{{&lt; fa brands github size=5x &gt;}} (HTML only)\n\n\n\n{{&lt; fa battery-half size=Huge &gt;}}\n\n\n\n{{&lt; fa envelope title=\"An envelope\" &gt;}}"
  },
  {
    "objectID": "content/posts/09-using-lordicons/index.html#using-iconify-shortcodes",
    "href": "content/posts/09-using-lordicons/index.html#using-iconify-shortcodes",
    "title": "Using Lordicons, Fontawesome Icons,Academicons, and Iconify Icons",
    "section": "Using Iconify Shortcodes",
    "text": "Using Iconify Shortcodes\nThis extension allows you to use Iconify icons in your Quarto HTML documents. It provides an {{&lt; iconify &gt;}} shortcode:\n\nMandatory &lt;icon-name&gt;:\n{{&lt; iconify &lt;icon-name&gt; &gt;}}\nOptional &lt;set&gt; (default is fluent-emoji) &lt;size=...&gt;, &lt;width=...&gt;, &lt;height=...&gt;, &lt;flip=...&gt;, and &lt;rotate=...&gt;:\n{{&lt; iconify &lt;set&gt; &lt;icon-name&gt; &lt;size=...&gt; &lt;width=...&gt; &lt;height=...&gt; &lt;flip=...&gt; &lt;rotate=...&gt; &gt;}}\nIf &lt;size=...&gt; is defined, &lt;width=...&gt; and &lt;height=...&gt; are not used.\nSee https://docs.iconify.design/iconify-icon/ for more details.\n\nFor example:\n\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n\n{{&lt; iconify exploding-head &gt;}}\n\n\n\n{{&lt; iconify exploding-head size=2xl &gt;}}\n\n\n\n{{&lt; iconify exploding-head size=5x rotate=180deg &gt;}}\n\n\n\n{{&lt; iconify exploding-head size=Huge &gt;}}\n\n\n\n{{&lt; iconify fluent-emoji-high-contrast 1st-place-medal &gt;}}\n\n\n\n{{&lt; iconify twemoji 1st-place-medal &gt;}}\n\n\n\n{{&lt; iconify line-md loading-alt-loop &gt;}}\n\n\n\n{{&lt; iconify fa6-brands apple width=50px height=10px rotate=90deg flip=vertical &gt;}}"
  },
  {
    "objectID": "content/posts/10-using-nutshell/nutshell.html",
    "href": "content/posts/10-using-nutshell/nutshell.html",
    "title": "Nutshell: Expandable Explanations",
    "section": "",
    "text": "Nutshell is a tool to make “expandable explanations”, like this! This lets your readers learn only the details they need, just-in-time, always-in-context.\nUnlike links, Nutshell lets you include only the snippet you need, not the whole page. Plus, instead of being lost in a jungle of new tabs, your reader stays on one page, keeping their flow of reading. Even if you interrupt a sentence, Nutshell recaps the sentence afterwards, so your reader never loses context.\nYou can find more information on the nutshell webpage and here is a live demo !"
  },
  {
    "objectID": "content/posts/10-using-nutshell/nutshell.html#what-is-nutshell",
    "href": "content/posts/10-using-nutshell/nutshell.html#what-is-nutshell",
    "title": "Nutshell: Expandable Explanations",
    "section": "",
    "text": "Nutshell is a tool to make “expandable explanations”, like this! This lets your readers learn only the details they need, just-in-time, always-in-context.\nUnlike links, Nutshell lets you include only the snippet you need, not the whole page. Plus, instead of being lost in a jungle of new tabs, your reader stays on one page, keeping their flow of reading. Even if you interrupt a sentence, Nutshell recaps the sentence afterwards, so your reader never loses context.\nYou can find more information on the nutshell webpage and here is a live demo !"
  },
  {
    "objectID": "content/posts/10-using-nutshell/nutshell.html#test",
    "href": "content/posts/10-using-nutshell/nutshell.html#test",
    "title": "Nutshell: Expandable Explanations",
    "section": "Test",
    "text": "Test\nThis is a senseless paragraph"
  },
  {
    "objectID": "content/posts/10-using-nutshell/nutshell.html#testing-links",
    "href": "content/posts/10-using-nutshell/nutshell.html#testing-links",
    "title": "Nutshell: Expandable Explanations",
    "section": "Testing Links",
    "text": "Testing Links\n\n:link to senseless paragraph\n:link to wikipedia article\n:link to invisible sections"
  },
  {
    "objectID": "content/posts/10-using-nutshell/nutshell.html#x-invisible",
    "href": "content/posts/10-using-nutshell/nutshell.html#x-invisible",
    "title": "Nutshell: Expandable Explanations",
    "section": ":x invisible",
    "text": ":x invisible\nUse ## :x header to include an invisible section that can be linked to via nutshell"
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html",
    "href": "content/posts/12-tufte-style-article/index.html",
    "title": "A Tufte Handout Example",
    "section": "",
    "text": "The Tufte handout style is a style that Edward Tufte uses in his books and handouts. Tufte’s style is known for its extensive use of sidenotes, tight integration of graphics with text, and well-set typography. This style has been implemented in LaTeX and HTML/CSS1, respectively. We have ported both implementations into the tufte package. If you want LaTeX/PDF output, you may use the tufte_handout format for handouts, and tufte_book for books. For HTML output, use tufte_html. These formats can be either specified in the YAML metadata at the beginning of an R Markdown document (see an example below), or passed to the rmarkdown::render() function. See Allaire et al. (2023) for more information about rmarkdown.1 See Github repositories tufte-latex and tufte-css\n---\ntitle: \"An Example Using the Tufte Style\"\nauthor: \"John Smith\"\noutput:\n  tufte::tufte_handout: default\n  tufte::tufte_html: default\n---\nThere are two goals of this package:\n\nTo produce both PDF and HTML output with similar styles from the same R Markdown document;\nTo provide simple syntax to write elements of the Tufte style such as side notes and margin figures, e.g. when you want a margin figure, all you need to do is the chunk option fig.margin = TRUE, and we will take care of the details for you, so you never need to think about \\begin{marginfigure} \\end{marginfigure} or &lt;span class=\"marginfigure\"&gt; &lt;/span&gt;; the LaTeX and HTML code under the hood may be complicated, but you never need to learn or write such code.\n\nIf you have any feature requests or find bugs in tufte, please do not hesitate to file them to https://github.com/rstudio/tufte/issues. For general questions, you may ask them on StackOverflow: https://stackoverflow.com/tags/rmarkdown."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#margin-figures",
    "href": "content/posts/12-tufte-style-article/index.html#margin-figures",
    "title": "A Tufte Handout Example",
    "section": "Margin Figures",
    "text": "Margin Figures\nImages and graphics play an integral role in Tufte’s work. To place figures in the margin you can use the knitr chunk option fig.margin = TRUE. For example:\n\nlibrary(ggplot2)\nmtcars2 &lt;- mtcars\nmtcars2$am &lt;- factor(\n  mtcars$am, labels = c('automatic', 'manual')\n)\nggplot(mtcars2, aes(hp, mpg, color = am)) +\n  geom_point() + geom_smooth() +\n  theme(legend.position = 'bottom')\n\n\n\n\nFigure 1: MPG vs horsepower, colored by transmission.\n\n\nNote the use of the fig.cap chunk option to provide a figure caption. You can adjust the proportions of figures using the fig.width and fig.height chunk options. These are specified in inches, and will be automatically scaled down to fit within the handout margin."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#arbitrary-margin-content",
    "href": "content/posts/12-tufte-style-article/index.html#arbitrary-margin-content",
    "title": "A Tufte Handout Example",
    "section": "Arbitrary Margin Content",
    "text": "Arbitrary Margin Content\nIn fact, you can include anything in the margin using the knitr engine named marginfigure. Unlike R code chunks ```{r}, you write a chunk starting with ```{marginfigure} instead, then put the content in the chunk. See an example on the right about the first fundamental theorem of calculus.\n\nWe know from _the first fundamental theorem of calculus_ that for $x$ in $[a, b]$:\n$$\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).$$\n\nFor the sake of portability between LaTeX and HTML, you should keep the margin content as simple as possible (syntax-wise) in the marginefigure blocks. You may use simple Markdown syntax like **bold** and _italic_ text, but please refrain from using footnotes, citations, or block-level elements (e.g. blockquotes and lists) there.\nNote: if you set echo = FALSE in your global chunk options, you will have to add echo = TRUE to the chunk to display a margin figure, for example ```{marginfigure, echo = TRUE}."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#full-width-figures",
    "href": "content/posts/12-tufte-style-article/index.html#full-width-figures",
    "title": "A Tufte Handout Example",
    "section": "Full Width Figures",
    "text": "Full Width Figures\nYou can arrange for figures to span across the entire page by using the chunk option fig.fullwidth = TRUE.\n\nggplot(diamonds, aes(carat, price)) + geom_smooth() +\n  facet_grid(~ cut)\n\n\n\nFigure 2: A full width figure.\n\n\n\nOther chunk options related to figures can still be used, such as fig.width, fig.cap, out.width, and so on. For full width figures, usually fig.width is large and fig.height is small. In the above example, the plot size is \\(10 \\times 2\\)."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#arbitrary-full-width-content",
    "href": "content/posts/12-tufte-style-article/index.html#arbitrary-full-width-content",
    "title": "A Tufte Handout Example",
    "section": "Arbitrary Full Width Content",
    "text": "Arbitrary Full Width Content\nAny content can span to the full width of the page. This feature requires Pandoc 2.0 or above. All you need is to put your content in a fenced Div with the class fullwidth, e.g.,\n::: {.fullwidth}\nAny _full width_ content here.\n:::\nBelow is an example:\n\nR is free software and comes with ABSOLUTELY NO WARRANTY. You are welcome to redistribute it under the terms of the GNU General Public License versions 2 or 3. For more information about these matters see https://www.gnu.org/licenses/."
  },
  {
    "objectID": "content/posts/12-tufte-style-article/index.html#main-column-figures",
    "href": "content/posts/12-tufte-style-article/index.html#main-column-figures",
    "title": "A Tufte Handout Example",
    "section": "Main Column Figures",
    "text": "Main Column Figures\nBesides margin and full width figures, you can of course also include figures constrained to the main column. This is the default type of figures in the LaTeX/HTML output.\n\nggplot(diamonds, aes(cut, price)) + geom_boxplot()\n\n\n\nFigure 3: A figure in the main column."
  },
  {
    "objectID": "content/posts/13-rapp-sample-document/index.html",
    "href": "content/posts/13-rapp-sample-document/index.html",
    "title": "Sample Blog Post Template",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nCodepreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nCodeglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "content/posts/13-rapp-sample-document/index.html#merriweather",
    "href": "content/posts/13-rapp-sample-document/index.html#merriweather",
    "title": "Sample Blog Post Template",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nCodepreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nCodeglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "content/posts/13-rapp-sample-document/index.html#columns",
    "href": "content/posts/13-rapp-sample-document/index.html#columns",
    "title": "Sample Blog Post Template",
    "section": "",
    "text": "geom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "content/posts/13-rapp-sample-document/index.html#margin-figure-and-captions",
    "href": "content/posts/13-rapp-sample-document/index.html#margin-figure-and-captions",
    "title": "Sample Blog Post Template",
    "section": "",
    "text": "ggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "content/posts/15-js/Using_sketch.html",
    "href": "content/posts/15-js/Using_sketch.html",
    "title": "Using sketch",
    "section": "",
    "text": "knitr::opts_chunk$set(echo = TRUE)\nknitr::knit_engines$set(sketch = sketch::eng_sketch)\nlibrary(tidyverse)\nlibrary(sketch)\n#library(p5)"
  },
  {
    "objectID": "content/posts/15-js/Using_sketch.html#introduction",
    "href": "content/posts/15-js/Using_sketch.html#introduction",
    "title": "Using sketch",
    "section": "Introduction",
    "text": "Introduction\nTrying to replicate this: https://kcf-jackson.github.io/sketch-website/docs/\n\nprint(\"'sketch' has its own knitr engine from version 1.0.5!\")\n\n\n\n\nsketch::insert_sketch(\n  file = \"./Using_sketch/main.R\", id = \"sketch_1\",\n  width = 800, height = 600\n)\n\n\n\n\n\nsketch::insert_sketch(\n  file = \"./Using_sketch/dots.R\", id = \"sketch_2\", deparsers = default_2_deparsers(),\n    width = 800, height = 600\n  )\n\n\n\n\n\nsketch::insert_sketch(\n  file = \"./Using_sketch/animated_dots.R\", id = \"sketch_2\", deparsers = default_2_deparsers(),\n    width =800, height = 600\n  )"
  },
  {
    "objectID": "content/posts/listing.html",
    "href": "content/posts/listing.html",
    "title": "The Foundation Series",
    "section": "",
    "text": "A Tufte Handout Example\n\n\n\n\n\n\nJJ Allaire and Yihui Xie\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nBootswatch Themed QMD\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nBoston Terrier\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nCallout Boxes\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nCallouts in PDF\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nExample Lightbox Document\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nFont Awesome Quarto Extension\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nHousing Prices\n\n\n\n\n\n\nArvind Venkatadri\n\n\nJan 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nInline Code\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nNutshell: Expandable Explanations\n\n\n\n\n\n\nDavid Schoch\n\n\n\n\n\n\n\n\n\n\n\n\nOld Markdown - reactable example\n\n\n\n\n\n\nTom Mock\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nOverview of using gtsummary\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nPenguin Report Presentation\n\n\n\n\n\n\nTom Mock\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nPenguins Distilled\n\n\nA great new article on Penguins\n\n\n\nTom Mock\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nPenguins Parametric Reports\n\n\n\n\n\n\n\n\n\nJul 13, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nPlot Layout\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nPlots\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nPresentation with Columns?\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nSample Blog Post Template\n\n\nDescription: This is a test post. In this post, I try out different functionalities\n\n\n\nArvind Venkatadri\n\n\nJun 1, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Lordicons, Fontawesome Icons,Academicons, and Iconify Icons\n\n\n\n\n\n\nArvind Venkatadri\n\n\nJan 9, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nUsing sketch\n\n\n\n\n\n\nArvind Venkatadri\n\n\nJan 9, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nVisual Editor for Quarto\n\n\n\n\n\n\nThomas Mock\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\ngtsummary + R Markdown\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "",
    "text": "The movie Lawrence of Arabia is justly famous for its terrific story, great cast of characters and actors, and some truly legendary scenes. Here I take one of the iconic scenes from the movie, the attack on the port town of Aqaba and interpret the entire event and the build up to it from a TRIZ viewpoint.\nI will give a short description of the movie plot first.\nI then discuss the source of the problem, how it occurred to Lawrence, and how he went about solving it in this dramatic fashion. I give an analysis of the Problem from a (classical) TRIZ perspective, including the formulation of the Contradiction, Identification of Causes, the statement of the Ideal Final Result, and finally using the TRIZ Contradiction Matrix to find Inventive Principles that inform Lawrence’s solution. I also dwell in passing upon aspects of how this story can be interpreted as a manifestation of Mihaly Csikszentmihalyi’s Creativity Systems Model.\nThis piece stems from my teaching a course on Creative Thinking and Problem Solving based on TRIZ, titled Play and Invent, over the past 8 years or more at the Srishti Manipal Institute of Art, Design, and Technology, Bangalore, India. (https://srishtimanipalinstitute.in)."
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#introduction",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#introduction",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "",
    "text": "The movie Lawrence of Arabia is justly famous for its terrific story, great cast of characters and actors, and some truly legendary scenes. Here I take one of the iconic scenes from the movie, the attack on the port town of Aqaba and interpret the entire event and the build up to it from a TRIZ viewpoint.\nI will give a short description of the movie plot first.\nI then discuss the source of the problem, how it occurred to Lawrence, and how he went about solving it in this dramatic fashion. I give an analysis of the Problem from a (classical) TRIZ perspective, including the formulation of the Contradiction, Identification of Causes, the statement of the Ideal Final Result, and finally using the TRIZ Contradiction Matrix to find Inventive Principles that inform Lawrence’s solution. I also dwell in passing upon aspects of how this story can be interpreted as a manifestation of Mihaly Csikszentmihalyi’s Creativity Systems Model.\nThis piece stems from my teaching a course on Creative Thinking and Problem Solving based on TRIZ, titled Play and Invent, over the past 8 years or more at the Srishti Manipal Institute of Art, Design, and Technology, Bangalore, India. (https://srishtimanipalinstitute.in)."
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#lawrence-of-arabia-a-summary",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#lawrence-of-arabia-a-summary",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "Lawrence of Arabia: a Summary",
    "text": "Lawrence of Arabia: a Summary\nThe movie is the story of T.E. Lawrence, the English officer who successfully united and led the diverse, often warring, Arab tribes during World War I in order to fight the Turks. The stellar cast includes Peter O’Toole as Lawrence, Omar Sharif as Ali, Alec Guinness as Prince Feisal, Anthony Quinn as Auda Abu Tayi, Claude Raines as Dryden, and Anthony Quayle as Col. Brighton. The director was David Lean. The editing of the film by Anne Coates is also much admired. (https://womenfilmeditors.princeton.edu/tag/lawrence-of-arabia/)\nLawrence is a complex, talented, and yet simple man, who is extremely well read (Greek philosophy and the Koran, for example) and is also an expert in Arab affairs and has considerable skill at map-making. Due to his being interpreted as insolent and insubordinate , he is given a lowly job at the HQ in Cairo. Dryden manages to convince the General that Lawrence should be allowed to go into Arabia and to find out what kind of long-term plans Prince Feisal is making for Arabia.\nHere is the map of the events that are unfolding in the movie at this time.11 I was not able to ascertain who is the author of this map. I would be happy to write to obtain permission and use it with acknowledgement.\n\n\n\n\n\nLawrence encounters Ali in dramatic fashion at the Masturah Well, on the way to meet Feisal, and his Arab guide is shot by Ali, a direct experience for Lawrence of inter-tribe rivalry in Arabia. (Ali is a Harith, and Tafas the guide was a Hashemi). Lawrence peremptorily rejects an offer of help from Ali, and finds his way alone to Wadi Safra, where Feisal is camped. He is met by Col. Brighton as he nears the camp. Both enter camp just in time to witness another bombing raid by Turkish airplanes.\nLater in the meeting with Feisal, Brighton tries to convince Feisal to retreat to Yenbo (Yanbu) and be out of range for the Turks, and where the British Army would supply them, train them to fight against the Turks. Feisal reluctantly accepts this plan, though he would rather the British navy take the port city of Aqaba and supply his army from there. Brighton simply scoffs at that idea, because the Turkish have 12 inch guns at Aqaba and the British have other things to do.\nLawrence has already intrigued Feisal by completing a verse from the Koran as it was being read by Selim, the cleric. At the end of the meeting, Feisal confronts Lawrence alone, as to his intentions in Arabia and finds out, to his astonishment, that Lawrence has his own interpretation of what his tasks and loyalties were, and these did not necessarily coincide with those of Brighton. In fact, Lawrence is not in favour of the Arab Army’s retreat to Yenbo, as it would become one small part of the British Army. As a parting remark, Feisal says to Lawrence that the Arabs need what no man can provide, a miracle.\nHere is the video of that terrific tent meeting scene."
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#lawrences-problem",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#lawrences-problem",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "Lawrence’s Problem",
    "text": "Lawrence’s Problem\nLawrence does not sleep that night. Provoked by Feisal’s parting remark, he sits up all night on a sand dune close to the camp, thinking about how Aqaba could be taken, since he wants the Arabs to continue fighting from where they were, and even advance if possible with British help. His detailed understanding of the Arabian geography, his knowledge of the Aqaba port and its fortifications, all come to the fore here. Aqaba is a port at the head end of a narrow gulf to the east of the Sinai Peninsula.\nIn the early morning, seemingly in a eureka moment, he decides that attacking Aqaba from the landward side would be a good solution, since the guns there could not be turned around.\nHere is Lawrence trying to convince Ali about this plan:\n\n\n\n\nLawrence does not inform Brighton of his plans, nor even Feisal. It is Ali who informs Feisal of this enterprise. Clearly, Lawrence does not consider Brighton as a member of his Field (as defined by Csikszentmihalyi in his Creativity Systems Model), but Feisal is a Field Member to Ali.\nApropos, the act of sitting up all night can be seen as the Incubation and Elaboration stages of the 5 Stages of Creativity from Csikszentmihalyi (Preparation, Incubation, Insight, Elaboration, Execution)."
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#a-triz-analysis-of-the-plan-to-take-aqaba",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#a-triz-analysis-of-the-plan-to-take-aqaba",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "A TRIZ Analysis of the Plan to Take Aqaba",
    "text": "A TRIZ Analysis of the Plan to Take Aqaba\nFor a TRIZ workflow, we proceed as follows:\nFirst, using the method described in Open Source TRIZ, (https://www.youtube.com/watch?v=cah0OhCH55k), we identify knobs or parameters within the situation and see how turning these could lead to identifying a Cause for a Problem in the form of a Contradiction.\nHere below is a quick Ishikawa Diagram for this purpose:\n\n\n\n\n\nTurning the knobs/parameters in the Ishikawa Diagram, it seems that if the British allies attack Aqaba, they may win, BUT they may lose a few warships. If the Arabs want to attack, they are too small in number and have no warships, and hence their chances of success are very slim. Herein lies the Contradiction, which we can now specify as an Administrative Contradiction(AC) in plain English:\n\n\nAC: The Arabs need the British to supply them via Aqaba port. Aqaba has huge guns and they will sink the British ships in that narrow gulf if they try a naval attack. So the Arabs need to take Aqaba without losing British ships.\n\n\nNext, based on this Contradiction and the inspection of the Ishikawa Diagram above, we are now ready to define the Ideal Final Result:\n\n\nIFR: The Arabs need to attack and take Aqaba port, and the big guns there should have no effect.\n\n\nNote how the tone of this IFR is like a “eat my cake and have it too”. Very typical for IFRs, this impossible-sounding tone!\nLet us take the AC and convert it into a Technical Contradiction(TC). We will look at the 48 TRIZ Parameters in the TRIZ Contradiction Matrix (PDF) and see which Parameter we want to improve, while not worsening another. Here is what we can attempt, stating the Contradiction both ways2:2 The Contradiction Matrix is not quite symmetric, so stating the Contradiction both ways allows us to access a slightly larger set of Inventive Principles from two cells of the Matrix.\n\n- TC 1: Increase Duration of Action of a Moving Object (12) and not worsen Stability of Objects Composition (21)- TC 2: Increase Stability of Objects Composition (21) and not worsen Duration of Action of a Moving Object (12)\n\nHere we choose these Parameters based on our IFR that the guns at Aqaba should not affect the Arab attack at all. The Parameters chosen from the TRIZ Matrix can be thought of as metaphors for the knobs that lie within our AC. Going from the AC to the TC is an act of making metaphors. We could easily have chosen the Parameter Power(18) or Illumination Intensity(23) to “metaphorize” the effectiveness of the attack, if our imaginations run in that direction. There is here a considerable flexibility and possibility for imaginative interpretations of the AC, but using the language of TRIZ.\nWe could even stretch to making a Physical Contradiction(PC)3 happen:3 Arriving at Physical Contradictions is not always easy! If we can, then there are a very crisp set of TRIZ Separation Principles that we can apply to solve the Problem.\n\n\nPC: The Ships must be near the guns but not be near enough to be shot at. (They must be near and not near at the same time)"
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#solving-the-technical-contradiction",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#solving-the-technical-contradiction",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "Solving the Technical Contradiction",
    "text": "Solving the Technical Contradiction\nLet us take the both the TC-s into the Contradiction Matrix and arrive at the list of TRIZ Inventive Principles. Here is the Matrix solution for TC-1 in the figure below:\n\n\n\n\n\nThe Inventive Principles are:(TC1)\n\nIP 13 (The Other Way Around)\n\nIP 35 (Parameter Change)\n\nIP 24 (Intermediary)\n\nIP 40 (Composite Materials)\n\nand (TC2)\n\nIP 10 (Preliminary Action)\n\nIP 5 (Merging)\n\nIP 35 (Parameter Change)\n\nIP 13 (The Other Way Around)\n\nHow are we to apply these Inventive Principles? Here again is an imaginative exercise as we map these Generalized Solutions back into the Problem at hand:\n\nIP 13: The Other Way Around. How? Not attack by sea? Wait…ATTACK BY LAND!! Change the DIRECTION of Attack! So attack from the other side, the land side!! (We could retrospectively add this parameter to the Ishikawa Diagram too). Will this work? Yes, the guns can’t turn around !!\nIP 35: Parameter Change. But “ships” on land?? Note, the desert is an ocean into which no oar is dipped. Sand and Water are both Resources in the problem, as we have duly noted in the Ishikawa Diagram. So a different kind of ocean and therefore a different kind of ship? At a stretch, we can say the warships of the British Navy are being substituted with the use of ….Camels!! And, metaphorically speaking, it is still an attack using ships….The Ships of the Desert!! Parameter Change.\nIP 10: Prior Action. How? Lawrence and Ali are far from Aqaba and cannot do anything “in advance”. What could this be?\nIP 5: Merging. However, on the way to Aqaba, Lawrence and Ali must recruit the Howeitat tribe “in advance” of their attack !! As Lawrence tells Ali, If 50 men came out of the Nefud Desert, they might be 50 men other men would join. This is in accordance with what IP 10 is suggesting, to get other tribes to join in, in advance of the attack.\nIP 40: Composite Materials. What object within the situation can we reconstitute with smaller pieces of different types? The British Army…so an army made up of pieces? Yes! The Tribes need to unite into one composite army.\nAnd, instead of large warships, the Arabs switch to a composite force with camels…\n\nSo IP 13 works nicely now, along with IP 35 and IP 40, to give us a camel-borne attack from the landward side. IP 10 also teams up with IP 40 and IP 5 to give the idea of tribe unification.\nAnd so Lawrence and Ali, with the help of Auda Abu Tayi, attack Aqaba port from the landward side by crossing the Nefud desert on camels, and take it! And we have justified their decision using TRIZ !!\nHere is the final solution in action !!\n\n\n\n\n I hope that was as much fun to read as it was for me to write it up !!"
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#points-to-ponder",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#points-to-ponder",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "Points to Ponder",
    "text": "Points to Ponder\n\nDo we each of us need a Dryden to vouch for us and help us get access to the Field?\nDoes TRIZ work in both mundane and industrial contexts? (Yes of course!)\nCan we just take the 40 Inventive Principles directly and throw them at every Problem, without necessarily going through the process of creating Contradictions and IFR? Hipple’s book has a remark in this direction."
  },
  {
    "objectID": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#references",
    "href": "content/projects/2022-12-20-TRIZ-Lawrence-of-Arabia/index.en.html#references",
    "title": "A TRIZ Analysis of Lawrence of Arabia",
    "section": "References",
    "text": "References\n\nLawrence of Arabia at the Internet Movie Data Base https://www.imdb.com/title/tt0056172/\n\nMihaly Csikszentmihalyi, Creativity, Flow, and the Psychology of Discovery and Invention. Harper Perennial; Reprint edition (August 6, 2013)\nJack Hipple, The Ideal Result and How to Achieve It. Springer; 2012th edition (June 26, 2012)\nValery Souchkov, Defining Contradictions. http://www.xtriz.com/Training/TRIZ_DefineContradiction_Tutorial.pdf"
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "",
    "text": "Here we go with another of my TRIZ Chronicles. The first edition analysing the famous movie Lawrence of Arabia is here.\nThe recent series of ads by Spotify have been very well received, by the ad industry as well. There have been several of these ads, each with a solid little story and a great punch line. There is one popular one that I have selected here, featuring a Mother shopping for veggies, while her son watches (and “listens”) to her bargaining with the shopkeeper. Here I take just that highly effective ad and interpret it from a TRIZ viewpoint.\nThis piece stems from my teaching a course on Creative Thinking and Problem Solving based on TRIZ, titled Play and Invent, over the past 8 years or more at the Srishti Manipal Institute of Art, Design, and Technology, Bangalore, India. (https://srishtimanipalinstitute.in)."
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#introduction",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#introduction",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "",
    "text": "Here we go with another of my TRIZ Chronicles. The first edition analysing the famous movie Lawrence of Arabia is here.\nThe recent series of ads by Spotify have been very well received, by the ad industry as well. There have been several of these ads, each with a solid little story and a great punch line. There is one popular one that I have selected here, featuring a Mother shopping for veggies, while her son watches (and “listens”) to her bargaining with the shopkeeper. Here I take just that highly effective ad and interpret it from a TRIZ viewpoint.\nThis piece stems from my teaching a course on Creative Thinking and Problem Solving based on TRIZ, titled Play and Invent, over the past 8 years or more at the Srishti Manipal Institute of Art, Design, and Technology, Bangalore, India. (https://srishtimanipalinstitute.in)."
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#the-famous-spotify-ad",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#the-famous-spotify-ad",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "The Famous Spotify Ad",
    "text": "The Famous Spotify Ad\nLet us watch the Spotify ad first, before analyzing it!"
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#the-young-mans-problem",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#the-young-mans-problem",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "The Young Man’s Problem",
    "text": "The Young Man’s Problem\nIn order to make a story out of this, I want make a Protagonist out the young man in the ad. It is he who has the problem and he who is going to apply TRIZ to solve it. I discuss the source of his Problem and give an analysis of the Problem from a (classical) TRIZ perspective, including the formulation of the Contradiction, Identification of Causes, the statement of the Ideal Final Result, and finally using the TRIZ Contradiction Matrix to find Inventive Principles, that lead to the solution, which of course, is meant to unerringly include Spotify !\nFirst a philosophical digression:—\nSeveral authors have taken a Game View of life. James P Carse’s famous book titled Finite and Infinite Games speaks of Play, Types of Games, Rules, Winning and our own aims in the Game itself. A similar articulation is, in my opinion, that of Mihaly Csikszentlmihalyi in his concept of Flow, shown here below:\n\n\nFrom Sketchplanations\n\nWhen the Game presents very little Challenge, we are bored. When the Game demands extreme skills the challenge is too much for us and we experience anxiety. When the Challenge presented is just barely matched by our Skill, we are in the zone of Flow, or what I call Play.\nA good metaphoric image for this experience is as follows:— that we live in a space where the Floor of Boredom is always rising and would crush us against our Ceiling of Anxiety. One Way to deal with this is to develop more Skills and push the Ceiling away, effectively moving into the zone of Flow. Another Way of looking at this is what Carse suggests: When Play is no longer possible, change the Game.\nSo what does all this have to do with getting veggies?\nThe ad is, in my opinion, all about Boredom, and how to avoid it. And not offend anybody. The Young Man (hereinafter, “YM”) simply has to accompany his Mom, and be there while she gets the veggies. I will exaggerate his irritation and his boredom at the risk of offending young people likely to read this, and say that he would rather not be there but he does not want to hurt Mom.\nWe are now ready for the TRIZ based Analysis of this Problem!"
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#a-triz-analysis-of-a-visit-to-the-subzi-mandi",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#a-triz-analysis-of-a-visit-to-the-subzi-mandi",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "A TRIZ Analysis of a Visit to the Subzi Mandi",
    "text": "A TRIZ Analysis of a Visit to the Subzi Mandi\nFor a TRIZ workflow, we proceed as before:\nFirst, using the method described in Open Source TRIZ, we identify knobs or parameters within the situation and see how turning these could lead to identifying a Cause for a Problem in the form of a Contradiction.\nHere below is a quick Ishikawa Diagram to help us identify the Parameters of this Problem:\n\n\n\n\n\n\n\n\nTurning the knobs/parameters in the Ishikawa Diagram, it seems that if the YM goes to the market with Mom, he would most likely get bored, but would please Mom. If he doesn’t go, then he chills at home, but Mom is going to justifiably furious. Herein lies the Contradiction, which we can now specify as an Administrative Contradiction(AC) in plain English:\n\n\nAC: The YM wants to chill at home but Mom wants him to take her veggie shopping. He has to put up with the Waste of Time, and being bored, and Stress at being away from friends.\n\n\nNext, based on this Contradiction and the inspection of the Ishikawa Diagram above, we are now ready to define a TRIZ Ideal Final Result:\n\n\nIFR: The YM must go to the Market and not be bored.\n\n\nNote again the impossible sounding way of expressing the IFR! One needs practice, like the Queen in Alice in Wonderland, who could think of Six Impossible Things before Breakfast ! Also note there could be other ways of specifying the IFR. See below, section Alternative Ideas for IFR.\nLet us take the AC and convert it into a Technical Contradiction(TC), keeping this IFR in mind. We will look at the 48 TRIZ Parameters in the TRIZ Contradiction Matrix (PDF) and see which Parameter we want to improve, while not worsening another. Here is what we can obtain. We will analyze each Contradiction both ways1:1 The Contradiction Matrix is not quite symmetric, so stating the Contradiction both ways allows us to access a slightly larger set of Inventive Principles from two cells of the Matrix.\n\n- TC 1: Improve Loss of Time (26) and not worsen Effect of External Harmful Factors (30)\n- TC 2: Improve Increase Productivity (44) and not worsen Stress (19)\n\nHere we choose these Parameters based on our IFR that while going to the Market may be unavoidable, Boredom need not ensue. Parameters chosen from the TRIZ Matrix can be thought of as metaphors for the knobs that lie within our AC. Going from the AC to the TC is an act of making metaphors. We could easily have chosen the Parameter Noise(29) as the “metaphoric thing” to avoid, but the current IFR doesn’t quite support that. There is here a considerable flexibility and possibility for imaginative interpretations of the AC, but using the language of TRIZ.\nWe could also formulate a Physical Contradiction(PC)2:2 Arriving at Physical Contradictions is not always easy! If we can, then there are a very crisp set of TRIZ Separation Principles that we can apply to solve the Problem.\n\n\nPC: The YM must be in the market and not be in the market at the same time.\n\n\nwhich is aimed squarely at one of the Assumptions in the Problem, that the YM simply has to go. Again, if the IFR is formulated differently we could obtain a very different set of AC and PC. See below, section Alternative Ideas for IFR.\nIn a future post, we will deal with using the PC and the TRIZ Separation Principles to solve Problems."
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#solving-the-technical-contradiction",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#solving-the-technical-contradiction",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "Solving the Technical Contradiction",
    "text": "Solving the Technical Contradiction\nLet us take the both the TC-s into the Contradiction Matrix and arrive at the list of TRIZ Inventive Principles. Here is the Matrix solution for TC-1 in the figure below:\n\n\n\n\n\n\n\n\n\nThe two squares for the TC1 have been circled in red, solving TC-1.\nThe Inventive Principles are:(TC1, TC2, both ways)\n\n1(Segmentation)\n35(Parameter Change)\n21(Skipping)\n18(Mechanical Vibration) (!!)\n2(Taking Out/Separation)\n10(Prior Action)\n\n36(Phase Transitions)\nand with TC2:\n\n3(Local Quality)\n14(Spheroidality/Curvature)\n9(Preliminary Anti-Action)\n37(Thermal Expansion)\n40(Composite Materials)\n25(Self Service)\n24(Intermediary)\n\nThat is a considerable list for us to try to use!! Let us apply some these Inventive Principles! Viewing these Inventive Principles as we Generalized Solutions we try to map these back into the Problem at hand:\n\n\n35(Parameter Change): Which Parameter to change? Location? No. Sound? Change the “Bargaining Talk” into what? Sweet Musical Lyrics!!🎵🤣\n\n18(Mechanical Vibration) : What, make noise of your own? Yes! Play Music !!🔉 🤣\n\n14(Spheroidality): Wear “spherical” headphones!!🎧! Create a “sound sphere”! This is a long shot!!\n\n3(Local Quality): also indicates the creation of a “local” cocoon around the YM, but needs to be combined with 18(Mechanical Vibration) to truly arrive at the musical solution!\n\nOne could make decent interpretations of 2(Taking Out/Separation), and 24(Intermediary), but we are already there! The rest are perhaps (at least to me!) not very evocative, unless 37(Thermal Expansion) means “throw a temper tantrum at Mom”? Never! So there you have it! The Cinderella song played on Spotify becomes not just a noise canceller but actually seems to substitute the very conversation between Mom and the vendor. And the YM has successfully attained Flow ! And the IFR too, since with the music in his head, he is effectively “in the marketplace and not in the marketplace at the same time!\nAnd I attained Flow in writing this!!"
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#alternative-ideas-for-ifr",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#alternative-ideas-for-ifr",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "Alternative Ideas for IFR",
    "text": "Alternative Ideas for IFR\nWe note in passing that there is more than one way of formulating the Ideal Final Result. Here are two more examples:\n\n\nIFR2: The veggies should arrive without (the YM) going to the Market\nIFR3: Food should be prepared without having to go buy veggies.\n\n\nClearly these are at least as good as the one we have chosen, sounding nicely “impossible” in their own right! The point is that in the analysis of the Problem, we do need to ask Who has the Problem, as we did, and the IFR needs to stem from there. These alternative IFRs could well be the Voice of (another) Customer.\nIf there is any interesting situation that could be analyzed with TRIZ, please send me a DM! Thanks !"
  },
  {
    "objectID": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#references",
    "href": "content/projects/2023-01-09-TRIZ-Spotify/index.en.html#references",
    "title": "The TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad",
    "section": "References",
    "text": "References\n\nJames P Carse, Finite and Infinite Games, Free Press, 1986. ISBN: 0-02-905980-1\nMihaly Csikszentmihalyi, Creativity, Flow, and the Psychology of Discovery and Invention. Harper Perennial; Reprint edition (August 6, 2013)\nJack Hipple, The Ideal Result and How to Achieve It. Springer; 2012th edition (June 26, 2012)\nValery Souchkov, Defining Contradictions. http://www.xtriz.com/Training/TRIZ_DefineContradiction_Tutorial.pdf"
  },
  {
    "objectID": "content/projects/2023-11-03-Owind/index.html",
    "href": "content/projects/2023-11-03-Owind/index.html",
    "title": "The TRIZ Chronicles: TRIZ Analysis of the O-Wind Turbine",
    "section": "",
    "text": "Here we go with another of my TRIZ Chronicles ! The earlier editions are here: Lawrence of Arabia, Spotify, and the Great Bubble Barrier.\nThis is another piece stems from my teaching a course on Creative Thinking and Problem Solving based on TRIZ, titled Play and Invent, over the past 8 years or more at the Srishti Manipal Institute of Art, Design, and Technology and now at DSU School of Commerce & Management Studies, both in Bangalore, INDIA."
  },
  {
    "objectID": "content/projects/2023-11-03-Owind/index.html#a-triz-analysis-of-the-dyson-o-wind-generator",
    "href": "content/projects/2023-11-03-Owind/index.html#a-triz-analysis-of-the-dyson-o-wind-generator",
    "title": "The TRIZ Chronicles: TRIZ Analysis of the O-Wind Turbine",
    "section": "A TRIZ Analysis of the Dyson O-Wind Generator",
    "text": "A TRIZ Analysis of the Dyson O-Wind Generator\nFor a TRIZ workflow, we proceed as before:\n\nFirst, using the method described in Open Source TRIZ, we identify knobs or parameters within the situation\nWe see how turning these could lead to identifying a Statement / Cause for a Problem in the form of a Contradiction.\nRe-word the plain English Contradiction into TRIZ Parameters and look it up in the Contradiction Matrix. Obtain the Inventive Principles.\nApply these Inventive Principles into your Problem and solve it.\n\nIn the video itself, we heard about how electrical power consumption centers are the urban areas and these are far away from the generation sites. This leads to capital costs in HT Transmission equipment; we go to HT transmission to reduce losses on the way. This is already a Contradiction, which we might solve using Segmentation to arrive at Local Generation of Power. Local generation is a good idea to reduce these costs. This leads easily to Solar Panels on rooftops for example. Again while this may be cheaper than the electrical distribution system, it still uses a fair bit of capex and space and is centralized per building. Can we take Segmentation even further and think of a hyper-local household-based power generation unit, using the Wind?\nWhat would be the problems with using Wind based power generation around the home? Here below is a quick Ishikawa Diagram to help us identify the Parameters of this Problem:\n\n\n\n\n\nLooking at this Diagram, with the aspects identified, we could pair them off and see how they affect one another. In doing so, we could make up several problem. Let us state at some of our Problems: I have marked some of these with question marks since I am using imagination here and not direct primary research or information to formulate these. Note that some these may sound naive, but that is exactly way to start!\n\nI would like to have access my generator, but it needs to be not too close to the walls for it to harness the wind.\nHow to tap the power from the generator? What if the connection wires get twisted?\nDo I need a conventional Commutator? Won’t that be heavy?\nWhat voltage and current will I get? Will it be compatible with my 230V AC mains?\n\nAs you can see, many different problems and contradictions await our attention. Let us cut to the chase and state perhaps the most interesting problem (to me!) that the inventors have solved as demonstrated in the video above. We will state this as an Administrative Contradiction(AC) in plain English:\n\n\n\n\n\n\nAdministrative Contradiction\n\n\n\nAC: Winds help to generate power by making something rotate, but winds can change direction and slow down the existing rotation.\n\n\nWhat would an IFR be in this situation? How “unreasonable” can we be? Let us try:\n\n\n\n\n\n\nIdeal Final Result\n\n\n\nTorque must be in one direction only (irrespective of wind direction)\n\n\n\n\n\n\n\n\nUnidirectional Assumption\n\n\n\nI have made a strong assumption here about the the unidirectional movement: the main intent is for the rotating generator to be able to harness winds from any direction to establish or continue rotation in one direction (CW or CCW). Alternating current power generation is in principle immune to direction of rotation.\n\n\nLet us take our AC and convert it into a Technical Contradiction(TC), keeping this IFR in mind. We will look at the 48 TRIZ Parameters in the TRIZ Contradiction Matrix(PDF) and see which Parameter we want to improve, while not worsening another. Here is what we can obtain. We will analyze the Contradiction both ways1:1 The Contradiction Matrix is not quite symmetric, so stating the Contradiction both ways allows us to access a slightly larger set of Inventive Principles from two cells of the Matrix.\n\n\n\n\n\n\nTechnical Contradictions\n\n\n\n\n\nTC 1: Improve (15)Force/Torque while not worsening (3)Angle/Length of Moving Object\n\n\nTC 2: Improve (3)Angle/Length of Moving Object while not worsening (15)Force/Torque\n\n\n\n\nAgain we have chosen the TRIZ Parameters based on our IFR. Other metaphoric TRIZ Parameters that may suggest themselves are 12(Duration of Action on a Moving Object), 14(Speed), and (40)Harmful Effects Acting on the System.\nIs there a Physical Contradiction(PC)2 possible here?2 Arriving at Physical Contradictions is not always easy! If we can, then there are a very crisp set of TRIZ Separation Principles that we can apply to solve the Problem.\n\n\n\n\n\n\nPhysical Contradiction\n\n\n\nThe Rotor must yield and not yield to the Wind at the same time. In other words, the rotor must be “porous and non-porous”3 to the wind at the same time.\n\n\n3 So the Rotor must have…holes? How do holes “work in one direction only”? We will see…Let us now apply the TCs to the Contradiction Matrix and obtain the TRIZ Inventive Principles."
  },
  {
    "objectID": "content/projects/2023-11-03-Owind/index.html#solving-the-technical-contradiction",
    "href": "content/projects/2023-11-03-Owind/index.html#solving-the-technical-contradiction",
    "title": "The TRIZ Chronicles: TRIZ Analysis of the O-Wind Turbine",
    "section": "Solving the Technical Contradiction",
    "text": "Solving the Technical Contradiction\nLet us take the both the TC-s into the Contradiction Matrix and arrive at the list of TRIZ Inventive Principles. Here is what the Matrix suggests:\nFor TC-1:\n\n17(Another Dimension) !!\n4( Asymmetry)\n14(Curvature) !!!\n\n10(Preliminary Action)\nand with TC-2:\n\n3(Local Quality)\n9(Preliminary Anti-Action)\n35(Parameter Change)\n\nHmm…based on the PC, we may have expected a Separation in Space solution, suggested by Curvature, Another Dimension and Asymmetry. Viewing these Inventive Principles as we Generalized Solutions, we try to map these back into the Problem at hand. In keeping with the metaphoric/analogic way of thinking that TRIZ embodies, I deliberately use many visual hints here from math, physics, geography, and biology.\n\n(14)Curvature: Hmm…nothing new here, or is there? Of course the rotor has to be curved and kind of sphere-like….\n17(Another Dimension): A near-spherical thing has really only one dimension..the radius. And that points in all directions / dimensions! Should there be changes in radius then? Should the radius change create bumps ( positive change ) or depressions ( negative change?) Should the bump be like a welt, and the depression like a groove? How can a bump or a depression itself be curved, as 14(Curvature) suggests?\n4(Asymmetry): The bumps or depressions…..they have to be asymmetric? So….not like longitudes and nor latitudes, but may be like those great circles.\n\n3(Local Quality): OK, the bumps or depressions are already “local”….can we go further? Here is where I stretch and go hyper-local: Should there be structures on or inside them, like flaps or fins or vanes? How can these be asymmetric, then? By acting like miniature flaps or trapdoors, that yield / fall flat when pushed in one direction and stand up / resist when pushed in the other direction…somewhat like a dog or cat’s fur? Then push and pull work differently…\n\n\n\n\n\n\nFrom Flaps to ….Funnels!\n\n\n\nMaking these flaps movable as the above paragraph seems to suggest would probably not be a good idea, from an engineering standpoint. But once we have the image of wind + flaps / fins / vanes and differences in pressure or movement, the Bernoulli Principle and Venturi effect suggest themselves immediately!! So what could this vane-fin-fur-flap thingy be then? Oh good heavens, a funnel !!!\n\n\n{HappyApple, Public domain, via Wikimedia Commons}\nSo each of those bumps are segmented into funnel-like structures that cause differences in air pressure when the wind blow. These differences are unidirectional and create movement/rotation! And because the bumps are curved along the surface of the sphere, and they are not parallel to one another (asymmetry), at least some of the internal funnels will always be “in the wind” 4, and capable of creating rotation using Bernoulli/Venturi effect!\n\n9(Preliminary Anti-Action): What do we wish to guard against? Counter acting wind forces. Well, the funnel structures work only with wind blowing into the broad opening and so we are fine!\n\n4 Mathematically, the Wind direction vector will be (nearly) normal to the aperture of some funnel.So finally we could just imagine a spherical object, mounted on a spindle, with spiral arc-like bumps at different places on the surfaces. Within the arc-like bumps are funnel-like structures that create differentials in pressure when subject to the wind, and that creates rotation. Since the funnels are asymmetric by nature, our final rotation is unidirectional. Whew! ( Yes, that “whew” is also very suggestive here 😃!)"
  },
  {
    "objectID": "content/projects/2023-11-03-Owind/index.html#using-triz-separation-principles",
    "href": "content/projects/2023-11-03-Owind/index.html#using-triz-separation-principles",
    "title": "The TRIZ Chronicles: TRIZ Analysis of the O-Wind Turbine",
    "section": "Using TRIZ Separation Principles",
    "text": "Using TRIZ Separation Principles\nAs Hipple explains, there is frequently an underlying physical parameter, such as length, breadth, weight, or energy, or speed for example that lies at the root of our Technical Contradiction.\nOur IFR states that we want the rotor to yield one way and to not yield when pushed the other way so it needs to be both hard and soft at the same time. This is a Physical Contradiction! In this case we can easily see and application of Separation in Space and also Separation on Condition. However I think in this case, it would not be easy to arrive at the Solution using just these.\nThat’s a wrap! In the next episode of the #TRIZ Chronicles, I wish to step even further out of my area of expertise and dabble in HR! I think looking at some of the institution-building ideas in Ricardo Semler’s book, Maverick would be a good idea!"
  },
  {
    "objectID": "content/projects/2023-11-03-Owind/index.html#references",
    "href": "content/projects/2023-11-03-Owind/index.html#references",
    "title": "The TRIZ Chronicles: TRIZ Analysis of the O-Wind Turbine",
    "section": "References",
    "text": "References\n\nJack Hipple, The Ideal Result and How to Achieve It. Springer; 2012th edition (June 26, 2012)\nValery Souchkov, Defining Contradictions. http://www.xtriz.com/Training/TRIZ_DefineContradiction_Tutorial.pdf\n\nOpen Source TRIZ: Making Contradictions. https://www.youtube.com/watch?v=cah0OhCH55k"
  },
  {
    "objectID": "content/projects/DSU/A1.html",
    "href": "content/projects/DSU/A1.html",
    "title": "A1",
    "section": "",
    "text": "Each Question in this Assignment is a chart.\nEach Chart is accompanied by a set of short questions.\nYour responses to these can be R-code, or text.\nPlease number your answers as 1.a, 1.b, 1.c…..2.a, 2.b…on your Answer Sheet.\n\nAll aboard? Let’s go!"
  },
  {
    "objectID": "content/projects/DSU/A1.html#instructions",
    "href": "content/projects/DSU/A1.html#instructions",
    "title": "A1",
    "section": "",
    "text": "Each Question in this Assignment is a chart.\nEach Chart is accompanied by a set of short questions.\nYour responses to these can be R-code, or text.\nPlease number your answers as 1.a, 1.b, 1.c…..2.a, 2.b…on your Answer Sheet.\n\nAll aboard? Let’s go!"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-1",
    "href": "content/projects/DSU/A1.html#question-1",
    "title": "A1",
    "section": "Question 1",
    "text": "Question 1\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-1-1",
    "href": "content/projects/DSU/A1.html#question-1-1",
    "title": "A1",
    "section": "Question 1",
    "text": "Question 1\n\n\n\nWhat is the ggplot geometry used in this graph?\nWhat does the legend show?"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-2",
    "href": "content/projects/DSU/A1.html#question-2",
    "title": "A1",
    "section": "Question 2",
    "text": "Question 2\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-3",
    "href": "content/projects/DSU/A1.html#question-3",
    "title": "A1",
    "section": "Question 3",
    "text": "Question 3\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-4",
    "href": "content/projects/DSU/A1.html#question-4",
    "title": "A1",
    "section": "Question 4",
    "text": "Question 4\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-5",
    "href": "content/projects/DSU/A1.html#question-5",
    "title": "A1",
    "section": "Question 5",
    "text": "Question 5\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-6",
    "href": "content/projects/DSU/A1.html#question-6",
    "title": "A1",
    "section": "Question 6",
    "text": "Question 6\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-7",
    "href": "content/projects/DSU/A1.html#question-7",
    "title": "A1",
    "section": "Question 7",
    "text": "Question 7\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-8",
    "href": "content/projects/DSU/A1.html#question-8",
    "title": "A1",
    "section": "Question 8",
    "text": "Question 8\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-9",
    "href": "content/projects/DSU/A1.html#question-9",
    "title": "A1",
    "section": "Question 9",
    "text": "Question 9\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-10",
    "href": "content/projects/DSU/A1.html#question-10",
    "title": "A1",
    "section": "Question 10",
    "text": "Question 10\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-11",
    "href": "content/projects/DSU/A1.html#question-11",
    "title": "A1",
    "section": "Question 11",
    "text": "Question 11\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-12",
    "href": "content/projects/DSU/A1.html#question-12",
    "title": "A1",
    "section": "Question 12",
    "text": "Question 12\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-13",
    "href": "content/projects/DSU/A1.html#question-13",
    "title": "A1",
    "section": "Question 13",
    "text": "Question 13\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-14",
    "href": "content/projects/DSU/A1.html#question-14",
    "title": "A1",
    "section": "Question 14",
    "text": "Question 14\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/DSU/A1.html#question-15",
    "href": "content/projects/DSU/A1.html#question-15",
    "title": "A1",
    "section": "Question 15",
    "text": "Question 15\n\n\n\nList the variables are used in this graph?\nIdentify their types. (Quantitative, Qualitative)"
  },
  {
    "objectID": "content/projects/fsp-discussions/index.html",
    "href": "content/projects/fsp-discussions/index.html",
    "title": "FSP Discussions 2021",
    "section": "",
    "text": "Slides and Tutorials\n.nbsp;.nbsp;"
  },
  {
    "objectID": "content/projects/fsp-discussions/index.html#introduction",
    "href": "content/projects/fsp-discussions/index.html#introduction",
    "title": "FSP Discussions 2021",
    "section": "Introduction",
    "text": "Introduction"
  },
  {
    "objectID": "content/projects/fsp-discussions/index.html#this-is-a-summary-of-the-group-discussion-among",
    "href": "content/projects/fsp-discussions/index.html#this-is-a-summary-of-the-group-discussion-among",
    "title": "FSP Discussions 2021",
    "section": "This is a summary of the group discussion among:",
    "text": "This is a summary of the group discussion among:\n1. Sadhvi Jawa\n2. Minashshi Singh\n3. Vidhu Gandhi\n4. Yash Bhandari\n5. Arvind Venkatadri"
  },
  {
    "objectID": "content/projects/fsp-doe/index.html",
    "href": "content/projects/fsp-doe/index.html",
    "title": "A Design of Experiments Class",
    "section": "",
    "text": "Code Lab"
  },
  {
    "objectID": "content/projects/fsp-doe/index.html#slides-and-code-links",
    "href": "content/projects/fsp-doe/index.html#slides-and-code-links",
    "title": "A Design of Experiments Class",
    "section": "",
    "text": "Code Lab"
  },
  {
    "objectID": "content/projects/fsp-doe/index.html#fa-envelope-introduction",
    "href": "content/projects/fsp-doe/index.html#fa-envelope-introduction",
    "title": "A Design of Experiments Class",
    "section": " Introduction",
    "text": "Introduction\nThis is a brief description and analysis of a Design of Experiments module conducted as a part of the Order and Chaos course, in the Foundation Studies Program (FSP 2021-2022) at SMI, MAHE, Bangalore."
  },
  {
    "objectID": "content/projects/fsp-doe/index.html#context",
    "href": "content/projects/fsp-doe/index.html#context",
    "title": "A Design of Experiments Class",
    "section": "Context",
    "text": "Context\nA Short Term Memory(STM) Test was the investigative tool used to verify several Hypotheses that were documented on the subject of STM.\nThis article describes the statistical analysis that was done with the readings. In particular, Permutations Tests were used to verify the effect size for each of three parameters that were hypothesized.\nFor more information, please click on the icon above to look at the Lab document."
  },
  {
    "objectID": "content/projects/fsp-doe/index.html#references",
    "href": "content/projects/fsp-doe/index.html#references",
    "title": "A Design of Experiments Class",
    "section": "References",
    "text": "References\n\nLawrance, A. J. 1996. “A Design of Experiments Workshop as an Introduction to Statistics.” American Statistician 50 (2): 156–58. doi:10.1080/00031305.1996.10474364.\nErnst, Michael D. 2004. “Permutation Methods: A Basis for Exact Inference.” Statistical Science 19 (4): 676–85. doi:10.1214/088342304000000396.\nPruim R, Kaplan DT, Horton NJ (2017). “The mosaic Package: Helping Students to ‘Think with Data’ Using R.” The R Journal, 9(1), 77–102. https://journal.r-project.org/archive/2017/RJ-2017-024/index.html."
  },
  {
    "objectID": "content/projects/fsp-manifesto/index.html",
    "href": "content/projects/fsp-manifesto/index.html",
    "title": "My Teaching Manifesto",
    "section": "",
    "text": "This is a short Statement of Values, Beliefs, and Content in my Teaching.\n\nArvind Venkatadri."
  },
  {
    "objectID": "content/projects/fsp-portfolio/index.html",
    "href": "content/projects/fsp-portfolio/index.html",
    "title": "Teaching in this Pandemic Year 2020-2021",
    "section": "",
    "text": "This is a short Portfolio of Teaching Initiatives and Student Outcomes during this pandemic year, 2020-2021, from Arvind Venkatadri."
  },
  {
    "objectID": "content/projects/fsp-portfolio-2022/index.html",
    "href": "content/projects/fsp-portfolio-2022/index.html",
    "title": "The Foundation Series",
    "section": "",
    "text": "This is a short Portfolio of Teaching Initiatives and Student Outcomes during this post(?)-pandemic year, 2021-2022, from Arvind Venkatadri."
  },
  {
    "objectID": "content/projects/listing.html",
    "href": "content/projects/listing.html",
    "title": "The Foundation Series",
    "section": "",
    "text": "This is a dummy blog posts\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\nArvind Venkatadri\n\n\nJun 1, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProject 2\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\nArvind Venkatadri\n\n\nJun 1, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nA Design of Experiments Class\n\n\nA Design of Experiments Class\n\n\n\nArvind Venkatadri\n\n\nJan 31, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nA TRIZ Analysis of Lawrence of Arabia\n\n\nThe Attack on Aqaba: A TRIZ Analysis\n\n\n\nArvind Venkatadri\n\n\nDec 20, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nA1\n\n\n\n\n\n\nArvind Venkatadri\n\n\nMar 3, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nFSP Discussions 2021\n\n\n\n\n\n\nArvind Venkatadri\n\n\nJul 27, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMy Teaching Manifesto\n\n\n\n\n\n\nArvind Venkatadri\n\n\nAug 20, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResources for Order and Chaos\n\n\n\n\n\n\nArvind Venkatadri\n\n\nDec 12, 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTeaching in this Pandemic Year 2020-2021\n\n\n\n\n\n\nArvind Venkatadri\n\n\nAug 20, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nThe TRIZ Chronicles: A TRIZ Analysis of a Recent Spotify Ad\n\n\nPunjabi Pop and Getting the Veggies\n\n\n\nArvind Venkatadri\n\n\nJan 9, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nThe TRIZ Chronicles: TRIZ Analysis of the O-Wind Turbine\n\n\nIs there a cheap and effective way to generate power using the Wind, right in your home?\n\n\n\nArvind Venkatadri\n\n\nMar 1, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/projects/project-1/index.html",
    "href": "content/projects/project-1/index.html",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nCodelibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nCodepreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nCodeglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\nCodegeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\n\nCodestat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\nCodeggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "content/projects/project-1/index.html#merriweather",
    "href": "content/projects/project-1/index.html#merriweather",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nCodelibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nCodepreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nCodeglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "content/projects/project-1/index.html#columns",
    "href": "content/projects/project-1/index.html#columns",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Codegeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\n\nCodestat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "content/projects/project-1/index.html#margin-captions-and-figures",
    "href": "content/projects/project-1/index.html#margin-captions-and-figures",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Codeggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "content/projects/project-2/index.html",
    "href": "content/projects/project-2/index.html",
    "title": "Project 2",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nCodelibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nCodepreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nCodeglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\nCodegeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\n\nCodestat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\nCodeggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "content/projects/project-2/index.html#merriweather",
    "href": "content/projects/project-2/index.html#merriweather",
    "title": "Project 2",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\nThis is inline code plus a small code chunk.\n\nCodelibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimates\nMaximizing likelihood\n\n\n\n\nCodepreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\nCodeglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "content/projects/project-2/index.html#columns",
    "href": "content/projects/project-2/index.html#columns",
    "title": "Project 2",
    "section": "",
    "text": "Codegeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\n\nCodestat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "content/projects/project-2/index.html#margin-captions-and-figures",
    "href": "content/projects/project-2/index.html#margin-captions-and-figures",
    "title": "Project 2",
    "section": "",
    "text": "Codeggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html",
    "href": "content/slides/projects-slides/portfolio/index.html",
    "title": "Introduction to Networks in R",
    "section": "",
    "text": "We can use the .image-right and .image-left classes to insert images in the background\nThese images will be placed behind most other content"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#image-right",
    "href": "content/slides/projects-slides/portfolio/index.html#image-right",
    "title": "Introduction to Networks in R",
    "section": "",
    "text": "We can use the .image-right and .image-left classes to insert images in the background\nThese images will be placed behind most other content"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#image-left",
    "href": "content/slides/projects-slides/portfolio/index.html#image-left",
    "title": "Introduction to Networks in R",
    "section": ".image-left",
    "text": ".image-left\n\n\n\n\nIt is therefore recommened that you use multiple columns to only have text on the background area"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#section",
    "href": "content/slides/projects-slides/portfolio/index.html#section",
    "title": "Introduction to Networks in R",
    "section": "",
    "text": "background images"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#setting-background-colors",
    "href": "content/slides/projects-slides/portfolio/index.html#setting-background-colors",
    "title": "Introduction to Networks in R",
    "section": "Setting background colors",
    "text": "Setting background colors\nyou can set your background as you normally would"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#video-slide-title",
    "href": "content/slides/projects-slides/portfolio/index.html#video-slide-title",
    "title": "Introduction to Networks in R",
    "section": "Video Slide Title",
    "text": "Video Slide Title\nThis slides’s background video will play in a loop with audio muted."
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#slide-title",
    "href": "content/slides/projects-slides/portfolio/index.html#slide-title",
    "title": "Introduction to Networks in R",
    "section": "Slide Title",
    "text": "Slide Title"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#further-modifying-theme",
    "href": "content/slides/projects-slides/portfolio/index.html#further-modifying-theme",
    "title": "Introduction to Networks in R",
    "section": "Further Modifying theme",
    "text": "Further Modifying theme\nIf you want to modify theme, you can specify the .scss my modifying the yaml to look like this\nformat: \n  letterbox-revealjs:\n    theme: [default, style.scss]"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#modifying-letterbox-background",
    "href": "content/slides/projects-slides/portfolio/index.html#modifying-letterbox-background",
    "title": "Introduction to Networks in R",
    "section": "Modifying letterbox background",
    "text": "Modifying letterbox background\nThe background colors can be with with, where #444444 represents the new background color and #222222 represents the color of the shadow\n.quarto-light {\n  background-color: #444444;\n}\n\n.quarto-dark {\n  background-color: #444444;\n}\n\n.slides {\n  box-shadow: #222222 0px 0px 30px 0px;\n}"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#quarto",
    "href": "content/slides/projects-slides/portfolio/index.html#quarto",
    "title": "Introduction to Networks in R",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see https://quarto.org/docs/presentations/."
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#bullets",
    "href": "content/slides/projects-slides/portfolio/index.html#bullets",
    "title": "Introduction to Networks in R",
    "section": "Bullets",
    "text": "Bullets\nWhen you click the Render button a document will be generated that includes:\n\nContent authored with markdown\nOutput from executable code"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/index.html#code",
    "href": "content/slides/projects-slides/portfolio/index.html#code",
    "title": "Introduction to Networks in R",
    "section": "Code",
    "text": "Code\nWhen you click the Render button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n[1] 2"
  },
  {
    "objectID": "content/slides/projects-slides/portfolio/LICENSE.html",
    "href": "content/slides/projects-slides/portfolio/LICENSE.html",
    "title": "MIT License",
    "section": "",
    "text": "MIT License\nCopyright (c) 2022 quarto-letterbox authors\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html",
    "href": "content/slides/r-slides/graphics/index.html",
    "title": "The Grammar of Graphics in R",
    "section": "",
    "text": "We can use the .image-right and .image-left classes to insert images in the background\nThese images will be placed behind most other content"
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#image-right",
    "href": "content/slides/r-slides/graphics/index.html#image-right",
    "title": "The Grammar of Graphics in R",
    "section": "",
    "text": "We can use the .image-right and .image-left classes to insert images in the background\nThese images will be placed behind most other content"
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#image-left",
    "href": "content/slides/r-slides/graphics/index.html#image-left",
    "title": "The Grammar of Graphics in R",
    "section": ".image-left",
    "text": ".image-left\n\n\n\n\nIt is therefore recommened that you use multiple columns to only have text on the background area"
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#section",
    "href": "content/slides/r-slides/graphics/index.html#section",
    "title": "The Grammar of Graphics in R",
    "section": "",
    "text": "background images"
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#setting-background-colors",
    "href": "content/slides/r-slides/graphics/index.html#setting-background-colors",
    "title": "The Grammar of Graphics in R",
    "section": "Setting background colors",
    "text": "Setting background colors\nyou can set your background as you normally would"
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#video-slide-title",
    "href": "content/slides/r-slides/graphics/index.html#video-slide-title",
    "title": "The Grammar of Graphics in R",
    "section": "Video Slide Title",
    "text": "Video Slide Title\nThis slides’s background video will play in a loop with audio muted."
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#slide-title",
    "href": "content/slides/r-slides/graphics/index.html#slide-title",
    "title": "The Grammar of Graphics in R",
    "section": "Slide Title",
    "text": "Slide Title"
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#further-modifying-theme",
    "href": "content/slides/r-slides/graphics/index.html#further-modifying-theme",
    "title": "The Grammar of Graphics in R",
    "section": "Further Modifying theme",
    "text": "Further Modifying theme\nIf you want to modify theme, you can specify the .scss my modifying the yaml to look like this\nformat: \n  letterbox-revealjs:\n    theme: [default, style.scss]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#modifying-letterbox-background",
    "href": "content/slides/r-slides/graphics/index.html#modifying-letterbox-background",
    "title": "The Grammar of Graphics in R",
    "section": "Modifying letterbox background",
    "text": "Modifying letterbox background\nThe background colors can be with with, where #444444 represents the new background color and #222222 represents the color of the shadow\n.quarto-light {\n  background-color: #444444;\n}\n\n.quarto-dark {\n  background-color: #444444;\n}\n\n.slides {\n  box-shadow: #222222 0px 0px 30px 0px;\n}"
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#quarto",
    "href": "content/slides/r-slides/graphics/index.html#quarto",
    "title": "The Grammar of Graphics in R",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see https://quarto.org/docs/presentations/."
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#bullets",
    "href": "content/slides/r-slides/graphics/index.html#bullets",
    "title": "The Grammar of Graphics in R",
    "section": "Bullets",
    "text": "Bullets\nWhen you click the Render button a document will be generated that includes:\n\nContent authored with markdown\nOutput from executable code"
  },
  {
    "objectID": "content/slides/r-slides/graphics/index.html#code",
    "href": "content/slides/r-slides/graphics/index.html#code",
    "title": "The Grammar of Graphics in R",
    "section": "Code",
    "text": "Code\nWhen you click the Render button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n[1] 2"
  },
  {
    "objectID": "content/slides/r-slides/graphics/LICENSE.html",
    "href": "content/slides/r-slides/graphics/LICENSE.html",
    "title": "MIT License",
    "section": "",
    "text": "MIT License\nCopyright (c) 2022 quarto-letterbox authors\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html",
    "href": "content/slides/r-slides/graphics/metaphors.html",
    "title": "Metaphors with Graphics",
    "section": "",
    "text": "shakespeare\n\nTo code or not to code, that is the question…"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#how-does-one-read-shakespeare",
    "href": "content/slides/r-slides/graphics/metaphors.html#how-does-one-read-shakespeare",
    "title": "Metaphors with Graphics",
    "section": "",
    "text": "shakespeare\n\nTo code or not to code, that is the question…"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#what-is-a-grammar-of-graphics",
    "href": "content/slides/r-slides/graphics/metaphors.html#what-is-a-grammar-of-graphics",
    "title": "Metaphors with Graphics",
    "section": "What is a Grammar of Graphics?",
    "text": "What is a Grammar of Graphics?\n\nCode looks and reads like English.\n\nHas verbs, nouns, some adjectives….\n\n–\n\nDescribes Information/ideas/concepts from any source domain.\n\n–\n\n\nGEOMETRY as the target domain : What comes out of R is predominantly “geometry”"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#how-do-we-express-visuals-in-words",
    "href": "content/slides/r-slides/graphics/metaphors.html#how-do-we-express-visuals-in-words",
    "title": "Metaphors with Graphics",
    "section": "How do we express visuals in words?",
    "text": "How do we express visuals in words?\n.font120[ - Data to be visualized]\n\n\n\n.font120[ - .hlb[Geom]etric objects that appear on the plot]\n\n\n.font120[ - .hlb[Aes]thetic mappings from data to visual component]\n\n\n.font120[ - .hlb[Stat]istics transform data on the way to visualization]\n\n\n\n.font120[ - .hlb[Coord]inates organize location of geometric objects]\n\n\n.font120[ - .hlb[Scale]s define the range of values for aesthetics]\n\n\n.font120[ - .hlb[Facet]s group into subplots]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#the-essence-of-ggplot",
    "href": "content/slides/r-slides/graphics/metaphors.html#the-essence-of-ggplot",
    "title": "Metaphors with Graphics",
    "section": "The Essence of ggplot",
    "text": "The Essence of ggplot\nall ggplot2\n\n\naes(x = , y = ) (aesthetics)\n\naes(x = , y = , color = ) (add color)\n\naes(x = , y = , size = ) (add size)\n\n+ facet_wrap(~ ) (facetting)\n\n+ scale_ ( add a scale)"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#gg-is-for-grammar-of-graphics",
    "href": "content/slides/r-slides/graphics/metaphors.html#gg-is-for-grammar-of-graphics",
    "title": "Metaphors with Graphics",
    "section": "gg is for Grammar of Graphics",
    "text": "gg is for Grammar of Graphics\n.left-column[ ### Data ### Aesthetics ### Geoms\n+ geom_*()\n]\n.right-column[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#the-five-named-graphs",
    "href": "content/slides/r-slides/graphics/metaphors.html#the-five-named-graphs",
    "title": "Metaphors with Graphics",
    "section": "The Five-Named Graphs",
    "text": "The Five-Named Graphs\n\nScatterplot: geom_point()\n\nLine graph: geom_line()\n\nHistogram: geom_histogram()\n\nBoxplot: geom_boxplot()\n\nBar graph: geom_bar() or geom_col (see Lab 02)"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-penguins",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-penguins",
    "title": "Metaphors with Graphics",
    "section": "Chunk : penguins",
    "text": "Chunk : penguins\n\n\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_l…¹ body_…² sex    year\n  &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;       &lt;int&gt;   &lt;int&gt; &lt;fct&gt; &lt;int&gt;\n1 Adelie  Torgersen           39.1          18.7         181    3750 male   2007\n2 Adelie  Torgersen           39.5          17.4         186    3800 fema…  2007\n3 Adelie  Torgersen           40.3          18           195    3250 fema…  2007\n4 Adelie  Torgersen           NA            NA            NA      NA &lt;NA&gt;   2007\n5 Adelie  Torgersen           36.7          19.3         193    3450 fema…  2007\n6 Adelie  Torgersen           39.3          20.6         190    3650 male   2007\n# … with abbreviated variable names ¹​flipper_length_mm, ²​body_mass_g\n\n\nWe see the first few rows of the dataset penguins. We see that there are a few NA data observations too. Let us remove them for now."
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-mapping",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-mapping",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Mapping",
    "text": "Chunk: Mapping\n.pull-left[\n\n\n\n]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-mapping-1",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-mapping-1",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Mapping",
    "text": "Chunk: Mapping\n.pull-left[\n\n\n\n]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-mapping-2",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-mapping-2",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Mapping",
    "text": "Chunk: Mapping\n.pull-left[\n\n\n\n]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-mapping-3",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-mapping-3",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Mapping",
    "text": "Chunk: Mapping\n.pull-left[\n\n\n\n]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_point_position_colour",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_point_position_colour",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Geom_Point_Position_Colour",
    "text": "Chunk: Geom_Point_Position_Colour\n.pull-left[\n\n\n\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_point_position_colour-1",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_point_position_colour-1",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Geom_Point_Position_Colour",
    "text": "Chunk: Geom_Point_Position_Colour\n.pull-left[\n\n\n\nWe can leave out the “mapping” word and just use aes .\nWhy is there no plot?\n🤔 💭\nRight !! We have not used a geom command yet!! ] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_point_position_colour-2",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_point_position_colour-2",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Geom_Point_Position_Colour",
    "text": "Chunk: Geom_Point_Position_Colour\n.pull-left[\n\n\n\nNote that the points are located by position coordinates on both x and y axis, and coloured by the island variable.\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_point_position_colour-3",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_point_position_colour-3",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Geom_Point_Position_Colour",
    "text": "Chunk: Geom_Point_Position_Colour\n.pull-left[\n\n\n\nNote that the points are located by position coordinates on both x and y axis, and coloured by the island variable.\nAnd we’ve fixed size = 4!\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#alpha",
    "href": "content/slides/r-slides/graphics/metaphors.html#alpha",
    "title": "Metaphors with Graphics",
    "section": "Alpha",
    "text": "Alpha\n.pull-left[\n\n\n\nAre the points all overlapping? Can we see them better? ]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#alpha-1",
    "href": "content/slides/r-slides/graphics/metaphors.html#alpha-1",
    "title": "Metaphors with Graphics",
    "section": "Alpha",
    "text": "Alpha\n.pull-left[\n\n\n\nAre the points all overlapping? Can we see them better?\n]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-box-plot",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-box-plot",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Box Plot",
    "text": "Chunk: Box Plot\n.pull-left[\n\n\n\n]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-box-plot-1",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-box-plot-1",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Box Plot",
    "text": "Chunk: Box Plot\n.pull-left[\n\n\n\n]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_bar_1",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_bar_1",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Geom_Bar_1",
    "text": "Chunk: Geom_Bar_1\n.pull-left[ ::: {.cell hash=‘metaphors_cache/revealjs/3a_4be4390b2bb8a0bb273e1c4174c47445’}\n::: ] .pull-right[ ::: {.cell hash=‘metaphors_cache/revealjs/unnamed-chunk-11_c54ec299e4510a718f20ea0f35e457fa’} ::: {.cell-output-display}  ::: :::]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_bar_1-1",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_bar_1-1",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Geom_Bar_1",
    "text": "Chunk: Geom_Bar_1\n.pull-left[\n\n\n\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_bar_1-2",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-geom_bar_1-2",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Geom_Bar_1",
    "text": "Chunk: Geom_Bar_1\n.pull-left[\n\n\n\nThe bars are plotted with positions on the x-axis, defined by the species variable, and heights mapped to the y-axis.\nHow did the graph “know” the heights of the bars?\ngeom_bar has an internal count statistic computation. Many geom_s have internal computation that are accessible to programmers.\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#geom_bar_position_stack_and_dodge",
    "href": "content/slides/r-slides/graphics/metaphors.html#geom_bar_position_stack_and_dodge",
    "title": "Metaphors with Graphics",
    "section": "Geom_Bar_Position_Stack_and_Dodge",
    "text": "Geom_Bar_Position_Stack_and_Dodge\n.pull-left[ When using more than a pair of variables with a bar chart, we have a few more position options:\n\n\n\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#geom_bar_position_stack_and_dodge-1",
    "href": "content/slides/r-slides/graphics/metaphors.html#geom_bar_position_stack_and_dodge-1",
    "title": "Metaphors with Graphics",
    "section": "Geom_Bar_Position_Stack_and_Dodge",
    "text": "Geom_Bar_Position_Stack_and_Dodge\n.pull-left[ When using more than a pair of variables with a bar chart, we have a few more position options:\n\n\n\nThe bars are coloured by the island variable and are stacked in position. ] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#geom_bar_position_stack_and_dodge-2",
    "href": "content/slides/r-slides/graphics/metaphors.html#geom_bar_position_stack_and_dodge-2",
    "title": "Metaphors with Graphics",
    "section": "Geom_Bar_Position_Stack_and_Dodge",
    "text": "Geom_Bar_Position_Stack_and_Dodge\n.pull-left[ And here we use the dodge option: ::: {.cell hash=‘metaphors_cache/revealjs/5c_305f0626b040002d5728ac2d1abf747a’}\n::: ]\n.pull-right[ ::: {.cell hash=‘metaphors_cache/revealjs/unnamed-chunk-16_b1b9949a06c2c12e5ed535f2455b2d6c’} ::: {.cell-output-display}  ::: :::]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#facetting",
    "href": "content/slides/r-slides/graphics/metaphors.html#facetting",
    "title": "Metaphors with Graphics",
    "section": "Facetting",
    "text": "Facetting\n.pull-left[\n\n\n\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#facetting-1",
    "href": "content/slides/r-slides/graphics/metaphors.html#facetting-1",
    "title": "Metaphors with Graphics",
    "section": "Facetting",
    "text": "Facetting\n.pull-left[\n\n\n\n]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#facetting-2",
    "href": "content/slides/r-slides/graphics/metaphors.html#facetting-2",
    "title": "Metaphors with Graphics",
    "section": "Facetting",
    "text": "Facetting\n.pull-left[\n\n\n\n]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#facetting-3",
    "href": "content/slides/r-slides/graphics/metaphors.html#facetting-3",
    "title": "Metaphors with Graphics",
    "section": "Facetting",
    "text": "Facetting\n.pull-left[\n\n\n\nThe graph has split into small multiples, based on the number of islands. ]\n.pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#still-more-facetting",
    "href": "content/slides/r-slides/graphics/metaphors.html#still-more-facetting",
    "title": "Metaphors with Graphics",
    "section": "Still more Facetting",
    "text": "Still more Facetting\n.pull-left[ ::: {.cell hash=‘metaphors_cache/revealjs/6e_11fffde8991ec6023b002517c71fb782’}\n:::\nWhat if we have even more “factor” variables? We have island and species…can we split further?\n]\n.pull-right[ ::: {.cell hash=‘metaphors_cache/revealjs/unnamed-chunk-21_8baf2a1f3d326823f4808f0ec3a1c274’} ::: {.cell-output-display}  ::: :::]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#still-more-facetting-1",
    "href": "content/slides/r-slides/graphics/metaphors.html#still-more-facetting-1",
    "title": "Metaphors with Graphics",
    "section": "Still more Facetting",
    "text": "Still more Facetting\n.pull-left[\n\n\n\nThe graph has split into multiples, based on the number of islands and the number of species.\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#and-shall-we-look-briefly-at-colour",
    "href": "content/slides/r-slides/graphics/metaphors.html#and-shall-we-look-briefly-at-colour",
    "title": "Metaphors with Graphics",
    "section": "And shall we look briefly at colour?",
    "text": "And shall we look briefly at colour?"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#finallycolour-just-a-bit",
    "href": "content/slides/r-slides/graphics/metaphors.html#finallycolour-just-a-bit",
    "title": "Metaphors with Graphics",
    "section": "Finally…Colour !! ( Just a bit )",
    "text": "Finally…Colour !! ( Just a bit )\n.pull-left[\n\n\n\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#finallycolour-just-a-bit-1",
    "href": "content/slides/r-slides/graphics/metaphors.html#finallycolour-just-a-bit-1",
    "title": "Metaphors with Graphics",
    "section": "Finally…Colour !! ( Just a bit )",
    "text": "Finally…Colour !! ( Just a bit )\n.pull-left[ ::: {.cell hash=‘metaphors_cache/revealjs/8b_af117602443139046988dd623fbb1cb2’}\n::: We are using the RColorBrewer package here. Type RColorBrewer::display.brewer.all() in your Console and see what palettes are available.\n] .pull-right[ ::: {.cell hash=‘metaphors_cache/revealjs/unnamed-chunk-24_43588c1909bff1ebea8c039025075182’} ::: {.cell-output-display}  ::: :::]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-colour-just-a-bit",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-colour-just-a-bit",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Colour !! ( Just a bit )",
    "text": "Chunk: Colour !! ( Just a bit )\n.pull-left[\n\n\n\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-colour-just-a-bit-1",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-colour-just-a-bit-1",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Colour !! ( Just a bit )",
    "text": "Chunk: Colour !! ( Just a bit )\n.pull-left[\n\n\n\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#chunk-colour-just-a-bit-2",
    "href": "content/slides/r-slides/graphics/metaphors.html#chunk-colour-just-a-bit-2",
    "title": "Metaphors with Graphics",
    "section": "Chunk: Colour !! ( Just a bit )",
    "text": "Chunk: Colour !! ( Just a bit )\n.pull-left[\n\n\n\n] .pull-right[\n\n\n\n\n\n]"
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#conclusion",
    "href": "content/slides/r-slides/graphics/metaphors.html#conclusion",
    "title": "Metaphors with Graphics",
    "section": "Conclusion",
    "text": "Conclusion\n\n\nggplot takes a dataframe/tibble as the data argument\nThe aes-thetic arguments can be x, y, colour, shape, alpha for example…\nThe geom_*() commands specify the kind of plot, from a geometric perspective\nTogether, the ggplot package offers a Grammar of near-English commands which allow us to plot data in various ways."
  },
  {
    "objectID": "content/slides/r-slides/graphics/metaphors.html#references",
    "href": "content/slides/r-slides/graphics/metaphors.html#references",
    "title": "Metaphors with Graphics",
    "section": "References",
    "text": "References\n\nWickham, Hadley. (2010) “A Layered Grammar of Graphics”. Journal of Computational and Graphical Statistics, 19(1).\nWilkinson, Leland. (2005). The Grammar of Graphics. (UChicago authentication required)"
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html",
    "href": "content/slides/r-slides/nature/index.html",
    "title": "The Nature of Data",
    "section": "",
    "text": "Where / When?\nWho?\nHow?\nHow Big? How small? How frequent? How sudden?\n\n\n\n\n\nAnd….How Surprising ! How Shocking! How sad…How Wonderful !!!\nSo: Our Questions, and our Surprise lead us to creating Human Experiences."
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#what-makes-human-experience",
    "href": "content/slides/r-slides/nature/index.html#what-makes-human-experience",
    "title": "The Nature of Data",
    "section": "",
    "text": "Where / When?\nWho?\nHow?\nHow Big? How small? How frequent? How sudden?\n\n\n\n\n\nAnd….How Surprising ! How Shocking! How sad…How Wonderful !!!\nSo: Our Questions, and our Surprise lead us to creating Human Experiences."
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#does-this-surprise-you",
    "href": "content/slides/r-slides/nature/index.html#does-this-surprise-you",
    "title": "The Nature of Data",
    "section": "Does this Surprise you?",
    "text": "Does this Surprise you?"
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#the-element-of-surprise",
    "href": "content/slides/r-slides/nature/index.html#the-element-of-surprise",
    "title": "The Nature of Data",
    "section": "The Element of Surprise?",
    "text": "The Element of Surprise?\n\n\n\n\n\nJane Austen knew a lot about human information processing as these snippets from Pride and Prejudice (published in 1813 – over 200 years ago) show :\n\nShe was a woman of mean understanding, little information , and uncertain temper.\nCatherine and Lydia had information for them of a different sort.\nWhen this information was given, and they had all taken their seats, Mr. Collins was at leisure to look around him and admire,…\nYou could not have met with a person more capable of giving you certain information on that head than myself, for I have been connected with his family in a particular manner from my infancy.\nThis information made Elizabeth smile, as she thought of poor Miss Bingley.\nThis information, however, startled Mrs. Bennet …\nhttps://www.cs.bham.ac.uk/research/projects/cogaff/misc/austen-info.html"
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#claude-shannon-and-information",
    "href": "content/slides/r-slides/nature/index.html#claude-shannon-and-information",
    "title": "The Nature of Data",
    "section": "Claude Shannon and Information",
    "text": "Claude Shannon and Information\n\n\n\n\nhttps://plus.maths.org/content/information-surprise"
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#human-experience-is.data",
    "href": "content/slides/r-slides/nature/index.html#human-experience-is.data",
    "title": "The Nature of Data",
    "section": "Human Experience is….Data??",
    "text": "Human Experience is….Data??"
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#experiments-and-hypotheses-a-kitchen-experiment",
    "href": "content/slides/r-slides/nature/index.html#experiments-and-hypotheses-a-kitchen-experiment",
    "title": "The Nature of Data",
    "section": "Experiments and Hypotheses: A Kitchen Experiment",
    "text": "Experiments and Hypotheses: A Kitchen Experiment\n\n\n\n\n\nInputs are: Ingredients, Recipes, Processes\nOutputs are: Taste, Texture, Colour, Quantity!!\n\nUsed without permission from https://safetyculture.com/topics/design-of-experiments/"
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#what-is-the-result-of-an-experiment",
    "href": "content/slides/r-slides/nature/index.html#what-is-the-result-of-an-experiment",
    "title": "The Nature of Data",
    "section": "What is the Result of an Experiment?",
    "text": "What is the Result of an Experiment?\n\n\n\nAll experiments give us data about phenomena\nWe obtain data about the things that happen: Outputs\n\nWhat makes things happen?: Inputs\n\nHow?: Process\n\nWhen? Factors\n\nHow much “output” is caused by how much “input”? Effect Size\n\n\n\nAll Experiments stem from Human Curiosity, a Hypothesis, and a Desire to Find out and Talk about Something"
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#a-famous-lady-and-her-famous-experiment",
    "href": "content/slides/r-slides/nature/index.html#a-famous-lady-and-her-famous-experiment",
    "title": "The Nature of Data",
    "section": "A Famous Lady and her Famous Experiment",
    "text": "A Famous Lady and her Famous Experiment\n\n\n\n\n\n\n\n\n\nIn 1853, Turkey declared war on Russia. After the Russian Navy destroyed a Turkish squadron in the Black Sea, Great Britain and France joined with Turkey. In September of the following year, the British landed on the Crimean Peninsula and set out, with the French and Turks, to take the Russian naval base at Sevastopol.\nWhat followed was a tragicomedy of errors – failure of supply, failed communications, international rivalries. Conditions in the armies were terrible, and disease ate through their ranks. They finally did take Sevastopol a year later, after a ghastly assault. It was ugly business all around. Well over half a million soldiers lost their lives during the Crimean War."
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#florence-nightingales-data",
    "href": "content/slides/r-slides/nature/index.html#florence-nightingales-data",
    "title": "The Nature of Data",
    "section": "Florence Nightingale’s Data",
    "text": "Florence Nightingale’s Data\n\n\n   Month Year Disease.rate Wounds.rate Other.rate\n1    Apr 1854          1.4         0.0        7.0\n2    May 1854          6.2         0.0        4.6\n3    Jun 1854          4.7         0.0        2.5\n4    Jul 1854        150.0         0.0        9.6\n5    Aug 1854        328.5         0.4       11.9\n6    Sep 1854        312.2        32.1       27.7\n7    Oct 1854        197.0        51.7       50.1\n8    Nov 1854        340.6       115.8       42.8\n9    Dec 1854        631.5        41.7       48.0\n10   Jan 1855       1022.8        30.7      120.0"
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#how-does-data-look-like-then",
    "href": "content/slides/r-slides/nature/index.html#how-does-data-look-like-then",
    "title": "The Nature of Data",
    "section": "How Does Data look Like, then?",
    "text": "How Does Data look Like, then?\n\n\n\n\nUsing Interrogative Pronouns\n\nNominal: What? Who? Where? (Factors, Dimensions)\nOrdinal: Which Types? What Sizes? How Big? (Factors, Dimensions)\nInterval: How Often? (Numbers, Facts)\nRatio: How many? How much? How heavy? (Numbers, Facts)"
  },
  {
    "objectID": "content/slides/r-slides/nature/index.html#types-of-variables-in-nightingale-data",
    "href": "content/slides/r-slides/nature/index.html#types-of-variables-in-nightingale-data",
    "title": "The Nature of Data",
    "section": "Types of Variables in Nightingale Data",
    "text": "Types of Variables in Nightingale Data\n\n\n\n\nUsing Interrogative Pronouns\n\nNominal: None\nOrdinal: (Factors, Dimensions)\n\nHOW? War, Disease, Other\n\n\n\nInterval: (Numbers, Facts)\n\nWHEN? Year, Month\n\n\n\nRatio: (Numbers, Facts)\n\nHOW MANY? Rate of Deaths (War, Disease, Other)"
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html",
    "href": "content/slides/r-slides/nature/new.html",
    "title": "The Nature of Data",
    "section": "",
    "text": "()\n\n\n\n\nWhere / When?\nWho?\nHow?\nHow Big? How small? How frequent? How sudden?\n\n\n\n\n\nAnd….How Surprising ! How Shocking! How sad…How Wonderful !!!\nSo: Our Questions, and our Surprise lead us to creating Human Experiences."
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#what-makes-human-experience",
    "href": "content/slides/r-slides/nature/new.html#what-makes-human-experience",
    "title": "The Nature of Data",
    "section": "",
    "text": "()\n\n\n\n\nWhere / When?\nWho?\nHow?\nHow Big? How small? How frequent? How sudden?\n\n\n\n\n\nAnd….How Surprising ! How Shocking! How sad…How Wonderful !!!\nSo: Our Questions, and our Surprise lead us to creating Human Experiences."
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#does-this-surprise-you",
    "href": "content/slides/r-slides/nature/new.html#does-this-surprise-you",
    "title": "The Nature of Data",
    "section": "Does this Surprise you?",
    "text": "Does this Surprise you?"
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#the-element-of-surprise",
    "href": "content/slides/r-slides/nature/new.html#the-element-of-surprise",
    "title": "The Nature of Data",
    "section": "The Element of Surprise?",
    "text": "The Element of Surprise?\n\n\n\n\n\nJane Austen knew a lot about human information processing as these snippets from Pride and Prejudice (published in 1813 – over 200 years ago) show :\n\nShe was a woman of mean understanding, little information , and uncertain temper.\nCatherine and Lydia had information for them of a different sort.\nWhen this information was given, and they had all taken their seats, Mr. Collins was at leisure to look around him and admire,…\nYou could not have met with a person more capable of giving you certain information on that head than myself, for I have been connected with his family in a particular manner from my infancy.\nThis information made Elizabeth smile, as she thought of poor Miss Bingley.\nThis information, however, startled Mrs. Bennet …\nhttps://www.cs.bham.ac.uk/research/projects/cogaff/misc/austen-info.html"
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#claude-shannon-and-information",
    "href": "content/slides/r-slides/nature/new.html#claude-shannon-and-information",
    "title": "The Nature of Data",
    "section": "Claude Shannon and Information",
    "text": "Claude Shannon and Information\n\n\n\n\nhttps://plus.maths.org/content/information-surprise"
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#human-experience-is.data",
    "href": "content/slides/r-slides/nature/new.html#human-experience-is.data",
    "title": "The Nature of Data",
    "section": "Human Experience is….Data??",
    "text": "Human Experience is….Data??"
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#experiments-and-hypotheses-a-kitchen-experiment",
    "href": "content/slides/r-slides/nature/new.html#experiments-and-hypotheses-a-kitchen-experiment",
    "title": "The Nature of Data",
    "section": "Experiments and Hypotheses: A Kitchen Experiment",
    "text": "Experiments and Hypotheses: A Kitchen Experiment\n\n\n\n\n\nInputs are: Ingredients, Recipes, Processes\nOutputs are: Taste, Texture, Colour, Quantity!!\n\nUsed without permission from https://safetyculture.com/topics/design-of-experiments/"
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#what-is-the-result-of-an-experiment",
    "href": "content/slides/r-slides/nature/new.html#what-is-the-result-of-an-experiment",
    "title": "The Nature of Data",
    "section": "What is the Result of an Experiment?",
    "text": "What is the Result of an Experiment?\n\n\n\nAll experiments give us data about phenomena\nWe obtain data about the things that happen: Outputs\n\nWhat makes things happen?: Inputs\n\nHow?: Process\n\nWhen? Factors\n\nHow much “output” is caused by how much “input”? Effect Size\n\n\n\nAll Experiments stem from Human Curiosity, a Hypothesis, and a Desire to Find out and Talk about Something"
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#a-famous-lady-and-her-famous-experiment",
    "href": "content/slides/r-slides/nature/new.html#a-famous-lady-and-her-famous-experiment",
    "title": "The Nature of Data",
    "section": "A Famous Lady and her Famous Experiment",
    "text": "A Famous Lady and her Famous Experiment\n\n\n\n\n\n\n\n\n\nIn 1853, Turkey declared war on Russia. After the Russian Navy destroyed a Turkish squadron in the Black Sea, Great Britain and France joined with Turkey. In September of the following year, the British landed on the Crimean Peninsula and set out, with the French and Turks, to take the Russian naval base at Sevastopol.\nWhat followed was a tragicomedy of errors – failure of supply, failed communications, international rivalries. Conditions in the armies were terrible, and disease ate through their ranks. They finally did take Sevastopol a year later, after a ghastly assault. It was ugly business all around. Well over half a million soldiers lost their lives during the Crimean War."
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#florence-nightingales-data",
    "href": "content/slides/r-slides/nature/new.html#florence-nightingales-data",
    "title": "The Nature of Data",
    "section": "Florence Nightingale’s Data",
    "text": "Florence Nightingale’s Data\n\n\n   Month Year Disease.rate Wounds.rate Other.rate\n1    Apr 1854          1.4         0.0        7.0\n2    May 1854          6.2         0.0        4.6\n3    Jun 1854          4.7         0.0        2.5\n4    Jul 1854        150.0         0.0        9.6\n5    Aug 1854        328.5         0.4       11.9\n6    Sep 1854        312.2        32.1       27.7\n7    Oct 1854        197.0        51.7       50.1\n8    Nov 1854        340.6       115.8       42.8\n9    Dec 1854        631.5        41.7       48.0\n10   Jan 1855       1022.8        30.7      120.0"
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#blank-slide",
    "href": "content/slides/r-slides/nature/new.html#blank-slide",
    "title": "The Nature of Data",
    "section": "Blank Slide",
    "text": "Blank Slide"
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#how-does-data-look-like-then",
    "href": "content/slides/r-slides/nature/new.html#how-does-data-look-like-then",
    "title": "The Nature of Data",
    "section": "How Does Data look Like, then?",
    "text": "How Does Data look Like, then?\n\n\n\n\nTypes of Variables - Using Interrogative Pronouns\n\nNominal: What? Who? Where? (Factors, Dimensions)\nOrdinal: Which Types? What Sizes? How Big? (Factors, Dimensions)\nInterval: How Often? (Numbers, Facts)\nRatio: How many? How much? How heavy? (Numbers, Facts)"
  },
  {
    "objectID": "content/slides/r-slides/nature/new.html#types-of-variables-in-nightingale-data",
    "href": "content/slides/r-slides/nature/new.html#types-of-variables-in-nightingale-data",
    "title": "The Nature of Data",
    "section": "Types of Variables in Nightingale Data",
    "text": "Types of Variables in Nightingale Data\n\n\nUsing Interrogative Pronouns\n\nNominal: None\nOrdinal: (Factors, Dimensions)\n\nHOW? War, Disease, Other\n\n\n\nInterval: (Numbers, Facts)\n\nWHEN? Year, Month\n\n\n\nRatio: (Numbers, Facts)\n\nHOW MANY? Rate of Deaths (War, Disease, Other)"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html",
    "href": "content/slides/r-slides/networks/index.html",
    "title": "Introduction to Networks in R",
    "section": "",
    "text": "We can use the .image-right and .image-left classes to insert images in the background\nThese images will be placed behind most other content"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#image-right",
    "href": "content/slides/r-slides/networks/index.html#image-right",
    "title": "Introduction to Networks in R",
    "section": "",
    "text": "We can use the .image-right and .image-left classes to insert images in the background\nThese images will be placed behind most other content"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#image-left",
    "href": "content/slides/r-slides/networks/index.html#image-left",
    "title": "Introduction to Networks in R",
    "section": ".image-left",
    "text": ".image-left\n\n\n\n\nIt is therefore recommened that you use multiple columns to only have text on the background area"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#section",
    "href": "content/slides/r-slides/networks/index.html#section",
    "title": "Introduction to Networks in R",
    "section": "",
    "text": "background images"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#setting-background-colors",
    "href": "content/slides/r-slides/networks/index.html#setting-background-colors",
    "title": "Introduction to Networks in R",
    "section": "Setting background colors",
    "text": "Setting background colors\nyou can set your background as you normally would"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#video-slide-title",
    "href": "content/slides/r-slides/networks/index.html#video-slide-title",
    "title": "Introduction to Networks in R",
    "section": "Video Slide Title",
    "text": "Video Slide Title\nThis slides’s background video will play in a loop with audio muted."
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#slide-title",
    "href": "content/slides/r-slides/networks/index.html#slide-title",
    "title": "Introduction to Networks in R",
    "section": "Slide Title",
    "text": "Slide Title"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#further-modifying-theme",
    "href": "content/slides/r-slides/networks/index.html#further-modifying-theme",
    "title": "Introduction to Networks in R",
    "section": "Further Modifying theme",
    "text": "Further Modifying theme\nIf you want to modify theme, you can specify the .scss my modifying the yaml to look like this\nformat: \n  letterbox-revealjs:\n    theme: [default, style.scss]"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#modifying-letterbox-background",
    "href": "content/slides/r-slides/networks/index.html#modifying-letterbox-background",
    "title": "Introduction to Networks in R",
    "section": "Modifying letterbox background",
    "text": "Modifying letterbox background\nThe background colors can be with with, where #444444 represents the new background color and #222222 represents the color of the shadow\n.quarto-light {\n  background-color: #444444;\n}\n\n.quarto-dark {\n  background-color: #444444;\n}\n\n.slides {\n  box-shadow: #222222 0px 0px 30px 0px;\n}"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#quarto",
    "href": "content/slides/r-slides/networks/index.html#quarto",
    "title": "Introduction to Networks in R",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see https://quarto.org/docs/presentations/."
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#bullets",
    "href": "content/slides/r-slides/networks/index.html#bullets",
    "title": "Introduction to Networks in R",
    "section": "Bullets",
    "text": "Bullets\nWhen you click the Render button a document will be generated that includes:\n\nContent authored with markdown\nOutput from executable code"
  },
  {
    "objectID": "content/slides/r-slides/networks/index.html#code",
    "href": "content/slides/r-slides/networks/index.html#code",
    "title": "Introduction to Networks in R",
    "section": "Code",
    "text": "Code\nWhen you click the Render button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n[1] 2"
  },
  {
    "objectID": "content/slides/r-slides/networks/LICENSE.html",
    "href": "content/slides/r-slides/networks/LICENSE.html",
    "title": "MIT License",
    "section": "",
    "text": "MIT License\nCopyright (c) 2022 quarto-letterbox authors\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "content/slides/r-slides/r-slides-listing.html",
    "href": "content/slides/r-slides/r-slides-listing.html",
    "title": "The Foundation Series",
    "section": "",
    "text": "Introduction to Networks in R\n\n\nUsing tidygraph and visNetwork\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nMIT License\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nMIT License\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nMetaphors with Graphics\n\n\nFrom Code to Geometry\n\n\n\n\n\n\n\n\n\nArvind Venkatadri\n\n\n\n\n\n\n  \n\n\n\n\nThe Grammar of Graphics in R\n\n\nUsing the tidyverse\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nThe Nature of Data\n\n\nHow does Human Experience link with Data?\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nThe Nature of Data\n\n\nHow does Human Experience link with Data?\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nWorking in R\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nNo matching items"
  },
  {
    "objectID": "content/slides/r-slides/working-in-R/index.html#data-structures",
    "href": "content/slides/r-slides/working-in-R/index.html#data-structures",
    "title": "Working in R",
    "section": "Data Structures",
    "text": "Data Structures"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "The Foundation Series",
    "section": "",
    "text": "Preparatory Work to moving my full website to Quarto!"
  },
  {
    "objectID": "readme.html#get-started-with-quarto",
    "href": "readme.html#get-started-with-quarto",
    "title": "The Foundation Series",
    "section": "",
    "text": "Preparatory Work to moving my full website to Quarto!"
  }
]