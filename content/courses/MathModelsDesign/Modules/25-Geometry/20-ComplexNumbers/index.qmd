---
title: <iconify-icon icon="tabler:math-xy" width="1.2em" height="1.2em"></iconify-icon> Complex Numbers
subtitle: ""
subject: "Shapes and Code"
abstract: ""
date: 02/May/2024
date-modified: "`r Sys.Date()`"
order: 95
categories:
- Iterated Functions
- Fractals
- L-Systems
- Mandelbrot
- Julia
- Algorithmic Patterns
- Symmetry
bibliography: 
  - grateful-refs.bib
citation: true
editor: 
  markdown: 
    wrap: 72
---


```{r setup, include=FALSE}
library(blogdown)
library(tidyverse)
library(ggformula)
library(mosaicCalc) # Analytic Calculus
library(ambient) # Noise generation in R
library(plot3D) # 3D plots for explanation
library(caracas)
library(downloadthis)
library(knitr)
library(kableExtra)
## Markdown boiler plate stuff!!
# ![An Elephant](elephant.png){#fig-elephant}
# This is illustrated well by @fig-elephant.
# 
# ### Figure Panel Divs
#     ::: {#fig-elephants layout-ncol=2}
#     ![Surus](surus.png){#fig-surus}
#     ![Hanno](hanno.png){#fig-hanno}
#      Famous Elephants
#     :::
#     Adding download buttons
#     data that has been read in
#     {{< downloadthis ../../../../materials/Data/housing_train.csv dname="house_prices" label="Download the House Prices Dataset" icon="database-fill-down" type="info" >}}
#    existing file
#    {{< downloadthis Orange/grouped-summaries.ows dname="grouped_summaries" label="Download the Orange Workflow" icon="database-fill-down" type="info" >}} 

```


```{r}
#| label: Extra Pedagogical Packages
#| echo: false
#| message: false

library(checkdown)
library(epoxy)
library(grateful)
library(downloadthis)
#devtools::install_github("mccarthy-m-g/embedr")
library(embedr) # Embed multimedia in HTML files
```

```{r}
#| label: Plot Sizing and theming
#| echo: false
#| message: false
#| results: hide

# https://stackoverflow.com/questions/74491138/ggplot-custom-fonts-not-working-in-quarto

# Chunk options
knitr::opts_chunk$set(
 fig.width = 7,
 fig.asp = 0.618, # Golden Ratio
 #out.width = "80%",
 fig.align = "center"
)
### Ggplot Theme
### https://rpubs.com/mclaire19/ggplot2-custom-themes

theme_custom <- function(){ 
    font <- "Roboto Condensed"   #assign font family up front
    
    theme_classic(base_size = 14) %+replace%    #replace elements we want to change
    
    theme(
      panel.grid.minor = element_blank(),    #strip minor gridlines
      text = element_text(family = font),
      #text elements
      plot.title = element_text(             #title
                   family = font,            #set font family
                   #size = 20,               #set font size
                   face = 'bold',            #bold typeface
                   hjust = 0,                #left align
                   #vjust = 2                #raise slightly
                   margin=margin(0,0,10,0)
),               
      
      plot.subtitle = element_text(          #subtitle
                   family = font,            #font family
                   #size = 14,                #font size
                   hjust = 0,
                   margin=margin(2,0,5,0)
),               
      
      plot.caption = element_text(           #caption
                   family = font,            #font family
                   size = 8,                 #font size
                   hjust = 1),               #right align
      
      axis.title = element_text(             #axis titles
                   family = font,            #font family
                   size = 10                 #font size
),
      
      axis.text = element_text(              #axis text
                   family = font,            #axis family
                   size = 8)               #font size
    )
}

# Set graph theme
theme_set(new = theme_custom())
#
```


## Introduction
One of the most basic kinds of numbers we will need are, of course, *Complex Numbers*. But what are they? 


## Complex Planes: What am $i$?

Dude, what's the square root of -1?? `r emoji::emoji("scream_cat")`
`r emoji::emoji("scream_cat")` `r emoji::emoji("scream_cat")`!! And,
what can you do repeatedly to arrive at $[-1, 0]$?

Let us head off to <https://mathigon.org/course/fractals/mandelbrot> and
play with some iterated functions in the Complex Plane. This will lead
us into an intuitive understanding of Julia and Mandelbrot Fractals.



{{< video https://youtu.be/DznD05F1DLI >}}

{{< video https://youtu.be/t75gXyWJNpA >}}


## {{< iconify mingcute thought-line >}} Wait, But Why?

- Complex Numbers are very useful in handling "2D data" in a compact fashion
- Complex Numbers help us to intuitively visualize, and implement, ideas such as rotation, scaling, and shadows, and projections.
- The duality between rotating vectors and complex numbers is a very important concept. 

## {{< iconify ooui references-ltr >}} References


1. Working with Shadows. <https://www.wikiwand.com/en/Map_projection>
1. Working with Fourier Series and Epicyles
<http://www.jezzamon.com/fourier/index.html> and <https://alex.miller.im/posts/fourier-series-spinning-circles-visualization/>
1. https://twitter.com/i/status/962449509782495232
<https://codegolf.stackexchange.com/questions/36374/redraw-an-image-with-just-one-closed-curve>


