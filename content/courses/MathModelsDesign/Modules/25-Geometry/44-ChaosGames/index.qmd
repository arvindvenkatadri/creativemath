---
title: <iconify-icon icon="mdi:reiterate" width="1.2em" height="1.2em"></iconify-icon> <iconify-icon icon="gravity-ui:function" width="1.2em" height="1.2em"></iconify-icon> Chaos Games
subtitle: "Random Functions and Surprising Shapes"
subject: ""
abstract: ""
date: 28/Jan/2025
date-modified: "`r Sys.Date()`"
order: 44
categories:
- Iterated Functions
- Fractals
- Sierpinski
- Koch Snowflake
- Menger Sponge
bibliography: 
  - grateful-refs.bib
citation: true
editor: 
  markdown: 
    wrap: 72
draft: true
---

```{r setup, include=FALSE}
library(blogdown)
library(tidyverse)
library(ggformula)
library(mosaicCalc) # Analytic Calculus
library(ambient) # Noise generation in R
library(plot3D) # 3D plots for explanation
library(caracas)
library(downloadthis)
library(knitr)
library(kableExtra)
## Markdown boiler plate stuff!!
# ![An Elephant](elephant.png){#fig-elephant}
# This is illustrated well by @fig-elephant.
# 
# ### Figure Panel Divs
#     ::: {#fig-elephants layout-ncol=2}
#     ![Surus](surus.png){#fig-surus}
#     ![Hanno](hanno.png){#fig-hanno}
#      Famous Elephants
#     :::
#     Adding download buttons
#     data that has been read in
#     {{< downloadthis ../../../../materials/Data/housing_train.csv dname="house_prices" label="Download the House Prices Dataset" icon="database-fill-down" type="info" >}}
#    existing file
#    {{< downloadthis Orange/grouped-summaries.ows dname="grouped_summaries" label="Download the Orange Workflow" icon="database-fill-down" type="info" >}} 

```


```{r}
#| label: Extra Pedagogical Packages
#| echo: false
#| message: false

library(checkdown)
library(epoxy)
library(grateful)
library(MKdescr)
library(shinylive) # To create a Shiny app in a Quarto HTML doc
# Will not work if webr is also used in the SAME Quarto doc!
library(sysfonts)
library(gfonts)
library(kableExtra)
# library(conflicted)
# conflicted::conflicts_prefer(dplyr::filter, dplyr::count, dplyr::last, dplyr::glimpse, base::max)
library(downloadthis)
#devtools::install_github("mccarthy-m-g/embedr")
library(embedr) # Embed multimedia in HTML files
```

```{r}
#| label: Plot Sizing and theming
#| echo: false
#| message: false
#| results: hide

# https://stackoverflow.com/questions/74491138/ggplot-custom-fonts-not-working-in-quarto

# Chunk options
knitr::opts_chunk$set(
 fig.width = 7,
 fig.asp = 0.618, # Golden Ratio
 #out.width = "80%",
 fig.align = "center"
)
### Ggplot Theme
### https://rpubs.com/mclaire19/ggplot2-custom-themes

theme_custom <- function(){ 
    font <- "Roboto Condensed"   #assign font family up front
    
    theme_classic(base_size = 14) %+replace%    #replace elements we want to change
    
    theme(
      panel.grid.minor = element_blank(),    #strip minor gridlines
      text = element_text(family = font),
      #text elements
      plot.title = element_text(             #title
                   family = font,            #set font family
                   #size = 20,               #set font size
                   face = 'bold',            #bold typeface
                   hjust = 0,                #left align
                   #vjust = 2                #raise slightly
                   margin=margin(0,0,10,0)
),               
      
      plot.subtitle = element_text(          #subtitle
                   family = font,            #font family
                   #size = 14,                #font size
                   hjust = 0,
                   margin=margin(2,0,5,0)
),               
      
      plot.caption = element_text(           #caption
                   family = font,            #font family
                   size = 8,                 #font size
                   hjust = 1),               #right align
      
      axis.title = element_text(             #axis titles
                   family = font,            #font family
                   size = 10                 #font size
),
      
      axis.text = element_text(              #axis text
                   family = font,            #axis family
                   size = 8)               #font size
    )
}

# Set graph theme
theme_set(new = theme_custom())
#
```

## Introduction
Topics that may be covered here:\

- Iterated Function Systems and Fractals\
- Symmetries in Space\
- L Systems, Mandalas and Kolams\
- Logistic Functions\
- Projections\

## {{< iconify icons8 idea >}} Inspiration

<a title="Zoharby, Public domain, via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File:Sierpinski_chaos_animated.gif"><img width="512" alt="Sierpinski chaos animated" src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sierpinski_chaos_animated.gif/512px-Sierpinski_chaos_animated.gif?20080608150150"></a>

And how about this? Click anywhere on the canvas to restart the graphic and see what happens!

<iframe width="512" height="512"
src="https://editor.p5js.org/ylegall/full/e0cEX1LDZ">
</iframe>


So let us see how we can construct this algorithmically, the different parts of it. And of course why we should bother!

## What is an Iterated Function?

Well, we know what a `function` is don't we? A relationship between numbers. One varies as the others, and the relationship is specified by the function. E.g. $y = \sin(x)$.

So what is `iteration` then, and how do you do that to a function? It is applying the same function over and over again, by piping the results of the previous step i.e. iteration back into the function. Let us hear from Ron Eglash, the author of *African Fractals: Modern Computing and Indigenous Design*


```{r}
#| echo: false
#| out-height: 50%
#| fig-align: center
knitr::include_graphics("../../../../../materials/images/Eglash-book-cover.jpg")

```



<div style="max-width:1024px"><div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://embed.ted.com/talks/ron_eglash_the_fractals_at_the_heart_of_african_designs?subtitle=en" width="1024px" height="576px" title="The fractals at the heart of African designs" style="position:absolute;left:0;top:0;width:100%;height:100%"  frameborder="0" scrolling="no" allowfullscreen onload="window.parent.postMessage('iframeLoaded', 'https://embed.ted.com')"></iframe></div></div>

## Some Examples of Iterated Functions




## {{< iconify mingcute thought-line >}} Wait, But Why?


## {{< iconify ooui references-ltr >}} References
1.

1.


::: {#refs style="font-size: 60%;"}
###### {{< iconify lucide package-check >}} R Package Citations

```{r}
#| echo: false
#scan_packages()
cite_packages(
  output = "table",
  out.dir = ".",
  out.format = "html",
  pkgs = c("ambient", "mosaicCalc", "plot3D")
) %>%
  knitr::kable(format = "simple")

```

:::

