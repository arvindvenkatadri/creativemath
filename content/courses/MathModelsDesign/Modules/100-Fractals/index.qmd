---
title: Fractals
subtitle: ""
subject: "Shapes and Code"
abstract: "A Geometric Jewellery Store"
date: 02/May/2024
date-modified: "`r Sys.Date()`"
order: 100
categories:
- Iterated Functions
- Fractals
- Mandelbrot
- Julia
bibliography: 
  - grateful-refs.bib
citation: true
editor: 
  markdown: 
    wrap: 72
---


```{r setup, include=FALSE}
library(blogdown)
library(tidyverse)
library(ggformula)
library(LindenmayeR)
library(LearnGeom)
library(TurtleGraphics)
###
library(mosaicCalc) # Analytic Calculus
library(ambient) # Noise generation in R
library(plot3D) # 3D plots for explanation
library(caracas)
library(downloadthis)
library(knitr)
library(kableExtra)
## Markdown boiler plate stuff!!
# ![An Elephant](elephant.png){#fig-elephant}
# This is illustrated well by @fig-elephant.
# 
# ### Figure Panel Divs
#     ::: {#fig-elephants layout-ncol=2}
#     ![Surus](surus.png){#fig-surus}
#     ![Hanno](hanno.png){#fig-hanno}
#      Famous Elephants
#     :::
#     Adding download buttons
#     data that has been read in
#     {{< downloadthis ../../../../materials/Data/housing_train.csv dname="house_prices" label="Download the House Prices Dataset" icon="database-fill-down" type="info" >}}
#    existing file
#    {{< downloadthis Orange/grouped-summaries.ows dname="grouped_summaries" label="Download the Orange Workflow" icon="database-fill-down" type="info" >}} 

```


```{r}
#| label: Extra Pedagogical Packages
#| echo: false
#| message: false

library(checkdown)
library(epoxy)
library(grateful)
library(MKdescr)
library(shinylive) # To create a Shiny app in a Quarto HTML doc
# Will not work if webr is also used in the SAME Quarto doc!
library(sysfonts)
library(gfonts)
library(kableExtra)
# library(conflicted)
# conflicted::conflicts_prefer(dplyr::filter, dplyr::count, dplyr::last, dplyr::glimpse, base::max)
library(downloadthis)
#devtools::install_github("mccarthy-m-g/embedr")
library(embedr) # Embed multimedia in HTML files
```

#### Plot Theme
```{r}
#| label: Plot Sizing and theming
#| code-fold: true
#| message: false
#| results: hide

# https://stackoverflow.com/questions/74491138/ggplot-custom-fonts-not-working-in-quarto

# Chunk options
knitr::opts_chunk$set(
 fig.width = 7,
 fig.asp = 0.618, # Golden Ratio
 #out.width = "80%",
 fig.align = "center"
)
### Ggplot Theme
### https://rpubs.com/mclaire19/ggplot2-custom-themes

theme_custom <- function(){ 
    font <- "Roboto Condensed"   #assign font family up front
    
    theme_classic(base_size = 14) %+replace%    #replace elements we want to change
    
    theme(
      panel.grid.minor = element_blank(),    #strip minor gridlines
      text = element_text(family = font),
      #text elements
      plot.title = element_text(             #title
                   family = font,            #set font family
                   #size = 20,               #set font size
                   face = 'bold',            #bold typeface
                   hjust = 0,                #left align
                   #vjust = 2                #raise slightly
                   margin=margin(0,0,10,0)
),               
      
      plot.subtitle = element_text(          #subtitle
                   family = font,            #font family
                   #size = 14,                #font size
                   hjust = 0,
                   margin=margin(2,0,5,0)
),               
      
      plot.caption = element_text(           #caption
                   family = font,            #font family
                   size = 8,                 #font size
                   hjust = 1),               #right align
      
      axis.title = element_text(             #axis titles
                   family = font,            #font family
                   size = 10                 #font size
),
      
      axis.text = element_text(              #axis text
                   family = font,            #axis family
                   size = 8)               #font size
    )
}

# Set graph theme
theme_set(new = theme_custom())
#
```

:::: pa4
::: {.athelas .ml0 .mt0 .pl4 .black-90 .bl .bw2 .b--blue}
"\]{.f5 .f4-m .f3-l .lh-copy .measure .mt0}

[---]{.f6 .ttu .tracked .fs-normal}
:::
::::


#### A Geometric Jewellery Store

![Photo by
<a href="https://unsplash.com/@kolyakorzh?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Mykola/Kolya
Korzh</a> on
<a href="https://unsplash.com/photos/brown-wooden-bird-house-ornament-HFogW6fHv4E?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>](featured.jpg)

## {{< iconify icons8 idea >}} Inspiration

## An Introduction to Fractals

Let us listen to the late great Benoit Mandelbrot, on the **Art of
Roughness**.

{{< video https://youtu.be/wQTnVEXAtBY >}}

### Complex Planes: What am $i$?

Dude, what's the square root of -1?? `r emoji::emoji("scream_cat")`
`r emoji::emoji("scream_cat")` `r emoji::emoji("scream_cat")`!! And,
what can you do repeatedly to arrive at $[-1, 0]$?

Let us head off to <https://mathigon.org/course/fractals/mandelbrot> and
play with some iterated functions in the Complex Plane. This will lead
us into an intuitive understanding of Julia and Mandelbrot Fractals.

{{< video https://youtu.be/DznD05F1DLI >}}

{{< video https://youtu.be/t75gXyWJNpA >}}

### Julia, and Julia, and still more Julia....

{{< video https://youtu.be/2AZYZ-L8m9Q >}}

### Jewellery Shopping with Mandelbrot

Ever gone shopping for jewellery? How is the place organized? That is a
good metaphor for how Mandelbrot Set is generated!!

{{< video https://youtu.be/8ma6cV6fw24 >}}

<iframe width="100%" height="640" frameborder="0" src="https://observablehq.com/embed/@mcmcclur/julia-sets-and-the-mandelbrot-set?cells=topmatter%2Cwidget%2Cjulia_svg">

</iframe>

::: {.panel-tabset .nav-pills style="background: whitesmoke;"}

### Using p5.js


### Using R

```{r}
#| label: Koch-Fractals
x_min <- -10
x_max <- 10
y_min <- -12
y_max <- 12
CoordinatePlane(x_min, x_max, y_min, y_max)
# Create three points, to make a triangle
P1 <- c(-5,0) # points
P2 <- c(5,0)
P3 <- c(0,10)

# Parameters for a Koch Fractal
# Iterative Function
angle <- 60 # Angle of new linesegments
cut1 <- 1/3 # location along existing line segment
cut2 <- 2/3 # location along existing line segment
f <- 1 # Scale factor. Positive
it <- 4
FractalSegment(P1, P2, angle, cut1, cut2, f, it)
FractalSegment(P1, P3, -60, cut1, cut2, f, it)
FractalSegment(P3, P2, -60, cut1, cut2, f, it)

```


```{r}
#| label: simple-fractals
# Koch
x_min <- -6
x_max <- 6
y_min <- -12
y_max <- 6
CoordinatePlane(x_min, x_max, y_min, y_max)
P1 <- c(-5,0)
P2 <- c(5,0)
P3 <- c(0,-10)
it <- 4
Koch(P1, P2, it)
Koch(P3,P1,it)
Koch(P2,P3, it)

```

```{r}
#| results: hold
P=c(0,0)
CoordinatePlane(-100,100,-50,150)
Duopoly(P,1,1,1,-3)
CoordinatePlane(-100,100,-50,150)
Duopoly(P,0.8,1,0.8,3)
CoordinatePlane(-100,100,-50,150)
Duopoly(P,2,3,2,10)

#########################################
#Turtle Graphics stuff

turtle_init(width = 150, height = 150,mode = "cycle")
turtle_setpos(x = 50,y = 50 )
turtle_do({for (i in 1:180) {
  turtle_forward(distance = 2)
  turtle_right(angle = 2)
}}
)
#
# Fractal Tree with Turtle Graphics
#
fractal_tree <- function(s=100, n=2) {
  if (n <= 1) {
    turtle_forward(s)
    turtle_up()
    turtle_backward(s)
    turtle_down()
  }
  else {
    turtle_forward(s)

    a1 <- runif(1, 10, 60)
    turtle_left(a1)
    fractal_tree(s*runif(1, 0.25, 1), n-1)
    turtle_right(a1)

    a2 <- runif(1, 10, 60)
    turtle_right(a2)
    fractal_tree(s*runif(1, 0.25, 1), n-1)
    turtle_left(a2)

    turtle_up()
    turtle_backward(s)
    turtle_down()
  }
}

set.seed(123)
turtle_init(500, 600, "clip")
turtle_do({
  turtle_up()
  turtle_backward(250)
  turtle_down()
  turtle_col("darkgreen")
  fractal_tree(100, 12)
})

```


### Using XaOS


:::



Let us use the XaOS software to make different kinds of fractals. A
sample screen to explore the Mandelbrot fractal is here:

<iframe width="100%" height="1048" frameborder="0" src="https://xaos-project.github.io/XaoSjs/">

</iframe>

## {{< iconify mingcute thought-line >}} <u>[Wait, But Why?](https://waitbutwhy.com)</u>

To be Written Up.

## {{< iconify ooui references-ltr >}} References

1.  Batty, M. and Longley, P. A. (1994) “Fractal Cities: A Geometry of
    Form and Function”, London: Academic Press, 1994.

2.  Wang H, Luo S, Luo T. Fractal characteristics of urban surface
    transit and road networks: Case study of Strasbourg, France.
    Advances in Mechanical Engineering. 2017;9(2).
    <doi:10.1177/1687814017692289>

3.  <https://www.reddit.com/r/CitiesSkylines/comments/9r0y4e/grid_idea_im_working_on_fractal_squares/>

4.  Menger Sponge:
    <https://blogs.scientificamerican.com/roots-of-unity/a-few-of-my-favorite-spaces-the-menger-sponge/>

5.  \<http://fractalfoundation.org/resources/fractal-software/.


## {{< iconify ooui references-ltr >}} References
1.

1.


::: {#refs style="font-size: 60%;"}
###### {{< iconify lucide package-check >}} R Package Citations

```{r}
#| echo: false
#scan_packages()
cite_packages(
  output = "table",
  out.dir = ".",
  out.format = "html",
  pkgs = c("ambient", "mosaicCalc", "plot3D")
) %>%
  knitr::kable(format = "simple")

```

:::


