---
title: <iconify-icon icon="lucide:person-standing" width="1.2em" height="1.2em"></iconify-icon> <iconify-icon icon="mdi:human-female-dance" width="1.2em" height="1.2em"></iconify-icon> Working with Neural Nets
subtitle: "Can you Dance?"
subject: "Using Classification to Detect Human Pose"
abstract: ""
date: 03/Dec/2024
date-modified: "`r Sys.Date()`"
order: 10
categories:
- Classification
- CNN
- ML
- DL
bibliography: 
  - grateful-refs.bib
citation: true
editor: 
  markdown: 
    wrap: 72
---

```{r setup, include=FALSE}
library(tidyverse)
library(ggformula)
library(torch)
library(torchaudio)
library(torchdatasets)
library(keras)
library(tensorflow)
library(safetensors)
library(downloadthis)

## Markdown boiler plate stuff!!
# ![An Elephant](elephant.png){#fig-elephant}
# This is illustrated well by @fig-elephant.
# 
# ### Figure Panel Divs
#     ::: {#fig-elephants layout-ncol=2}
#     ![Surus](surus.png){#fig-surus}
#     ![Hanno](hanno.png){#fig-hanno}
#      Famous Elephants
#     :::
#     Adding download buttons
#     data that has been read in
#     {{< downloadthis ../../../../materials/Data/housing_train.csv dname="house_prices" label="Download the House Prices Dataset" icon="database-fill-down" type="info" >}}
#    existing file
#    {{< downloadthis Orange/grouped-summaries.ows dname="grouped_summaries" label="Download the Orange Workflow" icon="database-fill-down" type="info" >}} 

```

::: {#fig-Bharatanatyam layout-ncol="2"}
![](../../../../../materials/images/Bharathanatyam_By_Ranjitha.jpg){#fig-pose}

![](../../../../../materials/images/Varnam.jpg){#fig-mudra-abhinaya}

Bharat Natyam Poses
:::

```{r}
#| label: Extra Pedagogical Packages
#| echo: false
#| message: false
#| include: false

library(checkdown)
library(epoxy)
library(grateful)
library(MKdescr)
library(shinylive) # To create a Shiny app in a Quarto HTML doc
# Will not work if webr is also used in the SAME Quarto doc!
library(sysfonts)
library(gfonts)
library(kableExtra)
# library(conflicted)
# conflicted::conflicts_prefer(dplyr::filter, dplyr::count, dplyr::last, dplyr::glimpse, base::max)
library(downloadthis)
#devtools::install_github("mccarthy-m-g/embedr")
library(embedr) # Embed multimedia in HTML files
```


```{r}
#| label: Plot Sizing and theming
#| code-fold: true
#| message: false
#| results: hide
#| include: false

# https://stackoverflow.com/questions/74491138/ggplot-custom-fonts-not-working-in-quarto

# Chunk options
knitr::opts_chunk$set(
 fig.width = 7,
 fig.asp = 0.618, # Golden Ratio
 #out.width = "80%",
 fig.align = "center"
)
### Ggplot Theme
### https://rpubs.com/mclaire19/ggplot2-custom-themes

theme_custom <- function(){ 
    font <- "Roboto Condensed"   #assign font family up front
    
    theme_classic(base_size = 14) %+replace%    #replace elements we want to change
    
    theme(
      panel.grid.minor = element_blank(),    #strip minor gridlines
      text = element_text(family = font),
      #text elements
      plot.title = element_text(             #title
                   family = font,            #set font family
                   #size = 20,               #set font size
                   face = 'bold',            #bold typeface
                   hjust = 0,                #left align
                   #vjust = 2                #raise slightly
                   margin=margin(0,0,10,0)
),               
      
      plot.subtitle = element_text(          #subtitle
                   family = font,            #font family
                   #size = 14,                #font size
                   hjust = 0,
                   margin=margin(2,0,5,0)
),               
      
      plot.caption = element_text(           #caption
                   family = font,            #font family
                   size = 8,                 #font size
                   hjust = 1),               #right align
      
      axis.title = element_text(             #axis titles
                   family = font,            #font family
                   size = 10                 #font size
),
      
      axis.text = element_text(              #axis text
                   family = font,            #axis family
                   size = 8)               #font size
    )
}

# Set graph theme
theme_set(new = theme_custom())
#
```

## Introduction

One of our aims with Creative Coding is to of course make things
interactive. Here we will apply the `ml5.js` library in `p5.js` to use
an ML/DL algorithm called **Classification** to detect human poses in
front of the camera. The code can then create unique experiences based
on pose-detection with ML, and the subsequent code that responds to the
user.

We will be following the ideas from here:

#### Adavu Detection

<https://docs.ml5js.org/#/reference/bodypose>

#### Mudra Detection

<https://docs.ml5js.org/#/reference/handpose>

#### Bhava Detection

<https://docs.ml5js.org/#/reference/facemesh>

## But Wait! How does Classification Work?

Ah, peasants. Isn't it enough that you can dance?

So, we can perform Classification based on Machine Learning (ML)
structured and algorithms such as:

1)  [Random
    Forests](https://arvindvenkatadri.com/teaching/5-ml-for-artists/3-classification-with-orange/).
    Also see [Google Decision
    Forests](https://developers.google.com/machine-learning/decision-forests).
    We will try to get an intuition into `bootstrapping` of variables in
    data, creating decision `trees`, and making *random selections* of
    variables from a dataset to create `random forests`.

2)  And there are Deep Learning (DL) structured and algorithms that
    allow us to do the same things, perhaps in a more "black-box"
    manner. We will peep into:

    a.  [The Perceptron](../20-Perceptron/index.qmd)
    b.  [The Multilayer Perceptron](../30-MLP/index.qmd)
    c.  [Backpropagation](../40-BackProp/index.qmd)
    d.  [Gradient Descent](../50-GradientDescent/index.qmd)
    e.  [~~Convolutional Neural Nets~~](../60-Convnet/index.qmd) (in a
        later course)

Here, we will also try to build an intuitive sense of some of the
technical terminology involved: `convolution`, `regression`,
`activation`, `weighting`...and such terms that generally elude
peasants.

## {{< iconify mingcute thought-line >}} Wait, But Why?

Understanding the underlying math inside of Neural Nets can help us
appreciate better how to apply them design with them, and even keep them
as simple as needed.

## How to Train your ~~Dragon~~ Neural Network

{{< video https://www.youtube.com/watch?v=8HEgeAbYphA >}}

## {{< iconify ooui references-ltr >}} References

1.  Colah's Blog.(Apr 6, 2014). *Neural Networks, Manifolds, and
    Topology*.
    <https://colah.github.io/posts/2014-03-NN-Manifolds-Topology/>. Very
    simple and readable article.
2.  Machine Learning Tokyo: Interactive Tools for ML/DL, and Math.
    <https://github.com/Machine-Learning-Tokyo/Interactive_Tool>
3.  https://developers.google.com/machine-learning.<https://developers.google.com/machine-learning>
4.  The Neural Network Zoo - The Asimov Institute.
    <http://www.asimovinstitute.org/neural-network-zoo/>
5.  *Itâ€™s just a linear model: neural networks edition*.
    <https://lucy.shinyapps.io/neural-net-linear/>

### Convolutional Neural Networks

1.  *Digit Recognition with CNNs*. Interactive!
    <https://transcranial.github.io/keras-js/#/mnist-cnn>
2.  *CNN Convoluter*. <https://pwwang.github.io/cnn-convoluter/>
3.  *CNN Explainer: Learn Convolutional Neural Network (CNN) in your
    browser!*. <https://poloclub.github.io/cnn-explainer/>
4.  Deep Lizard. *Understanding Convolution Operations in Neural
    Networks*. <https://deeplizard.com/resource/pavq7noze2>
5.  Andrej Karpathy. *ConvNetJS: Deep Learning in your
    browser*.<https://cs.stanford.edu/people/karpathy/convnetjs/>
6.  Adit Deshpande. *A Beginner's Guide to CNNs*.
    <https://adeshpande3.github.io/A-Beginner%27s-Guide-To-Understanding-Convolutional-Neural-Networks/>
7.  *Anyone Can Learn AI Using This Blog*.
    <https://colab.research.google.com/drive/1g5fj7W6QMER4-03jtou7k1t7zMVE9TVt#scrollTo=V8Vq_6Q3zivl>
8.  Practical Deep Learning for Coders: An Online Free
    Course.<https://course.fast.ai>
9.  Neural Networks Visual with
    [vcubingx](https://youtube.com/@vcubingx?feature=shared)
    -   Part 1. <https://youtu.be/UOvPeC8WOt8>
    -   Part 2. <https://www.youtube.com/watch?v=-at7SLoVK_I>

#### LLMs

1.  Brendan Bycroft.*Visualizing LLMs*. <https://bbycroft.net/llm>
2.  Rohit Patel (20 Oct 2024). *Understanding LLMs from Scratch Using
    Middle School Math: A self-contained, full explanation to inner
    workings of an LLM*.
    <https://towardsdatascience.com/understanding-llms-from-scratch-using-middle-school-math-e602d27ec876>
3.  AI-powered reporting and annotation for radiology.
    <https://www.md.ai>

#### Using R for DL

1.  *`torch` for R: An open source machine learning framework based on
    `PyTorch`.* <https://torch.mlverse.org>
2.  Torch Interactive Tutorial.
    <https://mlverse.shinyapps.io/torch-tour>
3.  Geeks for Geeks. *Convolutional Neural Nets in R*.
    <https://www.geeksforgeeks.org/convolutional-neural-networks-cnns-in-r/>
4.  David Selby (9 January 2018). Tea and Stats Blog. *Building a neural
    network from scratch in R*.
    <https://selbydavid.com/2018/01/09/neural-network/>
5.  Akshaj Verma. (2020-07-24). *Building A Neural Net from Scratch
    Using R - Part 1 and Part 2*.
    <https://rviews.rstudio.com/2020/07/20/shallow-neural-net-from-scratch-using-r-part-1/>
    and
    <https://rviews.rstudio.com/2020/07/24/building-a-neural-net-from-scratch-using-r-part-2/>
6.  Ander Fernandez Jauregui.
    <https://anderfernandez.com/en/blog/how-to-create-neural-networks-with-torch-in-r/>
7.  <https://f0nzie.github.io/rtorch-minimal-book/>

## Textbooks

1.  Michael Nielsen. *Neural Networks and Deep Learning*. [Available
    Online](https://neuralnetworksanddeeplearning.com)
2.  The Little Book of Deep Learning. [Available
    Online](https://fleuret.org/francois/lbdl.html)
3.  Simone Scardapane. *Alice's Adventures in Diffferentiable
    WonderLand: A Primer on Designing Neural Networks*.
    <https://www.sscardapane.it/alice-book/>
4.  Parr and Howard (2018). *The Matrix Calculus You Need for Deep
    Learning*.<https://arxiv.org/abs/1802.01528>
5.  Zhang, Lipton, Li, Smola. *Dive into Deep Learning*.
    <https://www.d2l.ai/>
6.  Sigrid Keydana. *Deep Learning and Scientific Computing with R
    torch*
    <https://skeydan.github.io/Deep-Learning-and-Scientific-Computing-with-R-torch/>

::: {#refs style="font-size: 60%;"}
###### {{< iconify lucide package-check >}} R Package Citations

```{r}
#| echo: false
#scan_packages()
cite_packages(
  output = "table",
  out.dir = ".",
  out.format = "html",
  pkgs = c("keras", "torch","tensorflow", "safetensors")
) %>%
  knitr::kable(format = "simple")

```
:::
