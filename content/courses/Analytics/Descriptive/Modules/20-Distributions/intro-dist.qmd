---
title: "\U0001F4CA Distributions, Densities and Boxplots"
subtitle: "How many of this and that?"
author: "Arvind Venkatadri"
date: 15/Nov/2022
date-modified: "`r Sys.Date()`"
abstract: "Quant Variable Graphs and their Siblings"
order: 20
image: preview.jpg
image-alt: Image by rawpixel.com
categories:
- Qual Variables
- Quant Variables
- Bar Charts
- Column Charts
- Histograms
- Density Plots
- Box Plots
bibliography: references.bib
---

## {{< fa folder-open >}} Slides and Tutorials

|                                                                                                 |                                                                                                    |                                                                                        |
|------------------------|------------------------|------------------------|
| <a href="./files/distributions.qmd"><i class="fa-brands fa-r-project"></i> R (Static Viz)</a>   | <a href="./files/distributions.rda"> <i class="fa-solid fa-person-rays"></i> Radiant Tutorial</a>  | <a href="./files/data/qdd-data.zip"> <i class="fa-solid fa-database"></i> Datasets</a> |

## {{< iconify noto-v1 package >}} Setting up R Packages

```{r}
#| label: setup
#| include: true
#| message: false
#| warning: false

library(tidyverse)
library(mosaic)
library(palmerpenguins)
library(ggformula)
library(ggridges)

```

```{r}
#| label: Themes and Extra Packages
#| echo: false
#| message: false
ggplot2::theme_set(new = theme_classic(base_size = 14, base_family = "sans"))
library(checkdown)
library(epoxy)

```

## {{< iconify fxemoji japanesesymbolforbeginner >}} What graphs will we see today?

Some of the very basic and commonly used plots for data are:

-   Bar and Column Charts
-   Histograms and Frequency Distributions
-   Box Plots
-   Ridge Plots ( Quant + Qual variables)

Let us listen to the late great Hans Rosling from the [Gapminder
Project](https://www.gapminder.org), which aims at telling stories of
the world with data, to remove systemic biases about poverty, income and
gender related issues.

{{< video https://vimeo.com/127511255 >}}

### {{< iconify file-icons influxdata >}} Examine the Data

Let us look at the popular `mpg` dataset ( from R ) using
`mosaic::inspect()`. We get two new pieces of output (i.e. two new
dataframes), *describing* the Qual and Quant variables separately:

```{r}
#| label: mpg-inspect-1
inspect(mpg)

```

::: column-margin
We can save and see the outputs separately:

```{r mpg-inspect-2, eval=FALSE}

mpg_describe <- inspect(mpg)

mpg_describe$categorical
mpg_describe$quantitative

```
:::

There is a lot of Description generated by the `mosaic::inspect()`
command ! What can we say about the dataset and its variables? How big
is the dataset? How many variables? What types are they, Quant or Qual?
If they are Qual, what are the *levels*? Are they *ordered* levels?

### Your Turn

-   What is the number of *qualitative/categorical* variables in the
    `mpg` data?
    `r checkdown::check_question(answer = 6, right = "correct", wrong = "not correct", placeholder = "enter a number")`
    <br>
-   How many manufacturers are named in this dataset?
    `r checkdown::check_question(answer = 15, right = "correct", wrong = "not correct", placeholder = "enter a number")`
    <br>
-   How many levels does the variable `drv` have?
    `r checkdown::check_question(answer = 3, right = "correct", wrong = "not correct", placeholder = "enter a number")`
    <br>
-   How many *quantitative/numerical* variables **shown** in the `mpg`
    data?
    `r checkdown::check_question(answer = 5, right = "correct", wrong = "not correct", placeholder = "enter a number")`
    <br>
-   But the
    variable`r checkdown::check_question(answer = "cyl", options = c("hwy", "cty", "cyl", "displ"), type = "select", right = "correct", wrong = "not correct", placeholder = "select a variable name")`
    is actually a **qualitative variable**.

### {{< iconify ic round-addchart >}} Graphing Packages in R

There are several Data Visualization packages, even systems, within R.

-   Base R supports graph making out of the box;

-   the most well known is `ggplot` <https://ggplot2-book.org/> which
    uses Leland Wilkinson's concept of a "Grammar of Graphics";

-   there is the `lattice` package
    <https://lattice.r-forge.r-project.org/> which uses the "Trellis
    Graphics" concept framework for data visualization developed
    by R. A. Becker, W. S. Cleveland, et al.;

-   and the `grid` package
    <https://bookdown.org/rdpeng/RProgDA/the-grid-package.html> that
    allows extremely fine control of shapes plotted on the graph.

Each system has its benefits and learning complexities. We will look at
plots created using the simpler `ggformula` system that uses the popular
`ggplot` framework, but provides a simplified interface that is more
intuitive and easy to recall and apply.

A quick reminder on how `mosaic` and `ggformula` work in a very similar
fashion:

::: callout-tip
Note the standard method for all commands from the `mosaic` package:

`goal( y ~ x | z, data = mydata, …)`

With `ggformula`, one can create any graph/chart using:

`gf_***(y ~ x | z, data = mydata)`

The "\*\*\*" indicates what kind of graph you desire: histogram, bar,
scatter, density..etc.
:::

## {{< iconify icon-park-outline chart-histogram >}} Histograms and Bar Charts

**Histograms** are best to show the distribution of raw *quantitative
data*,by displaying the number of values that fall within defined
ranges, often called *buckets* or *bins*. We use a **Quant** variable on
the `x-axis` and the histogram shows us how frequently different values
occur for that variable by showing *counts/frequencies* on the y-axis.
The x-axis is typically broken up into "buckets" or ranges for the
x-variable, And usually you can adjust the bucket ranges to explore
frequency patterns. For example, you can shift histogram buckets from
0-1, 1-2, 2-3, etc. to 0-2, 2-4, etc.

Although histograms may look similar to **Bar Charts**, the two are
different. First, histograms show *continuous Quant data*. By contrast,
bar charts show *categorical data*, such as the number of apples,
bananas, carrots, etc. Second, histograms do not usually show spaces
between buckets because these are *continuous values*, while column
charts show spaces to separate each *category*.

Let us continue with the `mpg` dataset.

```{r}
#| label: histograms
#| layout-ncol: 2

#mpg <- mpg %>% mutate(drv= as_factor(drv))

gf_histogram(~ hwy, data = mpg) %>%
  gf_labs(title = "Plot A: Histogram of Highway Mileage") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

gf_histogram(~ hwy, fill = ~ drv, alpha = 0.3, data = mpg) %>%
  gf_labs(title = "Plot B: Histogram of Highway Mileage by Drive Train") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

gf_histogram(~ hwy, fill = ~ drv, color = "black", 
             alpha = 0.3, data = mpg) %>%
  gf_labs(title = "Plot C: Histogram of Highway Mileage by Drive Train") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

gf_histogram(~ hwy, fill = ~ drv, color = "black", 
             linetype = "dashed", # "solid", "dotted", "dotdash"...
             linewidth = 1,
             alpha = 0.3, data = mpg) %>%
  gf_labs(title = "Plot D: Histogram of Highway Mileage by Drive Train") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

```

::: callout-note
## Business Insights from Histograms

From Plot A, we see that the histogram has marked humps in values; two
separate ranges have large frequencies of occurrence.

When we `fill` the histogram using `drv`, we visualize multiple
distributions at the same time. We can see that there are several
overlapping histograms; front-wheel drive cars seem to offer higher
mileage on highways.

There are some front-wheel drive cars that have very high mileage, as
seen in the red histogram bars to the far right.

Finally, `4`-wheel drive cars have mileage substantially lower that the
other cars. They trade power for mileage. Within 4-wheel drive cars, the
histogram is double-humped...are there two types?
:::

::: callout-important
The last insight above is a "Question". You should decide whether you
want to investigate this question further, making more graphs, as we
will see. Here, we are making a **Hypothesis** that there are *two types
of 4-wheel drive cars*.
:::

For bar charts, we need to choose **Qual** variables to count with:

```{r}
#| label: bar-charts
#| layout-ncol: 2

gf_bar(~ drv, data = mpg) %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

gf_bar( ~ drv, fill = ~ drv, data = mpg) %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))


gf_bar( ~ drv, fill = ~ drv, alpha = 0.3, data = mpg) %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))


gf_bar( ~ drv, fill = ~ drv, alpha = 0.3, colour = ~ drv, 
        linetype = "dashed", linewidth = 0.5, data = mpg) %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))
```

::: callout-note
## Business Insights from Bar Charts

We have just three sets of counts for cars with different drive trains
`drv`. Clearly front wheel and 4-wheel drive cars dominate *in this
dataset*. Could it be a flaw in collecting data? We should check this
kind of thing always!!
:::

::: callout-important
## The `cyl` variable revisited

Can you try the above bar charts using another Qual variable, say `cyl`?
What problems do you face? Why?
:::

## {{< iconify mdi chart-bell-curve >}} Densities

You might imagine a density chart as a histogram where the buckets are
infinitesimally small, i.e. zero width. This may seem counter-intuitive,
but densities have their uses in spotting the ranges in the data where
there are more frequent values. In this, they serve a similar purpose as
do histograms, but may offer insights not readily apparent with
histograms, especially with default bucket widths.

```{r}
#| label: density-charts
#| layout-ncol: 2

gf_density(~ hwy, data = mpg) %>% 
  gf_labs(title = "Frequency Density of Highway Mileage") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

gf_density(~ hwy, fill = ~ drv, data = mpg) %>% 
  gf_labs(title = "Frequency Density of Highway Mileage by Drive Train") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

gf_density(~ hwy, fill = ~ drv, colour = ~ drv,  alpha = 0.3, data = mpg) %>% 
  gf_labs(title = "Frequency Density of Highway Mileage by Drive Train") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

gf_density(~ hwy, fill = ~ drv, colour = ~ drv,  alpha = 0.3, linewidth = 3, data = mpg) %>% 
  gf_labs(title = "Frequency Density of Highway Mileage by Drive Train") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

```

::: callout-note
## Business Insights from Densities

Pretty much similar conclusions as with histograms. Although densities
may not be used much in business contexts, they are *better* than
histograms when comparing multiple distributions! So you should use
them!
:::

## {{< iconify carbon box-plot >}} Box Plots

Most plots do some internal calculations before creating the plots, such
as "counts" in bar charts, and also "buckets + counts" in histograms.

With boxplots, the *values* of a Quant variable are ranked in increasing
order of magnitude. The `median` and the `interquartile range` are also
calculated, and so are the `outliers`.

```{r}
#| label: Box plots
#| layout-ncol: 2
gf_boxplot(hwy ~ ., data = mpg) %>% 
  gf_labs(title = "Plot A: Boxplot for Highway Mileage") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

gf_boxplot(hwy ~ drv, data = mpg) %>% 
  gf_labs(title = "Plot B: Boxplot for Highway Mileage by Drive Type") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

gf_boxplot(hwy ~ drv, fill = ~ drv, alpha = 0.3, data = mpg) %>% 
  gf_labs(title = "Plot C: Boxplot for Highway Mileage by Drive  Type") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

gf_boxplot(hwy ~ drv, fill = ~ drv, colour = ~ drv, alpha = 0.3, data = mpg) %>% 
  gf_labs(title = "Plot D: Boxplot for Highway Mileage by Drive Type") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

```

::: callout-note
## Business Insights from Boxplots

Plot A shows the presence of some outliers; the median `hwy` mileage is
25 miles/gallon.

When broken up by Qual variable `drv` we see that the median mileage for
different drive trains are different...with 4-wheel drive trains showing
the lowest. Is that really true? We need to analyze this further, with a
method known as "ANOVA". (Note that ANOVA is for differences in *means*
across categories)

And the outliers with high mileage are all with the `f`ront wheel drive
cars. As may be expected, based on the histograms.
:::

## {{< iconify streamline nature-ecology-rainbow-arch-rain-colorful-rainbow-curve-half-circle >}} Ridge Plots

Sometimes we may wish to show the distribution/density of a Quant
variable, against several *levels* of a Qual variable. For instance, the
prices of different items of furniture, based on the furniture "style"
variable. Or the `sales` of a particular line of products, across
different shops or cities.

```{r}
#| label: more-charts
#| layout-nrow: 2

gf_density_ridges(drv ~ hwy, fill = ~ drv, alpha = 0.3, 
                        rel_min_height = 0.005, data = mpg) %>% 
  gf_refine(scale_y_discrete(expand = c(0.01, 0)),
            scale_x_continuous(expand = c(0.01, 0))) %>% 
  gf_labs(title = "Ridge Plot") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

```

::: callout-note
## Business Insights from Ridge Plots

This is another way of visualizing multiple distributions, of a Quant
variable at different levels of a Qual variable. We see that the
distribution of `hwy` mileage varies substantially with `drv` type.
:::

## {{< iconify entypo new >}}Distributions and Densities in the Wild

Before we conclude, let us look at a real world dataset: populations of
countries. This dataset was taken from Kaggle
<https://www.kaggle.com/datasets/ulrikthygepedersen/populations>. Click
on the icon below to save the file into a *subfolder* called `data` in
your project folder:

{{< downloadthis files/data/populations.csv dname=Salaries label="Download the Populations data" icon=database-fill-down type=info class=data-button id=populations >}}

```{r}
#| layout-nrow: 2
#| column: body-outset-right
pop <- read_csv("files/data/populations.csv")
pop
inspect(pop)

```

Let us plot densities/histograms for `value`:

```{r}
#| label: skewed-histogram
#| layout-ncol: 2
gf_histogram(~ value, data = pop, title = "Long Tailed Histogram") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))
gf_density(~ value, data = pop, title = "Long Tailed Density") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

```

These graphs convey very little to us: the data is very heavily skewed
to the right and much of the chart is empty. There are many countries
with small populations and a few countries with very large populations.
Such distributions are also called **"long tailed"** distributions. To
develop better insights with this data, we should transform the variable
concerned, using say a "log" transformation:

```{r}
#| label: skewed-density
#| layout-ncol: 2
gf_histogram(~ log10(value), data = pop, title = "Histogram with Log transformed x-variable") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))
gf_density(~ log10(value), data = pop, title = "Density with Log transformed x-variable") %>%
  gf_theme(theme = theme_classic(base_size = 14, base_family = "sans"))

```

Be prepared to transform your data with `log` or `sqrt` transformations
when you see skewed distributions! Salaries, Instagram connections,
number of customers vs Companies, net worth /valuation of Companies,
extreme events on stock markets....all of these could have highly skewed
distributions. In such a case, the standard statistics of mean/median/sd
may not convey too much information.

## {{< iconify fluent-mdl2 decision-solid >}} Conclusion

-   Histograms, Frequency Distributions, and Box Plots are used for
    Quantitative data variables
-   Histograms "dwell upon" **counts**, **ranges**, **means** and
    **standard deviations**
-   Frequency Density plots "dwell upon" **probabilities** and
    **densities**
-   Box Plots "dwell upon" **medians** and **Quartiles**
-   Qualitative data variables can be plotted as **counts**, using Bar
    Charts, or using Heat Maps
-   2D density plots are used for describing *two quant* variables
-   Ridge Plots are **density plots** used for describing one Quant and
    one Qual variable (by inherent splitting)
-   We can split all these plots on the basis of another Qualitative
    variable.(Ridge Plots are already split)
-   Long tailed distributions need care in visualization and in
    inference making!

## {{< iconify openmoji person >}}Your Turn

<a href="./files/data/qdd-data.zip">
<i class="fa-solid fa-database"></i> Datasets</a>

1.  Click on the Dataset Icon above, and unzip that archive. Try to make
    distribution plots with each of the three tools.
2.  A dataset from calmcode.io <https://calmcode.io/datasets.html>
3.  Old Faithful Data in R (Find it!)

`inspect` the dataset in each case and develop a set of Questions, that
can be answered by appropriate stat measures, or by using a chart to
show the distribution.

## {{< iconify ooui references-rtl >}} References

1.  See the scrolly animation for a histogram at this website:
    **Exploring Histograms, an essay by Aran Lunzer and Amelia
    McNamara** <https://tinlizzie.org/histograms/?s=09>
2.  Minimal R using `mosaic`.
    <https://cran.r-project.org/web/packages/mosaic/vignettes/MinimalRgg.pdf>
3.  [*Plotting multiple plots using purrr::map and ggplot*. Sebastian
    Sauer](https://data-se.netlify.app/2021/02/06/plotting-multiple-plots-using-purrr-map-and-ggplot/)
