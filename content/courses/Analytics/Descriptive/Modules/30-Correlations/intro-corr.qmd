---
title: "\U0001F4CE Correlations"
subtitle: "Correlations"
author: "Arvind V."
date: 22/Nov/2022
date-modified: "`r Sys.Date()`"
order: 30
abstract: "How one variable changes with another"
image: preview.jpg
image-alt: image from rawpixel.com
categories:
- Correlations  
- Scatter Plots
- Bubble Plots  
- 2D Density Plots  
- Heatmaps  
- Regression Lines  
bibliography: 
  - grateful-refs.bib
citation: true
---

## {{< fa folder-open >}} Slides and Tutorials {#sec-slides-and-tutorials}

|                                                                                           |                                                                                                                  |
|-------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------|
| <a href="./files/correlations.qmd"><i class="fa-brands fa-r-project"></i> Tutorial </a>   | <a href="./files/correlations-interactive.qmd"> <i class="fa-brands fa-r-project"></i> R (Interactive Graphs</a> |

## {{< iconify noto-v1 package >}} Setting up R Packages

```{r}
#| label: setup
#| message: false
#| warning: false

library(tidyverse) # Tidy data processing and plotting
library(ggformula) # Formula based plots
library(mosaic) # Our go-to package
library(skimr) # Another Data inspection package

library(correlation) # Different Types of Correlations
# From the easystats collection of packages

library(GGally) # Corr plots
library(corrplot) # More corrplots
library(ggExtra) # Making Combination Plots

library(Lock5withR) # Datasets
library(palmerpenguins) # A famous dataset

# Set plot theme
ggplot2::theme_set(new = theme_classic(base_size = 14, base_family = "sans"))

```

```{r}
#| label: Themes and Extra Packages
#| echo: false
#| message: false

library(checkdown)
library(epoxy)
library(grateful)

```

## {{< iconify tabler exchange >}} What is Correlation?

One of the basic Questions we would have of our data is: Does some
variable depend upon another in some way? Does $y$ vary with $x$? A
**Correlation Test** is designed to exactly answer this question.

The word **correlation** is used in everyday life to denote some form of association. We might say that we have noticed a correlation between rainy days and reduced sales at supermarkets. However, in statistical terms we use correlation to denote association between two quantitative variables. We also assume that the association is **linear**, that one variable increases or decreases a fixed amount for a unit increase or decrease in the other. The other technique that is often used in these circumstances is **regression**, which involves estimating the best straight line to summarise the association.

## {{< iconify arcticons tapemeasure >}} Pearson Correlation coefficient

The degree of association is measured by a *correlation coefficient*,
denoted by r. It is sometimes called *Pearson's correlation coefficient* after its originator and is a measure of linear association. (*If a curved line is needed to express the relationship, other and more complicated measures of the correlation must be used.*)

The correlation coefficient is measured on a scale that varies from + 1 through 0 to -- 1. Complete correlation between two variables is
expressed by either + 1 or -1. When one variable increases as the other
increases the correlation is positive; when one decreases as the other
increases it is negative.

In formal terms, the correlation between two variables $x$ and $y$ is
defined as

$$
\rho = E\left[\frac{(x - \mu_{x}) * (y - \mu_{y})}{(\sigma_x)*(\sigma_y)}\right]
$$

where $E$ is the expectation operator ( i.e taking mean ). Think of this
as *the average of the products of two scaled variables*.

::: callout-tip
### Pearson Correlation uses z-scores

We can see $(x-\mu_x)/\sigma_x$ is a centering and scaling of the
variable $x$. Recall from our discussion on [Distributions](../../Modules/20-Distributions/intro-dist.qmd#iconify-ph-bell-simple-z-duotone-z-scores) that this is called the `z-score` of x.
:::

Pearson correlation *assumes* that the relationship between the two variables is **linear**. There are of course many other types of correlation measures: some which work when this is not so. Type `vignette("types", package = "correlation")` in your Console to see the vignette from the `correlation` package.


A quick reminder on how `mosaic` and `ggformula` work in a very similar
fashion:

::: callout-tip
### `mosaic` and `ggformula` command template

Note the standard method for all commands from the `mosaic` and
`ggformula` packages: `goal( y ~ x | z, data = _____)`

With `ggformula`, one can create any graph/chart using:
`gf_***(y ~ x | z, data = _____)`

In practice, we often use: `dataframe %>%  gf_***(y ~ x | z)` which has
cool benefits such as "autocompletion" of variable names, as we shall
see. The "\*\*\*" indicates what kind of graph you desire: histogram,
bar, scatter, density; the "\_\_\_" is the name of your dataset that you
want to plot with.
:::

And on the `ggplot` command syntax:

::: callout-tip
### `ggplot` command template

The `ggplot`2 template is used to identify the dataframe, identify the x
and y axis, and define visualized layers:

`ggplot(data = ---, mapping = aes(x = ---, y = ---)) + geom_----()`

Note: ---- is meant to imply text you supply. e.g. function names, data
frame names, variable names.

It is helpful to see the argument mapping, above. In practice, rather
than typing the formal arguments, code is typically shorthanded to this:

`dataframe %>%  ggplot(aes(xvar, yvar)) + geom_----()`
:::


## {{< iconify grommet-icons test >}} Case Study-1: `HollywoodMovies2011` dataset

Let us look at the `HollywoodMovies2011` dataset from the `Lock5withR` package. 

## {{< iconify carbon chart-3d >}} Inspecting the Data

```{r}
#| label: glimpse-movies
HollywoodMovies2011-> movies
glimpse(movies)

```

```{r}
#| label: skim-movies
skimr::skim(movies)

```

```{r}
#| label: inspect-movies

movies_describe <- inspect(movies)
movies_describe$categorical
movies_describe$quantitative

```
::: callout-note
### Business Insights from Data Inspection

`movies` has 136 observations on the following 14 variables.

- Movie a factor with many levels
- LeadStudio a factor with many levels
- RottenTomatoes a numeric vector
- AudienceScore a numeric vector
- Story a factor with many levels
- Genre a factor with levels `Action, Adventure, Animation, Comedy, Drama, Fantasy, Horror, Romance,Thriller`.
- TheatersOpenWeek a numeric vector
- BOAverageOpenWeek a numeric vector
- DomesticGross a numeric vector
- ForeignGross a numeric vector
- WorldGross a numeric vector
- Budget a numeric vector
- Profitability a numeric vector
- OpeningWeekend a numeric vector

There are no missing values in the *Qual* variables; but some entries in the *Quant* variables are missing. `skim` throws a warning that we may need to examine later. 

:::

Let us look at the *Quant* variables: are these related in anyway? Could the relationship between any two Quant variables also depend upon the level of a *Qual* variable? 

## {{< iconify material-symbols add-chart-outline >}} What graphs will we see today?

Some of the very basic and commonly used plots for data are:

-   Scatter Plot
-   Contour Plot
-   Pairwise Correlation Plots
-   Correlogram
-   Heatmap

## {{< iconify ph chart-scatter-bold >}} Scatter Plots

Which are the numeric variables in `movies`?

```{r}

movies_quant <- movies %>%
  drop_na() %>%
  select(where(is.numeric))
movies_quant

```
Now let us plot their relationships.

::: {.panel-tabset .nav-pills style="background: whitesmoke;"}

### Using ggformula

```{r}
#| label: scatter-plot-ggformula
#| warning: false
#| layout-ncol: 2

# Set graph theme
ggplot2::theme_set(new = theme_classic(base_size = 14, base_family = "sans"))

##
movies %>% 
  gf_point(DomesticGross ~ WorldGross) %>% 
  gf_lm(title = "Scatter Plot",
            subtitle = "Movie Gross Earnings: Domestics vs World")

##
movies %>% 
  gf_point(Profitability ~ OpeningWeekend) %>% 
  gf_lm(title = "Scatter Plot",
            subtitle = "Movies: Does Opening Week Earnings indicate Profitability?")

##
movies %>% gf_point(RottenTomatoes ~ AudienceScore) %>% 
  gf_lm(title = "Scatter Plot",
            subtitle = "Movie Ratings: Tomatoes vs Audience")

##
ggplot2::theme_set(new = theme_classic(base_size = 14, 
                                       base_family = "sans"))

##
## We can split some of the scatter plots using one or other of the Qual variables. For instance, is the relationship between the two ratings the same, regardless of movie genre?
movies %>%
  drop_na() %>%
  gf_point(RottenTomatoes ~ AudienceScore, 
           color = ~ Genre) %>%
 gf_lm()

```

### Using ggplot

```{r}
#| label: scatter-plot-ggplot
#| warning: false
#| layout-ncol: 2

# Set graph theme
ggplot2::theme_set(new = theme_classic(base_size = 14, 
                                       base_family = "sans"))
##
movies %>% ggplot(aes(x = DomesticGross,y = WorldGross)) + 
  geom_point() + 
  geom_lm(title = "Scatter Plot",
            subtitle = "Movie Gross Earnings: Domestics vs World")
##
movies %>% ggplot(aes(OpeningWeekend,Profitability)) + 
  geom_point() + 
  geom_lm(title = "Scatter Plot",
            subtitle = "Movies: Does Opening Week Earnings indicate Profitability?")

##
movies %>% ggplot(aes(AudienceScore,RottenTomatoes)) + 
  geom_point() + 
  geom_lm(title = "Scatter Plot",
            subtitle = "Movie Ratings: Tomatoes vs Audience")


##
movies %>%
  drop_na() %>%
  ggplot(aes(RottenTomatoes, AudienceScore, color = Genre)) + 
  geom_point() + 
    geom_smooth(method = "lm", se = FALSE)

```
:::

:::callout-note
### Business Insight from `movies` scatter plots
We have fitted a **trend line** to each of the scatter plots.

- `DomesticGross` and `World Gross` are related, though there are fewer movies at the high end of `DomesticGross`...
- `AudienceScore` and `RottenTomatoes` seem clearly related...both increase together.
- `OpeningWeek` and `Profitability` are also related in a linear way. There are just **two** movies which have been extremely profitable..but they do not **influence** the slope of the trend line too much, because of their location midway in the range of `OpeningWeek`. Influence is something that is a key concept in Linear Regression. 
- By and large, there are only small variations in slope across `Genre`s.

:::
 


## {{< iconify gis contour-map >}} 2D Density Plot

::: {.panel-tabset .nav-pills style="background: whitesmoke;"}

### Using ggformula

```{r}
#| layout-ncol: 2

# Set graph theme
ggplot2::theme_set(new = theme_classic(base_size = 14, 
                                       base_family = "sans"))
##
movies %>% 
  drop_na() %>%
  gf_density_2d(WorldGross ~ DomesticGross) %>% 
  gf_point() %>%
  gf_lm(title = "Scatter Plot",
            subtitle = "Movie Gross Earnings: Domestics vs World")
##
movies %>% 
  drop_na() %>%
  gf_density_2d(Profitability ~ OpeningWeekend) %>% 
  gf_point() %>%
  gf_lm(title = "Scatter Plot",
            subtitle = "Movies: Does Opening Week Earnings indicate Profitability?")

```

```{r}
# Set graph theme
ggplot2::theme_set(new = theme_classic(base_size = 14, 
                                       base_family = "sans"))
movies %>% 
  drop_na() %>%
  gf_density_2d(RottenTomatoes ~ AudienceScore) %>% 
  gf_point() %>%
  gf_lm(title = "Scatter Plot",
            subtitle = "Movie Ratings: Tomatoes vs Audience")

```

### Using ggplot

```{r}
#| layout-ncol: 2

# Set graph theme
ggplot2::theme_set(new = theme_classic(base_size = 14, 
                                       base_family = "sans"))
##
movies %>% drop_na() %>%
  ggplot(aes(DomesticGross, WorldGross)) + 
  geom_density_2d() + 
  geom_point() + 
  geom_lm() + 
  labs(title = "Scatter Plot",
            subtitle = "Movie Gross Earnings: Domestics vs World")
##
movies %>% drop_na() %>%
  ggplot(aes(OpeningWeekend,Profitability)) +
  geom_density2d() + 
  geom_point() + 
  geom_lm() + 
  labs(title = "Scatter Plot",
            subtitle = "Movies: Does Opening Week Earnings indicate Profitability?")

```


```{r}
# Set graph theme
ggplot2::theme_set(new = theme_classic(base_size = 14, 
                                       base_family = "sans"))
##
movies %>% drop_na() %>%
  ggplot(aes(AudienceScore, RottenTomatoes)) + 
  geom_density_2d() + 
  geom_point() + 
  geom_lm() + 
  labs(title = "Scatter Plot",
            subtitle = "Movie Ratings: Tomatoes vs Audience")


```

:::

:::callout-note
### Business Insight from `movies` 2D plots
The 2D density show us areas inscribed by closed contours where the
values of the two variables fixed. The more concentrated and aligned
these contours, the more likely that there would be significant
correlation between the two.

In the plot above, we can see two such areas of concentration and these
are also aligned roughly along a line.
:::


::: callout-important
## Independent and Dependent Variables

Note that we have rather *arbitrarily* taken `AudienceScore` as the independent variable, to be plotted on the `x-axis`, and `RottenTomatoes` on the `y-axis`. It could easily have been the other way around, based on our Research Question. Datasets are gathered with specific Research Hypotheses in mind, so check the help file and also with the person who gathered the data about what variable they are interested in!
:::

## {{< iconify flat-color-icons workflow >}} Quantizing Correlation

So we see that there are visible relationships between Quant variables. How do we **quantize** this relationship, into a **correlation score**?

There are two ways: using the `GGally` and `corplot` packages, and doing
a formal **correlation test** with the `mosaic` package. 


::: {.panel-tabset .nav-pills style="background: whitesmoke;"}

### Using GGally

By default, [`GGally::ggpairs()`](https://ggobi.github.io/ggally/reference/ggpairs.html) provides:\

-   two different comparisons of each pair of columns
-   displays either the density or count of the respective variable
    along the diagonal. 
-   With different parameter settings, the diagonal can be replaced with
    the axis values and variable labels.\

```{r}
#| label: pairs chart
#| message: false
#| layout-ncol: 2

ggplot2::theme_set(theme_bw()) # Works better for ggpairs

names(movies_quant)

GGally::ggpairs(
  movies %>% drop_na(),
  # Select Quant variables only for now
  columns = c(
    "RottenTomatoes", "AudienceScore", "DomesticGross","ForeignGross"),
  
  switch = "both",
  # axis labels in more traditional locations(left and bottom)
  
  progress = FALSE,
  # no compute progress messages needed
  
  # Choose the diagonal graphs (always single variable! Think!)
  diag = list(continuous = "barDiag"),
  # choosing histogram,not density
  
  # Choose lower triangle graphs, two-variable graphs
  lower = list(continuous = wrap("smooth", alpha = 0.3, se = FALSE)),
  
  title = "Movies Data Correlations Plot #1"
) +
  
  theme_bw()


```
:::callout-note

### Business Insight from Pairs Plot#1
- As we saw earlier from the Scatter Plot, `AudienceScore` and `RottenTomatoes` are well correlated, with a correlation score of $0.833$
- `DomesticGross` and `ForeignGross` are also extremely well correlated, with a score of $0.873$. 
- Both these correlation scores are highly significant, with three stars. (We will speak of significance in a while.)
- None of the other *pairs* of variables have good correlation scores. 
- Note in passing that both the "Gross" related variables have highly skewed distributions. That is the nature of the movie business!

:::


Let us also try a few other variables, related to budget and profits. For instance, it would be interesting to see the relationship between `Budget` and `Profitability` and even either of the "gross" earnings and `Profitability`.  

```{r}
#| message: false
#| 
GGally::ggpairs(
  movies %>% drop_na(),
  # Select Quant variables only for now
  columns = c(
    "Budget", "Profitability", "DomesticGross", "ForeignGross"),
  
  switch = "both",
  # axis labels in more traditional locations(left and bottom)
  
  progress = FALSE,
  # no compute progress messages needed
  
  # Choose the diagonal graphs (always single variable! Think!)
  diag = list(continuous = "barDiag"),
  # choosing histogram,not density
  
  # Choose lower triangle graphs, two-variable graphs
  lower = list(continuous = wrap("smooth", alpha = 0.3, se = FALSE)),
  
  title = "Movies Data Correlations Plot #2"
) +
  
  theme_bw()

```
:::callout-note
### Business Insight from Pairs Plot #2
- The `Budget` variable has good correlation scores with `DomesticGross` and `ForeignGross`
- `Profitability` and `Budget` seem to have a very slight negative correlation, but this does not appear to be significant. 
:::


### Using corrplot

In this chart, the correlation between pairs of variables is shown
*symbolically* as coloured shapes or colours. Circles, Squares, and
Ellipse for example.

-   The size, colour, and "orientation" of the shapes in question
    symbolically represent the strength and polarity of the correlation
    scores.
-   The direction of the semi-major axis + the colour of the ellipse
    indicate whether the correlation score is positive or negative;
-   And the more *eccentric* the ellipse, the higher is the correlation
    score in value.

::: callout-note
Whereas `GGally` **computes** the correlation scores, `corplot` "merely" displays them in an evocative way. We need to compute the correlations a priori.
:::

Note also:

::: callout-tip

R package `corrplot` provides a visual exploratory tool on correlation
matrix that supports **automatic variable reordering** to help detect hidden patterns among variables. `corrplot` is very easy to use and provides a rich array of plotting options in visualization method, graphic layout, color, legend, text labels, etc. It also provides `p-values` and `confidence intervals` to help users determine the **statistical significance** of the correlations.

:::

```{r}
#| label:  cor-plot
#| warning: false
#| message: false
#| layout-ncol: 3


# library(corrplot)


mydata_cor <- cor(movies_quant)
mydata_cor %>% 
  knitr::kable(caption = "Correlation Scores Matrix")

## View the matrix
corrplot(mydata_cor, method = "number", 
         number.cex = 0.6,
         cl.cex = 0.6, tl.cex = 0.6)

# Default plot with circles
corrplot(mydata_cor, 
         method = "circle",                  
         main = "Correlogram with Circles")

# Ellipse plot
corrplot::corrplot(mydata_cor, 
                   method = "ellipse",
                   main = "Correlogram with Ellipes")

# Heatmap
corrplot::corrplot(mydata_cor, method = "color", ## US Spelling only
         main = "Correlogram")


# Heatmap with numbers
corrplot::corrplot.mixed(mydata_cor, 
               lower = "color",number.cex = 0.6,
         cl.cex = 0.6, tl.cex = 0.6,
               upper = "number",
               tl.pos = "l",
               main = "Heatmap?")


```

:::callout-note
### Business Insights from corplots
- Most of the variables here have positive correlations, many of them are significant

:::

:::



### Doing a Correlation Test

Correlations scores can be obtained by conducting a formal test in R. We will use the `mosaic` function `cor_test` to get these results:

```{r}
#| column: body-outset-right
mosaic::cor_test(Profitability ~ Budget, data = movies) %>% 
  broom::tidy() %>% 
  knitr::kable(digits = 2,
               caption = "Movie Profitability vs Budget")

mosaic::cor_test(DomesticGross ~ Budget, data = movies) %>% 
  broom::tidy() %>% 
  knitr::kable(digits = 2,
               caption = "Movie Domestic Gross vs Budget")

mosaic::cor_test(ForeignGross ~ Budget, data = movies) %>% 
  broom::tidy() %>% 
  knitr::kable(digits = 2,
               caption = "Movie Foreign Gross vs Budget")
```

:::callout-note
## Business Insights from Correlation Tests
The `budget` and `profitability` are not well correlated, sadly. We see this from the `p.value` which is $0.34$ and the confidence values for the correlation `estimate` which also cover $0$.

However, both `DomesticGross` and `ForeignGross` are well correlated with `Budget`. Look at the `p.value` (=0) and the confindence intervals which are unipolar. 

:::

## A New Combination Plot...

Sometimes, a simple scatter, or density alone, or viewed next to one another is not adequate to develop, or convey, our insight. We might just need a combination density + scatter plot. Such a plot can be be constructed from the ground up using `ggformula` or `ggplot`; however, there is a new package (Nov 2023) called `ggScatRidges` that allows the creation of a powerful combination plot:

```{r}
#| label: Scatter-Plot with Marginal Densities

library(ggExtra)

penguins %>% 
  drop_na() %>% 
  gf_point(body_mass_g  ~ flipper_length_mm, colour = ~ species) %>% 
  gf_smooth(method = "lm") %>% 
  ggExtra::ggMarginal(type = "density", groupColour = TRUE, groupFill = TRUE)


```

## {{< iconify fluent-mdl2 decision-solid >}} Conclusions

Our workflow for evaluating correlations between target variable and
other predictor variables uses several packages such as `GGally`,
`corrplot`, and of course `mosaic` for correlation tests. We will
explore more R code for these in the tutorials @sec-slides-and-tutorials.

## {{< iconify ooui references-ltr >}} References
::: {#refs style="font-size: 60%;"}
\
Minimal R using `mosaic`.
    <https://cran.r-project.org/web/packages/mosaic/vignettes/MinimalRgg.pdf>\
Antoine Soetewey. *Pearson, Spearman and Kendall correlation coefficients by hand* <https://www.r-bloggers.com/2023/09/pearson-spearman-and-kendall-correlation-coefficients-by-hand/>\

###### {{< iconify lucide package-check >}} R Package Citations

```{r}
#| echo: false
#scan_packages()
cite_packages(
  output = "table",
  out.dir = ".",
  out.format = "html",
  pkgs = c("corrplot", "GGally", "ggExtra")
) %>%
  knitr::kable(format = "simple")

```
:::


