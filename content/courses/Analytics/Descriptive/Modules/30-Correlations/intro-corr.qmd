---
title: "\U0001F4CE Correlations"
subtitle: "Correlations"
author: "Arvind Venkatadri"
date: 22/Nov/2022
date-modified: "`r Sys.Date()`"
order: 30
abstract: "How one variable changes with another"
image: preview.jpg
image-alt: image from rawpixel.com
categories:
- Correlations  
- Scatter Plots
- Bubble Plots  
- 2D Density Plots  
- Heatmaps  
- Regression Lines  
---

## {{< fa folder-open >}} Slides and Tutorials {#sec-slides-and-tutorials}

|                                                                                           |                                                                                                                  |
|-------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------|
| <a href="./files/correlations.qmd"><i class="fa-brands fa-r-project"></i> Tutorial </a>   | <a href="./files/correlations-interactive.qmd"> <i class="fa-brands fa-r-project"></i> R (Interactive Graphs</a> |

## {{< iconify noto-v1 package >}} Setting up R Packages

```{r}
#| label: setup

library(tidyverse) # Tidy data processing and plotting
library(ggformula) # Formula based plots
library(mosaic) # Our go to package
library(GGally) # Corr plots
library(corrplot) # More corrplots
library(skimr) # Another Data inspection package

```

```{r}
#| label: Themes and Extra Packages
#| echo: false
#| message: false
ggplot2::theme_set(new = theme_classic(base_size = 14, base_family = "sans"))
library(checkdown)
library(epoxy)

```

## {{< iconify tabler exchange >}} What is Correlation?

One of the basic Questions we would have of our data is: Does some
variable depend upon another in some way? Does $y$ vary with $x$? A
**Correlation Test** is designed to exactly answer this question.

The word **correlation** is used in everyday life to denote some form of
association. We might say that we have noticed a correlation between
rainy days and reduced sales at supermarkets. However, in statistical
terms we use correlation to denote association between two quantitative
variables. We also assume that the association is **linear**, that one
variable increases or decreases a fixed amount for a unit increase or
decrease in the other. The other technique that is often used in these
circumstances is **regression**, which involves estimating the best
straight line to summarise the association.

### {{< iconify arcticons tapemeasure >}} Correlation coefficient

The degree of association is measured by a *correlation coefficient*,
denoted by r. It is sometimes called Pearson's correlation coefficient
after its originator and is a measure of linear association. (If a
curved line is needed to express the relationship, other and more
complicated measures of the correlation must be used.)

The correlation coefficient is measured on a scale that varies from + 1
through 0 to -- 1. Complete correlation between two variables is
expressed by either + 1 or -1. When one variable increases as the other
increases the correlation is positive; when one decreases as the other
increases it is negative.

In formal terms, the correlation between two variables $x$ and $y$ is
defined as

$$
\rho = E\left[\frac{(x - \mu_{x}) * (y - \mu_{y})}{(\sigma_x)*(\sigma_y)}\right]
$$

where $E$ is the expectation operator ( i.e taking mean ). Think of this
as the average of the products of two scaled variables.

::: callout-tip
## Correlation uses z-scores

We can see $(x-\mu_x)/\sigma_x$ is a centering and scaling of the
variable $x$. It is called the `z-score` of x.
:::

Let us look at the `mpg` dataset from R. Here we have `hwy` and `cty`
mileages for cars of different types, makes, and models.

## {{< iconify carbon chart-3d >}} Inspecting and Charting Data

```{r}
#| label: mpg-inspect
glimpse(mpg)
skimr::skim(mpg)
mpg_describe <- inspect(mpg)
mpg_describe$categorical
mpg_describe$quantitative

```

The `mosaic::inspect` command provides the **schema** of the `mpg`
dataset in table form, one table for each kind of variable (Qual and
Quant). There are 6 Qual variables, and Quant variables. All `character`
variables are treated as Qualitative and interpreted as `factors`.

::: callout-important
## Character Variables are not always Factors

Badly formatted data may have Quantitative data formatted as
`character`! Carefully inspect the data and consult if possible the
person who gathered it to find the intent behind each variable, and
reformat as necessary!
:::

So now let us state some questions we may have of our data.

::: callout-note
## Research Questions

Is there a relationship between the `cty` and `hwy` variables in the
`mpg` dataset? Does this relationship vary based on groupings by other
Qual variables, such as `drv` and `cyl`?
:::

## {{< iconify material-symbols add-chart-outline >}} What graphs will we see today?

Some of the very basic and commonly used plots for data are:

-   Scatter Plot
-   Contour Plot
-   Pairwise Correlation Plots
-   Correlogram
-   Heatmap

### {{< iconify ph chart-scatter-bold >}} Scatter Plot

```{r}
#| label: charts
#| warning: false
#| layout-ncol: 2
#| echo: false
#mpg <- mpg %>% mutate(drv= as_factor(drv))

gf_point(cty ~ hwy, data = mpg) %>% 
  gf_lm(title = "Scatter Plot",
            subtitle = "Correlation/Regression/Trend Line") %>% 
  gf_theme(theme_classic())

gf_point(cty ~ hwy, fill = ~drv, 
               colour = ~drv, 
               data = mpg) %>% 
  gf_lm(title = "Scatter Plot",
            subtitle = "Correlation/Regression/Trend Lines per Group") %>% 
  gf_theme(theme_classic())
```

It does appear from the scatter plots that there is a near-linear
relationship between `cty` and `hwy` and that it is **positive**. This
relationship also holds when we group the data by `drv`.

### {{< iconify gis contour-map >}} 2D Density Plot

```{r}
gf_density_2d(cty ~ hwy, 
                    data = mpg, 
                    title = "2D Density Plot") %>% 
  gf_theme(theme_classic())

```

The 2D density show us areas inscribed by closed contours where the
values of the two variables fixed. The more concentrated and aligned
these contours, the more likely that there would be significant
correlation between the two.

In the plot above, we can see two such areas of concentration and these
are also aligned roughly along a line.

::: callout-important
## Independent and Dependent Variables

Note that we have rather *arbitrarily* taken `hwy` as the independent
variable, to be plotted on the `x-axis`, and `cty` on the `y-axis`. It
could easily have been the other way around, based on our Research
Question. Datasets are gathered with specific Research Hypotheses in
mind, so check the help file and also with the person who gathered the
data about what variable they are interested in!
:::

## {{< iconify flat-color-icons workflow >}} Workflow

How do we **quantize** this relationship, into a **correlation score**?
There are two ways: using the `GGally` and `corplot` packages, and doing
a formal **correlation test** with the `mosaic` package. We can use
several different use these packages to evaluate correlations, in table
and chart form.

::: {.panel-tabset .nav-pills style="background: whitesmoke;"}
### Pairwise Correlation Plot with GGally

By
default, [`GGally::ggpairs()`](https://ggobi.github.io/ggally/reference/ggpairs.html) provides:\

-   two different comparisons of each pair of columns
-   displays either the density or count of the respective variable
    along the diagonal. 
-   With different parameter settings, the diagonal can be replaced with
    the axis values and variable labels.\

```{r}
#| label: pairs chart
#| message: false
#| echo: false
ggplot2::theme_set(theme_bw())
GGally::ggpairs(mpg,
                      # Select Quant variables only for now
                      columns = c("hwy", "cty", "displ"),
                      # Histogram on Diagonal locations, see below
                      diag = list(continuous = "barDiag"),
                      
                      upper = list(),
                      lower = list(continuous = "smooth"),
                      title = "Pairwise Correlations Plots and Scores",
                
                switch = "both", # move labels to x and y standard locations
                progress = FALSE)  # don't show calculation progress


```

### Pairwise Correlogram with corrplot

In this chart, the correlation between pairs of variables is shown
*symbolically* as coloured shapes or colours. Circles, Squares, and
Ellipse for example.

-   The size, colour, and "orientation" of the shapes in question
    symbolically represent the strength and polarity of the correlation
    scores.
-   The direction of the semi-major axis + the colour of the ellipse
    indicate whether the correlation score is positive or negative;
-   And the more *eccentric* the ellipse, the higher is the correlation
    score in value.

::: callout-note
Whereas `GGally` **computes** the correlation scores, `corplot` "merely"
displays them in an evocative way. We need to compute the correlations a
priori.
:::

Note also:

::: callout-tip
R package `corrplot` provides a visual exploratory tool on correlation
matrix that supports automatic variable reordering to help detect hidden
patterns among variables. `corrplot` is very easy to use and provides a
rich array of plotting options in visualization method, graphic layout,
color, legend, text labels, etc. It also provides `p-values` and
`confidence intervals` to help users determine the **statistical
significance** of the correlations.
:::

```{r}
#| label:  cor-plot
#| warning: false
#| message: false
#| layout-ncol: 3
#| echo: false

# library(corrplot)

mpg_num <- mpg %>% select(hwy, cty, displ, cyl)
mydata_cor <- cor(mpg_num)
mydata_cor %>% knitr::kable(caption = "Correlation Scores Matrix")

## View the matrix
corrplot(mydata_cor, method = "number")

# Default plot with circles
corrplot(mydata_cor, 
         method = "circle")

# Ellipse plot
corrplot::corrplot(mydata_cor, 
                   method = "ellipse",
                   main = "Correlogram with Ellipes")

# Heatmap
corrplot::corrplot(mydata_cor, method = "color", ## US Spelling only
         main = "Correlogram")


# Heatmap with numbers
corrplot::corrplot.mixed(mydata_cor, 
               lower = "color",
               upper = "number",
               bg = "wheat",
               tl.pos = "d",
               main = "Heatmap?")


```
:::

## {{< iconify fluent-mdl2 decision-solid >}} Conclusions

Our workflow for evaluating correlations between target variable and
other predictor variables uses several packages such as `GGally`,
`corrplot`, and of course `mosaic` for correlation tests. We will
explore the R code for these in the tutorials,
@sec-slides-and-tutorials.

## {{< iconify ooui references-ltr >}} References

1.  Schloerke B, Cook D, Larmarange J, Briatte F, Marbach M, Thoen E,
    Elberg A, Crowley J (2021). *GGally: Extension to 'ggplot2'. R
    package version 2.1.2*, <https://CRAN.R-project.org/package=GGally>.

2.  Taiyun Wei and Viliam Simko (2021). *R package 'corrplot':
    Visualization of a Correlation Matrix (Version 0.92)*. Available
    from <https://github.com/taiyun/corrplot>

3.  Minimal R using `mosaic`.
    <https://cran.r-project.org/web/packages/mosaic/vignettes/MinimalRgg.pdf>
