---
title: "Tutorial on Correlations in R"
author: "Arvind Venkatadri"
date: "`r Sys.Date()`"
abstract: Tests, Tables, and Graphs for Correlations in R
---

# Introduction

We will create Tables for Correlations, and graphs for Correlations in
R. As always, we will consistently use the [**Project
Mosaic**](https://mosaic-web.org) ecosystem of packages in R (`mosaic`,
`mosaicData` and `ggformula`).

## {{< iconify noto-v1 package >}} Setting up R Packages

```{r}
#| label: setup
#| echo: true
library(tidyverse)
library(mosaic) # package for stats, simulations, and basic plots
library(mosaicData) # package containing datasets
library(ggformula) # package for professional looking plots, that use the formula interface from mosaic
library(NHANES) # survey data collected by the US National Center for Health Statistics (NCHS)
library(corrplot) # For Correlogram plots

```

::: {.callout-tip style="background: beige"}
Note the standard method for all commands from the `mosaic` package:

`goal( y ~ x | z, data = mydata, â€¦)`

With `ggformula`, one can create any graph/chart using:

`gf_geometry(y ~ x | z, data = mydata)`

OR

`mydata %>% gf_geometry( y ~ x | z)`

The second method may be preferable, especially if you have done some
data manipulation first! More later!
:::

## {{< iconify pajamas issue-type-test-case >}} Case Study#1: Dataset from `mosaicData`

Let us inspect what datasets are available in the package `mosaicData`.
Run this command in your Console:

```{r, eval=FALSE}
# Run in Console
data(package = "mosaicData")

```

The popup tab shows a lot of datasets we could use. Let us continue to
use the famous `Galton` dataset and `inspect` it:

```{r}
data("Galton")
inspect(Galton)

```

The `inspect` command already gives us a series of statistical measures
of different variables of interest. As discussed previously, we can
retain the output of `inspect` and use it in our reports: (there are
ways of dressing up these tables too)

```{r Galton-inspect}

galton_describe <- inspect(Galton)

galton_describe$categorical
galton_describe$quantitative

```

Try `help("Galton")` in your Console. The dataset is described as:

> A data frame with 898 observations on the following variables.\
> - `family` a factor with levels for each family\
> - `father` the father's height (in inches)\
> - `mother` the mother's height (in inches)\
> - `sex` the child's sex: F or M\
> - `height` the child's height as an adult (in inches)\
> - `nkids` the number of adult children in the family, or, at least,
> the number whose heights Galton recorded.

There is a lot of Description generated by the `mosaic::inspect()`
command ! What can we say about the dataset and its variables? How big
is the dataset? How many variables? What types are they, Quant or Qual?
If they are Qual, what are the *levels*? Are they *ordered* levels?
Discuss!

### {{< iconify icon-park-outline chart-histogram >}} Correlations and Plots

What Questions might we have, that we could answer with a Statistical
Measure, or Correlation chart?

::: callout-note
Q.1 Which are the variables that have significant pair-wise
correlations? What polarity are these correlations?
:::

```{r,message=FALSE}


# Pulling out the list of Quant variables from NHANES
galton_quant <- galton_describe$quantitative
galton_quant$name

GGally::ggpairs(
  Galton,
  columns = c("father", "mother", "height", "nkids"),
  diag = list("densityDiag"),
  title = "Galton Data Correlations Plot"
)

```

In later modules we will see how to plot correlations when there are a
large number of variables.

::: callout-note
Can we plot a Correlogram for this dataset?
:::

```{r}
#library(corrplot)

galton_num_var <- Galton %>% select(father, mother, height, nkids)
galton_cor <- cor(galton_num_var)
galton_cor %>%
  corrplot(method = "ellipse",
           type = "lower",
           main = "Correlogram for Galton dataset")

```

Clearly `height` is positively correlated to `father` and `mother`;
interestingly, `height` is negatively correlated ( slightly) with
`nkids`.

::: callout-note
Q.2: Let us confirm with a test:
:::

```{r}
mosaic::cor_test(height ~ father, data = Galton)

```

```{r}
mosaic::cor_test(height ~ mother, data = Galton)

```

::: callout-note
Q.3 What does this correlation look when split by `sex` of Child?
:::

We will use the `mosaic` function `cor_test` to get these results:

```{r}

# For the sons
mosaic::cor_test(height ~ father, data = Galton %>% 
                   filter(sex == "M"))
cor_test(height ~ mother, data = Galton %>% 
           filter(sex == "M"))

# For the daughters
cor_test(height ~ father, data = Galton %>% 
           filter(sex == "F"))
cor_test(height ~ mother, data = Galton %>% 
           filter(sex == "F"))
         
```

::: callout-important
## Correlation Scores and Uncertainty

Note how the `cor.test` reports a correlation score and the `p-value`
for the same. There is also a `confidence interval` reported for the
correlation score, an interval within which we are 95% sure that the
true correlation value is to be found. Note that `GGally` too reports
the significance of the correlation scores using `***` or `**`. This
indicates the p-value in the scores obtained by `GGally`; Presumably,
there is an internal `cor.test` that is run for each pair of variables
and the p-value and confidence levels are also computed internally.
:::

We can also visualise this uncertainty and the confidence levels in a
plot too, using `gf_errorbar` and a handy set of functions within
`purrr` which is part of the tidyverse: Assuming `heights` is the
**target** variable we want to correlate every other (quantitative)
variable against, we can proceed very quickly as follows:

```{r}
#| label: corrtest plots

all_corrs <- Galton %>% 
  select(where(is.numeric)) %>% 
  
  # leave off height to get all the remaining ones
  select(- height) %>%  
  
  # perform a cor.test for all variables against height
  purrr::map(.x = .,
             .f = \(x) cor.test(x, Galton$height)) %>%
  
  # tidy up the cor.test outputs into a tidy data frame
  map_dfr(broom::tidy, .id = "predictor") 

all_corrs

all_corrs %>% 
  # arrange the predictors in order of their correlation scores
  # with the target variable (`height`)
  # Add errorbars to show uncertainty ranges / confidence intervals
  # Use errorbar width and linewidth fo emphasis
  gf_errorbar(conf.high + conf.low ~ reorder(predictor, estimate),
              color = ~ -log10(p.value),
              width = 0.2,
              linewidth = ~ -log10(p.value)) %>% 
  
   gf_point(estimate ~ reorder(predictor, estimate), 
           color = "black") %>% 
  
  # Reference line at zero correlation score
  gf_hline(yintercept = 0, color = "grey", linewidth = 2) %>% 
  
  # Themes,Titles, and Scales
  gf_labs(x = NULL, y = "Correlation with height in Galton", 
          caption = "Significance = -log10(p.value)") %>% 
  
  gf_refine(
    
    # Scale for colour
    scale_colour_gradient("significance",low = "purple", 
                                 high = "red"),
            
    # Scale for dumbbells!!
    scale_linewidth_continuous("significance",
                                       range = c(0.5,4))) %>% 
  gf_theme(theme_minimal())


```

We can clearly see the size of the correlations and the confidence
intervals marked in this plot. `father` has somewhat greater correlation
with children's `height`, as compared to `mother`. `nkids` seems to
matter very little. This kind of plot will be very useful when we pursue
linear regression models.

::: callout-note
Q.4. How can we show this correlation in a set of Scatter Plots +
Regression Lines? Can we recreate Galton's famous diagram?
:::

```{r}
# For the sons
gf_point(height ~ father, data = Galton %>% 
           filter(sex == "M")) %>% 
  gf_smooth(method = "lm") %>% 
  gf_theme(theme_minimal())

gf_point(height ~ mother, data = Galton %>% 
           filter(sex == "M")) %>% 
  gf_smooth(method = "lm") %>% 
  gf_theme(theme_minimal())

# For the daughters
gf_point(height ~ father, data = Galton %>% 
           filter(sex == "F")) %>% 
  gf_smooth(method = "lm") %>% 
  gf_theme(theme_minimal())

gf_point(height ~ mother, data = Galton %>% 
           filter(sex == "F")) %>% 
  gf_smooth(method = "lm") %>% 
  gf_theme(theme_minimal())

```

An approximation to Galton's famous plot (see Wikipedia):

```{r}
gf_point(height ~ (father + mother)/2, data = Galton) %>% 
  gf_smooth(method = "lm") %>% 
  gf_density_2d(n = 8) %>% 
  gf_abline(slope = 1) %>% 
  gf_theme(theme_minimal())

```

How would you interpret this plot[^1]?

## {{< iconify pajamas issue-type-test-case >}} Case Study#2: Dataset from `NHANES`

We will "live code" this in class!

## {{< iconify fluent-mdl2 decision-solid >}} Conclusion

We have a decent Correlations related *workflow* in R:\
- load the dataset\
- `inspect` the dataset, identify Quant and Qual variables\
- Develop Pair-Wise plots + Correlations using `GGally::ggpairs()`\
- Develop Correlogram `corrplot::corrplot`\
- Check everything with a `cor_test`\
- Use `purrr` + `cor.test` to plot correlations and confidence intervals
for multiple Quant variables\
- Plot scatter plots using `gf_point`.\
- Add extra lines using `gf_abline()` to compare hypotheses that you may
have.

[^1]: https://www.researchgate.net/figure/Galtons-smoothed-correlation-diagram-for-the-data-on-heights-of-parents-and-children_fig15_226400313
