---
title: 'Inference for numerical data'
author: "Arvind Venkatadri"
date: 22/Nov/2022
date-modified: "`r Sys.Date()`"
---

## Getting Started

### Load packages

In this lab, we will explore and visualize the data using the
**tidyverse** suite of packages, and perform statistical inference using
**infer**. The data can be found in the companion package for OpenIntro
resources, **openintro**.

Let's load the packages.

```{r}
#| label: setup
#| include: true
#| message: false
library(mosaic)
library(tidyverse)
library(openintro)
library(infer)
library(skimr)
```

### Creating a reproducible lab report

To create your new lab report, in RStudio, go to New File -\> R
Markdown... Then, choose From Template and then choose
`Lab Report for OpenIntro Statistics Labs` from the list of templates.

### The data

Every two years, the Centers for Disease Control and Prevention conduct
the **Youth Risk Behavior Surveillance System (YRBSS)** survey, where it
takes data from high schoolers (9th through 12th grade), to analyze
health patterns. You will work with a selected group of variables from a
random sample of observations during one of the years the YRBSS was
conducted.

Load the `yrbss` data set into your workspace.

```{r load-data}
data(yrbss)
```

## Exploratory data analysis

There are observations on 13 different variables, some categorical and
some numerical. The meaning of each variable can be found by bringing up
the help file: type this in your console

::: callout-note
help(yrbss)
:::

::: callout-note
1 . What are the cases in this data set? How many cases are there in our
sample?
:::

You will first start with analyzing the weight of the participants in
kilograms: `weight`.

Using visualization and summary statistics, describe the distribution of
weights. The `inspect()` function from the **mosaic** package produces
nice summaries of the variables in the dataset, separating categorical
(character) variables from quantitative variables.

```{r inspect}
mosaic::inspect(yrbss)

```

Next, consider the possible relationship between a high schooler's
weight and their physical activity. Plotting the data is a useful first
step because it helps us quickly visualize trends, identify strong
associations, and develop research questions.

First, let's create a new variable `physical_3plus`, which will be coded
as either "yes" if the student is physically active for *at least* 3
days a week, and "no" if not. Recall that we have several *missing* data
in that column, so we will (sadly) drop these before generating the new
variable:

```{r create new var}
yrbss <- yrbss %>% 
  drop_na() %>% 
  mutate(physical_3plus = if_else(physically_active_7d >= 2, "yes", "no"),
         physical_3plus = factor(physical_3plus, 
                                 labels = c("yes", "no"),
                                 levels = c("yes", "no")))
# Let us check
yrbss %>% count(physical_3plus)

```

::: callout-note
2.  Make a side-by-side violin box plots of `physical_3plus` and
    `weight`.
3.  Is there a relationship between these two variables? What did you
    expect and why?
:::

```{r}
gf_boxplot(weight ~ physical_3plus, 
          fill = ~ physical_3plus,
          data = yrbss,
          draw_quantiles = TRUE)
```

The box plots show how the medians of the two distributions compare, but
we can also compare the means of the distributions using the following
to first group the data by the `physical_3plus` variable, and then
calculate the mean `weight` in these groups using the `mean` function
while ignoring missing values by setting the `na.rm` argument to `TRUE`.

```{r by-means}
yrbss %>%
  group_by(physical_3plus) %>%
  summarise(mean_weight = mean(weight, na.rm = TRUE))

```

There is an observed difference, but is this difference large enough to
deem it "statistically significant"? In order to answer this question we
will conduct a hypothesis test.

## Inference

::: callout-important
Are all conditions necessary for inference satisfied? Comment on each.
You can compute the group sizes with the `summarize` command above by
defining a new variable with the definition `n()`.
:::

::: callout-note
Write the hypotheses for testing if the average weights are different
for those who exercise at least times a week and those who don't.

Write here !
:::

We will do this in two ways, just for fun: one using `mosaic` and the
other using `infer`.

But first, we need to initialize the test, which we will save as
`obs_diff`.

```{r inf-weight-habit-ht-initial, tidy=FALSE, warning = FALSE}
obs_diff_infer <- yrbss %>%
  specify(weight ~ physical_3plus) %>%
  calculate(stat = "diff in means", order = c("yes", "no"))
obs_diff_infer

obs_diff_mosaic <- diffmean(~ weight | physical_3plus, data = yrbss)
obs_diff_mosaic



```

::: callout-important
Note that `obs_diff_infer` is a 1 X 1 dataframe; `obs_diff_mosaic` is a
scalar!!
:::

::: {.panel-tabset style="fill:burlywood"}
## Inference Using \`infer\`

Next, we will work through creating a permutation distribution using
tools from the **infer** package.

Recall that the `specify()` function is used to specify the variables
you are considering (notated `y ~x`), and you can use the `calculate()`
function to specify the `stat`istic you want to calculate and the
`order` of subtraction you want to use. For this hypothesis, the
statistic you are searching for is the difference in means, with the
order being `yes - no`.

After you have calculated your observed statistic, you need to create a
permutation distribution. This is the distribution that is created by
shuffling the observed weights into new `physical_3plus` groups, labeled
"yes" and "no".

We will save the permutation distribution as `null_dist`.

```{r inf-weight-habit-ht-null, tidy=FALSE, warning = FALSE, cache=TRUE}
null_dist <- yrbss %>%
  specify(weight ~ physical_3plus) %>%
  hypothesize(null = "independence") %>%
  generate(reps = 1000, type = "permute") %>%
  calculate(stat = "diff in means", order = c("yes", "no"))

```

The `hypothesize()` function is used to declare what the null hypothesis
is. Here, we are assuming that student's weight is independent of
whether they exercise at least 3 days or not.

We should also note that the `type` argument within `generate()` is set
to `"permute"`. This ensures that the statistics calculated by the
`calculate()` function come from a reshuffling of the data (not a
resampling of the data)! Finally, the `specify()` and `calculate()`
steps should look familiar, since they are the same as what we used to
find the observed difference in means!

We can visualize this null distribution with the following code:

```{r}
gf_histogram(data = null_dist, ~ stat)

```

::: callout-note
5.  Add a vertical red line to the plot above, demonstrating where the
    observed difference in means (`obs_diff_mosaic`) falls on the
    distribution.

6.  How many of these `null_dist` permutations have a difference at
    least as large (or larger) as `obs_diff_mosaic`?
:::

```{r}

```

Now that you have calculated the observed statistic and generated a
permutation distribution, you can calculate the p-value for your
hypothesis test using the function `get_p_value()` from the infer
package.

```{r inf-weight-habit-ht-pvalue}
null_dist %>%
  get_p_value(obs_stat = obs_diff_infer, direction = "two_sided")
```

7.  

-   What warning message do you get? Why do you think you get this
    warning message?
-   Construct and record a confidence interval for the difference
    between the weights of those who exercise at least three times a
    week and those who don't, and interpret this interval in context of
    the data.

------------------------------------------------------------------------

## Inference Using \`mosaic\`

We already have the observed difference, `obs_diff_mosaic`. Now we
generate the null distribution using permutation, with `mosaic`:

```{r}
null_dist_mosaic <- do(1000) * diffmean(~ weight | shuffle(physical_3plus), data = yrbss)

```

We can also generate the histogram of the null distribution, compare
that with the `obs`erved `diff`rence and compute the `p-value` and
`confidence intervals`:

```{r}
gf_histogram(~ diffmean, data = null_dist_mosaic) %>% 
  gf_vline(xintercept = obs_diff_mosaic, colour = "red")

# p-value
prop(~ diffmean >= obs_diff_mosaic, data = null_dist_mosaic)
# Confidence Intervals for p = 0.95
mosaic::cdata(~ diffmean, p = 0.95, data = null_dist_mosaic)
```

------------------------------------------------------------------------
:::

## More Practice

9.  Calculate a 95% confidence interval for the average height in meters
    (`height`) and interpret it in context.

10. Calculate a new confidence interval for the same parameter at the
    90% confidence level. Comment on the width of this interval versus
    the one obtained in the previous exercise.

11. Conduct a hypothesis test evaluating whether the average height is
    different for those who exercise at least three times a week and
    those who don't.

12. Now, a non-inference task: Determine the number of different options
    there are in the dataset for the `hours_tv_per_school_day` there
    are.

13. Come up with a research question evaluating the relationship between
    height or weight and sleep. Formulate the question in a way that it
    can be answered using a hypothesis test and/or a confidence
    interval. Report the statistical results, and also provide an
    explanation in plain language. Be sure to check all assumptions,
    state your $\alpha$ level, and conclude in context.

------------------------------------------------------------------------
