---
title: 'Permutation Tests'
author: "Arvind Venkatadri"
abstract: "Generating Parallel Worlds"
date: 28/Nov/2022
date-modified: "`r Sys.Date()`"
order: 70
image: preview.jpg
image-alt: "Photo by Pixabay: https://www.pexels.com/photo/white-and-yellow-playing-cards-39018/"
categories:
- Permutation
- Monte Carlo Simulation
- Random Number Generation
- Null Distributions
---

![](preview.jpg){fig-alt="\"Photo by Pixabay: https://www.pexels.com/photo/white-and-yellow-playing-cards-39018/\""
fig-align="center" width="400"}

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(echo = FALSE,message = TRUE,warning = TRUE, fig.align = "center")
library(tidyverse)
library(mosaic)

### Datasets from Chihara and Hesterberg's book (Second Edition)
library(resampledata)

```

## Introduction

We saw from the diagram created by Allen Downey that *there is only one
test*! We will now use this philosophy to develop a technique that
allows us to mechanize several *Statistical Models* in that way, with
nearly identical code.

We will use two packages in R, `mosaic` and the relatively new `infer`
package, to develop our intuition for what are called **permutation**
based statistical tests.

## Hypothesis Testing using Permutation

From Reference #1:

> Hypothesis testing can be thought of as a 4-step process:
>
> 1.  State the null and alternative hypotheses.
>
> 2.  Compute a test statistic.
>
> 3.  Determine the p-value.
>
> 4.  Draw a conclusion.
>
>     In a traditional introductory statistics course, once this general
>     framework has been mastered, the main work is in **applying the
>     correct formula** to compute the standard test statistics in step
>     2 and using a table or computer to **determine the p-value** based
>     on the known (usually approximate) **theoretical distribution of
>     the test statistic** under the null hypothesis.
>
>     In a **simulation-based approach**, steps 2 and 3 change. In Step
>     2, it is no longer required that the test statistic be normalized
>     to conform with a known, named distribution. Instead, natural test
>     statistics, like the difference between two sample means $y1 − y2$
>     can be used.
>
>     In Step 3, we use **randomization to approximate the sampling
>     distribution of the test statistic**. Our lady tasting tea example
>     demonstrates how this can be done from first principles. More
>     typically, we will use randomization **to create new simulated
>     data sets** ( "*Parallel Worlds*") that are like our original data
>     in some ways, but make the null hypothesis true. For each
>     simulated data set, we calculate our test statistic, just as we
>     did for the original sample. Together, this collection of test
>     statistics computed from the simulated samples constitute our
>     randomization distribution.
>
>     When creating a randomization distribution, we will attempt to
>     satisfy 3 guiding principles.
>
> 5.  Be consistent with the null hypothesis. We need to **simulate a
>     world** in which the null hypothesis is true. If we don't do this,
>     we won't be testing our null hypothesis.
>
> 6.  Use the data in the **original sample**. The original data should
>     shed light on some aspects of the distribution that are not
>     determined by null hypothesis. For example, a null hypothesis
>     about a mean doesn't tell us about the shape of the population
>     distribution, but the data give us some indication.
>
> 7.  Reflect the way the original data were collected.

From Chihara and Hesterberg:

> This is the core idea of statistical significance or classical
> hypothesis testing -- to calculate how often pure random chance would
> give an effect as large as that observed in the data, in the absence
> of any real effect. If that probability is small enough, we conclude
> that the data provide convincing evidence of a real effect.

### Permutations tests using mosaic::`shuffle()`

The `mosaic` package provides the `shuffle()` function as a synonym for
`sample()`. When used without additional arguments, this will permute
its first argument.

```{r, echo=TRUE}
# library(mosaic)
shuffle(1:10)

```

Applying shuffle() to an *explanatory variable* in a model allows us to
test the null hypothesis that the explanatory variable has, in fact, no
explanatory power. This idea can be used to test

-   the equivalence of two or more means,
-   the equivalence of two or more proportions,
-   whether a regression parameter is 0. (Correlations between two
    variables)

We will now see examples of each of these models using Permutations.

## References

1.  [Chapter 11, Hypothesis Testing with
    Randomization](https://openintro-ims.netlify.app/foundations-randomization.html#chp11-review)
    in [Introduction to Modern Statistics (1st
    Ed)](https://openintro-ims.netlify.app/index.html) by Mine
    Çetinkaya-Rundel and Johanna Hardin.

2.  
