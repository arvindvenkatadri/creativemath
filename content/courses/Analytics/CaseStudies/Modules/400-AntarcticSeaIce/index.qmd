---
title: <iconify-icon icon="iconoir:sea-waves"></iconify-icon> <iconify-icon icon="openmoji:floating-ice"></iconify-icon>  Antarctic Sea ice
order: 400
---

## Setting up R Packages

```{r}
#| label: setup
#| message: false
#| warning: false
library(tidyverse)
library(mosaic)
library(skimr)
library(ggformula)

```


```{r}
#| label: pedagogical-packages
#| echo: false
library(downloadthis)
library(glue)
##
###     Adding download buttons
#     data that has been read in
#     {{< downloadthis ../../../../materials/Data/housing_train.csv dname="house_prices" label="Download the House Prices Dataset" icon="database-fill-down" type="info" >}}
#    existing file
#    {{< downloadthis Orange/grouped-summaries.ows dname="grouped_summaries" label="Download the Orange Workflow" icon="database-fill-down" type="info" >}} 
#    
# # 
# mtcars %>%
#   downloadthis::download_this(
#     output_name = "mtcars data set",
#     output_extension = ".csv",
#     button_label = "Download data",
#     button_type = "warning",
#     has_icon = TRUE,
#     icon = "fa fa-save"
#   )
#   
```


#### Plot Theme
```{r}
#| label: Plot-Sizing-and-theming
#| code-fold: true
#| message: false
#| results: hide

# https://stackoverflow.com/questions/74491138/ggplot-custom-fonts-not-working-in-quarto

# Chunk options
knitr::opts_chunk$set(
 fig.width = 7,
 fig.asp = 0.618, # Golden Ratio
 #out.width = "80%",
 fig.align = "center"
)
### Ggplot Theme
### https://rpubs.com/mclaire19/ggplot2-custom-themes

theme_custom <- function(){ 
    font <- "Roboto Condensed"   #assign font family up front
    
    theme_classic(base_size = 14) %+replace%    #replace elements we want to change
    
    theme(
      panel.grid.minor = element_blank(),    #strip minor gridlines
      text = element_text(family = font),
      #text elements
      plot.title = element_text(             #title
                   family = font,            #set font family
                   size = 20,               #set font size
                   face = 'bold',            #bold typeface
                   hjust = 0,                #left align
                   #vjust = 2                #raise slightly
                   margin=margin(0,0,10,0)
),               
      
      plot.subtitle = element_text(          #subtitle
                   family = font,            #font family
                   size = 14,                #font size
                   hjust = 0,
                   margin=margin(2,0,5,0)
),               
      
      plot.caption = element_text(           #caption
                   family = font,            #font family
                   size = 8,                 #font size
                   hjust = 1),               #right align
      
      axis.title = element_text(             #axis titles
                   family = font,            #font family
                   size = 10                 #font size
),
      
      axis.text = element_text(              #axis text
                   family = font,            #axis family
                   size = 8)               #font size
    )
}

# Set graph theme
theme_set(new = theme_custom())
#
```

## Introduction

The extent of Antarctic Sea Ice over time is monitored by the National Snow and Ice Data Center <https://nsidc.org/>. 

## Read the Data

{{< downloadthis ../../../../../materials/Data/Sea_Ice_Index_Daily_Extent_G02135_v3.0.xlsx dname=ice label="Download the Sea Ice data"
icon=database-fill-down type=info class=data-button >}}

::: callout-note
### Excel Data
The data is an excel sheet. Inspect it first in Excel and  decide which sheet you need, and which part of the data you need. There are multiple sheets!
Then use `readxl::read_xlsx(..)` to read it into R.
NOTE: The sheet that contains our data of interest is titled "SH-Daily-Extent". 
:::

```{r}
#| echo: false
ice <- readxl::read_xlsx("../../../../../materials/Data/Sea_Ice_Index_Daily_Extent_G02135_v3.0.xlsx", sheet = "SH-Daily-Extent")

# #
# ice %>%
#   downloadthis::download_this(
#     output_name = "ice-dataset",
#     output_extension = ".csv",
#     button_label = "Download the data",
#     button_type = "warning",
#     has_icon = TRUE,
#     icon = "fa fa-save"
#   )

```

## Inspect the Data

```{r}
#| label: inspect-categorical
#| echo: false
ice

```

Appreciate the structure of this data. You may even want to open it in Excel for a closer look. List any imperfections in your Data Dictionary.
Why do these matter now? Why might they not have mattered earlier, up to now?

## Data Dictionary
::: callout-note
### Quantitative Variables
Write in.

:::

::: callout-note
### Qualitative Variables
Write in.

:::

::: callout-note
### Observations
Write in.

:::

## Analyse/Transform the Data

Try to figure what may be needed, based on the imperfections noted above, what you may attempt to clean the data. Refer to your "list of imperfections" in the data. 

Then look at the code below and execute line by line to get an idea. 

```{r}
#| label: data-preprocessing
#| echo: fenced
#
# Write in your code here 
# to prepare this data as shown below  
# to generate the plot that follows

```


```{r}
#| code-fold: true
#| 
ice %>%
  # Select columns
  # Rename some while selecting !!
  select("month" = ...1, "day" = ...2, c(4:49)) %>%
  
  # Fill the month column! Yes!!
  tidyr::fill(month) %>%
  
  # Make Wide Data into Long
  pivot_longer(cols = -c(month, day), 
               names_to = "series", 
               values_to = "values") %>% 
  
  # Regular Munging
  mutate(series = as.integer(series),
         month = factor(month, 
                        levels = month.name,
                        labels = month.name,
                        ordered = TRUE),
      # Note munging for date!!
      # Using the lubridate package, part of tidyverse
         date = lubridate::make_date(year = series,
                          month = month, 
                          day = day)) -> ice_prepared

ice_prepared

```


## Research Question
::: callout-note
Write in! Look first at the graph!
:::


## Plot the Data


```{r}
#| echo: false
# Set graph theme
theme_set(new = theme_custom())
#
ice_prepared %>% 
  gf_boxplot(values ~ month, colour = "grey",
           alpha = 0.3) %>% 
  
  gf_summary(values ~ month, after_stat(mean), 
             data = ice_prepared %>% 
             filter(series %in% c("2023")), 
             color = ~ "2023", 
             shape =  15, size = 1) %>% 
  
  gf_labs(title = "Antarctic Ice Area over the Years 1980-2023",
          subtitle = "What happened in 2023?",
          caption = "Data: National Snow and Ice Data Center https://nsidc.org/",
          y = "Ice Extent in million sqkm") %>% 

  gf_refine(scale_x_discrete("Month", 
                             labels = month.abb)) %>% 
  gf_theme(theme(legend.title = element_blank()))

```


## Tasks and Discussion

- Complete the Data Dictionary.
- Select and Transform the variables as shown.
- Create the graphs shown and discuss the following questions:
  -   Identify the type of charts
  -   Identify the variables used for various geometrical aspects (x, y,
    fill...). Name the variables appropriately.
  -   What research activity might have been carried out to obtain the data graphed here? Provide some details.
  -   What might have been the Hypothesis/Research Question to which the response was Chart?
  - What might the red points represent? 
  - What is perhaps a befuddling aspect of this graph until you...Ohhh!!!!!!
  - Draw a sketch of a similar chart for ice extents in the Arctic.

    

